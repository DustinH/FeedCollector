<?xml version="1.0" encoding="utf-8"?><rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ASP.NET News</title><description>News from the ASP.NET and Visual Studio web team</description><item><guid isPermaLink="false">00000000-0000-0000-0000000062291</guid><link>http://blog.jsgoupil.com/asp-net-membership-to-owin/</link><title>ASP.NET Membership to Owin</title><description> Fantastic blog by Jean-Sébastien Goupil on migrating his ASP.NET MVC 4 membership DB to ASP.NET MVC 5 Identity.</description><pubDate>Wed, 18 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/4492905/jean-sebastien.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more</link><category>Azure</category><category>Community News</category><category>SQL Server</category><category>.NET</category><title>Azure: Machine Learning Service, Hadoop Storm, Cluster Scaling, Linux Support, Site Recovery and More</title><description>&lt;p&gt;Today we released a number of great enhancements to Microsoft Azure. These include:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt;: General Availability of the Azure Machine Learning Service  &lt;li&gt;&lt;strong&gt;Hadoop&lt;/strong&gt;: General Availability of Apache Storm Support, Hadoop 2.6 support, Cluster Scaling, Node Size Selection and preview of next Linux OS support  &lt;li&gt;&lt;strong&gt;Site Recovery&lt;/strong&gt;: General Availability of DR capabilities with SAN arrays&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;I've also included details in this blog post of other great Azure features that went live earlier this month:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;SQL Database&lt;/strong&gt;: General Availability of SQL Database (V12)  &lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: Support for Slot Settings  &lt;li&gt;&lt;strong&gt;API Management&lt;/strong&gt;: New Premium Tier  &lt;li&gt;&lt;strong&gt;DocumentDB&lt;/strong&gt;: New Asia and US Regions, SQL Parameterization and Increased Account Limits  &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: Portal Enhancements, Suggestions &amp;amp; Scoring, New Regions  &lt;li&gt;&lt;strong&gt;Media&lt;/strong&gt;: General Availability of Content Protection Service for Azure Media Services  &lt;li&gt;&lt;strong&gt;Management&lt;/strong&gt;: General Availability of the Azure Resource Manager&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h2&gt;&lt;u&gt;Machine Learning: General Availability of Azure ML Service&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today, I’m excited to announce the General Availability of our &lt;a href="http://azure.microsoft.com/en-us/services/machine-learning/" target="_blank"&gt;Azure Machine Learning service&lt;/a&gt;.&amp;nbsp; The Azure Machine Learning Service is a powerful cloud-based predictive analytics service that makes it possible to quickly create analytics solutions.&amp;nbsp; It is a fully managed service - which means you do not need to buy any hardware nor manage VMs manually.  &lt;p&gt;Data Scientists and Developers can use our &lt;a href="https://studio.azureml.net/" target="_blank"&gt;innovative browser-based machine learning IDE&lt;/a&gt; to quickly create and automate machine learning workflows.&amp;nbsp; You can literally drag/drop hundreds of existing ML libraries to jump-start your predictive analytics solutions, and then optionally add your own custom R and Python scripts to extend them.&amp;nbsp; Our Machine Learning IDE works in any browser and enables you to rapidly develop and iterate on solutions:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_11.png" width="624" height="545"&gt;&lt;/a&gt;  &lt;p&gt;With today's General Availability release you can easily discover and create web services, train/retrain your models through APIs, manage endpoints and scale web services on a per customer basis, and configure diagnostics for service monitoring and debugging. Additional new capabilities with today's release include:  &lt;ul&gt; &lt;li&gt;The ability to create a configurable custom R module, incorporate your own train/predict R-scripts, and add python scripts using a large ecosystem of libraries such as numpy, scipy, pandas, scikit-learn etc. You can now train on terabytes of data using “Learning with Counts”, use PCA or one-class SVM for anomaly detection, and easily modify, filter, and clean data using familiar SQLite. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;Azure ML Community Gallery that allows you to discover &amp;amp; learn experiments, and share through Twitter and LinkedIn. You can purchase marketplace apps through an Azure subscription and consume finished web services for Recommendation, Text Analytics, and Anomaly Detection directly from the Azure Marketplace. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;A step-by-step guide for the Data Science journey from raw data to a consumable web service to ease the path for cloud-based data science. We have added the ability to use popular tools such as iPython Notebook and Python Tools for Visual Studio along with Azure ML.&lt;i&gt;&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Get Started&lt;/strong&gt;  &lt;p&gt;You can learn the basics of predictive analytics and machine learning using our &lt;a href="https://studio.azureml.net/" target="_blank"&gt;step-by-step data science guide and tutorials&lt;/a&gt;.&amp;nbsp; No sign-up or credit card is required to get started using Azure Machine Learning (you can use the machine learning IDE and try experiments for free):  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_30.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_14.png" width="828" height="803"&gt;&lt;/a&gt;  &lt;p&gt;Also browse our &lt;a href="http://gallery.azureml.net/" target="_blank"&gt;machine learning gallery&lt;/a&gt; to run existing machine learning experiments others have already built - and optionally publish your own experiments for others to learn from:&lt;/p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_28.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_13.png" width="828" height="803"&gt;&lt;/a&gt;  &lt;p&gt;Machine Learning and predictive analytics will fundamentally change the way all applications are built in the future.&amp;nbsp; The new &lt;a href="https://studio.azureml.net/" target="_blank"&gt;Azure Machine Learning service&lt;/a&gt; provides an incredibly powerful and easy way to achieve this.&amp;nbsp; Start using it for production apps today!  &lt;h2&gt;&lt;u&gt;HDInsight: General Availability of Apache Storm, Cluster Scaling, Hadoop 2.6, Node Sizes, and Preview of HDInsight on Linux&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today I’m happy to also announce several major enhancements to HDInsight, our managed Hadoop service for powering Big Data workloads in Azure.  &lt;p&gt;&lt;strong&gt;General Availability of Apache Storm support&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;With today's release, we are making it easy for you to do real-time streaming analytics using Hadoop by providing Apache Storm as a fully managed Service and making it generally available on HDInsight. This makes it incredibly easy to stand up and manage Storm clusters. As part of the Storm service on HDInsight we have improved productivity by enabling some key features:  &lt;ul&gt; &lt;li&gt;Integration with our Azure &lt;a href="http://azure.microsoft.com/en-us/services/event-hubs/" target="_blank"&gt;Event Hubs&lt;/a&gt; service - which allows you to easily process any data that is collected via Event Hubs  &lt;li&gt;First class .NET experience on top of Apache Storm giving you the option to use both Java and .NET with it  &lt;li&gt;Library of spouts and bolts let you easily integrate other Azure services like SQL, HBase and DocumentDB  &lt;li&gt;Visual Studio integration that makes it easy for developers to do full project management from within the Visual Studio environment&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;u&gt;Creating Storm cluster and running a sample topology&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can easily spin up a new Storm cluster from the &lt;a href="https://manage.windowsazure.com/"&gt;Azure management portal&lt;/a&gt;. The Storm Dashboard allows you to either upload an existing Storm topology or pick one of the sample topologies from the dropdown.&amp;nbsp; Topologies can be authored in code, or higher level programming models like &lt;a href="https://storm.apache.org/documentation/Trident-tutorial.html"&gt;Trident&lt;/a&gt; can be used. You can also monitor and manage all the topologies that are currently on your cluster via the Storm Dashboard.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_34.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_16.png" width="807" height="563"&gt;&lt;/a&gt;  &lt;p&gt;&lt;u&gt;.NET Topologies and a Visual Studio Experience&lt;/u&gt;  &lt;p&gt;One of the big improvements we have done on top of Storm is to enable developers to write Storm topologies in .NET. One of the things I am particularly excited about with the Storm release is the Visual Studio experience that we have enabled for Storm on HDInsight. With the latest version of the Azure SDK, you will get Storm project templates under HDInsight. This will quickly get you started with writing Storm topologies without having to worry or setup the right references or write the skeleton code that is needed for every Storm topology.  &lt;p&gt;Since Storm is available as part of the HDInsight service, all HDInsight features also apply to Storm clusters. For example, you can easily scale up or scale down a Storm cluster with no impact to the existing running topologies. This will enable you to easily grow or shrink Storm clusters depending on the speed of ingest data and latency requirements with no impact on the data which is being processed.&amp;nbsp; At the time of the cluster creation you have the choice to pick from a long list of available VMs to use for their Storm cluster on HDInsight.  &lt;p&gt;&lt;strong&gt;HDInsight 3.2 Support&lt;/strong&gt;  &lt;p&gt;I’m pleased to announce the availability of the next major version of Hadoop in HDInsight clusters for Windows and Linux. This includes Hadoop 2.6, Hive 0.14, and substantial updates to all of the components in the stack.&amp;nbsp; Hive 0.14 contains work to improve performance and scalability through Tez, adds a powerful cost based optimizer, and introduces capabilities for handling UPDATE, INSERT and DELETE SQL statements, temporary tables which live for the duration of a development session and more. You can find more details on the Hive 0.14 release &lt;a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12310843&amp;amp;version=12326450"&gt;here&lt;/a&gt;.&amp;nbsp;&amp;nbsp; Pig 0.14 adds support for ORC, allowing a single high performance format to be leveraged across Pig and Hive.&amp;nbsp; Additionally Pig can now target Tez instead of Map/Reduce, resulting in substantial performance improvements by changing the execution engine. Details on the Pig 0.14 release are &lt;a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12310730&amp;amp;version=12326954"&gt;here&lt;/a&gt;.&amp;nbsp; These bring the latest improvements in the open source ecosystem to HDInsight.&amp;nbsp; &lt;p&gt;To get started with a 3.2 cluster, use the &lt;a href="https://manage.windowsazure.com/"&gt;Azure Management portal&lt;/a&gt; or the command-line. In addition to the VS tools for Storm, we've also updated the VS tools to include Hive query authoring.&amp;nbsp; We've also added improved statement completion, local validation, access in Visual Studio to the YARN task logs, and support for HDInsight clusters on Linux. In order to get these, you just need to install the &lt;a href="http://azure.microsoft.com/en-us/downloads/"&gt;Azure SDK for Visual Studio&lt;/a&gt; which contains the latest HDInsight tooling.  &lt;p&gt;&lt;strong&gt;Cluster Scaling&lt;/strong&gt;  &lt;p&gt;Many of our customers have asked for the ability to change HDInsight cluster sizes on the fly.&amp;nbsp; This capability is now accessible in both the Azure portal, as well as through the command line and SDK's.&amp;nbsp; You can grow or shrink a Hadoop cluster to fit your workload by simply dragging the sizing slider.&amp;nbsp; We'll add more nodes to your cluster while it is processing and when your larger jobs are done, you can reduce the size of the cluster.&amp;nbsp; If you need more cores available in your subscription, you can open a Billing support ticket to request a larger quota.&amp;nbsp; &lt;p&gt;&lt;strong&gt;Node Size Selection&lt;/strong&gt;  &lt;p&gt;Finally, you can also now specify the VM sizes for the nodes within your HDInsight cluster.&amp;nbsp; This lets you optimize your cluster's resources to fit your workload.&amp;nbsp; We've made the entire A and D series of VM sizes available.&amp;nbsp; For each of the different types of roles within a cluster, we'll let you specify the machine type.&amp;nbsp; This allows you to tune the amount of CPU, RAM and SSD available to your jobs.&amp;nbsp; &lt;p&gt;&lt;strong&gt;HDInsight on Linux &lt;/strong&gt; &lt;p&gt;Today we are also releasing a preview version of our HDInsight service that allows you to deploy HDInsight clusters using Ubuntu Linux containers.&amp;nbsp; This expands the operating system options you can use when running managed Hadoop workloads on Azure (previously HDInsight only supported Windows Server containers).  &lt;p&gt;The new Linux support enables you to easily use familiar tools like SSH and Ambari to build Big Data workloads in Azure.&amp;nbsp; HDInsight on Linux clusters are built on the same Hadoop distribution as the Windows clusters, are fully integrated with Azure storage, and make it easy for customers leveraging Hadoop to take advantage of the SLA, management and support that HDInsight offers.&amp;nbsp; To get started, sign up for the preview &lt;a href="http://azure.microsoft.com/en-us/services/preview/"&gt;here&lt;/a&gt;.&amp;nbsp; You can then easily create Linux clusters using the &lt;a href="https://manage.windowsazure.com/"&gt;Azure Management Portal&lt;/a&gt; or via our command-line interfaces.  &lt;p&gt;SSH connectivity to your HDInsight clusters is enabled by default for all HDInsight on Linux clusters. You can use an SSH client of your choice to connect to the cluster.&amp;nbsp; Additionally, SSH tunneling can be leveraged for forwarding traffic from your browser to all of the Hadoop web applications. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;  &lt;p&gt;For more information about Azure HDInsight, check out the following resources:  &lt;ul&gt; &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/hdinsight/"&gt;Azure HDInsight&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/hdinsight-learn-map/"&gt;HDInsight Learning Map&lt;/a&gt;  &lt;li&gt;&lt;a href="https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=hdinsight&amp;amp;filter=alltypes&amp;amp;sort=lastpostdesc"&gt;HDInsight forum&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Site Recovery: General Availability of Enterprise DR with SANs&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;With today’s Azure release, we are also &lt;a href="http://aka.ms/asr_san_ga_blog"&gt;adding another significant capability&lt;/a&gt; to Azure Site Recovery’s disaster recovery and replication portfolio. Enterprises that seek to leverage their Storage Area Network (SAN) Arrays to enable high performance synchronous and asynchronous replication across their on-premises Hyper-V private clouds can now orchestrate end-to-end storage array-based replication and disaster recovery with Azure Site Recovery and System Center Virtual Machine Manager (SCVMM).  &lt;p&gt;The addition of SAN as a replication channel enables key scenarios such as Synchronous Replication, Multi-VM Consistency, and support for Guest Clusters with Azure Site Recovery. With support for Shared VHDX and iSCSI Target LUNs, ASR will now be able to better meet the needs of enterprise-class applications such as SQL Server, SharePoint, and SAP etc.  &lt;p&gt;To enable SAN Replication, in the &lt;a href="https://manage.windowsazure.com/"&gt;Azure Management Portal&lt;/a&gt; select SAN when configuring SCVMM clouds in ASR. ASR in turn validates that the cloud being configured has host clusters that have been correctly zoned to a Storage Array, either via Fibre Channel or iSCSI. Once the cloud configuration is complete and the storage pools have been mapped, Replication Groups (group of storage LUNs that replicate together and thereby enable multi-VM replication consistency) can be enabled for replication. ASR automates the creation of target LUNs, target Replication Groups, and starts the array-based replication.&amp;nbsp; &lt;p&gt;Here’s an example of a Recovery Plan that can failover a SQL Guest Cluster deployed on a Replication Group:&lt;b&gt;&lt;i&gt;&lt;/i&gt;&lt;/b&gt;  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_36.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_17.png" width="623" height="517"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Visit the &lt;a href="http://aka.ms/asr_san_ga_blog_forum"&gt;Azure Site Recovery forum on MSDN&lt;/a&gt; for additional information.  &lt;p&gt;Getting started with &lt;a href="http://aka.ms/asr_san_ga_blog_landingpage"&gt;Azure Site Recovery&lt;/a&gt; is easy - all you need is to simply &lt;a href="http://aka.ms/asr_san_ga_blog_azuretrial"&gt;sign up for a free Microsoft Azure trial&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;SQL Database: General Availability of SQL Database (V12)&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we released the general availability version of our &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/sql-database-preview-whats-new/"&gt;SQL Database (V12) service version&lt;/a&gt;.&amp;nbsp; We introduced a &lt;a href="https://weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more" target="_blank"&gt;preview of this new release&lt;/a&gt; last December, and it includes a ton of new capabilities. These include:  &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Better management of large databases. &lt;/strong&gt;We now support heavier database workload management with parallel queries&lt;i&gt;,&lt;/i&gt; table partitioning, online indexing, worry-free large index rebuilds with the previous 2GB size limit removed, and&lt;em&gt; &lt;/em&gt;more&lt;em&gt; &lt;/em&gt;alter database commands. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for more programmability capabilities: &lt;/strong&gt;You can now build even more robust applications with CLR, T-SQL Windows functions, XML index, and change tracking support. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;b&gt;Up to 100x performance improvements &lt;/b&gt;with support for In-memory columnstore queries for data mart and analytic workloads. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;b&gt;Improved monitoring and troubleshooting:&lt;/b&gt; Extended Events (XEvents) and visibility into over 100 new table views via an expanded set of Database Management Views (DMVs). &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;New S3 performance level: &lt;/strong&gt;Today's preview introduces a new pricing option for SQL Databases. The new "S3" performance tier delivers 100 DTU of performance (twice the DTU level of the existing S2 tier) and all of the features available in the Standard tier. It enables an even more cost effective way to run applications with higher performance needs. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can now take advantage of all of these features in general availability - with all databases backed by an enterprise grade SLA.  &lt;p&gt;&lt;u&gt;Upcoming Security Features&lt;/u&gt;  &lt;p&gt;I'm also excited to announce a number of new security features that will start rolling out this month and this spring.&amp;nbsp; These features will help customers better protect their cloud data and help further meet corporate and industry compliance policies. These security enhancements include:  &lt;ul&gt; &lt;li&gt;Row-Level Security  &lt;li&gt;Dynamic Data Masking  &lt;li&gt;Transparent Data Encryption &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Available in preview today, customers can now implement &lt;a href="http://go.microsoft.com/fwlink/?LinkID=522705"&gt;Row-Level Security&lt;/a&gt; on databases to enable implementation of fine-grained access control over rows in a database table for greater control over which users can access which data.  &lt;p&gt;Coming soon, SQL Database will introduce Dynamic Data Masking which is a policy-based security feature that helps limit the exposure of data in a database by returning masked data to non-privileged users who run queries over designated database fields, like credit card numbers, without changing data on the database. Finally, Transparent Data Encryption is coming soon to SQL Database V12 databases for encryption at rest on all databases.  &lt;p&gt;Stay tuned over the coming months for details as we continue to rollout the V12 service general availability and upcoming security features.  &lt;h2&gt;&lt;u&gt;Web Sites: Support for Slot Settings&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;The &lt;a href="http://azure.microsoft.com/en-us/services/websites/" target="_blank"&gt;Azure Web Sites service&lt;/a&gt; has always provided the ability to store application settings and connection strings as a part of your Web Site’s metadata.&amp;nbsp; Those settings become available at runtime via environment variables and, if you use .NET, the standard configuration manager API.&amp;nbsp; This feature has now been updated to work better with another Web Sites feature: deployment slots.&amp;nbsp; &lt;p&gt;Deployment slots provide an easy way for you to safely deploy and test new releases of your web applications prior to swapping them live into production.&amp;nbsp; Let’s say you have a website called mysite.azurewebsites.net with a deployment slot at mysite-staging.azurewebsites.net.&amp;nbsp; You can swap these slots at any given time, and with no downtime. This provides a nice infrastructure for upgrading your website. Until now, when you swapped the staging slot with the production site, all settings and connection strings would swap as well. Sometimes that’s exactly what you want and it works great.&amp;nbsp; &lt;p&gt;But what if, for testing purposes, your site uses a database and you explicitly want each slot to have its own database (e.g. a production database and a testing database)?&amp;nbsp; Prior to this month's release that would have been difficult to automate since the swap operation would move the staging connection string to the production site and vice versa. You would have to do something unnatural like going to the staging slot and manually updating the settings to the production values before performing the swap operation. Then, you would execute the swap, and finally manually update the staging settings to point to the staging database. That workflow is very complicated and error prone.&amp;nbsp;&amp;nbsp; &lt;p&gt;&lt;strong&gt;New Slot Settings Support&lt;/strong&gt;  &lt;p&gt;Slot specific settings are the solution to this problem.&amp;nbsp; Simply go to the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;, navigate to your Web Site’s &lt;b&gt;Settings&lt;/b&gt; page, and you’ll see a new checkbox next to each app setting and connection string.&amp;nbsp; Check the boxes next to each app settings setting and/or connection string that should not participate in swap operations.&amp;nbsp; Each deployment slot has its own version of this settings page where you can go and enter the slot specific setting values.&amp;nbsp; You now have a lot more flexibility when it comes to managing deployment slots and flowing configuration between them during swaps:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_22.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_10.png" width="725" height="406"&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;&lt;u&gt;API Management: New Premium Tier&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we released a preview of our new Premium Tier for our API Management Service.&amp;nbsp; The Azure API Management Service provides a great offering that helps customers expose web-based APIs to customers - and provides support for API protection via rate-limiting, quotas and keys, detailed analytics, easy developer on-boarding and much more.  &lt;p&gt;As the strategic value of APIs increase, customers are demanding even more performance, higher availability and more enterprise-grade features. And in response we're delighted to introduce a new Premium tier of API Management which will offer a 99.95% SLA after preview and includes a number of key new features:  &lt;p&gt;&lt;strong&gt;Multiple Geography Deployment&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Until now each API Management service resided in a single region selected when the service is created. I’m pleased to announce the introduction of a new multi-region deployment feature that allows API publishers to easily distribute a single API Management service across any number of Azure regions. Customers who want to reduce latency for distributed API consumers and require extremely high availability can now enable multi-geo with minimal configuration.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_4.png" width="754" height="325"&gt;&lt;/a&gt;  &lt;p&gt;Premium tier customers will now see an updated capacity section on the scale tab of the &lt;a href="https://manage.windowsazure.com/"&gt;Azure Management portal&lt;/a&gt;. Additional units and regions can be added with a few clicks of the relevant dropdown controls and API Management will provision additional proxies beyond the primary region in a matter of minutes.  &lt;p&gt;Multi-geo is particularly effective when combined with the API Management caching policy, which can provide a CDN-like capability for your mission critical and performance sensitive APIs. For more information on multiple-geography deployment, check out the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=524318"&gt;documentation&lt;/a&gt;.  &lt;p&gt;&lt;strong&gt;Azure Virtual Network / VPN integration&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Many customers are already managing their on-premises APIs using API Management's mutual certificate authentication to secure their backend. The new Premium offering introduces a great new capability for organizations that prefer to use a VPN solution or want to leverage their Azure ExpressRoute connection. Available in the Premium Tier, VPN connectivity settings are available on the configure tab of the &lt;a href="https://manage.windowsazure.com/"&gt;Azure Management Portal&lt;/a&gt; and can even be combined with multi-geo, with a separate VPN for each region. More information is available in the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=524317"&gt;documentation&lt;/a&gt;.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_5.png" width="576" height="186"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Active Directory Integration &lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Prior to today’s release, API Management's developer portal allowed developers to self-serve sign up using a custom account created with their e-mail address or using popular social identity providers like Facebook, Twitter, Google and Microsoft account. Sometimes businesses and enterprises want more control and would like to restrict sign in options, often preferring Azure Active Directory.  &lt;p&gt;With our latest release, we now allow you to configure Azure Active Directory as an identity provider for Azure API Management. Administrators can disable all other identity providers and restrict access to APIs and documentation based on AD group membership. What's more, access can be extended to allow multiple AAD tenants to access your developer portal, making it even easier to share your APIs with business partners.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_6.png" width="597" height="396"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Learning More&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Check out the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=524320"&gt;Azure Active Directory documentation&lt;/a&gt; for more information on the integration, and the &lt;a href="http://azure.microsoft.com/en-us/pricing/details/api-management/"&gt;pricing page&lt;/a&gt; for more information on the new premium tier.  &lt;h2&gt;&lt;u&gt;DocumentDB: New Asia and US Regions, SQL Parameterization and Increased Account Limits&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we released the following new features and capabilities in our Azure DocumentDB service - which provides a fully managed NoSQL JSON database service:  &lt;ul&gt; &lt;li&gt;New regional availability  &lt;li&gt;Larger accounts and documents: Increased the number of capacity units per account and upported document size doubled  &lt;li&gt;SQL parameterization: Support for handle and escape user input, preventing accidental exposure of data &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;New Regions&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We have added new support for provisioning DocumentDB accounts in the East Asia, Southeast Asia, and US East Azure regions (in addition to our existing US West, East Europe and West Europe regions). We’ll continue to invest in regional expansion in order to give you the flexibility and choice you need when deciding where to locate your DocumentDB data.  &lt;p&gt;&lt;strong&gt;Larger Accounts and Documents&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Throughout the preview process we’ve steadily increased the maximum document and database sizes.&amp;nbsp; With this month's release we've increased the maximum size of an individual document from 256Kb to 512Kb. The Capacity Unit (CU) limit per DocumentDB Account has also been raised from 5 to 50 which means you can now scale a single DocumentDB account to 500GB of storage and 100,000 Request Units of provisioned throughput. As always, our preview quotas can be adjusted on a per account basis - contact us if you have a need for increased capacity.  &lt;p&gt;&lt;strong&gt;SQL Parameterization&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Instead of inventing a new query language, DocumentDB supports querying documents using SQL (Structured Query Language) over hierarchical JSON documents. We are pleased to announce that we have extended our SQL query capabilities by adding support for parameterized SQL queries in the &lt;a href="http://azure.microsoft.com/en-us/services/documentdb/"&gt;Azure DocumentDB &lt;/a&gt;REST API and SDKs. Using this feature, you can now write parameterized SQL queries. Parameterized SQL provides robust handling and escaping of user input, preventing accidental exposure of data through “SQL injection”.  &lt;p&gt;Let’s take a look at a sample using the .NET SDK. In addition to plain SQL strings and LINQ expressions, we’ve added a new SqlQuerySpec class that can be used to build parameterized queries.&amp;nbsp; Here’s a sample that queries a “Books” collection with a single user supplied parameter for author name:  &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: #2b91af; mso-highlight: white"&gt;IQueryable&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&amp;lt;Book&amp;gt; queryable = client.CreateDocumentQuery&amp;lt;Book&amp;gt;(&lt;?xml:namespace prefix = "o" /&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; text-indent: 0.5in; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;collectionSelfLink, &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; text-indent: 0.5in; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt; SqlQuerySpec {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;QueryText = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: #a31515; mso-highlight: white"&gt;"SELECT * FROM books b WHERE (b.Author.Name = @name)"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Parameters = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt; SqlParameterCollection()&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp; &lt;/span&gt;{ &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; text-indent: 0.5in; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt; SqlParameter(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: #a31515; mso-highlight: white"&gt;"@name"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: #a31515; mso-highlight: white"&gt;"Herman Melville"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;) &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-tab-count: 1"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;});&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: &amp;quot;Courier New&amp;quot;; color: black"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Note:  &lt;ul&gt; &lt;li&gt;SQL parameters in DocumentDB use the familiar @ notation borrowed from T-SQL  &lt;li&gt;Parameter values can be any valid JSON (strings, numbers, Booleans, null, even arrays or nested JSON)  &lt;li&gt;Since DocumentDB is schema-less, parameters are not validated against any type  &lt;li&gt;You could just as easily supply additional parameters by adding additional SqlParameters to the SqlParameterCollection&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;The DocumentDB REST API also natively supports parameterization. The .NET sample shown above translates to the following REST API call. To use parameterized queries, you need to specify the Content-Type Header as &lt;b&gt;&lt;i&gt;application/query+json&lt;/i&gt;&lt;/b&gt; and the query as JSON in the body, as shown below.  &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;POST https://contosomarketing.documents.azure.com/dbs/XP0mAA==/colls/XP0mAJ3H-AA=/docs&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;HTTP/1.1 x-ms-documentdb-isquery: True &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;x-ms-date: Mon, 18 Aug 2014 13:05:49 GMT &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;authorization: type%3dmaster%26ver%3d1.0%26sig%3dkOU%2bBn2vkvIlHypfE8AA5fulpn8zKjLwdrxBqyg0YGQ%3d &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;x-ms-version: 2014-08-21 &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;Accept: application/json &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;Content-Type: application/query+json &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;Host: contosomarketing.documents.azure.com &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;Content-Length: 50 &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;{&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;"query": "SELECT * FROM books b WHERE (b.Author.Name = @name)",&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;"parameters": [&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{"name": "@name", "value": "Herman Melville"}&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;] &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="background: #f8f8f8; margin: 3.75pt; line-height: 14.4pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;}&lt;/span&gt;&lt;span style="font-size: 9pt; font-family: consolas; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Queries can be issued against document collections, as well as system metadata collections like Databases, DocumentCollections, and Attachments using the approach shown above. To try this out, download the latest build of the DocumentDB SDK on any of the supported platforms (&lt;a href="http://www.nuget.org/packages/Microsoft.Azure.Documents.Client/"&gt;.NET&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-documentdb-java/releases/tag/0.9.3"&gt;Java&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/documentdb"&gt;Node.js&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-documentdb-js/releases"&gt;JavaScript&lt;/a&gt;, or &lt;a href="https://pypi.python.org/pypi/pydocumentdb/0.9.4-preview"&gt;Python&lt;/a&gt;).  &lt;p&gt;As always, we’d love to hear from you about the DocumentDB features and experiences you would find most valuable. Submit your suggestions on the Microsoft Azure DocumentDB &lt;a href="http://feedback.azure.com/forums/263030-documentdb?filter=top&amp;amp;page=1"&gt;feedback forum&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Search: Portal Enhancements, Suggestions &amp;amp; Scoring, New Regions&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we released a bunch of great enhancements to our &lt;a href="http://azure.microsoft.com/en-us/services/search/"&gt;Azure Search&lt;/a&gt; service.&amp;nbsp; Azure Search provides developers with all of the features needed to build out search experiences for web and mobile applications without having to deal with the typical complexities that come with managing, tuning and scaling a large search service.  &lt;p&gt;&lt;strong&gt;Azure Portal Enhancements &lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Last month we added the ability to create and manage your search indexes from the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;. Since then, you have told us that this has really helped to speed up development as it greatly reduced the amount of code required, but we also heard that you needed more. As a result, we extended the portal by adding the ability to add Scoring Profiles as well as configure Cross Origin Resource Sharing from the portal.  &lt;p&gt;&lt;u&gt;Portal Support of Scoring Profiles&lt;/u&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn798928.aspx"&gt;Scoring Profiles&lt;/a&gt; boost items up in the search results based on different factors that you control. For example, below, I have a hotels index and all other things being equal, I want highly rated hotels close to the users’ current location to appear at the top of the users search results. To do this, in the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;, choose &lt;b&gt;Add Scoring Profile&lt;/b&gt; and provide a name for it. In this case I am going to call it “closeToUser”. You can create one or more scoring profiles and name them as needed in the search request, allowing you to provide different search results based on different use cases.&lt;b&gt;&lt;u&gt;&lt;/u&gt;&lt;/b&gt;  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_7.png" width="418" height="80"&gt;&lt;/a&gt;  &lt;p&gt;Once closeToUser has been created, I can start adding weights and functions. For example, in this scoring profile, I chose to add:  &lt;ul&gt; &lt;li&gt;&lt;b&gt;Weighting&lt;/b&gt;: Use hotelName as a weighted field, such that if the search term is found in the hotelName, it gets a weighted boost  &lt;li&gt;&lt;b&gt;Distance&lt;/b&gt;: Leverage the spatial capabilities of Azure Search to boost a hotel if it is found to be closer to the user’s specified location  &lt;li&gt;&lt;b&gt;Magnitude&lt;/b&gt;: Provide a boost to the hotels that have higher ratings&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these functions and weights are then combined into a final score that is used to rank documents.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_8.png" width="423" height="327"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Scoring Profiles can often be tricky and it tends to be mixed with the rest of the query. With Azure Search, scoring profiles experience has been simplified and they are separated from search queries so the scoring model stays outside of application code and can be updated independently. In addition, these scoring profiles are modeled as a set of high-level scoring functions combined with a way to do the typical field weights making editing and maintenance of scoring much simpler.  &lt;p&gt;As demonstrated above, this user experience requires no coding and you can simply choose the fields that are important and apply the function or weight that makes the most sense. It is important to note that scoring profiles is a method of boosting the relevance of a document and should not be confused with sorting. There are a number of other functions available which you can learn more about in the &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn798928.aspx"&gt;MSDN documentation&lt;/a&gt;.  &lt;p&gt;&lt;strong&gt;Cross Origin Resource Sharing (CORS)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Web Browsers commonly apply a same-origin restriction policy to network requests, preventing client-side web applications from issuing requests to another domain for security reasons. For example, JavaScript code that came from http://www.contoso.com could not issue a request to another domain such as http://www.northwindtraders.com. For Azure Search developers, this is important in cases where all the data is already publicly accessible and they want to save on latency by going straight to the search index from mobile devices or a browser.  &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing"&gt;CORS&lt;/a&gt; is a method that allows you to relax this restriction in a controlled way so you don’t compromise security. Azure Search uses CORS to allow JavaScript code inside browsers to make search requests directly to the Azure Search service and eliminate the need to proxy all requests through the originating server. We now offer the ability to configure CORS from the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;, allowing you to easily enable cross-domain access and limit it to specific origins. This can be done from the index management portion of your search service as shown below.&lt;/p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_9.png" width="202" height="196"&gt;&lt;/a&gt;  &lt;p&gt;&lt;strong&gt;Tag Boosting&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;As discussed with Scoring Profiles, there are many examples of where you may want to boost certain relevant items. To this end, we have also introduced a new and highly requested function to our set of scoring profile functions called &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/search-api-scoring-profiles-2014-10-20-preview/"&gt;Tag Boosting&lt;/a&gt;. This feature is currently part of our &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/search-api-scoring-profiles-2014-10-20-preview/"&gt;experimental API version&lt;/a&gt;, made available to you so you can test and provide feedback on these potential new features.  &lt;p&gt;Tag Boosting allows you to boost documents that have tags in common with the search query. The tags for the search query are provided as a scoring parameter in each search request and then any document that contain these terms would get a boost. This capability can not only be helpful to enable search result customization, but could also be used for cases where you have specific items you want to promote. As an example, during a sporting event, a retailer might want to promote items that are related to the teams participating in that sporting event.  &lt;p&gt;&lt;strong&gt;Improved Suggestions&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Suggestions (auto-complete) is a feature that allows you to provide type-ahead suggestions as the user types. Just like scoring profiles, this is a great way to allow your users to find the content they are looking for quickly. When we first implemented search suggestions in Azure Search, we heard a number of requests to extend the capabilities of this feature to better suit your requirements. As a result, we have an entirely new implementation of suggestions to address these items. In particular, it will do infix matching for suggestions and if fuzzy matching is enabled, it’ll show more flexibility for spelling mistakes. It also allows up to 100 suggestions per result, has no limit in length other than field limits and doesn’t have the 3-character minimum length.  &lt;p&gt;This enhancement is still under the &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/search-api-scoring-profiles-2014-10-20-preview/"&gt;experimental API version&lt;/a&gt; as we are continuing to gather feedback. For more information on this and to see a more detailed example of suggestions, please see the post on the Suggestions in the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=524417"&gt;Azure Blog&lt;/a&gt;.  &lt;p&gt;&lt;strong&gt;New Regions&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;As a final note, I wanted to point out that we are continuing to expand the global footprint of Azure Search. With the addition of East Asia and West Europe you can now provision Azure Search services in 8 regions across the globe.  &lt;h2&gt;&lt;u&gt;Media: General Availability of Content Protection Service&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we released the general availability of our new Content Protection service&lt;strong&gt; &lt;/strong&gt;for Azure Media Services. This is backed by an enterprise grade SLA for all customers.&lt;/p&gt; &lt;p&gt;We understand the importance of protecting your premium media content, and our robust new DRM offering features both static and dynamic encryption with first party PlayReady license delivery and an AES 128-bit key delivery service. You can either dynamically encrypt during delivery of your media or statically encrypt during the content processing workflow, and our content protection options are available for both live and on-demand workflows.  &lt;p&gt;For more information on functionality and pricing, visit the &lt;a href="http://azure.microsoft.com/blog/2014/09/10/announcing-public-availability-of-azure-media-services-content-protection-services/"&gt;Media Services Content Protection&lt;/a&gt; blog post, the &lt;a href="http://azure.microsoft.com/en-us/pricing/details/media-services/"&gt;Media Services Pricing&lt;/a&gt; webpage, or this &lt;a href="http://msdn.microsoft.com/en-us/library/dn282272.aspx"&gt;Securing Media&lt;/a&gt; article.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Management: General Availability of the Azure Resource Manager&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier this month we reached general availability of the new Azure Resource Manager, and now provide a world-side SLA of the service. The Azure Resource Manager provides a core set of management capabilities that are fundamental to the Microsoft Azure Platform and form the basis of our new deployment and management model for all Azure services.&amp;nbsp; You can use the Azure Resource Manager to deploy and manage your Azure solutions at no cost.&lt;/p&gt; &lt;p&gt;The Azure Resource Manager provides a simple, and customizable experience to manage your applications running in Azure along with enterprise grade authentication and authorization capabilities. Benefits include:  &lt;p&gt;&lt;strong&gt;Application Lifecycle Boundaries:&lt;/strong&gt; Azure Resource Manager provides a deployment container called a Resource Group that serves as the lifecycle boundary of resources/services deployed in it - making it easy for you to deploy, manage and visualize services that are contained within it. You no longer have to deploy parts of your application ala carte and then stitch them together manually. A resource Group container supports one-click deployment and tear down of the entire application in a single operation.  &lt;p&gt;&lt;strong&gt;Enterprise Grade Access Control&lt;/strong&gt;: OAuth and Role-Based Access Control (RBAC) are now natively integrated into Azure Management and consistently apply to all services supported by the Resource Manager. Access and operations performed on these services are also logged automatically to enable you to audit them later. You can now use a rich set of platform and resource specific roles that can be applied at the subscription, resource group, or resource level - giving you granular control over who has access to what operation within your organization.  &lt;p&gt;&lt;strong&gt;Rich Tagging and Categorization:&lt;/strong&gt; The Azure Resource Manager supports metadata tagging of resource groups and contained resources, and you can use this tagging support to group objects in ways suitable to your own needs such as management, billing or monitoring. For example, you could mark certain resources or resource groups as being "Dev/Test" and use that to help filter your resources or charge back their bills differently to internal groups in your organization.&amp;nbsp; This provides the power needed to manage and monitor departmental applications, subscriptions, and billing data in a more streamlined fashion, especially for larger organizations.  &lt;p&gt;&lt;strong&gt;Declarative Deployment Templates:&lt;/strong&gt; The new Azure Resource Manager supports both an imperative API as well as a declarative template model that you can use to deploy rich multi-tier applications on Azure.&amp;nbsp; These applications can be composed from multiple Azure services (including both IaaS and PaaS based services) and support the ability for you to pass parameters and connection-strings across them.&amp;nbsp; For example, you could declarative create a SQL DB, Web Site and VM using a single template and automatically wire-up the connection-string details between them.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ca460606a347_13209/image_thumb_3.png" width="909" height="510"&gt;&lt;/a&gt;  &lt;p&gt;&lt;strong&gt;&lt;u&gt;Learn More&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Check out the following resources to learn more about the Azure Resource Manager, and start using it today:  &lt;ul&gt; &lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/azure/dn790568.aspx"&gt;Azure Resource Manager REST API Reference&lt;/a&gt;  &lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/azure/dn835138.aspx"&gt;Azure Resource Manager Template Language&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/powershell-azure-resource-manager/"&gt;Using Windows PowerShell with Resource Manager&lt;/a&gt; and &lt;a href="https://msdn.microsoft.com/en-us/library/dn654592.aspx"&gt;Azure Resource Manager Cmdlets&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/xplat-cli-azure-resource-manager/"&gt;Using the Azure Cross-Platform Command-Line Interface with the Resource Manager&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="http://azure.microsoft.com/en-us/pricing/free-trial/" target="_blank"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://azure.microsoft.com/"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at:&lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+Machine+Learning+Service%2c+Hadoop+Storm%2c+Cluster+Scaling%2c+Linux+Support%2c+Site+Recovery+and+More&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+Machine+Learning+Service%2c+Hadoop+Storm%2c+Cluster+Scaling%2c+Linux+Support%2c+Site+Recovery+and+More&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-machine-learning-service-hadoop-storm-cluster-scaling-linux-support-site-recovery-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Wed, 18 Feb 2015 16:06:22 Z</pubDate></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/bB0uRT58plA</guid><link>https://www.youtube.com/watch?v=bB0uRT58plA&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Feb 17th, 2015</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=bB0uRT58plA&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/bB0uRT58plA/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=bB0uRT58plA&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Feb 17th, 2015&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
519&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;23
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;18:22&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 18 Feb 2015 00:05:08 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/bB0uRT58plA" /><a10:updated>2015-02-18T20:49:07Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000062286</guid><link>http://jameschambers.com/2015/01/day-1-the-basics-of-the-basics-with-azure-table-storage/</link><title>Azure Table Storage with ASP.NET MVC</title><description> James Chambers starts a new series on using Azure Table Storage from an ASP.NET MVC app.</description><pubDate>Tue, 17 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3732050/james-chambers.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</guid><link>http://feeds.hanselman.com/~/85434226/0/scotthanselman~NuGet-Package-of-the-Week-A-different-take-on-ASPNET-MVC-Forms-with-ChameleonForms.aspx</link><category>ASP.NET MVC</category><category>NuGet</category><category>NuGetPOW</category><category>Open Source</category><title>NuGet Package of the Week: A different take on ASP.NET MVC Forms with ChameleonForms</title><description>&lt;div&gt;&lt;p&gt;One of the nice things about any modular system (like ASP.NET) is the ability to swap out the parts you don't like. As the authors of ChameleonForms state, HTML forms is a pain. It's repetitive, it's repetitive, and it's boring. While ASP.NET MVC's Form Helpers help a lot, they felt that helper methods like Html.EditorForModel didn't go far enough or give you enough flexibility. ChameleonForms adds its own templating model and attempts to be as &lt;a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;DRY&lt;/a&gt; as possible. It also takes a number of issues head on like better handling for drop-down lists and lists of radio buttons, and it even supports Twitter Bootstrap 3 to you can bang out HTML forms ASAP.&lt;/p&gt;  &lt;p&gt;ChameleonForms also is a nice example of a tidy and well-run small open source project. They've got a public &lt;a href="https://trello.com/b/fSuyhwNZ"&gt;Trello backlog board&lt;/a&gt;, &lt;a href="https://github.com/MRCollective/ChameleonForms/wiki"&gt;excellent documentation&lt;/a&gt;, a &lt;a href="http://www.hanselman.com/blog/AppVeyorAGoodContinuousIntegrationSystemIsAJoyToBehold.aspx"&gt;continuous integration build&lt;/a&gt;, a good &lt;a href="https://github.com/MRCollective/ChameleonForms/tree/master/ChameleonForms.Example"&gt;example project&lt;/a&gt;, and of course, &lt;a href="http://www.nuget.org/packages/chameleonforms"&gt;they're on NuGet&lt;/a&gt;. Check out the other projects that the folks in the &amp;quot;&lt;a href="https://github.com/MRCollective"&gt;MRCollective&lt;/a&gt;&amp;quot; work on as well, as they've got their &lt;a href="https://github.com/MRCollective"&gt;own GitHub organization&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.nuget.org/packages/chameleonforms"&gt;&lt;img title="NuGet Install ChameleonForms" style="display: inline" alt="NuGet Install ChameleonForms" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/NuGet-Package-of-the-Week_1431A/image_d1f1c0c5-943a-423b-82b6-8c698b057ad9.png" width="479" height="87" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Often ChameleonForms tries to use C# for the whole form, rather than switching back and forth from Div to Html Helper. For example:&lt;/p&gt;  &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm()) {&lt;br /&gt;    using (var s = f.BeginSection(&amp;quot;Signup for an account&amp;quot;)) {&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.FirstName)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.LastName)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.Mobile).Placeholder(&amp;quot;04XX XXX XXX&amp;quot;)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.LicenseAgreement).InlineLabel(&amp;quot;I agree to the terms and conditions&amp;quot;)&lt;br /&gt;    }&lt;br /&gt;    using (var n = f.BeginNavigation()) {&lt;br /&gt;        @n.Submit(&amp;quot;Create&amp;quot;)&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt; &lt;p align="left"&gt;This is the whole form using usings for scoping, and it's nice and clean.&amp;#160; How about a comparison example? Here's standard ASP.NET MVC:&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;@using (Html.BeginForm())&lt;br /&gt;{&lt;br /&gt;    &amp;lt;fieldset&amp;gt;&lt;br /&gt;        &amp;lt;legend&amp;gt;A form&amp;lt;/legend&amp;gt;&lt;br /&gt;        &amp;lt;dl&amp;gt;&lt;br /&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.RequiredString, &amp;quot;Some string&amp;quot;)&amp;lt;/dt&amp;gt;&lt;br /&gt;            &amp;lt;dd&amp;gt;@Html.TextBoxFor(m =&amp;gt; m.RequiredString) @Html.ValidationMessageFor(m =&amp;gt; m.RequiredString)&amp;lt;/dd&amp;gt;&lt;br /&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.SomeEnum)&amp;lt;/dt&amp;gt;&lt;br /&gt;            &amp;lt;dd&amp;gt;@Html.DropDownListFor(m =&amp;gt; m.SomeEnum, Enum.GetNames(typeof(SomeEnum)).Select(x =&amp;gt; new SelectListItem {Text = ((SomeEnum)Enum.Parse(typeof(SomeEnum), x)).Humanize(), Value = x})) @Html.ValidationMessageFor(m =&amp;gt; m.SomeEnum)&amp;lt;/dd&amp;gt;&lt;br /&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/dt&amp;gt;&lt;br /&gt;            &amp;lt;dd&amp;gt;@Html.CheckBoxFor(m =&amp;gt; m.SomeCheckbox) @Html.LabelFor(m =&amp;gt; m.SomeCheckbox, &amp;quot;Are you sure?&amp;quot;) @Html.ValidationMessageFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/dd&amp;gt;&lt;br /&gt;        &amp;lt;/dl&amp;gt;&lt;br /&gt;    &amp;lt;/fieldset&amp;gt;&lt;br /&gt;    &amp;lt;div class=&amp;quot;form_navigation&amp;quot;&amp;gt;&lt;br /&gt;        &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Submit&amp;quot; /&amp;gt;&lt;br /&gt;    &amp;lt;/div&amp;gt;&lt;br /&gt;}&lt;/pre&gt; &lt;p&gt;And here is the same form with ChameleonForms. &lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm()) {&lt;br /&gt;    using (var s = f.BeginSection(&amp;quot;A form&amp;quot;)) {&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.RequiredString).Label(&amp;quot;Some string&amp;quot;)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnum)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).InlineLabel(&amp;quot;Are you sure?&amp;quot;)&lt;br /&gt;    }&lt;br /&gt;    using (var n = f.BeginNavigation()) {&lt;br /&gt;        @n.Submit(&amp;quot;Submit&amp;quot;)&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt; &lt;p&gt;But these are basic. How about something more complex? This one has a bunch of variety, a number overloads and customizations, as well as a FileUpload (note that the form is a Multipart form):&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm(method: FormMethod.Post, enctype: EncType.Multipart))&lt;br /&gt;{&lt;br /&gt;    &amp;lt;p&amp;gt;@f.LabelFor(m =&amp;gt; m.SomeCheckbox).Label(&amp;quot;Are you ready for: &amp;quot;) @f.FieldElementFor(m =&amp;gt; m.SomeCheckbox) @f.ValidationMessageFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/p&amp;gt;&lt;br /&gt;    &amp;lt;p&amp;gt;@f.FieldElementFor(m =&amp;gt; m.RequiredStringField).TabIndex(4)&amp;lt;/p&amp;gt;&lt;br /&gt;    using (var s = f.BeginSection(&amp;quot;My Section!&amp;quot;, InstructionalText(), new{@class = &amp;quot;aClass&amp;quot;}.ToHtmlAttributes()))&lt;br /&gt;    {&lt;br /&gt;        using (var ff = s.BeginFieldFor(m =&amp;gt; m.RequiredStringField, Field.Configure().Attr(&amp;quot;data-some-attr&amp;quot;, &amp;quot;value&amp;quot;).TabIndex(3)))&lt;br /&gt;        {&lt;br /&gt;            @ff.FieldFor(m =&amp;gt; m.NestedField).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;).TabIndex(2)&lt;br /&gt;            @ff.FieldFor(m =&amp;gt; m.SomeEnum).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;)&lt;br /&gt;            @ff.FieldFor(m =&amp;gt; m.SomeEnum).Exclude(SomeEnum.SomeOtherValue)&lt;br /&gt;        }&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).AsDropDown()&lt;br /&gt;        using (var ss = s.BeginSection(&amp;quot;Nested section&amp;quot;))&lt;br /&gt;        {&lt;br /&gt;            @ss.FieldFor(m =&amp;gt; m.FileUpload).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;)&lt;br /&gt;        }&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).OverrideFieldHtml(new MvcHtmlString(&amp;quot;Custom html &amp;lt;b&amp;gt;she-yeah&amp;lt;/b&amp;gt;!&amp;quot;))&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.TextAreaField).Cols(60).Rows(5).Label(&amp;quot;Some Label&amp;quot;).AutoFocus().TabIndex(1)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).InlineLabel(&amp;quot;Some label&amp;quot;).WithHint(&amp;quot;Format: XXX&amp;quot;)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).AsRadioList().WithTrueAs(&amp;quot;True&amp;quot;).WithFalseAs(&amp;quot;False&amp;quot;)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.ListId)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.ListId).AsRadioList()&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnums)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnumsList).AsRadioList()&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.Decimal)    &lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.Int).AsInputGroup().Append(&amp;quot;.00&amp;quot;).Prepend(&amp;quot;$&amp;quot;)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.DecimalWithFormatStringAttribute)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.NullableInt)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.Child.ChildField)&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.Child.SomeEnum).AsRadioList()&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).Disabled()&lt;br /&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).Readonly()&lt;br /&gt;    }&lt;br /&gt;    using (var n = f.BeginNavigation())&lt;br /&gt;    {&lt;br /&gt;        @n.Submit(&amp;quot;Submit&amp;quot;)&lt;br /&gt;        @n.Reset(&amp;quot;Reset&amp;quot;)&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt; &lt;p&gt;ChameleonForms also has &lt;a href="https://github.com/MRCollective/ChameleonForms/wiki/bootstrap-template"&gt;a special NuGet package if you're using TwitterBootstrap&lt;/a&gt; that changes how forms with the BeginChameleonForm method render.&lt;/p&gt; &lt;p align="left"&gt;ChameleonForms also has some convenient extra abilities, like being able to automatically infer/create a [DisplayName] so you don't have to. If you're doing Forms in English and your preferred Display Name will end up just being your variable name this can be a useful time saver (although you may have opinions about its purity.)&lt;/p&gt; &lt;p align="left"&gt;So instead of the tedium of:&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;[DisplayName(&amp;quot;Email address&amp;quot;)]&lt;br /&gt;public string EmailAddress { get; set; }&lt;br /&gt;&lt;br /&gt;[DisplayName(&amp;quot;First name&amp;quot;)]&lt;br /&gt;public string FirstName { get; set; }&lt;/pre&gt; &lt;p&gt;You can just say this once, picking just one...this is an example where they use &lt;a href="http://www.hanselman.com/blog/NuGetPackageOfTheWeekHumanizerMakesNETDataTypesMoreHuman.aspx"&gt;HumanizedLabels&lt;/a&gt;.&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;HumanizedLabels.Register(LetterCasing.AllCaps) =&amp;gt; &amp;quot;EMAIL ADDRESS&amp;quot;&lt;br /&gt;HumanizedLabels.Register(LetterCasing.LowerCase) =&amp;gt; &amp;quot;email address&amp;quot;&lt;br /&gt;HumanizedLabels.Register(LetterCasing.Sentence) =&amp;gt; &amp;quot;Email address&amp;quot;&lt;br /&gt;HumanizedLabels.Register(LetterCasing.Title) =&amp;gt; &amp;quot;Email Address&amp;quot;&lt;/pre&gt; &lt;p&gt;If you've got a lot of Forms to create and they're just no fun anymore, you should definitely give ChameleonForms a try. If you're a Twitter Bootstrap shop, doubly so, as that's where ChameleonForms really shines.&lt;/p&gt; &lt;p&gt;I'll do a few other posts exploring different ways to for Forms in ASP.NET MVC in the coming weeks. Be sure to explore the &lt;a href="http://www.hanselman.com/blog/CategoryView.aspx?category=NuGetPOW"&gt;NuGet Package of the Week Archives as well&lt;/a&gt;!&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;PLUG:&lt;/strong&gt; Did you know I have &lt;a href="http://youtube.com/shanselman"&gt;a YouTube channel&lt;/a&gt;? &lt;a href="http://youtube.com/shanselman"&gt;Subscribe over here&lt;/a&gt;. I've got tutorials on how to &lt;a href="https://www.youtube.com/playlist?list=PL0M0zPgJ3HSfrydBvq11e7ib7DaWZphwE"&gt;effectively use Windows 8 and 8.1&lt;/a&gt;, &lt;a href="https://www.youtube.com/playlist?list=PL0M0zPgJ3HSdI26ZdgX-F8aAKnh9sq6on"&gt;Build to Build walkthroughs of the latest versions of Windows 10&lt;/a&gt;, and I just started a new series I'm sure you'll want to share with your family called &amp;quot;&lt;a href="https://www.youtube.com/playlist?list=PL0M0zPgJ3HSeTcj_bH9ulOyAGixWV8lQB"&gt;How to REALLY use Microsoft Office&lt;/a&gt;.&amp;quot; Help me out and spread the word!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Tue, 17 Feb 2015 08:32:43 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/NuGetPackageOfTheWeekADifferentTakeOnASPNETMVCFormsWithChameleonForms.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">24</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=d53dba66-8592-4be3-8aa5-b6e9ad41d075</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;One of the nice things about any modular system (like ASP.NET) is the ability to swap out the parts you don't like. As the authors of ChameleonForms state, HTML forms is a pain. It's repetitive, it's repetitive, and it's boring. While ASP.NET MVC's Form Helpers help a lot, they felt that helper methods like Html.EditorForModel didn't go far enough or give you enough flexibility. ChameleonForms adds its own templating model and attempts to be as &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;DRY&lt;/a&gt; as possible. It also takes a number of issues head on like better handling for drop-down lists and lists of radio buttons, and it even supports Twitter Bootstrap 3 to you can bang out HTML forms ASAP.&lt;/p&gt;  &lt;p&gt;ChameleonForms also is a nice example of a tidy and well-run small open source project. They've got a public &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://trello.com/b/fSuyhwNZ"&gt;Trello backlog board&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/MRCollective/ChameleonForms/wiki"&gt;excellent documentation&lt;/a&gt;, a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AppVeyorAGoodContinuousIntegrationSystemIsAJoyToBehold.aspx"&gt;continuous integration build&lt;/a&gt;, a good &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/MRCollective/ChameleonForms/tree/master/ChameleonForms.Example"&gt;example project&lt;/a&gt;, and of course, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.nuget.org/packages/chameleonforms"&gt;they're on NuGet&lt;/a&gt;. Check out the other projects that the folks in the &amp;quot;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/MRCollective"&gt;MRCollective&lt;/a&gt;&amp;quot; work on as well, as they've got their &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/MRCollective"&gt;own GitHub organization&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.nuget.org/packages/chameleonforms"&gt;&lt;img title="NuGet Install ChameleonForms" style="display: inline" alt="NuGet Install ChameleonForms" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/NuGet-Package-of-the-Week_1431A/image_d1f1c0c5-943a-423b-82b6-8c698b057ad9.png" width="479" height="87" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Often ChameleonForms tries to use C# for the whole form, rather than switching back and forth from Div to Html Helper. For example:&lt;/p&gt;  &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm()) {
&lt;br&gt;    using (var s = f.BeginSection(&amp;quot;Signup for an account&amp;quot;)) {
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.FirstName)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.LastName)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.Mobile).Placeholder(&amp;quot;04XX XXX XXX&amp;quot;)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.LicenseAgreement).InlineLabel(&amp;quot;I agree to the terms and conditions&amp;quot;)
&lt;br&gt;    }
&lt;br&gt;    using (var n = f.BeginNavigation()) {
&lt;br&gt;        @n.Submit(&amp;quot;Create&amp;quot;)
&lt;br&gt;    }
&lt;br&gt;}&lt;/pre&gt; &lt;p align="left"&gt;This is the whole form using usings for scoping, and it's nice and clean.&amp;#160; How about a comparison example? Here's standard ASP.NET MVC:&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;@using (Html.BeginForm())
&lt;br&gt;{
&lt;br&gt;    &amp;lt;fieldset&amp;gt;
&lt;br&gt;        &amp;lt;legend&amp;gt;A form&amp;lt;/legend&amp;gt;
&lt;br&gt;        &amp;lt;dl&amp;gt;
&lt;br&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.RequiredString, &amp;quot;Some string&amp;quot;)&amp;lt;/dt&amp;gt;
&lt;br&gt;            &amp;lt;dd&amp;gt;@Html.TextBoxFor(m =&amp;gt; m.RequiredString) @Html.ValidationMessageFor(m =&amp;gt; m.RequiredString)&amp;lt;/dd&amp;gt;
&lt;br&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.SomeEnum)&amp;lt;/dt&amp;gt;
&lt;br&gt;            &amp;lt;dd&amp;gt;@Html.DropDownListFor(m =&amp;gt; m.SomeEnum, Enum.GetNames(typeof(SomeEnum)).Select(x =&amp;gt; new SelectListItem {Text = ((SomeEnum)Enum.Parse(typeof(SomeEnum), x)).Humanize(), Value = x})) @Html.ValidationMessageFor(m =&amp;gt; m.SomeEnum)&amp;lt;/dd&amp;gt;
&lt;br&gt;            &amp;lt;dt&amp;gt;@Html.LabelFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/dt&amp;gt;
&lt;br&gt;            &amp;lt;dd&amp;gt;@Html.CheckBoxFor(m =&amp;gt; m.SomeCheckbox) @Html.LabelFor(m =&amp;gt; m.SomeCheckbox, &amp;quot;Are you sure?&amp;quot;) @Html.ValidationMessageFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/dd&amp;gt;
&lt;br&gt;        &amp;lt;/dl&amp;gt;
&lt;br&gt;    &amp;lt;/fieldset&amp;gt;
&lt;br&gt;    &amp;lt;div class=&amp;quot;form_navigation&amp;quot;&amp;gt;
&lt;br&gt;        &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Submit&amp;quot; /&amp;gt;
&lt;br&gt;    &amp;lt;/div&amp;gt;
&lt;br&gt;}&lt;/pre&gt; &lt;p&gt;And here is the same form with ChameleonForms. &lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm()) {
&lt;br&gt;    using (var s = f.BeginSection(&amp;quot;A form&amp;quot;)) {
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.RequiredString).Label(&amp;quot;Some string&amp;quot;)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnum)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).InlineLabel(&amp;quot;Are you sure?&amp;quot;)
&lt;br&gt;    }
&lt;br&gt;    using (var n = f.BeginNavigation()) {
&lt;br&gt;        @n.Submit(&amp;quot;Submit&amp;quot;)
&lt;br&gt;    }
&lt;br&gt;}&lt;/pre&gt; &lt;p&gt;But these are basic. How about something more complex? This one has a bunch of variety, a number overloads and customizations, as well as a FileUpload (note that the form is a Multipart form):&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;@using (var f = Html.BeginChameleonForm(method: FormMethod.Post, enctype: EncType.Multipart))
&lt;br&gt;{
&lt;br&gt;    &amp;lt;p&amp;gt;@f.LabelFor(m =&amp;gt; m.SomeCheckbox).Label(&amp;quot;Are you ready for: &amp;quot;) @f.FieldElementFor(m =&amp;gt; m.SomeCheckbox) @f.ValidationMessageFor(m =&amp;gt; m.SomeCheckbox)&amp;lt;/p&amp;gt;
&lt;br&gt;    &amp;lt;p&amp;gt;@f.FieldElementFor(m =&amp;gt; m.RequiredStringField).TabIndex(4)&amp;lt;/p&amp;gt;
&lt;br&gt;    using (var s = f.BeginSection(&amp;quot;My Section!&amp;quot;, InstructionalText(), new{@class = &amp;quot;aClass&amp;quot;}.ToHtmlAttributes()))
&lt;br&gt;    {
&lt;br&gt;        using (var ff = s.BeginFieldFor(m =&amp;gt; m.RequiredStringField, Field.Configure().Attr(&amp;quot;data-some-attr&amp;quot;, &amp;quot;value&amp;quot;).TabIndex(3)))
&lt;br&gt;        {
&lt;br&gt;            @ff.FieldFor(m =&amp;gt; m.NestedField).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;).TabIndex(2)
&lt;br&gt;            @ff.FieldFor(m =&amp;gt; m.SomeEnum).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;)
&lt;br&gt;            @ff.FieldFor(m =&amp;gt; m.SomeEnum).Exclude(SomeEnum.SomeOtherValue)
&lt;br&gt;        }
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).AsDropDown()
&lt;br&gt;        using (var ss = s.BeginSection(&amp;quot;Nested section&amp;quot;))
&lt;br&gt;        {
&lt;br&gt;            @ss.FieldFor(m =&amp;gt; m.FileUpload).Attr(&amp;quot;data-attr1&amp;quot;, &amp;quot;value&amp;quot;)
&lt;br&gt;        }
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).OverrideFieldHtml(new MvcHtmlString(&amp;quot;Custom html &amp;lt;b&amp;gt;she-yeah&amp;lt;/b&amp;gt;!&amp;quot;))
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.TextAreaField).Cols(60).Rows(5).Label(&amp;quot;Some Label&amp;quot;).AutoFocus().TabIndex(1)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).InlineLabel(&amp;quot;Some label&amp;quot;).WithHint(&amp;quot;Format: XXX&amp;quot;)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeCheckbox).AsRadioList().WithTrueAs(&amp;quot;True&amp;quot;).WithFalseAs(&amp;quot;False&amp;quot;)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.ListId)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.ListId).AsRadioList()
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnums)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.SomeEnumsList).AsRadioList()
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.Decimal)    
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.Int).AsInputGroup().Append(&amp;quot;.00&amp;quot;).Prepend(&amp;quot;$&amp;quot;)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.DecimalWithFormatStringAttribute)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.NullableInt)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.Child.ChildField)
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.Child.SomeEnum).AsRadioList()
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).Disabled()
&lt;br&gt;        @s.FieldFor(m =&amp;gt; m.RequiredStringField).Readonly()
&lt;br&gt;    }
&lt;br&gt;    using (var n = f.BeginNavigation())
&lt;br&gt;    {
&lt;br&gt;        @n.Submit(&amp;quot;Submit&amp;quot;)
&lt;br&gt;        @n.Reset(&amp;quot;Reset&amp;quot;)
&lt;br&gt;    }
&lt;br&gt;}&lt;/pre&gt; &lt;p&gt;ChameleonForms also has &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/MRCollective/ChameleonForms/wiki/bootstrap-template"&gt;a special NuGet package if you're using TwitterBootstrap&lt;/a&gt; that changes how forms with the BeginChameleonForm method render.&lt;/p&gt; &lt;p align="left"&gt;ChameleonForms also has some convenient extra abilities, like being able to automatically infer/create a [DisplayName] so you don't have to. If you're doing Forms in English and your preferred Display Name will end up just being your variable name this can be a useful time saver (although you may have opinions about its purity.)&lt;/p&gt; &lt;p align="left"&gt;So instead of the tedium of:&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;[DisplayName(&amp;quot;Email address&amp;quot;)]
&lt;br&gt;public string EmailAddress { get; set; }
&lt;br&gt;
&lt;br&gt;[DisplayName(&amp;quot;First name&amp;quot;)]
&lt;br&gt;public string FirstName { get; set; }&lt;/pre&gt; &lt;p&gt;You can just say this once, picking just one...this is an example where they use &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/NuGetPackageOfTheWeekHumanizerMakesNETDataTypesMoreHuman.aspx"&gt;HumanizedLabels&lt;/a&gt;.&lt;/p&gt; &lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false;"&gt;HumanizedLabels.Register(LetterCasing.AllCaps) =&amp;gt; &amp;quot;EMAIL ADDRESS&amp;quot;
&lt;br&gt;HumanizedLabels.Register(LetterCasing.LowerCase) =&amp;gt; &amp;quot;email address&amp;quot;
&lt;br&gt;HumanizedLabels.Register(LetterCasing.Sentence) =&amp;gt; &amp;quot;Email address&amp;quot;
&lt;br&gt;HumanizedLabels.Register(LetterCasing.Title) =&amp;gt; &amp;quot;Email Address&amp;quot;&lt;/pre&gt; &lt;p&gt;If you've got a lot of Forms to create and they're just no fun anymore, you should definitely give ChameleonForms a try. If you're a Twitter Bootstrap shop, doubly so, as that's where ChameleonForms really shines.&lt;/p&gt; &lt;p&gt;I'll do a few other posts exploring different ways to for Forms in ASP.NET MVC in the coming weeks. Be sure to explore the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CategoryView.aspx?category=NuGetPOW"&gt;NuGet Package of the Week Archives as well&lt;/a&gt;!&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;PLUG:&lt;/strong&gt; Did you know I have &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~youtube.com/shanselman"&gt;a YouTube channel&lt;/a&gt;? &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~youtube.com/shanselman"&gt;Subscribe over here&lt;/a&gt;. I've got tutorials on how to &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/playlist?list=PL0M0zPgJ3HSfrydBvq11e7ib7DaWZphwE"&gt;effectively use Windows 8 and 8.1&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/playlist?list=PL0M0zPgJ3HSdI26ZdgX-F8aAKnh9sq6on"&gt;Build to Build walkthroughs of the latest versions of Windows 10&lt;/a&gt;, and I just started a new series I'm sure you'll want to share with your family called &amp;quot;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/playlist?list=PL0M0zPgJ3HSeTcj_bH9ulOyAGixWV8lQB"&gt;How to REALLY use Microsoft Office&lt;/a&gt;.&amp;quot; Help me out and spread the word!&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/85434226/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/85434226/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000062285</guid><link>http://typecastexception.com/post/2015/01/25/ASPNET-Web-Api-Understanding-OWINKatana-AuthenticationAuthorization-Part-II-Models-and-Persistence.aspx</link><title>ASP.NET Web API: Understanding OWIN/Katana Authentication/Authorization Part II: Models and Persistence</title><description> John Atten continues his OWIN series by adding authorization models and a persistence layer.</description><pubDate>Mon, 16 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3978709/john-atten2.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/scottgu-azure-event-in-london-on-march-2nd</guid><link>http://weblogs.asp.net/scottgu/scottgu-azure-event-in-london-on-march-2nd</link><category>Azure</category><category>Community News</category><title>ScottGu Azure event in London on March 2nd</title><description>&lt;p&gt;On March 2nd I'm doing an &lt;a href="http://www.eventbrite.co.uk/e/a-morning-with-scott-gu-tickets-15551571168?aff=ukwaug" target="_blank"&gt;Azure event&lt;/a&gt; in London that you can attend for free.&amp;nbsp; I'll be speaking for about 2.5 hours and will do an end-to-end walkthrough of Microsoft Azure, show off a bunch of demos of great new features/capabilities, and talk about some of the improvements coming out over the next few months.&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ScottGuAzureeventinLondononMarch2nd_906A/logo%5B1%5D.jpg"&gt;&lt;img title="logo[1]" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="logo[1]" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ScottGuAzureeventinLondononMarch2nd_906A/logo%5B1%5D_thumb.jpg" width="270" height="200"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;You can &lt;a href="http://www.eventbrite.co.uk/e/a-morning-with-scott-gu-tickets-15551571168?aff=ukwaug" target="_blank"&gt;sign-up and attend the event for free&lt;/a&gt; (while tickets last - they are going fast).&amp;nbsp; If you are interested sign-up now.&amp;nbsp; The event is being held at the Mermaid Conference &amp;amp; Events Centre in Blackfriars, London: &lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ScottGuAzureeventinLondononMarch2nd_906A/mermaidspic3%5B1%5D_2.jpg"&gt;&lt;img title="mermaidspic3[1]" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="mermaidspic3[1]" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/ScottGuAzureeventinLondononMarch2nd_906A/mermaidspic3%5B1%5D_thumb.jpg" width="555" height="232"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Hope to see some of you there!&lt;/p&gt; &lt;p&gt;Scott&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/scottgu-azure-event-in-london-on-march-2nd&amp;g=https%3A//weblogs.asp.net/scottgu/scottgu-azure-event-in-london-on-march-2nd&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20ScottGu+Azure+event+in+London+on+March+2nd&amp;v3=ScottGu%27s%20Blog%20-%20ScottGu+Azure+event+in+London+on+March+2nd&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/scottgu-azure-event-in-london-on-march-2nd&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/scottgu-azure-event-in-london-on-march-2nd&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Mon, 16 Feb 2015 18:16:51 Z</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000062284</guid><link>http://blog.developers.ba/asp-net-identity-2-1-for-mysql/</link><title>ASP.NET Identity 2.1 implementation for MySQL</title><description> Radenko Zec shows how to use MySQL as the data store for ASP.NET Identity.</description><pubDate>Fri, 13 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/4492575/radenko-zec.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=40655063-65ac-410b-8715-b521b51c1769</guid><link>http://feeds.hanselman.com/~/85242550/0/scotthanselman~JavaScript-Has-Won-Run-Flash-with-Mozilla-Shumway-and-Develop-Silverlight-in-JS-with-Fayde.aspx</link><category>Open Source</category><category>Silverlight</category><title>JavaScript Has Won: Run Flash with Mozilla Shumway and Develop Silverlight in JS with Fayde</title><description>&lt;div&gt;&lt;p&gt;Well this is some amazing news that has been a long time coming. You can take your Flash apps and run them without Flash, and take your Silverlight apps and (almost) run them without Silverlight. &lt;/p&gt;  &lt;p&gt;If you still don't think JavaScript has won the web, please read on.&lt;/p&gt;  &lt;h3&gt;Shumway - Flash in JavaScript and HTML 5&lt;/h3&gt;  &lt;p&gt;The Mozilla Project &amp;quot;&lt;a href="http://mozilla.github.io/shumway/"&gt;Shumway&lt;/a&gt;&amp;quot; has been &lt;a href="https://blog.mozilla.org/research/2012/11/12/introducing-the-shumway-open-swf-runtime-project/"&gt;a long time coming&lt;/a&gt; (as long ago as &lt;a href="https://blog.mozilla.org/research/2012/11/12/introducing-the-shumway-open-swf-runtime-project/"&gt;2012&lt;/a&gt;, but it's now ready to be looked at more deeply). &lt;/p&gt;  &lt;p&gt;&lt;a href="http://cpeterso.com/blog/"&gt;Chris Peterson&lt;/a&gt;, a Program Manager on the Mozilla Shumway says:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&amp;quot;Shumway is in a race to stay relevant &lt;strong&gt;as Flash fades from the web&lt;/strong&gt;, but there will always be a long-tail of Flash content that would/will be lost when Adobe or browsers stop supporting the Flash plugin.&amp;quot;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Think about that. We've all largely got &amp;quot;Evergreen Browsers&amp;quot; now that update themselves as often as weekly, but sometimes it feels like Adobe Flash is being attacked daily, so we're told to update that as well. Flash itself has more than fallen from grace, as Chris points out, it's fading from the web itself. Fast forward a year or so when there is no more Flash installed, but there's still Flash on the web. Enter &lt;a href="http://mozilla.github.io/shumway/"&gt;Shumway&lt;/a&gt; - it's a renderer for SWF (Flash files) without native code! Shumway literally.&lt;/p&gt;  &lt;p&gt;Why is it called Shumway? Again, Chris:&lt;/p&gt;  &lt;blockquote cite="Chris Peterson"&gt;   &lt;p&gt;&amp;quot;The name &amp;quot;Shumway&amp;quot; is derived from &amp;quot;Gordon Shumway&amp;quot;, the actual name of the TV character ALF: Flash -&amp;gt; Flash Gordon -&amp;gt; Gordon Shumway -&amp;gt; Shumway.&amp;quot;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;That's awesome. What else is awesome? &amp;quot;Shumway is written in &lt;a href="http://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;. It has an ActionScript interpreter and a JIT that generates JavaScript, compiled using eval().&amp;quot;&lt;/p&gt; &lt;figure&gt;&lt;a href="http://mozilla.github.io/shumway/"&gt;&lt;img title="Shumway makes Flash into HTML5" style="display: inline" alt="Shumway makes Flash into HTML5" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/JavaScript-Has-Won-Flash-with-Shumway-an_AE93/image_18541f9a-dc8e-46fd-b0fd-cc89980af891.png" width="785" height="471" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;So &lt;a href="https://github.com/mozilla/shumway/wiki/Intro"&gt;Shumway&lt;/a&gt; is an HTML experiment that uses TypeScript (a modern typed JavaScript compiler/transpiler) to read ActionScript and resources and JIT the result into evaluated JavaScript. Fantastic. It's also &lt;a href="https://github.com/mozilla/shumway/wiki/Intro"&gt;open source and on GitHub&lt;/a&gt;. Even better, the Firefox Nightly is using &lt;a href="https://mail.mozilla.org/pipermail/firefox-dev/2015-February/002683.html"&gt;Shumway for Flash videos on Amazon.com&lt;/a&gt;. This is the beginning of their test, I presume, to sunset Flash in Firefox.&lt;/p&gt;  &lt;h3&gt;Fayde - Silverlight in JavaScript and HTML5 Canvas&lt;/h3&gt;  &lt;p&gt;At the same time, there's &lt;a href="http://wsick.github.io/Fayde/"&gt;The Fayde project&lt;/a&gt;. Also &lt;a href="https://github.com/wsick/Fayde"&gt;Open Source&lt;/a&gt;, Fayde also compiles to JavaScript. But Fayde transforms Silverlight into HTML5 Canvas and JavaScript! It's an implementation of a XAML engine in JS. Here's a near-Silverlight implementation of the &lt;a href="http://wsick.github.io/Fayde/demos/todo/default.html"&gt;classic Todo application, expressed on the web without plugins&lt;/a&gt;. Not enough? Here's a &lt;a href="http://wsick.github.io/Fayde/demos/nfldraft/default.html"&gt;complex Fantasy Football app written in a Silverlight-like environment&lt;/a&gt; but running in your browser, again, without Silverlight.&lt;/p&gt; &lt;figure&gt;&lt;a href="http://wsick.github.io/Fayde/"&gt;&lt;img title="Fayde - Silverlight in HTML5" style="display: inline" alt="Fayde - Silverlight in HTML5" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/JavaScript-Has-Won-Flash-with-Shumway-an_AE93/image_1a8b8417-d457-4076-afaa-c68b50eb1971.png" width="1213" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;To be clear, there are significant architectural differences between these two projects. Shumway reads the binary SWF format and tries to Be Flash, while &lt;a href="https://github.com/wsick/Fayde/wiki/Compatibility"&gt;Fayde is reimagining, if you will, that takes the Silverlight concepts of ViewModels&lt;/a&gt; and &lt;a href="https://github.com/wsick/Fayde-Demos/blob/master/NflDraft/app/default.fap"&gt;Views in XAML&lt;/a&gt; and adds TypeScript (a comfortable language for the C#-familiar) with the result rendered on a Canvas. It's not a Silverlight Emulator, it's a Silverlight-like implementation and app development pattern for HTML5. It's open source, and &lt;a href="https://github.com/BSick7/Fayde"&gt;they are looking for participation, so head over and get involved&lt;/a&gt;! Fayde may be the Silverlight migration strategy you've been looking for. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Aside: From my perspective, it's not unreasonable to imagine taking something like &lt;a href="http://jsil.org/"&gt;JSIL&lt;/a&gt; (&lt;a href="http://hanselminutes.com/452"&gt;listen to my podcast on this amazing project&lt;/a&gt;) or a similar IL-&amp;gt;JS system and combine it with Fayde to somehow run XAPs as well. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I love how crazy JavaScript is and what people have been able to do with it. Now, go run this &lt;a href="http://bellard.org/jslinux/"&gt;PC Emulator&lt;/a&gt; (~virtual machine) written by &lt;a href="http://bellard.org/jslinux/"&gt;Fabrice Bellard&lt;/a&gt; in JavaScript. &lt;a href="http://bellard.org/jslinux/"&gt;It's Linux, on a 486, in your browser, in JavaScript&lt;/a&gt;. *brain explodes*&lt;/p&gt;  &lt;p&gt;Have a lovely day and enjoy today's Open Web. &lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Fri, 13 Feb 2015 21:00:54 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/JavaScriptHasWonRunFlashWithMozillaShumwayAndDevelopSilverlightInJSWithFayde.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=40655063-65ac-410b-8715-b521b51c1769</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=40655063-65ac-410b-8715-b521b51c1769</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=40655063-65ac-410b-8715-b521b51c1769</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=40655063-65ac-410b-8715-b521b51c1769</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">46</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=40655063-65ac-410b-8715-b521b51c1769</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;Well this is some amazing news that has been a long time coming. You can take your Flash apps and run them without Flash, and take your Silverlight apps and (almost) run them without Silverlight. &lt;/p&gt;  &lt;p&gt;If you still don't think JavaScript has won the web, please read on.&lt;/p&gt;  &lt;h3&gt;Shumway - Flash in JavaScript and HTML 5&lt;/h3&gt;  &lt;p&gt;The Mozilla Project &amp;quot;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~mozilla.github.io/shumway/"&gt;Shumway&lt;/a&gt;&amp;quot; has been &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://blog.mozilla.org/research/2012/11/12/introducing-the-shumway-open-swf-runtime-project/"&gt;a long time coming&lt;/a&gt; (as long ago as &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://blog.mozilla.org/research/2012/11/12/introducing-the-shumway-open-swf-runtime-project/"&gt;2012&lt;/a&gt;, but it's now ready to be looked at more deeply). &lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~cpeterso.com/blog/"&gt;Chris Peterson&lt;/a&gt;, a Program Manager on the Mozilla Shumway says:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&amp;quot;Shumway is in a race to stay relevant &lt;strong&gt;as Flash fades from the web&lt;/strong&gt;, but there will always be a long-tail of Flash content that would/will be lost when Adobe or browsers stop supporting the Flash plugin.&amp;quot;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Think about that. We've all largely got &amp;quot;Evergreen Browsers&amp;quot; now that update themselves as often as weekly, but sometimes it feels like Adobe Flash is being attacked daily, so we're told to update that as well. Flash itself has more than fallen from grace, as Chris points out, it's fading from the web itself. Fast forward a year or so when there is no more Flash installed, but there's still Flash on the web. Enter &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~mozilla.github.io/shumway/"&gt;Shumway&lt;/a&gt; - it's a renderer for SWF (Flash files) without native code! Shumway literally.&lt;/p&gt;  &lt;p&gt;Why is it called Shumway? Again, Chris:&lt;/p&gt;  &lt;blockquote cite="Chris Peterson"&gt;   &lt;p&gt;&amp;quot;The name &amp;quot;Shumway&amp;quot; is derived from &amp;quot;Gordon Shumway&amp;quot;, the actual name of the TV character ALF: Flash -&amp;gt; Flash Gordon -&amp;gt; Gordon Shumway -&amp;gt; Shumway.&amp;quot;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;That's awesome. What else is awesome? &amp;quot;Shumway is written in &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;. It has an ActionScript interpreter and a JIT that generates JavaScript, compiled using eval().&amp;quot;&lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~mozilla.github.io/shumway/"&gt;&lt;img title="Shumway makes Flash into HTML5" style="display: inline" alt="Shumway makes Flash into HTML5" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/JavaScript-Has-Won-Flash-with-Shumway-an_AE93/image_18541f9a-dc8e-46fd-b0fd-cc89980af891.png" width="785" height="471" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;So &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/mozilla/shumway/wiki/Intro"&gt;Shumway&lt;/a&gt; is an HTML experiment that uses TypeScript (a modern typed JavaScript compiler/transpiler) to read ActionScript and resources and JIT the result into evaluated JavaScript. Fantastic. It's also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/mozilla/shumway/wiki/Intro"&gt;open source and on GitHub&lt;/a&gt;. Even better, the Firefox Nightly is using &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://mail.mozilla.org/pipermail/firefox-dev/2015-February/002683.html"&gt;Shumway for Flash videos on Amazon.com&lt;/a&gt;. This is the beginning of their test, I presume, to sunset Flash in Firefox.&lt;/p&gt;  &lt;h3&gt;Fayde - Silverlight in JavaScript and HTML5 Canvas&lt;/h3&gt;  &lt;p&gt;At the same time, there's &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wsick.github.io/Fayde/"&gt;The Fayde project&lt;/a&gt;. Also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/wsick/Fayde"&gt;Open Source&lt;/a&gt;, Fayde also compiles to JavaScript. But Fayde transforms Silverlight into HTML5 Canvas and JavaScript! It's an implementation of a XAML engine in JS. Here's a near-Silverlight implementation of the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wsick.github.io/Fayde/demos/todo/default.html"&gt;classic Todo application, expressed on the web without plugins&lt;/a&gt;. Not enough? Here's a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wsick.github.io/Fayde/demos/nfldraft/default.html"&gt;complex Fantasy Football app written in a Silverlight-like environment&lt;/a&gt; but running in your browser, again, without Silverlight.&lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wsick.github.io/Fayde/"&gt;&lt;img title="Fayde - Silverlight in HTML5" style="display: inline" alt="Fayde - Silverlight in HTML5" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/JavaScript-Has-Won-Flash-with-Shumway-an_AE93/image_1a8b8417-d457-4076-afaa-c68b50eb1971.png" width="1213" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;To be clear, there are significant architectural differences between these two projects. Shumway reads the binary SWF format and tries to Be Flash, while &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/wsick/Fayde/wiki/Compatibility"&gt;Fayde is reimagining, if you will, that takes the Silverlight concepts of ViewModels&lt;/a&gt; and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/wsick/Fayde-Demos/blob/master/NflDraft/app/default.fap"&gt;Views in XAML&lt;/a&gt; and adds TypeScript (a comfortable language for the C#-familiar) with the result rendered on a Canvas. It's not a Silverlight Emulator, it's a Silverlight-like implementation and app development pattern for HTML5. It's open source, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/BSick7/Fayde"&gt;they are looking for participation, so head over and get involved&lt;/a&gt;! Fayde may be the Silverlight migration strategy you've been looking for. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Aside: From my perspective, it's not unreasonable to imagine taking something like &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~jsil.org/"&gt;JSIL&lt;/a&gt; (&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselminutes.com/452"&gt;listen to my podcast on this amazing project&lt;/a&gt;) or a similar IL-&amp;gt;JS system and combine it with Fayde to somehow run XAPs as well. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I love how crazy JavaScript is and what people have been able to do with it. Now, go run this &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bellard.org/jslinux/"&gt;PC Emulator&lt;/a&gt; (~virtual machine) written by &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bellard.org/jslinux/"&gt;Fabrice Bellard&lt;/a&gt; in JavaScript. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bellard.org/jslinux/"&gt;It's Linux, on a 486, in your browser, in JavaScript&lt;/a&gt;. *brain explodes*&lt;/p&gt;  &lt;p&gt;Have a lovely day and enjoy today's Open Web. &lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/85242550/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/85242550/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Role-Based-Access-Control-RBAC-in-Azure-Websites-with-Daria-Grigoriu</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Role-Based-Access-Control-RBAC-in-Azure-Websites-with-Daria-Grigoriu</link><category>Azure</category><title>Role Based Access Control (RBAC) in Azure Websites with Daria Grigoriu</title><description>&lt;p&gt;Scott talks to&amp;nbsp;Daria Grigoriu&amp;nbsp;about new support for&amp;nbsp;Role Based Access Control (RBAC) in Azure Websites.&amp;nbsp;We'll see how you can set&amp;nbsp;up&amp;nbsp;separate roles&amp;nbsp;and credentials and do Git deployments without giving away the keys to the whole city!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:2ed64332503245fc8488a43c00868c33"&gt;</description><pubDate>Fri, 13 Feb 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101.mp4" type="video/mp4" length="11174953" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Role-Based-Access-Control-RBAC-in-Azure-Websites-with-Daria-Grigoriu</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott talks to Daria Grigoriu about new support for Role Based Access Control (RBAC) in Azure Websites. We'll see how you can set up separate roles and credentials and do Git deployments without giving away the keys to the whole city! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">504</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101.mp3" expression="full" duration="504" fileSize="8075985" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101.mp4" expression="full" duration="504" fileSize="11174953" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101.webm" expression="full" duration="504" fileSize="28397841" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_high.mp4" expression="full" duration="504" fileSize="56897952" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7383/4607c49a-3265-4e59-bb5b-3208b4da7383/AzureFridayRBAC101_mid.mp4" expression="full" duration="504" fileSize="36349792" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Role-Based-Access-Control-RBAC-in-Azure-Websites-with-Daria-Grigoriu/RSS</wfw:commentRss></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061253</guid><link>http://blog.markrendle.net/fun-with-asp-net-5-and-docker/</link><title>Fun with ASP.NET 5, Linux &amp; Docker</title><description> Mark Rendle begins a series exploring building ASP.NET 5 applications on Docker and Linux.</description><pubDate>Thu, 12 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3065262/avatar-59x59.png?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10593078</guid><link>http://blogs.msdn.com/b/adonet/archive/2015/02/12/ef6-1-3-beta-1-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF6.1.3 Beta 1 Available</title><description>&lt;p&gt;Today we are making Beta 1 of the EF6.1.3 release available. This patch release contains only high priority bug fixes. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What are the 6.1.3 release timelines?&lt;/h2&gt;  &lt;p&gt;At this stage we are planning for our next release to be the RTM. This may change if we get additional reports of high priority bugs that we decide should be fixed in 6.1.3. &lt;/p&gt;  &lt;p&gt;We expect to ship the next release sometime next month but this may change if we decided to take additional changes.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;EF6.1.3 will just contain fixes to high priority issues that have been reported on the 6.1.2 release. The fixes included in beta 1 are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2612"&gt;Query: Regression in EF 6.1.2: OUTER APPLY introduced and more compex queries for 1:1 relationships and &amp;quot;let&amp;quot; clause&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2616"&gt;TPT problem with hiding base class property in inherited class&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2639"&gt;DbMigration.Sql fails when the word 'go' is contained in the text&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where do I get the beta?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.3-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and Visual Studio 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=45875"&gt;available on the Microsoft Download Center&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of changes that will be available in the final release of EF6.1.3 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the &lt;strong&gt;entity-framework&lt;/strong&gt; tag. &lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10593078" width="1" height="1"&gt;</description><pubDate>Thu, 12 Feb 2015 17:58:44 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10593078</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2015/02/12/ef6-1-3-beta-1-available.aspx#comments</comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061252</guid><link>http://www.codeproject.com/Articles/869433/AngularJS-MVC-Repository</link><title>AngularJS MVC Repository</title><description> Nice tutorial from Mahsa Hassankashi demonstrating an AngularJS application with an ASP.NET MVC back end, using the repository pattern for data access.</description><pubDate>Wed, 11 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/4489021/mahsa-hassankashi.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10592765</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/02/11/improve-performance-by-optimizing-queries-for-asp-net-identity-and-other-membership-providers.aspx</link><title>Improve performance by optimizing queries for ASP.NET Identity and other Membership Providers</title><description>&lt;p&gt;If your application is using ASP.NET Identity or other membership systems such as SQL, Universal or Simple membership, then you might be running into the following issue.&lt;/p&gt;
&lt;p&gt;If you are using ASP.NET Identity 2.x, the query for getting profile values (among other things) uses the UPPER() function on Username - this causes any indexes on username to be ignored.&lt;/p&gt;
&lt;p&gt;The workaround is to add a computed column with the call to UPPER(Username) and a database index over it. This is extremely effective in improving the performance and it does not require any changes to the application or updating ASP.NET Identity Framework.&lt;/p&gt;
&lt;p&gt;Here are sample SQL commands that you would need to run on the database (table and column names may be different based on your app):&lt;/p&gt;
&lt;h2&gt;SQL Query for ASP.NET Identity 2.1&lt;/h2&gt;
&lt;p&gt;ALTER TABLE dbo.AspNetUsers ADD NormalizedName&amp;nbsp; AS UPPER(UserName);&lt;/p&gt;
&lt;p&gt;CREATE NONCLUSTERED INDEX [IX_NormalizedName] ON [dbo].[AspNetUsers] ([NormalizedName] ASC);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; If Username is of a type larger than the allowed index key length, e.g. nvarchar(max) you may need to do this instead:&lt;/p&gt;
&lt;p&gt;ALTER TABLE dbo.AspNetUsers ADD NormalizedName&amp;nbsp; AS LOWER(UserName);&lt;/p&gt;
&lt;p&gt;CREATE NONCLUSTERED INDEX [IX_NormalizedName] ON [dbo].[AspNetUsers] ([Id] ASC) INCLUDE ([NormalizedName]);&lt;/p&gt;
&lt;h2&gt;SQL Query for ASP.NET Universal Provider&lt;/h2&gt;
&lt;p&gt;ALTER TABLE dbo.Users ADD NormalizedName&amp;nbsp; AS LOWER(Username);&lt;/p&gt;
&lt;p&gt;CREATE NONCLUSTERED INDEX [IX_NormalizedName] ON [dbo].[Users] ([NormalizedName] ASC);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; If Username is of a type larger than the allowed index key length, e.g. nvarchar(max) you may need to do this instead:&lt;/p&gt;
&lt;p&gt;ALTER TABLE dbo.Users ADD NormalizedName&amp;nbsp; AS LOWER(Username);&lt;/p&gt;
&lt;p&gt;CREATE NONCLUSTERED INDEX [IX_NormalizedName] ON [dbo].[Users] ([Id] ASC) INCLUDE ([NormalizedName]);&lt;/p&gt;
&lt;h2&gt;Note:&lt;/h2&gt;
&lt;p&gt;Although we did it only for Username, the same principle should apply to other columns where you are doing lots of lookups on.&lt;/p&gt;
&lt;p&gt;You can use LOWER() or UPPER() based on what queries are being executed.&lt;/p&gt;
&lt;p&gt;You can follow the same steps for SQL Membership and Simple Membership as well.&lt;/p&gt;
&lt;p&gt;Customers have seen significant improvements in performance with this workaround so we would recommend you to implement this in your application.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10592765" width="1" height="1"&gt;</description><pubDate>Wed, 11 Feb 2015 17:27:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pranav rastogi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10592765</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2015/02/11/improve-performance-by-optimizing-queries-for-asp-net-identity-and-other-membership-providers.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/pv60ZIAJa54</guid><link>https://www.youtube.com/watch?v=pv60ZIAJa54&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to REALLY use Microsoft Office - Creating Forms in Word</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=pv60ZIAJa54&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/pv60ZIAJa54/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=pv60ZIAJa54&amp;amp;feature=youtube_gdata"&gt;How to REALLY use Microsoft Office - Creating Forms in Word&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Lots of people think they understand how to use Microsoft Word. Do you? I break down the basics and importance of Creating Forms in Word in this evenly paced How-To video. 

Are your friends and coworkers filling their Word documents with Underscores and calling them &amp;quot;Forms?&amp;quot; MAKE THEM STOP! ;)
Check the full playlist!&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1353&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;59
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;14:09&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 11 Feb 2015 08:44:17 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/pv60ZIAJa54" /><a10:updated>2015-02-18T17:16:11Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/4WPml2UjdMY</guid><link>https://www.youtube.com/watch?v=4WPml2UjdMY&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Hanselminutiae LIVE 15 - A LIVE recording of the Hanselminutes podcast with Richard Campbell</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=4WPml2UjdMY&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/4WPml2UjdMY/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=4WPml2UjdMY&amp;amp;feature=youtube_gdata"&gt;Hanselminutiae LIVE 15 - A LIVE recording of the Hanselminutes podcast with Richard Campbell&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
780&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;19
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;35:41&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 11 Feb 2015 00:33:08 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/4WPml2UjdMY" /><a10:updated>2015-02-18T19:25:21Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061250</guid><link>http://www.troyhunt.com/2015/01/automating-web-hosting-creation-in.html</link><title>Automating web hosting creation in Azure with PowerShell</title><description> Troy Hunt describes how to migrate "a heap of websites" to Azure using PowerShell to automate site creation.</description><pubDate>Tue, 10 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i2.asp.net/media/3093529/troy-hunt.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/DPzU44lo5DE</guid><link>https://www.youtube.com/watch?v=DPzU44lo5DE&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Feb 10th, 2015 - Caching, and Preview 3</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=DPzU44lo5DE&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/DPzU44lo5DE/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=DPzU44lo5DE&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Feb 10th, 2015 - Caching, and Preview 3&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1536&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;23
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;29:00&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 10 Feb 2015 18:47:15 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/DPzU44lo5DE" /><a10:updated>2015-02-18T15:37:20Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061249</guid><link>http://stephenwalther.com/archive/2015/01/12/asp-net-5-and-angularjs-part-1-configuring-grunt-uglify-and-angularjs</link><title>ASP.NET 5 and AngularJS Part 1, Configuring Grunt, Uglify, and AngularJS</title><description> Great series by Stephen Walther on building an ASP.NET 5 application with AngularJS.</description><pubDate>Mon, 09 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i2.asp.net/media/1738796/stephen-walter.png?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10592174</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/02/09/asp-net-mvc-5-2-3-web-pages-3-2-3-and-web-api-5-2-3-release.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET/">ASP.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/-NET/">.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/MVC/">MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC/">ASP.NET MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+Web+Api/">ASP.NET Web Api</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+4-5/">ASP.NET 4.5</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/webapi/">webapi</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Web+API/">Web API</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/MVC+5/">MVC 5</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/WebStack/">WebStack</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+Facebook/">ASP.NET MVC Facebook</category><title>ASP.NET MVC 5.2.3, Web Pages 3.2.3 and Web API 5.2.3 Release</title><description>&lt;p&gt;While the MVC team is working hard on MVC 6 as part of the ASP.NET 5 effort, we also keep working on the 5.x packages. Today we are releasing ASP.NET MVC 5.2.3, Web Pages 5.2.3 and Web API 5.2.3.&lt;/p&gt;
&lt;p&gt;This release addresses 13 issues. Here is the full &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.2.3%20Beta|v5.2.3%20RTM&amp;amp;assignedTo=All&amp;amp;component=Unassigned|Facebook|General|MVC|Web%20API|Web%20Pages%2FRazor&amp;amp;sortField=LastUpdatedDate&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Highlight of issues fixed&lt;/h2&gt;
&lt;h3&gt;Web API Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2092"&gt;2092&lt;/a&gt; Significant performance improvement in the default overload for &lt;em&gt;System.Net.HttpFormatting.ReadAsAsync&lt;/em&gt; by caching the default JSON formatter. This can result in improvements of 100s of milliseconds on the second call to &lt;em&gt;ReadAsAsync&lt;/em&gt; (or similarly to the write method).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2103"&gt;2103&lt;/a&gt; Batch's inner request's Url not being decoded in WebHost scenarios.&lt;/p&gt;
&lt;p&gt;&lt;a title="https://aspnetwebstack.codeplex.com/workitem/2101" href="https://aspnetwebstack.codeplex.com/workitem/2101"&gt;2101&lt;/a&gt; Error parsing MIME multipart when using irregular mime types&lt;/p&gt;
&lt;h3&gt;MVC Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2155"&gt;2155&lt;/a&gt; Remote attribute does not work boolean fields and &lt;em&gt;Html.CheckBoxFor&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2081"&gt;2081&lt;/a&gt; Performance improvement in &lt;em&gt;OutputCacheAttribute&lt;/em&gt; for child action&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2136"&gt;2136&lt;/a&gt; Attribute routing does not set &lt;em&gt;ControllerContext.IsChild&lt;/em&gt; correctly&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2172"&gt;2172&lt;/a&gt;, &lt;a href="https://aspnetwebstack.codeplex.com/workitem/2048"&gt;2048&lt;/a&gt; &amp;ndash; Unobtrusive validation fixes&lt;/p&gt;
&lt;h3&gt;MVC and Web Pages Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2085"&gt;2085&lt;/a&gt; Performance improvement in rendering Razor views&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2119"&gt;2119&lt;/a&gt; Performance improvement in rendering attributes in Razor&lt;/p&gt;
&lt;h3&gt;Shout Out&lt;/h3&gt;
&lt;p&gt;We want to convey a big thank you to &lt;strong&gt;Nick Craver &lt;/strong&gt;and&lt;strong&gt; Marc Gravell&lt;/strong&gt;, who reported two of the performance issues we resolved in this release and provided a pretty cool Pull Request to fix one of them.&lt;/p&gt;
&lt;h3&gt;Issue 2085 in detail&lt;/h3&gt;
&lt;p&gt;Issue &lt;a title="https://aspnetwebstack.codeplex.com/workitem/2085" href="https://aspnetwebstack.codeplex.com/workitem/2085"&gt;2085&lt;/a&gt; was about the fact the MVC copied &lt;em&gt;ViewData&lt;/em&gt; for partial views, and templated helpers. In a reasonably large page with a reasonable amount of data in the &lt;em&gt;ViewBag&lt;/em&gt; this proves out to be rather costly. We are now using a copy on write strategy instead. We took this improvement over to MVC 6 as well.&lt;/p&gt;
&lt;h4&gt;The Test&lt;/h4&gt;
&lt;p&gt;We built a test site, that put about 50 items in the &lt;em&gt;ViewBag&lt;/em&gt;. For each of these items we rendered a partial view. This is similar to having 50 templated helpers (such as &lt;em&gt;DisplayFor&lt;/em&gt; and &lt;em&gt;EditorFor&lt;/em&gt;) used on a page.&lt;/p&gt;
&lt;p&gt;We ran two types of tests:&lt;/p&gt;
&lt;p&gt;1. Load the site with a constant stream of requests at the rate of 100 requests/second, and compare memory utilization and garbage collection characteristics for MVC 5.2.2 and MVC 5.2.3.&lt;/p&gt;
&lt;p&gt;2. Load the site with maximum amount of requests and compare the requests/second rate between MVC 5.2.2 and MVC 5.2.3.&lt;/p&gt;
&lt;h5&gt;Results&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;Test 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The interesting data in this scenario as the reduction of time spent in GC and reduction in overall allocations. Note that Gen2 garbage collection count went down from 57 to 1! And the time in GC was sliced almost three fold.&lt;/p&gt;
&lt;table style="width: 599px;" border="1" cellspacing="0" cellpadding="2"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="182"&gt;
&lt;p&gt;&lt;strong&gt;Area&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="145"&gt;
&lt;p&gt;&lt;strong&gt;5.2.2&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="188"&gt;
&lt;p&gt;&lt;strong&gt;5.2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="82"&gt;
&lt;p&gt;&lt;strong&gt;Delta %&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p&gt;Total request (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="144"&gt;
&lt;p align="right"&gt;2,911&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="187"&gt;
&lt;p align="right"&gt;2,869&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="84"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p&gt;Trace duration (seconds)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="144"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="86"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;Request/second&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;97.03&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p align="right"&gt;95.63&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="88"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;GC CPU Samples (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12,139.00 &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6,682.00&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="89"&gt;
&lt;p align="right"&gt;&lt;strong&gt;45%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;Total allocations (MB)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 18,049.79&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12,602.08&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="90"&gt;
&lt;p align="right"&gt;&lt;strong&gt;30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;Total GC Pause (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;1,103.20&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;663.00&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;Gen0 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;76&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;107&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;-41%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;Gen1 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;317&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;106&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;67%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;Gen2 GC (count)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;57&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;98%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;CPU / request (msec/req)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;4.17&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2.33&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;44%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;% CPU Time spent on GC&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6.40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2.30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="92"&gt;
&lt;p align="right"&gt;&lt;strong&gt;64%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Test 2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this scenario the number of requests/sec went up 70%, and less time was spent in GC.&lt;/p&gt;
&lt;table style="width: 599px;" border="1" cellspacing="0" cellpadding="2"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="183"&gt;
&lt;p&gt;&lt;strong&gt;Area&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p&gt;&lt;strong&gt;5.2.2&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p&gt;&lt;strong&gt;5.2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="88"&gt;
&lt;p&gt;&lt;strong&gt;Delta %&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p&gt;Total request (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="141"&gt;
&lt;p align="right"&gt;5,246&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="182"&gt;
&lt;p align="right"&gt;8,895&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="90"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Trace duration (seconds)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="140"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="92"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Request/second&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;174.87&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p align="right"&gt;&lt;strong&gt;296.50&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="93"&gt;
&lt;p align="right"&gt;&lt;strong&gt;70%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;GC CPU Samples (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;39,615&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p align="right"&gt;&lt;strong&gt;34,704&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="94"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12.40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Allocations/Request (MB/Request)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6.382&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;4.739&amp;nbsp; &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="95"&gt;
&lt;p align="right"&gt;&lt;strong&gt;34.66&lt;/strong&gt;%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Total GC Pause (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2,974.60&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;3,215.70&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;&lt;strong&gt;-8.11%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Gen0 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;76&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;99&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-30.26%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Gen1 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;317&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;368&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-16.09%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Gen2 GC (count)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;&lt;strong&gt;57&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;45&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;&lt;strong&gt;21.05%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;CPU / request (msec/req)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;87.42&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;155.63&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-78.03%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;% CPU time spent on GC&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;&lt;strong&gt;8.60%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;7.80%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="97"&gt;
&lt;p align="right"&gt;&lt;strong&gt;9.30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;We hope you enjoy these performance and functionality improvements!&lt;/h3&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10592174" width="1" height="1"&gt;</description><pubDate>Mon, 09 Feb 2015 17:29:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yishai G_</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10592174</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2015/02/09/asp-net-mvc-5-2-3-web-pages-3-2-3-and-web-api-5-2-3-release.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10591932</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/02/08/some-of-asp-net-project-templates-in-vs-2015-are-available-on-vs-gallery.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET/">ASP.NET</category><title>Introducing the Visual Studio 2015 Extension for ASP.NET Project Templates</title><description>&lt;p&gt;&lt;span style="color: #000000; font-family: 'Segoe UI',sans-serif; font-size: 9.5pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: EN; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="EN"&gt;In Visual Studio 2013, there were a handful of templates that supported developing ASP.NET projects with various frameworks and data structures.&amp;nbsp; Some of those project templates from the Visual Studio 2012 era have been removed from the Visual Studio 2015 install and added to the Visual Studio Extension gallery as the &lt;/span&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/9402d38e-2a85-434e-8d6a-8fc075068a42"&gt;ASP.NET Project Templates extension for Visual Studio 2015&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This was primarily done for the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduce the number of templates that we ship in the box, thereby reducing the installer size.&lt;/li&gt;
&lt;li&gt;Update templates more frequently. For example, Facebook makes changes to their application development APIs that were incompatible with the &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/06/10/updating-the-mvc-facebook-api.aspx"&gt;MVC Facebook support&lt;/a&gt;. &amp;nbsp;To maintain support,&amp;nbsp;we updated the template outside of a Visual Studio release.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span style="font-size: 1.17em;"&gt;What templates are included?&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET Dynamic Data Entities Project (.NET 4 and above)&lt;/li&gt;
&lt;li&gt;ASP.NET Dynamic Data Linq Project (.NET 4)&lt;/li&gt;
&lt;li&gt;ASP.NET MVC Facebook Project (.NET 4.5 and above)&lt;/li&gt;
&lt;li&gt;ASP.NET Web Forms Project (.NET 4 only)&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Note: This template was using Universal Providers. Starting Visual Studio 2013, all templates including Web Forms were updated to use ASP.NET Identity and you can create these templates in VS 2015&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h3&gt;What about other templates from VS 2013?&lt;/h3&gt;
&lt;p&gt;All the other templates from VS 2013 are still part of VS 2015.&lt;/p&gt;
&lt;p&gt;You can create ASP.NET Web Forms, MVC 5, Web API 2, SPA, Azure Mobile Service projects, using the One ASP.NET dialog. This is the same as Visual Studio 2013.&lt;/p&gt;
&lt;h3&gt;How to install &amp;amp; create project?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install the &lt;a href="https://visualstudiogallery.msdn.microsoft.com/9402d38e-2a85-434e-8d6a-8fc075068a42"&gt;ASP.NET Project Templates extension&lt;/a&gt; from the online gallery or by going to the Extensions dialog (Tools &amp;ndash; Extensions &amp;amp; Updates) in Visual Studio and searching for &amp;ldquo;ASP.NET Project Templates&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3225.vsdialog_5F00_721D1FBF.png"&gt;&lt;img style="display: inline; border-width: 0px;" title="vsdialog" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1033.vsdialog_5F00_thumb_5F00_38306D84.png" alt="vsdialog" width="549" height="313" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Once you install the extension, the project templates will show up in the File - New Project - Web node as shown below.&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8345.Listoftemplates_5F00_09D97888.png"&gt;&lt;img style="display: inline; border-width: 0px;" title="List of templates" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1263.Listoftemplates_5F00_thumb_5F00_2675F45B.png" alt="List of templates" width="601" height="347" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align: left;"&gt;You can now create a project as you normally would and use the template.&lt;/p&gt;
&lt;h3 style="text-align: left;"&gt;Summary&lt;/h3&gt;
&lt;p&gt;Web sites and technologies are evolving quickly. We want to be able to deliver to you project templates that use new technologies and techniques on a more timely basis, and to do this we have enabled the &lt;a href="https://visualstudiogallery.msdn.microsoft.com/9402d38e-2a85-434e-8d6a-8fc075068a42"&gt;ASP.NET Project Template extension&lt;/a&gt;. &amp;nbsp;If you are looking to work with Facebook apps, Dynamic Data, or Web Forms with the Universal Providers, try out the extension and let us know what you think.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10591932" width="1" height="1"&gt;</description><pubDate>Mon, 09 Feb 2015 00:07:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pranav rastogi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10591932</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2015/02/08/some-of-asp-net-project-templates-in-vs-2015-are-available-on-vs-gallery.aspx#comments</comments></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=4e230132-6845-4031-b76c-f8cee15974e0</guid><link>http://feeds.hanselman.com/~/84980526/0/scotthanselman~Announcing-Running-Ruby-on-Rails-on-IIS-or-anything-else-really-with-the-new-HttpPlatformHandler.aspx</link><category>IIS</category><category>Ruby</category><title>Announcing: Running Ruby on Rails on IIS8 (or anything else, really) with the new HttpPlatformHandler</title><description>&lt;div&gt;&lt;p&gt;For years there's been numerous hacks and ways to get Ruby on Rails to run on IIS. There's also ways to get Java via Tomcat or Jetty, Go, and other languages and environments to run as well. There's ways to get &lt;a href="http://www.hanselman.com/blog/InstallingAndRunningNodejsApplicationsWithinIISOnWindowsAreYouMad.aspx"&gt;Node.JS running on IIS using iisnode&lt;/a&gt; but that's been node-specific. The blog posts you do find say things like &amp;quot;get Rails to run on IIS in 10 steps&amp;quot; and I'm like JUST TEN?!? Why not 13? Others say &amp;quot;You can deploy Rails under IIS, it's just very difficult and there's not a lot of documentation. You'll need a special Fast-CGI implementation...WELCOME TO HELL.&amp;quot; &lt;/p&gt;  &lt;p&gt;No longer.&lt;/p&gt;  &lt;p&gt;Azure Websites has supported node AND &lt;a href="http://channel9.msdn.com/Shows/Azure-Friday/Azure-WebSites-Java-runs-great-in-Azure-"&gt;Java (again, Tomcat or Jetty)&lt;/a&gt; for a while now, in production and it's very nice and it runs under IIS. How? They've now brought that support to Windows running IIS 8+ with the &lt;a href="http://azure.microsoft.com/blog/2015/02/04/announcing-the-release-of-the-httpplatformhandler-module-for-iis-8/"&gt;release of the &lt;strong&gt;HttpPlatformHandler&lt;/strong&gt;&lt;/a&gt;. Here's their example on how to &lt;a href="http://azure.microsoft.com/blog/2015/02/04/announcing-the-release-of-the-httpplatformhandler-module-for-iis-8/"&gt;get IIS 8+ running Java, easily&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;Let's see if this works well with Ruby on Rails as well!&lt;/p&gt;  &lt;p&gt;Why is &lt;a href="http://www.iis.net/learn/extensions/httpplatformhandler/httpplatformhandler-configuration-reference"&gt;HttpPlatformHandler&lt;/a&gt; interesting? Check this from the docs...it means IIS can host anything that runs on Windows now, easily. These things were possible before, but with all kinds of hacks and FastCGI this and that. What's great about HttpPlatformHandler is that it isn't about Rails. It's about any process that's listening on a port. You get all the value of IIS *and* total control of your self-hosting scenario.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;The HttpPlatformHandler is an IIS Module, for IIS 8+, which does the following two things:&lt;/p&gt;    &lt;ol&gt;     &lt;li&gt;Process management of http listeners - &lt;strong&gt;this could be any process that can listen on a port for http requests&lt;/strong&gt;.&amp;#160; For example - Tomcat, Jetty, Node.exe, Ruby etc; &lt;/li&gt;      &lt;li&gt;Proxy requests to the process that it manages. &lt;/li&gt;   &lt;/ol&gt; &lt;/blockquote&gt;  &lt;p&gt;To be clear, you can work with Ruby on Rails on Windows and have it host itself with WEBrick locally, but if you're going to go production on Windows you'll want to have IIS and more likely, jRuby in a Tomcat container, similar to using Nginx on linux. What value does IIS provide in a scenario like this? Static file hosting, Reverse Proxy, complex auth that can span multiple apps, languages and frameworks, it monitors and manages your process looking at memory and CPU, crashes, etc.&lt;/p&gt;  &lt;h3&gt;Running Ruby on Rails on IIS 8 with the HttpPlatformHandler&lt;/h3&gt;  &lt;p&gt;First make sure you have Ruby on Rails. If you do, skip forward. &lt;/p&gt;  &lt;p&gt;I use the &lt;a title="http://railsinstaller.org/en" href="http://railsinstaller.org"&gt;http://railsinstaller.org&lt;/a&gt; for Windows and go. You'll get &lt;a href="http://ruby-lang.org/"&gt;Ruby&lt;/a&gt;, &lt;a href="http://rubyonrails.org/"&gt;Rails&lt;/a&gt;, &lt;a href="http://bundler.io/"&gt;Bundler&lt;/a&gt;, &lt;a href="http://www.sqlite.org/"&gt;Sqlite&lt;/a&gt;, and &lt;a href="https://github.com/rails-sqlserver/tiny_tds"&gt;TinyTDS&lt;/a&gt;. Even SQL Server support. Very kind of them. Another good Rails on Windows on is &lt;a href="http://railsftw.bryanbibat.net/"&gt;RailsFTW&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I go to Turn Windows Features On and Off to make sure I have IIS installed as well.&lt;/p&gt;  &lt;p&gt;&lt;img title="Turn on IIS in Windows Features" style="display: inline" alt="Turn on IIS in Windows Features" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_4447fe0f-c6e2-4fc3-912e-ef5bf623b683.png" width="429" height="375" /&gt;&lt;/p&gt;  &lt;p&gt;Then get the &lt;strong&gt;HttpPlatformHandler&lt;/strong&gt;. You can get it with the &lt;a href="http://www.microsoft.com/web/gallery/install.aspx?appid=HttpPlatformHandlerv1_0"&gt;Web Platform Installer&lt;/a&gt;, or just install it from here: &lt;a href="http://download.microsoft.com/download/8/B/1/8B1DDE49-503D-4159-9418-76C4A365B70B/httpPlatformHandler_x86.msi"&gt;x86&lt;/a&gt;/&lt;a href="http://download.microsoft.com/download/0/2/C/02CF3C6A-2ED8-43D3-9779-6376EBB80E8A/httpPlatformHandler_amd64.msi"&gt;x64&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I make a folder for the app I'm going to make. I put it in c:\inetpub\wwwroot\rails but you can move it around if you like.&lt;/p&gt;  &lt;p&gt;&lt;img title="Make sure your Rails app is an application in IIS" style="display: inline" alt="Make sure your Rails app is an application in IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_3b6f0c6b-2a6b-4805-81b2-158c9a26821a.png" width="600" height="433" /&gt;&lt;/p&gt;  &lt;p&gt;I right-click my folder in IIS Manager and &amp;quot;Convert to Application.&amp;quot;&lt;/p&gt;  &lt;p&gt;&lt;img title="My Rails application in IIS" style="display: inline" alt="My Rails application in IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_87027a62-1e44-4876-97bf-e56ae13e717a.png" width="532" height="392" /&gt;&lt;/p&gt;  &lt;p&gt;I run &amp;quot;gem install rails&amp;quot; to make sure I have Rails in the first place. ;) You will if you installed with the &lt;strong&gt;RailsInstaller&lt;/strong&gt;. If you installed with the &lt;strong&gt;RubyInstaller&lt;/strong&gt;, then this will get you Rails.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you have issues with SSL running gem on Windows, you'll need manually to &lt;a href="https://gist.github.com/luislavena/f064211759ee0f806c88#installing-using-update-packages-new"&gt;update gem to 2.2.3 as of the time of this writing&lt;/a&gt;. I'm not sure why this isn't already done by the installer. The symptom I saw was weird errors on 'bundle install' that was fixed by this.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;img title="Installing Rails" style="display: inline" alt="Installing Rails" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_91613c16-5836-4c8c-a55d-895346ee13f4.png" width="600" height="296" /&gt;&lt;/p&gt;  &lt;p&gt;Then, from inside c:\inetpub\wwwroot\rails, I ran &amp;quot;rails new helloworld.&amp;quot; I ended up moving this folder up. I should have just made the app first, then converted the folder to an app in IIS. Order of operations and all that, eh?&lt;/p&gt;  &lt;p&gt;OK, now I'll &amp;quot;rails server&amp;quot; from within c:\inetpub\wwwroot\rails, just to make sure Rails can run under the local WEBrick server. And it does:&lt;/p&gt; &lt;figure&gt;&lt;img title="Rails on Windows" style="display: inline" alt="Rails on Windows" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_2179a721-c9fe-4b6e-bf1c-a2987498c86c.png" width="815" height="688" /&gt;&lt;/figure&gt;   &lt;h3&gt;Now, let's do it under IIS.&lt;/h3&gt;  &lt;p&gt;I need to make sure there's a web.config file in the same root folder as my Rails app. WHAT?!? Web.config is for ASP.NET, right? Well, no. It's config for any IIS application. You'll need this for Go, Java, PHP, Rails, node, ASP.NET, whatever. IIS can host basically anything.&lt;/p&gt;  &lt;p&gt;Lemme add a hello world controller and edit its view. I'll &amp;quot;rails generate controller welcome index&amp;quot; then edit app\views\welcome\index.html.erb for good measure.&lt;/p&gt;  &lt;p&gt;I put my Rails app under http://localhost/rails rather than at the root http://localhost so I did need to tell Rails 4 about the fact it's running in a subdirectory with a change to /config.ru, otherwise my routes wouldn't line up.&lt;/p&gt;  &lt;pre class="brush: ruby; gutter: false; toolbar: false; auto-links: false;"&gt;Rails.application.config.relative_url_root = '/rails' map Rails.application.config.relative_url_root || &amp;quot;/&amp;quot; do   run Rails.application end&lt;/pre&gt; &lt;p&gt;Make special note of the paths below AND the encoded &amp;amp;quot; there in the arguments. That's important, because it's a quoted argument passed into the ruby.exe process that IIS will kick off. Note also the %HTTP_PLATFORM_PORT% environment variable reference. That is passed in by IIS and will be a localhost-bound high port.&lt;/p&gt; &lt;p&gt;I also put in foo and bar for theoretical environment variables you might want your Rails app to know about. For example, I might add:&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;environmentVariable name=&amp;quot;RAILS_ENV&amp;quot; value=&amp;quot;production&amp;quot;/&amp;gt;&lt;/pre&gt; &lt;p&gt;...when it's time. I put in some standard debug logging there with the &amp;quot;stdout&amp;quot; but you can remove that if you don't want the clutter. Make sure your IISR_ users have write access to the folders if you want to see any logs.&lt;/p&gt; &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;WARNING/DISCLAIMER: &lt;/strong&gt;This first example is just showing you what's possible. You DON'T want to go to production with the little built-in Ruby WEBrick web server. As Fabio Akita very kindly points out in the comments, and I'll pull his comment out here:      &lt;br /&gt;     &lt;br /&gt;&amp;quot;One thing to be careful with the example using Rails. When running Ruby for Windows, when you run &amp;quot;rails server&amp;quot; it's going to spawn a single process that's mono-threaded, meaning that it can only respond to 1 request at a time. If IIS starts receiving too many requests simultaneously and each request is slow, it's going to generate a long queue until they start timing out.      &lt;br /&gt;In Linux we put NGINX to reverse-proxy HTTP requests to Unicorn, or &lt;em&gt;Puma&lt;/em&gt;, or Rainbows, or Passenger. They all coordinate multiple Ruby processes (which in Unix, is very cheap as each process reuses memory from it's parent process upon forking - copy-on-write memory). So we can handle simultaneous requests.&amp;quot;&lt;/p&gt;   &lt;p&gt;You'd want to use JRuby and Tomcat with Puma under IIS for production on Windows. &lt;/p&gt;   &lt;p&gt;&lt;strong&gt;KEEP SCROLLING FOR EXAMPLES USING JRuby, Trinidad/Tomcat, and Puma! They are farther down the page.&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Also, on slower machines when running in development, you might need to up your startupTimeLimit if you are seeing IIS stop your Ruby processes that take to long to startup.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;br /&gt;&amp;lt;configuration&amp;gt;&lt;br /&gt;    &amp;lt;system.webServer&amp;gt;&lt;br /&gt;        &amp;lt;handlers&amp;gt;&lt;br /&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;&lt;br /&gt;        &amp;lt;/handlers&amp;gt;&lt;br /&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;true&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;c:\RailsInstaller\Ruby2.1.0\bin\ruby.exe&amp;quot; &lt;br /&gt;                  arguments=&amp;quot;&amp;amp;quot;C:\RailsInstaller\Ruby2.1.0\bin\rails&amp;amp;quot; server -p %HTTP_PLATFORM_PORT% -b 127.0.0.1&amp;quot;&amp;gt;&lt;br /&gt;            &amp;lt;environmentVariables&amp;gt;&lt;br /&gt;                &amp;lt;environmentVariable name=&amp;quot;foo&amp;quot; value=&amp;quot;bar&amp;quot;/&amp;gt;&lt;br /&gt;            &amp;lt;/environmentVariables&amp;gt;            &lt;br /&gt;        &amp;lt;/httpPlatform&amp;gt;&lt;br /&gt;    &amp;lt;/system.webServer&amp;gt;&lt;br /&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;Here's a screenshot of Ruby within the &lt;a href="https://technet.microsoft.com/en-us/sysinternals/bb896653.aspx"&gt;SysInternals Process Explorer application&lt;/a&gt;. I wanted to show you this so you could see the Process Tree and see who started which process. You can see w3wp (that's IIS) which is a Service, and it's hosting Ruby, running Rails. Make note of the command line arguments as well.&lt;/p&gt; &lt;p&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_752f1718-4874-4244-8f7d-3074129262cd.png" width="717" height="588" /&gt;&lt;/p&gt; &lt;p&gt;And here it is. Ruby on Rails 4 running under IIS8 on my Windows 8 machine.&lt;/p&gt; &lt;p&gt;&lt;img title="Ruby on Rails on IIS on Windows" style="display: inline" alt="Ruby on Rails on IIS on Windows" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_ad93f70b-dcec-4a06-8ae7-5155a807771b.png" width="695" height="396" /&gt;&lt;/p&gt; &lt;p&gt;Big thanks to &lt;a href="https://twitter.com/ranjithtweeets"&gt;Ranjith Ramachandra&lt;/a&gt; (&lt;a href="https://twitter.com/ranjithtweeets"&gt;@ranjithtweets&lt;/a&gt;) and &lt;a href="https://twitter.com/apwestgarth"&gt;Andrew Westgarth&lt;/a&gt; (&lt;a href="https://twitter.com/apwestgarth"&gt;@apwestgarth&lt;/a&gt;) at Microsoft for the help with the web.config values!&lt;/p&gt; &lt;h3&gt;TL;DR&lt;/h3&gt; &lt;p&gt;So, basically, to give you the TL;DR version, except at the end. When you have IIS, install HttpPlatformHandler and add a web.config as appropriate and you're all set. Run what you like, passing in the port that IIS will proxy to.&lt;/p&gt; &lt;h3&gt;&lt;font color="#ff0000"&gt;UPDATE: Puma and Trinidad (with Tomcat) on IIS&lt;/font&gt;&lt;/h3&gt; &lt;p&gt;As pointed out in the comments, it's silly to use WEBrick in Production. Don't'. &lt;/p&gt; &lt;p&gt;I'm told JRuby is the way to go for prod. I was able to install &lt;a href="http://www.jruby.org/download"&gt;JRuby&lt;/a&gt; and both &lt;a href="https://github.com/trinidad/trinidad"&gt;Trinidad&lt;/a&gt; (with Tomcat) and Puma and get my HelloWorld running under IIS in an hour.&lt;/p&gt; &lt;p&gt;Here's Trinidad (&lt;strong&gt;I'm told Trinidad is out of vogue, however&lt;/strong&gt;). I did a &amp;quot;JRuby -S gem install trinidad&amp;quot; and was on my way.&lt;/p&gt; &lt;p&gt;Note the JAVA_HOME environment variable setting. I also had to update some security policy files due to a &amp;quot;Illegal key size&amp;quot; error which was a Javaism. Otherwise, it just worked once the paths lined up. If you see problem, it'll be path related or you'll be loading the wrong Java version. Also, experiment but you don't really need to mess with processesPerApplications. If you create a lot of individual processes, Java can take up a lot of memory (300megs or so) per process and you can thrash your system.y &lt;/p&gt; &lt;p&gt;You'll get 10x the perf when running under production, so note I'm explicitly running in the prod environment.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;br /&gt;&amp;lt;configuration&amp;gt;&lt;br /&gt;    &amp;lt;system.webServer&amp;gt;&lt;br /&gt;        &amp;lt;handlers&amp;gt;&lt;br /&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;&lt;br /&gt;        &amp;lt;/handlers&amp;gt;&lt;br /&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;false&amp;quot; processesPerApplication=&amp;quot;1&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;C:\jruby-1.7.19\bin\jruby.exe&amp;quot; &lt;br /&gt;                  arguments=&amp;quot;-S trinidad --context /jRubyonRails --env production --dir C:\inetpub\wwwroot\jRubyonRails -p %HTTP_PLATFORM_PORT% &amp;quot;&amp;gt;&lt;br /&gt;            &amp;lt;environmentVariables&amp;gt;&lt;br /&gt;              &amp;lt;environmentVariable name=&amp;quot;JAVA_HOME&amp;quot; value=&amp;quot;C:\Program Files\Java\jre1.8.0_31&amp;quot;/&amp;gt; &lt;br /&gt;            &amp;lt;/environmentVariables&amp;gt;            &lt;br /&gt;        &amp;lt;/httpPlatform&amp;gt;&lt;br /&gt;    &amp;lt;/system.webServer&amp;gt;&lt;br /&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;And it works. I was easily able to get 1600+ req/sec on my laptop with minimal effort. I'm sure I could do better with some tuning and a better machine.&lt;/p&gt; &lt;p&gt;&lt;img title="JRuby on Rails using Trinidad behind IIS8 with the HttpPlatformHandler" style="display: inline" alt="JRuby on Rails using Trinidad behind IIS8 with the HttpPlatformHandler" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_4a4dc841-3e92-449f-ac5a-ee2d8e409fc3.png" width="625" height="238" /&gt;&lt;/p&gt; &lt;p&gt;OK, let's swap out &lt;a href="https://github.com/trinidad/trinidad"&gt;Trindad/Tomcat&lt;/a&gt; for &lt;a href="http://puma.io/"&gt;Puma&lt;/a&gt;. I put Puma in the Gemfile and did &amp;quot;bundle exec puma&amp;quot; to test. That worked. Now I need to hook it into IIS. I also had to add &lt;code&gt;gem 'jruby-openssl', :require =&amp;gt; false &lt;/code&gt;to&amp;#160; my Gemfile to avoid some weird errors. &lt;/p&gt; &lt;p&gt;Basically it was the same thing, as IIS is the reverse proxy and process manager in this case.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;br /&gt;&amp;lt;configuration&amp;gt;&lt;br /&gt;    &amp;lt;system.webServer&amp;gt;&lt;br /&gt;        &amp;lt;handlers&amp;gt;&lt;br /&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;&lt;br /&gt;        &amp;lt;/handlers&amp;gt;&lt;br /&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;false&amp;quot; processesPerApplication=&amp;quot;1&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;C:\jruby-1.7.19\bin\jruby.exe&amp;quot; &lt;br /&gt;                  arguments=&amp;quot;-S puma --env production --dir C:\inetpub\wwwroot\jRubyonRails -p %HTTP_PLATFORM_PORT% &amp;quot;&amp;gt;&lt;br /&gt;            &amp;lt;environmentVariables&amp;gt;&lt;br /&gt;              &amp;lt;environmentVariable name=&amp;quot;JAVA_HOME&amp;quot; value=&amp;quot;C:\Program Files\Java\jre1.8.0_31&amp;quot;/&amp;gt; &lt;br /&gt;            &amp;lt;/environmentVariables&amp;gt;            &lt;br /&gt;        &amp;lt;/httpPlatform&amp;gt;&lt;br /&gt;    &amp;lt;/system.webServer&amp;gt;&lt;br /&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;I'm using just 1 processPerApplication and I'm getting 1500 req/s easily. I don't know anything about Puma or JRuby but I assume it can do better if I knew how to tune it.&lt;/p&gt; &lt;p&gt;&lt;img title="Load testing JRuby on Windows under IIS" style="display: inline" alt="Load testing JRuby on Windows under IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_6c5bfe11-41da-46c7-a1cb-6b2b31d62211.png" width="727" height="298" /&gt;&lt;/p&gt; &lt;p&gt;I tested without IIS against Puma itself and saw essentially the same results. IIS has minimal overhead that I can't measure in this case and you get its process management and other benefits. If you're having issues with perf doing this kind of stuff, it's unlikely it will be IIS.&lt;/p&gt; &lt;p&gt;&lt;img title="JRuby on Rails using Puma with the HttpPlatformHandler" style="display: inline" alt="JRuby on Rails using Puma with the HttpPlatformHandler" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_d74d41e2-86cd-44c0-b174-8f1c9699e6dc.png" width="589" height="250" /&gt;&lt;/p&gt; &lt;p&gt;All in all, the HttpPlatformHandler just maybe the reverse proxy you've always wanted for Windows!&lt;/p&gt; &lt;h3&gt;Related Links&lt;/h3&gt; &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.iis.net/learn/extensions/httpplatformhandler/httpplatformhandler-configuration-reference"&gt;HttpPlatformHandler Configuration Reference&lt;/a&gt; &lt;/li&gt;   &lt;li&gt;&lt;a href="http://forums.iis.net/1173.aspx"&gt;HttpPlatformHandler Forums&lt;/a&gt; &lt;/li&gt;   &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-java-custom-upload/"&gt;Uploading and running a custom Java Website to Azure&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Mon, 09 Feb 2015 09:23:16 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/AnnouncingRunningRubyOnRailsOnIIS8OrAnythingElseReallyWithTheNewHttpPlatformHandler.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=4e230132-6845-4031-b76c-f8cee15974e0</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=4e230132-6845-4031-b76c-f8cee15974e0</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=4e230132-6845-4031-b76c-f8cee15974e0</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=4e230132-6845-4031-b76c-f8cee15974e0</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">16</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=4e230132-6845-4031-b76c-f8cee15974e0</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;For years there's been numerous hacks and ways to get Ruby on Rails to run on IIS. There's also ways to get Java via Tomcat or Jetty, Go, and other languages and environments to run as well. There's ways to get &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/InstallingAndRunningNodejsApplicationsWithinIISOnWindowsAreYouMad.aspx"&gt;Node.JS running on IIS using iisnode&lt;/a&gt; but that's been node-specific. The blog posts you do find say things like &amp;quot;get Rails to run on IIS in 10 steps&amp;quot; and I'm like JUST TEN?!? Why not 13? Others say &amp;quot;You can deploy Rails under IIS, it's just very difficult and there's not a lot of documentation. You'll need a special Fast-CGI implementation...WELCOME TO HELL.&amp;quot; &lt;/p&gt;  &lt;p&gt;No longer.&lt;/p&gt;  &lt;p&gt;Azure Websites has supported node AND &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~channel9.msdn.com/Shows/Azure-Friday/Azure-WebSites-Java-runs-great-in-Azure-"&gt;Java (again, Tomcat or Jetty)&lt;/a&gt; for a while now, in production and it's very nice and it runs under IIS. How? They've now brought that support to Windows running IIS 8+ with the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~azure.microsoft.com/blog/2015/02/04/announcing-the-release-of-the-httpplatformhandler-module-for-iis-8/"&gt;release of the &lt;strong&gt;HttpPlatformHandler&lt;/strong&gt;&lt;/a&gt;. Here's their example on how to &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~azure.microsoft.com/blog/2015/02/04/announcing-the-release-of-the-httpplatformhandler-module-for-iis-8/"&gt;get IIS 8+ running Java, easily&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;Let's see if this works well with Ruby on Rails as well!&lt;/p&gt;  &lt;p&gt;Why is &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.iis.net/learn/extensions/httpplatformhandler/httpplatformhandler-configuration-reference"&gt;HttpPlatformHandler&lt;/a&gt; interesting? Check this from the docs...it means IIS can host anything that runs on Windows now, easily. These things were possible before, but with all kinds of hacks and FastCGI this and that. What's great about HttpPlatformHandler is that it isn't about Rails. It's about any process that's listening on a port. You get all the value of IIS *and* total control of your self-hosting scenario.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;The HttpPlatformHandler is an IIS Module, for IIS 8+, which does the following two things:&lt;/p&gt;    &lt;ol&gt;     &lt;li&gt;Process management of http listeners - &lt;strong&gt;this could be any process that can listen on a port for http requests&lt;/strong&gt;.&amp;#160; For example - Tomcat, Jetty, Node.exe, Ruby etc; &lt;/li&gt;      &lt;li&gt;Proxy requests to the process that it manages. &lt;/li&gt;   &lt;/ol&gt; &lt;/blockquote&gt;  &lt;p&gt;To be clear, you can work with Ruby on Rails on Windows and have it host itself with WEBrick locally, but if you're going to go production on Windows you'll want to have IIS and more likely, jRuby in a Tomcat container, similar to using Nginx on linux. What value does IIS provide in a scenario like this? Static file hosting, Reverse Proxy, complex auth that can span multiple apps, languages and frameworks, it monitors and manages your process looking at memory and CPU, crashes, etc.&lt;/p&gt;  &lt;h3&gt;Running Ruby on Rails on IIS 8 with the HttpPlatformHandler&lt;/h3&gt;  &lt;p&gt;First make sure you have Ruby on Rails. If you do, skip forward. &lt;/p&gt;  &lt;p&gt;I use the &lt;a title="http://railsinstaller.org/en" href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~railsinstaller.org"&gt;http://railsinstaller.org&lt;/a&gt; for Windows and go. You'll get &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~ruby-lang.org/"&gt;Ruby&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~rubyonrails.org/"&gt;Rails&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bundler.io/"&gt;Bundler&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.sqlite.org/"&gt;Sqlite&lt;/a&gt;, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/rails-sqlserver/tiny_tds"&gt;TinyTDS&lt;/a&gt;. Even SQL Server support. Very kind of them. Another good Rails on Windows on is &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~railsftw.bryanbibat.net/"&gt;RailsFTW&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I go to Turn Windows Features On and Off to make sure I have IIS installed as well.&lt;/p&gt;  &lt;p&gt;&lt;img title="Turn on IIS in Windows Features" style="display: inline" alt="Turn on IIS in Windows Features" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_4447fe0f-c6e2-4fc3-912e-ef5bf623b683.png" width="429" height="375" /&gt;&lt;/p&gt;  &lt;p&gt;Then get the &lt;strong&gt;HttpPlatformHandler&lt;/strong&gt;. You can get it with the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.microsoft.com/web/gallery/install.aspx?appid=HttpPlatformHandlerv1_0"&gt;Web Platform Installer&lt;/a&gt;, or just install it from here: &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~download.microsoft.com/download/8/B/1/8B1DDE49-503D-4159-9418-76C4A365B70B/httpPlatformHandler_x86.msi"&gt;x86&lt;/a&gt;/&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~download.microsoft.com/download/0/2/C/02CF3C6A-2ED8-43D3-9779-6376EBB80E8A/httpPlatformHandler_amd64.msi"&gt;x64&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I make a folder for the app I'm going to make. I put it in c:\inetpub\wwwroot\rails but you can move it around if you like.&lt;/p&gt;  &lt;p&gt;&lt;img title="Make sure your Rails app is an application in IIS" style="display: inline" alt="Make sure your Rails app is an application in IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_3b6f0c6b-2a6b-4805-81b2-158c9a26821a.png" width="600" height="433" /&gt;&lt;/p&gt;  &lt;p&gt;I right-click my folder in IIS Manager and &amp;quot;Convert to Application.&amp;quot;&lt;/p&gt;  &lt;p&gt;&lt;img title="My Rails application in IIS" style="display: inline" alt="My Rails application in IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_87027a62-1e44-4876-97bf-e56ae13e717a.png" width="532" height="392" /&gt;&lt;/p&gt;  &lt;p&gt;I run &amp;quot;gem install rails&amp;quot; to make sure I have Rails in the first place. ;) You will if you installed with the &lt;strong&gt;RailsInstaller&lt;/strong&gt;. If you installed with the &lt;strong&gt;RubyInstaller&lt;/strong&gt;, then this will get you Rails.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you have issues with SSL running gem on Windows, you'll need manually to &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://gist.github.com/luislavena/f064211759ee0f806c88#installing-using-update-packages-new"&gt;update gem to 2.2.3 as of the time of this writing&lt;/a&gt;. I'm not sure why this isn't already done by the installer. The symptom I saw was weird errors on 'bundle install' that was fixed by this.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;img title="Installing Rails" style="display: inline" alt="Installing Rails" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_91613c16-5836-4c8c-a55d-895346ee13f4.png" width="600" height="296" /&gt;&lt;/p&gt;  &lt;p&gt;Then, from inside c:\inetpub\wwwroot\rails, I ran &amp;quot;rails new helloworld.&amp;quot; I ended up moving this folder up. I should have just made the app first, then converted the folder to an app in IIS. Order of operations and all that, eh?&lt;/p&gt;  &lt;p&gt;OK, now I'll &amp;quot;rails server&amp;quot; from within c:\inetpub\wwwroot\rails, just to make sure Rails can run under the local WEBrick server. And it does:&lt;/p&gt; &lt;figure&gt;&lt;img title="Rails on Windows" style="display: inline" alt="Rails on Windows" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_2179a721-c9fe-4b6e-bf1c-a2987498c86c.png" width="815" height="688" /&gt;&lt;/figure&gt;   &lt;h3&gt;Now, let's do it under IIS.&lt;/h3&gt;  &lt;p&gt;I need to make sure there's a web.config file in the same root folder as my Rails app. WHAT?!? Web.config is for ASP.NET, right? Well, no. It's config for any IIS application. You'll need this for Go, Java, PHP, Rails, node, ASP.NET, whatever. IIS can host basically anything.&lt;/p&gt;  &lt;p&gt;Lemme add a hello world controller and edit its view. I'll &amp;quot;rails generate controller welcome index&amp;quot; then edit app\views\welcome\index.html.erb for good measure.&lt;/p&gt;  &lt;p&gt;I put my Rails app under http://localhost/rails rather than at the root http://localhost so I did need to tell Rails 4 about the fact it's running in a subdirectory with a change to /config.ru, otherwise my routes wouldn't line up.&lt;/p&gt;  &lt;pre class="brush: ruby; gutter: false; toolbar: false; auto-links: false;"&gt;Rails.application.config.relative_url_root = '/rails' map Rails.application.config.relative_url_root || &amp;quot;/&amp;quot; do   run Rails.application end&lt;/pre&gt; &lt;p&gt;Make special note of the paths below AND the encoded &amp;amp;quot; there in the arguments. That's important, because it's a quoted argument passed into the ruby.exe process that IIS will kick off. Note also the %HTTP_PLATFORM_PORT% environment variable reference. That is passed in by IIS and will be a localhost-bound high port.&lt;/p&gt; &lt;p&gt;I also put in foo and bar for theoretical environment variables you might want your Rails app to know about. For example, I might add:&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;environmentVariable name=&amp;quot;RAILS_ENV&amp;quot; value=&amp;quot;production&amp;quot;/&amp;gt;&lt;/pre&gt; &lt;p&gt;...when it's time. I put in some standard debug logging there with the &amp;quot;stdout&amp;quot; but you can remove that if you don't want the clutter. Make sure your IISR_ users have write access to the folders if you want to see any logs.&lt;/p&gt; &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;WARNING/DISCLAIMER: &lt;/strong&gt;This first example is just showing you what's possible. You DON'T want to go to production with the little built-in Ruby WEBrick web server. As Fabio Akita very kindly points out in the comments, and I'll pull his comment out here:      
&lt;br&gt;     
&lt;br&gt;&amp;quot;One thing to be careful with the example using Rails. When running Ruby for Windows, when you run &amp;quot;rails server&amp;quot; it's going to spawn a single process that's mono-threaded, meaning that it can only respond to 1 request at a time. If IIS starts receiving too many requests simultaneously and each request is slow, it's going to generate a long queue until they start timing out.      
&lt;br&gt;In Linux we put NGINX to reverse-proxy HTTP requests to Unicorn, or &lt;em&gt;Puma&lt;/em&gt;, or Rainbows, or Passenger. They all coordinate multiple Ruby processes (which in Unix, is very cheap as each process reuses memory from it's parent process upon forking - copy-on-write memory). So we can handle simultaneous requests.&amp;quot;&lt;/p&gt;   &lt;p&gt;You'd want to use JRuby and Tomcat with Puma under IIS for production on Windows. &lt;/p&gt;   &lt;p&gt;&lt;strong&gt;KEEP SCROLLING FOR EXAMPLES USING JRuby, Trinidad/Tomcat, and Puma! They are farther down the page.&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Also, on slower machines when running in development, you might need to up your startupTimeLimit if you are seeing IIS stop your Ruby processes that take to long to startup.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&lt;br&gt;&amp;lt;configuration&amp;gt;
&lt;br&gt;    &amp;lt;system.webServer&amp;gt;
&lt;br&gt;        &amp;lt;handlers&amp;gt;
&lt;br&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;
&lt;br&gt;        &amp;lt;/handlers&amp;gt;
&lt;br&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;true&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;c:\RailsInstaller\Ruby2.1.0\bin\ruby.exe&amp;quot; 
&lt;br&gt;                  arguments=&amp;quot;&amp;amp;quot;C:\RailsInstaller\Ruby2.1.0\bin\rails&amp;amp;quot; server -p %HTTP_PLATFORM_PORT% -b 127.0.0.1&amp;quot;&amp;gt;
&lt;br&gt;            &amp;lt;environmentVariables&amp;gt;
&lt;br&gt;                &amp;lt;environmentVariable name=&amp;quot;foo&amp;quot; value=&amp;quot;bar&amp;quot;/&amp;gt;
&lt;br&gt;            &amp;lt;/environmentVariables&amp;gt;            
&lt;br&gt;        &amp;lt;/httpPlatform&amp;gt;
&lt;br&gt;    &amp;lt;/system.webServer&amp;gt;
&lt;br&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;Here's a screenshot of Ruby within the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://technet.microsoft.com/en-us/sysinternals/bb896653.aspx"&gt;SysInternals Process Explorer application&lt;/a&gt;. I wanted to show you this so you could see the Process Tree and see who started which process. You can see w3wp (that's IIS) which is a Service, and it's hosting Ruby, running Rails. Make note of the command line arguments as well.&lt;/p&gt; &lt;p&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_752f1718-4874-4244-8f7d-3074129262cd.png" width="717" height="588" /&gt;&lt;/p&gt; &lt;p&gt;And here it is. Ruby on Rails 4 running under IIS8 on my Windows 8 machine.&lt;/p&gt; &lt;p&gt;&lt;img title="Ruby on Rails on IIS on Windows" style="display: inline" alt="Ruby on Rails on IIS on Windows" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_ad93f70b-dcec-4a06-8ae7-5155a807771b.png" width="695" height="396" /&gt;&lt;/p&gt; &lt;p&gt;Big thanks to &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/ranjithtweeets"&gt;Ranjith Ramachandra&lt;/a&gt; (&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/ranjithtweeets"&gt;@ranjithtweets&lt;/a&gt;) and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/apwestgarth"&gt;Andrew Westgarth&lt;/a&gt; (&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/apwestgarth"&gt;@apwestgarth&lt;/a&gt;) at Microsoft for the help with the web.config values!&lt;/p&gt; &lt;h3&gt;TL;DR&lt;/h3&gt; &lt;p&gt;So, basically, to give you the TL;DR version, except at the end. When you have IIS, install HttpPlatformHandler and add a web.config as appropriate and you're all set. Run what you like, passing in the port that IIS will proxy to.&lt;/p&gt; &lt;h3&gt;&lt;font color="#ff0000"&gt;UPDATE: Puma and Trinidad (with Tomcat) on IIS&lt;/font&gt;&lt;/h3&gt; &lt;p&gt;As pointed out in the comments, it's silly to use WEBrick in Production. Don't'. &lt;/p&gt; &lt;p&gt;I'm told JRuby is the way to go for prod. I was able to install &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.jruby.org/download"&gt;JRuby&lt;/a&gt; and both &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/trinidad/trinidad"&gt;Trinidad&lt;/a&gt; (with Tomcat) and Puma and get my HelloWorld running under IIS in an hour.&lt;/p&gt; &lt;p&gt;Here's Trinidad (&lt;strong&gt;I'm told Trinidad is out of vogue, however&lt;/strong&gt;). I did a &amp;quot;JRuby -S gem install trinidad&amp;quot; and was on my way.&lt;/p&gt; &lt;p&gt;Note the JAVA_HOME environment variable setting. I also had to update some security policy files due to a &amp;quot;Illegal key size&amp;quot; error which was a Javaism. Otherwise, it just worked once the paths lined up. If you see problem, it'll be path related or you'll be loading the wrong Java version. Also, experiment but you don't really need to mess with processesPerApplications. If you create a lot of individual processes, Java can take up a lot of memory (300megs or so) per process and you can thrash your system.y &lt;/p&gt; &lt;p&gt;You'll get 10x the perf when running under production, so note I'm explicitly running in the prod environment.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&lt;br&gt;&amp;lt;configuration&amp;gt;
&lt;br&gt;    &amp;lt;system.webServer&amp;gt;
&lt;br&gt;        &amp;lt;handlers&amp;gt;
&lt;br&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;
&lt;br&gt;        &amp;lt;/handlers&amp;gt;
&lt;br&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;false&amp;quot; processesPerApplication=&amp;quot;1&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;C:\jruby-1.7.19\bin\jruby.exe&amp;quot; 
&lt;br&gt;                  arguments=&amp;quot;-S trinidad --context /jRubyonRails --env production --dir C:\inetpub\wwwroot\jRubyonRails -p %HTTP_PLATFORM_PORT% &amp;quot;&amp;gt;
&lt;br&gt;            &amp;lt;environmentVariables&amp;gt;
&lt;br&gt;              &amp;lt;environmentVariable name=&amp;quot;JAVA_HOME&amp;quot; value=&amp;quot;C:\Program Files\Java\jre1.8.0_31&amp;quot;/&amp;gt; 
&lt;br&gt;            &amp;lt;/environmentVariables&amp;gt;            
&lt;br&gt;        &amp;lt;/httpPlatform&amp;gt;
&lt;br&gt;    &amp;lt;/system.webServer&amp;gt;
&lt;br&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;And it works. I was easily able to get 1600+ req/sec on my laptop with minimal effort. I'm sure I could do better with some tuning and a better machine.&lt;/p&gt; &lt;p&gt;&lt;img title="JRuby on Rails using Trinidad behind IIS8 with the HttpPlatformHandler" style="display: inline" alt="JRuby on Rails using Trinidad behind IIS8 with the HttpPlatformHandler" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_4a4dc841-3e92-449f-ac5a-ee2d8e409fc3.png" width="625" height="238" /&gt;&lt;/p&gt; &lt;p&gt;OK, let's swap out &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/trinidad/trinidad"&gt;Trindad/Tomcat&lt;/a&gt; for &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~puma.io/"&gt;Puma&lt;/a&gt;. I put Puma in the Gemfile and did &amp;quot;bundle exec puma&amp;quot; to test. That worked. Now I need to hook it into IIS. I also had to add &lt;code&gt;gem 'jruby-openssl', :require =&amp;gt; false &lt;/code&gt;to&amp;#160; my Gemfile to avoid some weird errors. &lt;/p&gt; &lt;p&gt;Basically it was the same thing, as IIS is the reverse proxy and process manager in this case.&lt;/p&gt; &lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false;"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&lt;br&gt;&amp;lt;configuration&amp;gt;
&lt;br&gt;    &amp;lt;system.webServer&amp;gt;
&lt;br&gt;        &amp;lt;handlers&amp;gt;
&lt;br&gt;            &amp;lt;add name=&amp;quot;httpplatformhandler&amp;quot; path=&amp;quot;*&amp;quot; verb=&amp;quot;*&amp;quot; modules=&amp;quot;httpPlatformHandler&amp;quot; resourceType=&amp;quot;Unspecified&amp;quot; requireAccess=&amp;quot;Script&amp;quot; /&amp;gt;
&lt;br&gt;        &amp;lt;/handlers&amp;gt;
&lt;br&gt;        &amp;lt;httpPlatform stdoutLogEnabled=&amp;quot;false&amp;quot; processesPerApplication=&amp;quot;1&amp;quot; stdoutLogFile=&amp;quot;rails.log&amp;quot; startupTimeLimit=&amp;quot;20&amp;quot; processPath=&amp;quot;C:\jruby-1.7.19\bin\jruby.exe&amp;quot; 
&lt;br&gt;                  arguments=&amp;quot;-S puma --env production --dir C:\inetpub\wwwroot\jRubyonRails -p %HTTP_PLATFORM_PORT% &amp;quot;&amp;gt;
&lt;br&gt;            &amp;lt;environmentVariables&amp;gt;
&lt;br&gt;              &amp;lt;environmentVariable name=&amp;quot;JAVA_HOME&amp;quot; value=&amp;quot;C:\Program Files\Java\jre1.8.0_31&amp;quot;/&amp;gt; 
&lt;br&gt;            &amp;lt;/environmentVariables&amp;gt;            
&lt;br&gt;        &amp;lt;/httpPlatform&amp;gt;
&lt;br&gt;    &amp;lt;/system.webServer&amp;gt;
&lt;br&gt;&amp;lt;/configuration&amp;gt;&lt;/pre&gt; &lt;p&gt;I'm using just 1 processPerApplication and I'm getting 1500 req/s easily. I don't know anything about Puma or JRuby but I assume it can do better if I knew how to tune it.&lt;/p&gt; &lt;p&gt;&lt;img title="Load testing JRuby on Windows under IIS" style="display: inline" alt="Load testing JRuby on Windows under IIS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_6c5bfe11-41da-46c7-a1cb-6b2b31d62211.png" width="727" height="298" /&gt;&lt;/p&gt; &lt;p&gt;I tested without IIS against Puma itself and saw essentially the same results. IIS has minimal overhead that I can't measure in this case and you get its process management and other benefits. If you're having issues with perf doing this kind of stuff, it's unlikely it will be IIS.&lt;/p&gt; &lt;p&gt;&lt;img title="JRuby on Rails using Puma with the HttpPlatformHandler" style="display: inline" alt="JRuby on Rails using Puma with the HttpPlatformHandler" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/6c8a6b0ea978_144BE/image_d74d41e2-86cd-44c0-b174-8f1c9699e6dc.png" width="589" height="250" /&gt;&lt;/p&gt; &lt;p&gt;All in all, the HttpPlatformHandler just maybe the reverse proxy you've always wanted for Windows!&lt;/p&gt; &lt;h3&gt;Related Links&lt;/h3&gt; &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.iis.net/learn/extensions/httpplatformhandler/httpplatformhandler-configuration-reference"&gt;HttpPlatformHandler Configuration Reference&lt;/a&gt; &lt;/li&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~forums.iis.net/1173.aspx"&gt;HttpPlatformHandler Forums&lt;/a&gt; &lt;/li&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~azure.microsoft.com/en-us/documentation/articles/web-sites-java-custom-upload/"&gt;Uploading and running a custom Java Website to Azure&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84980526/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84980526/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Scalable-WordPress-on-Azure-Websites</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Scalable-WordPress-on-Azure-Websites</link><category>Azure</category><category>Blogging</category><category>Cloud</category><category>PHP</category><category>Wordpress</category><category>websites</category><title>Scalable WordPress on Azure Websites</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a title="upper banner" href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory talks about Scalable WordPress which can be provisioned from the Azure Marketplace. In the demo, Cory demonstrates a WordPress site which is available in two regions (East and West US) traffic to the sites are distributed by using performance based routing with Traffic Manager. This geographically distributed WordPress site uses a active-active replicated MySQL Instance provided by ClearDB.&lt;/p&gt;&lt;p&gt;At the end of the episode, we cover a new Site Extension available in the Extension gallery which enables&amp;nbsp;&lt;a href="http://wp-cli.org/"&gt;WordPress CLI&lt;/a&gt; in Azure Websites. Learn how you can run the command line tools against your Azure Websites from within Terminal or PowerShell.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/marketplace/partners/wordpress/scalablewordpress/"&gt;Scalable WordPress on the Microsoft Azure Marketplace&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/08/11/10-ways-to-speed-up-your-wordpress-site-on-azure-websites/"&gt;10 ways to speed up your WordPress site on Azure Websites&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/08/20/wordpress-troubleshooting-techniques-on-azure-websites/"&gt;WordPress troubleshooting techniques on Azure Websites&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cleardb.com/pricing/missioncritical.view"&gt;Mission Critical MySQL Database Options from ClearDB&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.siteextensions.net/packages/WPCLIExtension/"&gt;WordPress CLI Site Extension&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://wordpress.org/plugins/windows-azure-storage/"&gt;Azure Storage for WordPress&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://wordpress.org/plugins/persistent-database-connection-updater/"&gt;Persistent Database Connection Updater&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://microsoftazurewebsitescheatsheet.info/#kuduexec"&gt;Installation Instructions for KuduExec&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:e9a9db16047540e997eca4370183a234"&gt;</description><pubDate>Mon, 09 Feb 2015 10:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites.mp4" type="video/mp4" length="23462700" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Scalable-WordPress-on-Azure-Websites</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory talks about Scalable WordPress which can be provisioned from the Azure Marketplace. In the demo, Cory demonstrates a WordPress site which is available in two regions (East and West US) traffic to the sites are distributed by using performance based routing with Traffic Manager. This geographically distributed WordPress site uses a active-active replicated MySQL Instance provided by ClearDB. At the end of the episode, we cover a new Site Extension available in the Extension gallery which enables WordPress CLI in Azure Websites. Learn how you can run the command line tools against your Azure Websites from within Terminal or PowerShell. Show Links Scalable WordPress on the Microsoft Azure Marketplace10 ways to speed up your WordPress site on Azure WebsitesWordPress troubleshooting techniques on Azure WebsitesMission Critical MySQL Database Options from ClearDBWordPress CLI Site ExtensionAzure Storage for WordPressPersistent Database Connection UpdaterInstallation Instructions for KuduExec</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1045</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites.mp3" expression="full" duration="1045" fileSize="16736495" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites.mp4" expression="full" duration="1045" fileSize="23462700" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites.webm" expression="full" duration="1045" fileSize="57504948" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_high.mp4" expression="full" duration="1045" fileSize="111205142" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9036/7da5f9f3-a48f-47c4-abfe-e23ccf069036/ScalableWordPressOnAzureWebsites_mid.mp4" expression="full" duration="1045" fileSize="71645189" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Yochay Kiriaty</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Yochay Kiriaty</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Scalable-WordPress-on-Azure-Websites/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/x9tgEpNFHjc</guid><link>https://www.youtube.com/watch?v=x9tgEpNFHjc&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Office Touch Apps! Preview Universal Apps for Windows 10 Walkthrough and Demo! 9926</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=x9tgEpNFHjc&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/x9tgEpNFHjc/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=x9tgEpNFHjc&amp;amp;feature=youtube_gdata"&gt;Office Touch Apps! Preview Universal Apps for Windows 10 Walkthrough and Demo! 9926&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Our first look is here. The Office Touch Apps! This is a complete Preview of the new Office Universal Apps for Windows 10 Walkthrough and Demo, including Word, Excel, and PowerPoint! For your laptop or your tablet. Running Windows 10 TP 9926. Looking for the Installation Links? Right here: https://twitter.com/shanselman/status/563092332187492352&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1955&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;37
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;09:13&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 07 Feb 2015 00:33:21 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/x9tgEpNFHjc" /><a10:updated>2015-02-17T12:47:59Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061248</guid><link>http://leastprivilege.com/2015/01/25/identityserver3-1-0-0/</link><title>IdentityServer3 1.0.0</title><description> Dominick Baier announces the big 1.0.0 release of IdentityServer3, running OpenID Connect and OAuth 2, cross-platform support and flexible back-end storage. Congrats!</description><pubDate>Fri, 06 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3205691/dominick-baier.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10591674</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/02/06/debugging-asp-net-5-framework-code-using-visual-studio-2015.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Debugging/">Debugging</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2015/">Visual Studio 2015</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+5/">ASP.NET 5</category><title>Debugging ASP.NET 5 framework code using Visual Studio 2015</title><description>&lt;p&gt;In the previous versions of ASP.NET it was possible to debug certain parts of the framework stack but setting up the development environment and compiling all the binaries was not the easiest task. ASP.NET 5 changes that and makes debugging framework code as easy as debugging your own application. This article shows how to debug into the ASP.NET 5 framework code using &lt;a href="http://www.visualstudio.com/en-us/news/vs2015-vs.aspx"&gt;Visual Studio 2015&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before getting into the How-To part, there is one limitation that you have to understand: you must not mix different versions of the runtime and/or packages. Trying to debug the latest MVC packages using an old runtime might be possible but there is no guarantee that it will work, or trying to use Beta2 and Beta3 packages in the same application can lead to some very strange compilation errors. The recommendation is that if you use a BetaX (X = number) packages, X must be the same for all packages and runtime, while if you using the latest development bits everything must be from the development branches/feed.&lt;/p&gt;
&lt;p&gt;When you create a new ASP.NET 5 application and debug it you will notice that, like in the previous versions, you are not able to step into framework code. If you look at the modules that are loaded, you can see which of them have their symbols loaded and which not. In addition, you can see from where each module was loaded. (To open the Modules window while in a debug session navigate to &lt;code&gt;Debug&lt;/code&gt; -&amp;gt; &lt;code&gt;Windows&lt;/code&gt; -&amp;gt; &lt;code&gt;Modules&lt;/code&gt;).&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/6114.before_5F00_project_5F00_debug.jpg"&gt;&lt;img title="Debugging without sources" src="http://blogs.msdn.com/cfs-

file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/6114.before_5F00_project_5F00_debug.jpg" alt="" width="720" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;How to get the source code for ASP.NET&lt;/h3&gt;
&lt;p&gt;For this blog post, I am going to use MVC as the framework component being debugged. MVC and the rest of the ASP.NET 5 framework components are available in &lt;a href="https://github.com/aspnet"&gt;GitHub&lt;/a&gt;. To get the source code for MVC, you have to clone the &lt;a href="https://github.com/aspnet/mvc"&gt;MVC repository&lt;/a&gt; (downloading it as a zip archive does not suffice because the tags are not included, more on that in the next paragraph).&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;D:\debug&amp;gt;git clone https://github.com/aspnet/mvc
Cloning into 'mvc'...
remote: Counting objects: 24774, done.
remote: Compressing objects: 100% (5542/5542), done.
remote: Total 24774 (delta 18951), reused 24354 (delta 18617)
Receiving objects: 100% (24774/24774), 6.91 MiB | 3.40 MiB/s, done.
Resolving deltas: 100% (18951/18951), done.
Checking connectivity... done.
Checking out files: 100% (2072/2072), done.
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the beginning of the article, I mentioned that you must have matching packages and source code. You can see in Visual Studio that all the packages are from the Beta2 release. When you clone an ASP.NET GitHub repository, it defaults to the &lt;code&gt;dev&lt;/code&gt; branch. That is fine if you are using the latest packages and runtime from thech &lt;a href="https://www.myget.org/gallery/aspnetvnext"&gt;dev feed&lt;/a&gt;, or if you compile everything yourself. Otherwise, you will have to sync to the commit corresponding to those bits. When we have a major release (Beta1, Beta2, etc.) we tag the particular commit that was used to produce the bits. Using the &lt;code&gt;git tag&lt;/code&gt; command, you can see the available tags:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;D:\debug&amp;gt;cd mvc
D:\debug\mvc&amp;gt;git tag
6.0.0-alpha2
6.0.0-alpha3
6.0.0-alpha4
6.0.0-beta1
6.0.0-beta2
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;As the tag name suggests, the Beta2 bits correspond to the &lt;code&gt;6.0.0-beta2&lt;/code&gt; tag. Sync to that tag using the &lt;code&gt;git checkout &amp;lt;tagname&amp;gt;&lt;/code&gt; command:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;D:\debug\mvc&amp;gt;git checkout 6.0.0-beta2
Note: checking out '6.0.0-beta2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2a57f93... Updating Razor to not use K.Roslyn
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now that we have the sources for the packages used by the application, we can configure the application to use them.&lt;/p&gt;
&lt;h3&gt;Using the local source code instead of the official binaries&lt;/h3&gt;
&lt;p&gt;In ASP.NET 5 the unit of deployment is the NuGet package. Also, ASP.NET 5 uses Roslyn under the hood and it is able to compile source code on the fly, without requiring the user to provide binaries compiled a priori.&lt;/p&gt;
&lt;p&gt;When you want to debug into the source of another library, you specify where the source code for the package containing that library is. If the runtime finds a valid project, it will use it instead of the actual package coming from NuGet or &lt;a href="https://www.myget.org/F/aspnetvnext/packages"&gt;MyGet&lt;/a&gt;. An ASP.NET 5 solution, has a &lt;code&gt;global.json&lt;/code&gt; file in the root folder. Inside this file, you can specify where the runtime should look for source code. By default it only looks at the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; folders belonging to the solution.&lt;/p&gt;
&lt;p&gt;To use the MVC code downloaded earlier, you have to add the path to MVC&amp;rsquo;s &lt;code&gt;src&lt;/code&gt; folder in &lt;code&gt;global.json&lt;/code&gt;. That&amp;rsquo;s it, now you can debug MVC! Just run the run the application. Remember to revert the changes to &lt;code&gt;global.json&lt;/code&gt;, especially absolute paths, before checking in to source control.&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/6254.after_5F00_global_5F00_edit_5F00_2.jpg"&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/6254.after_5F00_global_5F00_edit_5F00_2.jpg" alt="" width="720" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The content of the &lt;code&gt;global.json&lt;/code&gt; file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;{
  "sources": [
    "src",
    "test",
    "d:/debug/mvc/src"
  ]
}
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The runtime decides which package to load using a naive algorithm. When a NuGet dependency (a package) is loaded:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If any of the source code locations specified in &lt;code&gt;global.json&lt;/code&gt; contains a folder with the same name as the package (e.g. &lt;code&gt;Microsoft.AspNet.Mvc&lt;/code&gt;) and that folder contains a file named &lt;code&gt;project.json&lt;/code&gt;, it will use that folder and the source files inside it.&lt;/li&gt;
&lt;li&gt;Otherwise, the compiled binary from the packages folder is loaded.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After you add the path to MVC&amp;rsquo;s source code, you will see that Visual Studio automatically adds the MVC projects to your solution. Also, if you look at your project&amp;rsquo;s references node, you will notice that &lt;code&gt;Microsoft.AspNet.Mvc&lt;/code&gt; has a different icon and it shows that it was loaded from a different location:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/2273.after_5F00_solution.jpg"&gt;&lt;img title="Edits to global.json" src="http://blogs.msdn.com/cfs-

file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/2273.after_5F00_solution.jpg" alt="" width="720" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you start debugging and look at the loaded modules, you will notice that &lt;code&gt;Microsoft.AspNet.Mvc&lt;/code&gt; is no longer loaded from the &lt;code&gt;packages&lt;/code&gt; folder and that symbols are now available:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/4174.after_5F00_project_5F00_debug.jpg"&gt;&lt;img title="Solution after global.json edits" src="http://blogs.msdn.com/cfs-

file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/4174.after_5F00_project_5F00_debug.jpg" alt="" width="720" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Behind the scene, MVC was compiled from sources when the application started and the resulted binaries were used instead.&lt;/p&gt;
&lt;p&gt;Now, it is time to debug. Add a break point anywhere in the MVC code and it should be hit when the code is executed:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/2867.actual_5F00_debugging.jpg"&gt;&lt;img title="Debugging with new sources" src="http://blogs.msdn.com/cfs-

file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56/2867.actual_5F00_debugging.jpg" alt="" width="720" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are not yet excited about this amazing new feature, let me add a bonus capability. If you change the MVC code in one of the projects added to the solution and restart the application, it will use the modified MVC. Go ahead, try it! If you fix an issue or improve the framework, you can even send a pull request (see &lt;a href="https://github.com/aspnet/Home/blob/master/CONTRIBUTING.md"&gt;the contributing guidelines&lt;/a&gt; for more information).&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;We know that sometimes things don&amp;rsquo;t work as smooth as described here. Below are the most common mistakes that we have seen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;You are using development packages with old bits.&lt;/strong&gt;Look at the project References node and make sure that all packages have the same version if using released bits.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You are using an older/newer runtime.&lt;/strong&gt; Using the &lt;code&gt;kvm&lt;/code&gt; command line tool (installed separately from the &lt;a href="https://github.com/aspnet/home"&gt;Home repository&lt;/a&gt;), you can see which version of the runtime you are using. &lt;code&gt;kvm list&lt;/code&gt; will show which version is currently active (the one marker with &lt;code&gt;*&lt;/code&gt;). You can select a different runtime version than the active one, for a particular project, from the Project Properties page in Visual Studio.
&lt;blockquote&gt;
&lt;pre&gt;D:\debug\mvc&amp;gt;kvm list

Active Version     Runtime Architecture Location                        Alias
------ -------     ------- ------------ --------                        -----
       1.0.0-beta2 CLR     amd64        C:\Users\victorhu\.kre\packages
  *    1.0.0-beta2 CLR     x86          C:\Users\victorhu\.kre\packages default
       1.0.0-beta2 CoreCLR amd64        C:\Users\victorhu\.kre\packages
       1.0.0-beta2 CoreCLR x86          C:\Users\victorhu\.kre\packages
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Global.json is not actually pointing to the correct sources.&lt;/strong&gt; Make sure the path in &lt;code&gt;global.json&lt;/code&gt; is pointing to a cloned repository. Also, notice that it is easiest to use forward slashes (&lt;code&gt;/&lt;/code&gt;) because they work on all platforms. If you use backslashes (&lt;code&gt;\&lt;/code&gt;) you have to instead use double backslashes (&lt;code&gt;\\&lt;/code&gt;) as directory separator, and it will work only on Windows.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;We'd love to hear your feedback. For Visual Studio tooling related issues, please submit bugs through &lt;a href="https://connect.microsoft.com/visualstudio"&gt;Connect&lt;/a&gt;, send suggestions on &lt;a href="http://visualstudio.uservoice.com/forums/121579-visual-studio"&gt;UserVoice&lt;/a&gt;, and quick thoughts via &lt;a href="http://msdn.microsoft.com/en-us/library/zzszcehe.aspx"&gt;Send-a-Smile&lt;/a&gt; in the Visual Studio IDE. For ASP.NET 5, please provide feedback in &lt;a href="http://github.com/aspnet"&gt;GitHub&lt;/a&gt; or the &lt;a href="http://forums.asp.net/1255.aspx/1?ASP+NET+vNext"&gt;ASP.NET 5 forum&lt;/a&gt;. If you ask a question in Stack Overflow, use the &lt;a href="http://stackoverflow.com/questions/tagged/asp.net-5"&gt;asp.net-5&lt;/a&gt; tag.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10591674" width="1" height="1"&gt;</description><pubDate>Fri, 06 Feb 2015 17:17:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Hurdugaci</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10591674</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2015/02/06/debugging-asp-net-5-framework-code-using-visual-studio-2015.aspx#comments</comments></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</guid><link>http://feeds.hanselman.com/~/84804783/0/scotthanselman~D-Printer-Shootout-Printrbot-vs-uPrint-SE-Plus.aspx</link><category>3D Printing</category><title>3D Printer Shootout - $600 Printrbot vs. $20,000 uPrint SE Plus</title><description>&lt;div&gt;&lt;p&gt;First, let's level set with a disclaimer. I am a smart enough person &lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;but a total beginner at 3D printing&lt;/a&gt;. I've been 3D printing for about two weeks using a &lt;a href="http://www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;&lt;strong&gt;Printrbot Simple Metal from Amazon that I got for US$599&lt;/strong&gt;&lt;/a&gt;. Other than Amazon affiliate links (buy from my links and you buy me tacos!) I don't have ANY relationship with Printrbot or anyone in the 3D Printing space. I'm unaffiliated. This &amp;quot;shootout&amp;quot; is an interesting experience. I'm sure I did something wrong, or perhaps my partner in crime on this experiment, &lt;a href="https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon Potter&lt;/a&gt;, missed a step. Who knows? But this is how it went down. &lt;/p&gt;  &lt;p&gt;Brandon saw that I was doing some 3D printing and mentioned they had a &amp;lt;$22,000 3D printer at his work and what did I think about doing a comparison? I had been having trouble printing with success, ruining at least 2 out of 3 prints, but recently got my Printrbot dialed in nicely. '&lt;/p&gt;  &lt;p&gt;Here's my investment so far both in time and money.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;&lt;strong&gt;Printrbot Simple Metal from Amazon that I got for US$599&lt;/strong&gt;&lt;/a&gt;&amp;#160; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/B00LPESRUK/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00LPESRUK&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=VK7VRE6EDJAR2G2N"&gt;Raspberry Pi&lt;/a&gt; and &lt;a href="http://www.amazon.com/gp/product/B00E1GGE40/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00E1GGE40&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=BMMOEAJPI5KP7544"&gt;Raspberry Camera&lt;/a&gt; to watch my prints and do time-lapse videos with &lt;a href="http://octoprint.org/"&gt;Octoprint&lt;/a&gt;. Figure $60. &lt;/li&gt;    &lt;li&gt;A spool of &lt;a href="http://www.amazon.com/gp/product/B00HF4TCBM/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00HF4TCBM&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=WZO5VBPGQPYO4VOY"&gt;RioRand 1.75mm PLA Filament&lt;/a&gt; in Black for $28. &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/B000GSLKIW/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B000GSLKIW&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=OOCF4GO5WP5WHMBG"&gt;Digital Calipers&lt;/a&gt; for measuring stuff. $20. &lt;/li&gt;    &lt;li&gt;And a number of printed parts to improve my 3D printer's performance including:      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://www.thingiverse.com/thing:442063"&gt;Raspberry Pi mount and camera holder&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.thingiverse.com/make:116592"&gt;Printrbot Simple Metal filament spool holder&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.thingiverse.com/thing:426492"&gt;Feet for the Printrbot&lt;/a&gt; (plus little rubber feet-bits) &lt;/li&gt;        &lt;li&gt;&lt;a href="http://printrbot.com/shop/printbed-tape/"&gt;Uline brand blue tape&lt;/a&gt;. Works WAY WAY better than other blue tapes. This made a HUGE difference. $15 &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;So I'm into it for $722 and my time. I did NOT use a Heated Bed for my Printrbot Simple Metal but I am told it's a great upgrade.&lt;/p&gt;  &lt;p&gt;Here's &lt;a href="https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon's company's outlay&lt;/a&gt; in his words:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.stratasys.com/3d-printers/idea-series/uprint-se-plus"&gt;&lt;strong&gt;uPrint SE Pro Printer&lt;/strong&gt;&lt;/a&gt; and Dissolving Bath – about $22,000 &lt;/li&gt;    &lt;li&gt;1 Spool of Model Material (Black) – $205.00 (produces 42 cubic inches of printing) &lt;/li&gt;    &lt;li&gt;1 Spool of Support Material – $200.00 (42 cubic inches worth) &lt;/li&gt;    &lt;li&gt;Box of Build Plates – $125.00 for 24 (you need one for each print, so it costs about $5.20/each) &lt;/li&gt;    &lt;li&gt;Soluble Concentrate – $149.00 for 12 bottles (dissolves support material, aka fancy drain-O) &lt;/li&gt;    &lt;li&gt;Warranty Support – $2,000/year – because it does break from time to time. &lt;/li&gt;    &lt;li&gt;Brandon says - Add a little bit of shipping, and for a mere $25K you’re ready to print your very own coffee cup. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;We decided to print &lt;a href="http://www.thingiverse.com/thing:159884"&gt;a coffee cup&lt;/a&gt;. I don't plan on drinking from it because who knows if the plastic will leech off, but it seemed like an interesting and common object. As a 3D model it has some nice curves, the handle overhang is a small challenge and it's something we can easily compare. &lt;/p&gt;  &lt;p&gt;I printed one on my Printrbot and Brandon printed one on their Stratasys uPrint SE Pro. Then Brandon mailed me his cup and I'm sitting here holding them both in my hands.&lt;/p&gt;  &lt;p&gt;Here is a timelapse video of my cup printing. &lt;strong&gt;My 0.2mm print took about 7 hours &lt;/strong&gt;and this video is 90 seconds. I used &lt;a href="http://www.octoprint.org"&gt;Octoprint&lt;/a&gt; and the Raspberry Pi to create the video. &lt;/p&gt;  &lt;div class="embed-container"&gt;&lt;iframe height="480" src="https://www.youtube.com/embed/_jOU0s5RPrk" frameborder="0" width="640" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/div&gt;  &lt;p&gt;I downloaded the &lt;a href="http://www.thingiverse.com/thing:159884"&gt;Coffee Cup model from Thingiverse&lt;/a&gt; as an STL 3D model. I ran the STL model through the &lt;a href="https://netfabb.azurewebsites.net"&gt;Microsoft 3D Printing NetFabb online service&lt;/a&gt; to make sure the model was watertight. Then I loaded the result directly into &lt;a href="http://www.repetier.com/"&gt;Repetier&lt;/a&gt; and used &lt;a href="https://ultimaker.com/en/products/software"&gt;Cura&lt;/a&gt; to slice the model into individual instructions for the printer. I made one adjustment to the slicing settings, telling it to make a &amp;quot;support structure&amp;quot; when it sees an overhang over 30 degrees. I was concerned about the cup's handle. Other than that one settings change which resulted in the support being added (which is easily pulled off after the print) it was a &amp;quot;printing as is.&amp;quot; Brandon's model also used a support structure to print the cup and keep the handle stable so we decided this was pretty typical. He also printed on his pro printer with no changes.&lt;/p&gt;  &lt;p&gt;&lt;img title="My 3D model with support" style="display: inline" alt="My 3D model with support" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/image_ecd56912-c96a-4d1b-98b8-1bb06acb6a34.png" width="600" height="488" /&gt;&lt;/p&gt;  &lt;p&gt;Here is a picture of my setup. There's my printer on the right with some stuff I've made and my box of tools/crap on the left. You can see the spool, the printer (the red lipstick looking thing is where the hot plastic comes out), the Raspberry Pi and the tape that I print on. I can print objects up to 6 inches on a side, so a big 6 inch cube. If I paid more money I could get the 10 inch model, but so far for my hobbies I'm happy with that size. I can break things up and assemble them with acetone or bolts if I want to make larger models. One fellow &lt;a href="http://3dprint.com/35429/jonathan-brand-3d-printed-motorcycle/"&gt;3D-printed a whole full-sized motorcycle with a small printer and assembled the parts&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;img title="My 3D Printing setup with Octoprint and a Printrbot Simple Metal" style="display: inline" alt="My 3D Printing setup with Octoprint and a Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2008%2030%20PM_bc6a3d0b-fc6e-41c1-92b4-495deed7833e.jpg" width="600" height="600" /&gt;&lt;/p&gt;  &lt;p&gt;Here is Brandon's printer. Again, $600 vs. $25000. &lt;/p&gt;  &lt;p&gt;&lt;img title="Stratasys" style="display: inline" alt="Stratasys" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/uprint_se_plus_solo_4dcbdca1-6e28-4c3a-b15f-600dd6f7b0b6.jpg" width="493" height="573" /&gt;&lt;/p&gt;  &lt;p&gt;By the way, is this a silly comparison? Perhaps. But no more than a &lt;a href="http://gas2.org/2015/01/19/warm-lap-tesla-p85d-demolishes-challenger-hellcat/"&gt;Tesla vs. a Challenger Hellcat&lt;/a&gt;. Actually, I think my printer is a Geo Metro. But I get great mileage!&lt;/p&gt;  &lt;p&gt;Ok, here's the prints. Feel free to click to zoom in to make your decision. Which cup came from which printer?&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2051%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2051%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2014%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2014%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2001%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2001%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2040%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2040%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's slightly larger pics. Note I am not/have not moved the cups side to side. Left/right is consistent for this photo series.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2050%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2050%20PM_thumb.jpg" width="600" height="342" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2030%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2030%20PM_thumb.jpg" width="600" height="315" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Which is which? &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The $599 Printrbot Simple Model printing at 0.2mm is on the left. The $20k uPrint SE Plus printing at 0.1mm is on the right. &lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;The uPrint's base was messed up somehow. A bad start perhaps, but unfortunate as it's supposed to just work since Brandon used the one-time-use custom bases that the uPrint comes with. He also used &lt;a href="https://brandonpotter.files.wordpress.com/2015/02/anim_bathout_thumb.gif"&gt;the dissolving bath&lt;/a&gt; to take the white support structure off. You can see some of the white still there, perhaps it wasn't in long enough. My print had supports but I just pulled them off with my hands. Of course, if you have an intricate print with small parts that's not always possible. This is a very simple object, to be clear. It's not interlocking gears or something.&lt;/p&gt;  &lt;p&gt;Here's the uPrint cup. Brandon said it took &lt;strong&gt;8 hours and 22 minutes&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2038%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Stratasys uPrint SE Pro" style="display: inline" alt="Coffee Cup 3D Print from a Stratasys uPrint SE Pro" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2038%20PM_thumb.jpg" width="600" height="600" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's the Printrbot's cup. Note the &amp;quot;Z scar&amp;quot; (an artifact from the printer moving up the Z-Axis) on the print? On my print it ended up by the handle, but on Brandon's it ended up on the side of the cup, marring the print, in my opinion.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2030%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2030%20PM_thumb.jpg" width="600" height="600" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;What's the takeaway? If we assume that I have a totally dialed-in well calibrated super cheap consumer/hobbyist 3D Printer and that Brandon has a $20k professional 3D Printer that's maybe got some calibration issues, they seem very comparable. &lt;/p&gt;  &lt;p&gt;However, in real one-time costs my cup cost me 21.02 meters of filament, costing me perhaps $2 maybe a little more if you count the few pieces of tape. For Brandon and his Pro printer, in direct costs, he used $23.62 in model material, $2.06 in support material, and $5.20 build plate, for a total of $30.88 for this cup.&lt;/p&gt;  &lt;p&gt;Naysayers will say that this isn't a great model to have chosen. Clearly my little &lt;a href="http://www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;Printrbot Simple Metal&lt;/a&gt; can only make things of a certain size, but it's clearly fair to say that it's a surprisingly competent printer when it's calibrated well. Additionally, if I were a 3D modeling shop with a Pro printer, I think I would definitely pick up a few sub-$1000 printers for basic stuff as the big printers may be costing you money. If I was a small business I would really do my homework before buying a pro printer that claims to be problem- and maintenance-free. Go read &lt;a href="https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon Potter's account of his &amp;quot;pro print&amp;quot; and compare notes&lt;/a&gt;!&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This post is intended in no way to talk up Printrbot nor to talk down Stratasys. It's a simple one time anecdote as it happened, using a simple model. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;What do you think, Dear Reader?&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Fri, 06 Feb 2015 00:33:43 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">34</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=a7d0a40b-bf21-4e31-b798-9329a091ec9f</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;First, let's level set with a disclaimer. I am a smart enough person &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;but a total beginner at 3D printing&lt;/a&gt;. I've been 3D printing for about two weeks using a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;&lt;strong&gt;Printrbot Simple Metal from Amazon that I got for US$599&lt;/strong&gt;&lt;/a&gt;. Other than Amazon affiliate links (buy from my links and you buy me tacos!) I don't have ANY relationship with Printrbot or anyone in the 3D Printing space. I'm unaffiliated. This &amp;quot;shootout&amp;quot; is an interesting experience. I'm sure I did something wrong, or perhaps my partner in crime on this experiment, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon Potter&lt;/a&gt;, missed a step. Who knows? But this is how it went down. &lt;/p&gt;  &lt;p&gt;Brandon saw that I was doing some 3D printing and mentioned they had a &amp;lt;$22,000 3D printer at his work and what did I think about doing a comparison? I had been having trouble printing with success, ruining at least 2 out of 3 prints, but recently got my Printrbot dialed in nicely. '&lt;/p&gt;  &lt;p&gt;Here's my investment so far both in time and money.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;&lt;strong&gt;Printrbot Simple Metal from Amazon that I got for US$599&lt;/strong&gt;&lt;/a&gt;&amp;#160; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00LPESRUK/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00LPESRUK&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=VK7VRE6EDJAR2G2N"&gt;Raspberry Pi&lt;/a&gt; and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00E1GGE40/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00E1GGE40&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=BMMOEAJPI5KP7544"&gt;Raspberry Camera&lt;/a&gt; to watch my prints and do time-lapse videos with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~octoprint.org/"&gt;Octoprint&lt;/a&gt;. Figure $60. &lt;/li&gt;    &lt;li&gt;A spool of &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00HF4TCBM/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00HF4TCBM&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=WZO5VBPGQPYO4VOY"&gt;RioRand 1.75mm PLA Filament&lt;/a&gt; in Black for $28. &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B000GSLKIW/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B000GSLKIW&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks&amp;amp;linkId=OOCF4GO5WP5WHMBG"&gt;Digital Calipers&lt;/a&gt; for measuring stuff. $20. &lt;/li&gt;    &lt;li&gt;And a number of printed parts to improve my 3D printer's performance including:      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:442063"&gt;Raspberry Pi mount and camera holder&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/make:116592"&gt;Printrbot Simple Metal filament spool holder&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:426492"&gt;Feet for the Printrbot&lt;/a&gt; (plus little rubber feet-bits) &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~printrbot.com/shop/printbed-tape/"&gt;Uline brand blue tape&lt;/a&gt;. Works WAY WAY better than other blue tapes. This made a HUGE difference. $15 &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;So I'm into it for $722 and my time. I did NOT use a Heated Bed for my Printrbot Simple Metal but I am told it's a great upgrade.&lt;/p&gt;  &lt;p&gt;Here's &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon's company's outlay&lt;/a&gt; in his words:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.stratasys.com/3d-printers/idea-series/uprint-se-plus"&gt;&lt;strong&gt;uPrint SE Pro Printer&lt;/strong&gt;&lt;/a&gt; and Dissolving Bath – about $22,000 &lt;/li&gt;    &lt;li&gt;1 Spool of Model Material (Black) – $205.00 (produces 42 cubic inches of printing) &lt;/li&gt;    &lt;li&gt;1 Spool of Support Material – $200.00 (42 cubic inches worth) &lt;/li&gt;    &lt;li&gt;Box of Build Plates – $125.00 for 24 (you need one for each print, so it costs about $5.20/each) &lt;/li&gt;    &lt;li&gt;Soluble Concentrate – $149.00 for 12 bottles (dissolves support material, aka fancy drain-O) &lt;/li&gt;    &lt;li&gt;Warranty Support – $2,000/year – because it does break from time to time. &lt;/li&gt;    &lt;li&gt;Brandon says - Add a little bit of shipping, and for a mere $25K you’re ready to print your very own coffee cup. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;We decided to print &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:159884"&gt;a coffee cup&lt;/a&gt;. I don't plan on drinking from it because who knows if the plastic will leech off, but it seemed like an interesting and common object. As a 3D model it has some nice curves, the handle overhang is a small challenge and it's something we can easily compare. &lt;/p&gt;  &lt;p&gt;I printed one on my Printrbot and Brandon printed one on their Stratasys uPrint SE Pro. Then Brandon mailed me his cup and I'm sitting here holding them both in my hands.&lt;/p&gt;  &lt;p&gt;Here is a timelapse video of my cup printing. &lt;strong&gt;My 0.2mm print took about 7 hours &lt;/strong&gt;and this video is 90 seconds. I used &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.octoprint.org"&gt;Octoprint&lt;/a&gt; and the Raspberry Pi to create the video. &lt;/p&gt;  &lt;div class="embed-container"&gt;&lt;iframe height="480" src="https://www.youtube.com/embed/_jOU0s5RPrk" frameborder="0" width="640" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/div&gt;  &lt;p&gt;I downloaded the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:159884"&gt;Coffee Cup model from Thingiverse&lt;/a&gt; as an STL 3D model. I ran the STL model through the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://netfabb.azurewebsites.net"&gt;Microsoft 3D Printing NetFabb online service&lt;/a&gt; to make sure the model was watertight. Then I loaded the result directly into &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.repetier.com/"&gt;Repetier&lt;/a&gt; and used &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://ultimaker.com/en/products/software"&gt;Cura&lt;/a&gt; to slice the model into individual instructions for the printer. I made one adjustment to the slicing settings, telling it to make a &amp;quot;support structure&amp;quot; when it sees an overhang over 30 degrees. I was concerned about the cup's handle. Other than that one settings change which resulted in the support being added (which is easily pulled off after the print) it was a &amp;quot;printing as is.&amp;quot; Brandon's model also used a support structure to print the cup and keep the handle stable so we decided this was pretty typical. He also printed on his pro printer with no changes.&lt;/p&gt;  &lt;p&gt;&lt;img title="My 3D model with support" style="display: inline" alt="My 3D model with support" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/image_ecd56912-c96a-4d1b-98b8-1bb06acb6a34.png" width="600" height="488" /&gt;&lt;/p&gt;  &lt;p&gt;Here is a picture of my setup. There's my printer on the right with some stuff I've made and my box of tools/crap on the left. You can see the spool, the printer (the red lipstick looking thing is where the hot plastic comes out), the Raspberry Pi and the tape that I print on. I can print objects up to 6 inches on a side, so a big 6 inch cube. If I paid more money I could get the 10 inch model, but so far for my hobbies I'm happy with that size. I can break things up and assemble them with acetone or bolts if I want to make larger models. One fellow &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~3dprint.com/35429/jonathan-brand-3d-printed-motorcycle/"&gt;3D-printed a whole full-sized motorcycle with a small printer and assembled the parts&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;img title="My 3D Printing setup with Octoprint and a Printrbot Simple Metal" style="display: inline" alt="My 3D Printing setup with Octoprint and a Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2008%2030%20PM_bc6a3d0b-fc6e-41c1-92b4-495deed7833e.jpg" width="600" height="600" /&gt;&lt;/p&gt;  &lt;p&gt;Here is Brandon's printer. Again, $600 vs. $25000. &lt;/p&gt;  &lt;p&gt;&lt;img title="Stratasys" style="display: inline" alt="Stratasys" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/uprint_se_plus_solo_4dcbdca1-6e28-4c3a-b15f-600dd6f7b0b6.jpg" width="493" height="573" /&gt;&lt;/p&gt;  &lt;p&gt;By the way, is this a silly comparison? Perhaps. But no more than a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~gas2.org/2015/01/19/warm-lap-tesla-p85d-demolishes-challenger-hellcat/"&gt;Tesla vs. a Challenger Hellcat&lt;/a&gt;. Actually, I think my printer is a Geo Metro. But I get great mileage!&lt;/p&gt;  &lt;p&gt;Ok, here's the prints. Feel free to click to zoom in to make your decision. Which cup came from which printer?&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2051%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2051%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2014%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2014%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2001%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2001%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2040%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2040%20PM_thumb.jpg" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's slightly larger pics. Note I am not/have not moved the cups side to side. Left/right is consistent for this photo series.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2050%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2050%20PM_thumb.jpg" width="600" height="342" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2030%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal on one side and a Stratasys uPrint SE Pro on the other" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2004%2030%20PM_thumb.jpg" width="600" height="315" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Which is which? &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The $599 Printrbot Simple Model printing at 0.2mm is on the left. The $20k uPrint SE Plus printing at 0.1mm is on the right. &lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;The uPrint's base was messed up somehow. A bad start perhaps, but unfortunate as it's supposed to just work since Brandon used the one-time-use custom bases that the uPrint comes with. He also used &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://brandonpotter.files.wordpress.com/2015/02/anim_bathout_thumb.gif"&gt;the dissolving bath&lt;/a&gt; to take the white support structure off. You can see some of the white still there, perhaps it wasn't in long enough. My print had supports but I just pulled them off with my hands. Of course, if you have an intricate print with small parts that's not always possible. This is a very simple object, to be clear. It's not interlocking gears or something.&lt;/p&gt;  &lt;p&gt;Here's the uPrint cup. Brandon said it took &lt;strong&gt;8 hours and 22 minutes&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2038%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Stratasys uPrint SE Pro" style="display: inline" alt="Coffee Cup 3D Print from a Stratasys uPrint SE Pro" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2038%20PM_thumb.jpg" width="600" height="600" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's the Printrbot's cup. Note the &amp;quot;Z scar&amp;quot; (an artifact from the printer moving up the Z-Axis) on the print? On my print it ended up by the handle, but on Brandon's it ended up on the side of the cup, marring the print, in my opinion.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2030%20PM_3.jpg"&gt;&lt;img title="Coffee Cup 3D Print from a Printrbot Simple Metal" style="display: inline" alt="Coffee Cup 3D Print from a Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8a01754a7e8f_DC36/Photo%20Feb%2005,%203%2005%2030%20PM_thumb.jpg" width="600" height="600" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;What's the takeaway? If we assume that I have a totally dialed-in well calibrated super cheap consumer/hobbyist 3D Printer and that Brandon has a $20k professional 3D Printer that's maybe got some calibration issues, they seem very comparable. &lt;/p&gt;  &lt;p&gt;However, in real one-time costs my cup cost me 21.02 meters of filament, costing me perhaps $2 maybe a little more if you count the few pieces of tape. For Brandon and his Pro printer, in direct costs, he used $23.62 in model material, $2.06 in support material, and $5.20 build plate, for a total of $30.88 for this cup.&lt;/p&gt;  &lt;p&gt;Naysayers will say that this isn't a great model to have chosen. Clearly my little &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;Printrbot Simple Metal&lt;/a&gt; can only make things of a certain size, but it's clearly fair to say that it's a surprisingly competent printer when it's calibrated well. Additionally, if I were a 3D modeling shop with a Pro printer, I think I would definitely pick up a few sub-$1000 printers for basic stuff as the big printers may be costing you money. If I was a small business I would really do my homework before buying a pro printer that claims to be problem- and maintenance-free. Go read &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://brandonpotter.wordpress.com/2015/02/02/3d-printer-shootout-pro-vs-consumer/"&gt;Brandon Potter's account of his &amp;quot;pro print&amp;quot; and compare notes&lt;/a&gt;!&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This post is intended in no way to talk up Printrbot nor to talk down Stratasys. It's a simple one time anecdote as it happened, using a simple model. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;What do you think, Dear Reader?&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84804783/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84804783/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Introduction-to-the-New-Power-BI-with-Amir-Netz</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Introduction-to-the-New-Power-BI-with-Amir-Netz</link><category>Azure</category><category>BI</category><category>Business Intelligence</category><title>Introduction to the New Power BI with Amir Netz</title><description>&lt;p&gt;Scott's brain explodes as Amir Netz introduces him to the new&amp;nbsp;Power BI. Think&amp;nbsp;BI is hard and perhaps Power BI isn't for you? Just watch.&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:9b5bb4e56f414871acf4a4350164775e"&gt;</description><pubDate>Fri, 06 Feb 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI.mp4" type="video/mp4" length="19595681" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Introduction-to-the-New-Power-BI-with-Amir-Netz</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott's brain explodes as Amir Netz introduces him to the new Power BI. Think BI is hard and perhaps Power BI isn't for you? Just watch.  </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">709</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI.mp3" expression="full" duration="709" fileSize="11350240" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI.mp4" expression="full" duration="709" fileSize="19595681" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI.webm" expression="full" duration="709" fileSize="56165793" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_high.mp4" expression="full" duration="709" fileSize="120366682" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/feb5/25e800d3-339a-463f-887c-ce2bf2d6feb5/AzureFridayIntroToPowerBI_mid.mp4" expression="full" duration="709" fileSize="74468864" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Introduction-to-the-New-Power-BI-with-Amir-Netz/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Configuring-your-own-Power-BI-Dashboard-with-Amir-Netz</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Configuring-your-own-Power-BI-Dashboard-with-Amir-Netz</link><category>Azure</category><title>Configuring your own Power BI Dashboard with Amir Netz</title><description>&lt;p&gt;Scott and Amir continue digging into Power BI and the powerful Power BI Dashboard to explore huge amounts of data with an ease and flexibility.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:becd312823f84c208c68a43501660aa2"&gt;</description><pubDate>Fri, 06 Feb 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2.mp4" type="video/mp4" length="21801980" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Configuring-your-own-Power-BI-Dashboard-with-Amir-Netz</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott and Amir continue digging into Power BI and the powerful Power BI Dashboard to explore huge amounts of data with an ease and flexibility. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">773</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2.mp3" expression="full" duration="773" fileSize="12370066" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2.mp4" expression="full" duration="773" fileSize="21801980" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2.webm" expression="full" duration="773" fileSize="65311141" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_high.mp4" expression="full" duration="773" fileSize="143375412" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/f36a/90f42a20-7944-4b7f-aad9-a40afb02f36a/AzureFridayPowerBI2_mid.mp4" expression="full" duration="773" fileSize="87678876" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Configuring-your-own-Power-BI-Dashboard-with-Amir-Netz/RSS</wfw:commentRss></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061247</guid><link>http://lostechies.com/jimmybogard/2015/02/02/automapper-support-for-asp-net-5-0-and-asp-net-core-5-0/</link><title>AutoMapper support for ASP.NET 5 and .NET Core 5</title><description> Jimmy Bogard announces that AutoMapper now runs on ASP.NET 5.</description><pubDate>Thu, 05 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/3267245/jimmy-_bogard.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/_jOU0s5RPrk</guid><link>https://www.youtube.com/watch?v=_jOU0s5RPrk&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Time-lapse of a 3D Print of a Coffee Cup using a Printrbot Simple Metal and Octoprint</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=_jOU0s5RPrk&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/_jOU0s5RPrk/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=_jOU0s5RPrk&amp;amp;feature=youtube_gdata"&gt;Time-lapse of a 3D Print of a Coffee Cup using a Printrbot Simple Metal and Octoprint&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Time-lapse of a 3D Print of a Coffee Cup using a Printrbot Simple Metal and Octoprint. Not too glamorous but darned interesting.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
19384&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;23
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:39&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Thu, 05 Feb 2015 23:58:59 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/_jOU0s5RPrk" /><a10:updated>2015-02-18T12:31:20Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061207</guid><link>http://typecastexception.com/post/2015/01/11/ASPNET-Web-Api-22-Create-a-Self-Hosted-OWIN-Based-Web-Api-from-Scratch.aspx</link><title>ASP.NET Web Api 2.2: Create a Self-Hosted OWIN-Based Web Api from Scratch</title><description> John Atten describes building out an OWIN-based Web API application from scratch, emphasizing understanding of how Web API fits into the middleware pipeline, and avoiding dependency on IIS or Syste...</description><pubDate>Wed, 04 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3978709/john-atten2.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</guid><link>http://feeds.hanselman.com/~/84728472/0/scotthanselman~The-NET-CoreCLR-is-now-open-source-so-I-ran-the-GitHub-repo-through-Microsoft-Power-BI.aspx</link><category>Azure</category><category>Learning .NET</category><category>Open Source</category><title>The .NET CoreCLR is now open source, so I ran the GitHub repo through Microsoft Power BI</title><description>&lt;div&gt;&lt;p&gt;The hits keep on coming, Dear Reader. Just as we announced &lt;a href="http://www.hanselman.com/blog/AnnouncingNET2015NETasOpenSourceNETonMacandLinuxandVisualStudioCommunity.aspx"&gt;a few months back, .NET Core is open source&lt;/a&gt;. We said it would run on Windows, Mac, and Linux, but then the work of doing it has to actually happen. ;) &lt;/p&gt; &lt;p&gt;Go check out the .NET Framework Blog. Today the .NET team put the Core CLR up on GitHub. It's open source and it's under the MIT License. This includes the &lt;a href="https://github.com/dotnet/coreclr"&gt;Core CLR source&lt;/a&gt;, the new RyuJIT, the .NET GC, native interop and everything you need to &lt;strong&gt;fork, clone, and build your own personal copy of the .NET Core CLR. &lt;/strong&gt;What a cool day, and what an immense amount of work (both technical and legal) to make it happen. Years in the making, but still lots of work to do.&lt;/p&gt; &lt;p&gt;The GitHub repo has 2.6ish MILLION lines of code. They say when it's all said and done.NET Core will be about 5 MILLION lines of open source code.&lt;/p&gt; &lt;p&gt;The .NET Blog did a &lt;a href="http://blogs.msdn.com/b/dotnet/archive/2015/02/03/coreclr-is-now-open-source.aspx"&gt;nice pie chart&lt;/a&gt;, but honestly, I found it to be not enough. It basically was a big grey circle that said "other 2.2M." ;)&lt;/p&gt; &lt;p&gt;I'd like a little more insight, but I don't know if I have the compute power, or the patience, frankly, to analyze this code repository. Or do I?&lt;/p&gt; &lt;p&gt;I decided to import the repository into Microsoft &lt;a href="http://www.powerbi.com"&gt;Power BI&lt;/a&gt; preview. Power BI (BI means "Business Intelligence") is an amazing service that you can use (usually for FREE, depending on your data source) to pull in huge amounts of data and ask questions of that data. Watch for a great video on this at &lt;a href="http://friday.azure.com"&gt;http://friday.azure.com&lt;/a&gt; this week or next. &lt;/p&gt; &lt;p&gt;I logged into &lt;a href="http://powerbi.com"&gt;http://powerbi.com&lt;/a&gt; (It's US only for the preview, sorry) and clicked Get Data. I then selected GitHub as the source of my data and authorized Power BI to talk to GitHub on my behalf. Crazy, AMIRITE?&lt;/p&gt;&lt;figure&gt;&lt;figure&gt;&lt;img title="Screenshot (10)" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="Screenshot (10)" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/Screenshot%20(10)_4fa2af42-7c1e-465a-8d55-8626ee736588.png" width="937" height="559"&gt;  &lt;p&gt;&lt;/figure&gt;After a few minutes of data chewing, I'm officially adding "BI and Big Data Analyst" to my resume and you can't stop me. ;)&lt;/p&gt; &lt;h3&gt;What does Power BI tell me about the .NET Team's "CoreCLR" GitHub repository?&lt;/h3&gt; &lt;p&gt;Here's what Power BI told me.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_f8ce7875-868f-4fa9-a218-30448edb3068.png" width="999" height="629"&gt;&lt;/figure&gt;  &lt;p&gt;Let's dig in. Looks like Stephen Toub has worked on a LOT of this code. He's super brilliant and very nice, BTW.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_2e8f73af-df1a-443a-b565-56ef03b412cb.png" width="1001" height="546"&gt;&lt;/figure&gt;  &lt;p&gt;Editing the query and looking at Dates and Times, it seems the .NET Team commits code at ALL hours. They are really feeling "committable" around 3 to 4 pm, but they'll even put code in at 4 in the morning! &lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_adf5d617-d234-4df9-ab26-44b2060b4e97.png" width="1001" height="741"&gt;&lt;/figure&gt;  &lt;p&gt;Here's a more intense way to look at it.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_e3da8774-28ba-4d9b-9963-aaf0d8e4315b.png" width="1001" height="766"&gt;&lt;/figure&gt;  &lt;p&gt;One of the insanely cool things about Power BI is the ability to ask your data questions &lt;strong&gt;in plain English. &lt;/strong&gt;Given that my SQL abilities have atrophied to "Select * from LittleBobbyTables" this is particularly useful to me.&lt;/p&gt; &lt;p&gt;I asked it "issues that are open sorted by date" and you'll notice that not only did it work, but it showed me what I meant underneath my query.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_b89aae3d-e519-4082-902f-383f30e82560.png" width="940" height="715"&gt;&lt;/figure&gt;  &lt;p&gt;What about issues closed by a certain person?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_5de1a8d7-dfbc-4e23-9e56-35e3037fbc5c.png" width="940" height="715"&gt;&lt;/figure&gt;  &lt;p&gt;I'm running around in this tool just building charts and asking questions of the repo. It's all in HTML5 but it's just like Excel. It's amazing.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_3cad378a-a531-4f36-b541-2893d6d91b41.png" width="1001" height="652"&gt;&lt;/figure&gt;  &lt;p&gt;Open issues from last year?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_14a87760-9f14-41b5-a772-254e95b2c96a.png" width="959" height="658"&gt;&lt;/figure&gt;  &lt;p&gt;Average time to close an issue in hours?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_62eafbda-e049-4e14-8dab-590d64234d3d.png" width="959" height="658"&gt;&lt;/figure&gt;  &lt;p&gt;It's amazing to be running queries like this on something as significant as the now open-sourced .NET Core CLR. I didn't need to be an employee to do it. I didn't need special access, I just did it. I'm enjoying this new Microsoft, and very much digging Power BI. Next I'm going to put my Blood Sugar and Diabetes Data in Power PI and encourage others to do the same. &lt;/p&gt; &lt;p&gt;P.S. Check out the code for the Core CLR Hello World app. When was the last time &lt;a href="https://github.com/dotnet/corefxlab/blob/master/demos/CoreClrConsoleApplications/HelloWorld/HelloWorld.cs"&gt;you saw an ASCII Art Linux Penguin&lt;/a&gt; in Microsoft Source code? ;)&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Wed, 04 Feb 2015 08:44:41 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/TheNETCoreCLRIsNowOpenSourceSoIRanTheGitHubRepoThroughMicrosoftPowerBI.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">33</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=e53eb198-3951-41d9-8f8e-244448d12dd5</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;The hits keep on coming, Dear Reader. Just as we announced &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AnnouncingNET2015NETasOpenSourceNETonMacandLinuxandVisualStudioCommunity.aspx"&gt;a few months back, .NET Core is open source&lt;/a&gt;. We said it would run on Windows, Mac, and Linux, but then the work of doing it has to actually happen. ;) &lt;/p&gt; &lt;p&gt;Go check out the .NET Framework Blog. Today the .NET team put the Core CLR up on GitHub. It's open source and it's under the MIT License. This includes the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/dotnet/coreclr"&gt;Core CLR source&lt;/a&gt;, the new RyuJIT, the .NET GC, native interop and everything you need to &lt;strong&gt;fork, clone, and build your own personal copy of the .NET Core CLR. &lt;/strong&gt;What a cool day, and what an immense amount of work (both technical and legal) to make it happen. Years in the making, but still lots of work to do.&lt;/p&gt; &lt;p&gt;The GitHub repo has 2.6ish MILLION lines of code. They say when it's all said and done.NET Core will be about 5 MILLION lines of open source code.&lt;/p&gt; &lt;p&gt;The .NET Blog did a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/dotnet/archive/2015/02/03/coreclr-is-now-open-source.aspx"&gt;nice pie chart&lt;/a&gt;, but honestly, I found it to be not enough. It basically was a big grey circle that said "other 2.2M." ;)&lt;/p&gt; &lt;p&gt;I'd like a little more insight, but I don't know if I have the compute power, or the patience, frankly, to analyze this code repository. Or do I?&lt;/p&gt; &lt;p&gt;I decided to import the repository into Microsoft &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.powerbi.com"&gt;Power BI&lt;/a&gt; preview. Power BI (BI means "Business Intelligence") is an amazing service that you can use (usually for FREE, depending on your data source) to pull in huge amounts of data and ask questions of that data. Watch for a great video on this at &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~friday.azure.com"&gt;http://friday.azure.com&lt;/a&gt; this week or next. &lt;/p&gt; &lt;p&gt;I logged into &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~powerbi.com"&gt;http://powerbi.com&lt;/a&gt; (It's US only for the preview, sorry) and clicked Get Data. I then selected GitHub as the source of my data and authorized Power BI to talk to GitHub on my behalf. Crazy, AMIRITE?&lt;/p&gt;&lt;figure&gt;&lt;figure&gt;&lt;img title="Screenshot (10)" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="Screenshot (10)" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/Screenshot%20(10)_4fa2af42-7c1e-465a-8d55-8626ee736588.png" width="937" height="559"&gt;  &lt;p&gt;&lt;/figure&gt;After a few minutes of data chewing, I'm officially adding "BI and Big Data Analyst" to my resume and you can't stop me. ;)&lt;/p&gt; &lt;h3&gt;What does Power BI tell me about the .NET Team's "CoreCLR" GitHub repository?&lt;/h3&gt; &lt;p&gt;Here's what Power BI told me.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_f8ce7875-868f-4fa9-a218-30448edb3068.png" width="999" height="629"&gt;&lt;/figure&gt;  &lt;p&gt;Let's dig in. Looks like Stephen Toub has worked on a LOT of this code. He's super brilliant and very nice, BTW.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_2e8f73af-df1a-443a-b565-56ef03b412cb.png" width="1001" height="546"&gt;&lt;/figure&gt;  &lt;p&gt;Editing the query and looking at Dates and Times, it seems the .NET Team commits code at ALL hours. They are really feeling "committable" around 3 to 4 pm, but they'll even put code in at 4 in the morning! &lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_adf5d617-d234-4df9-ab26-44b2060b4e97.png" width="1001" height="741"&gt;&lt;/figure&gt;  &lt;p&gt;Here's a more intense way to look at it.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_e3da8774-28ba-4d9b-9963-aaf0d8e4315b.png" width="1001" height="766"&gt;&lt;/figure&gt;  &lt;p&gt;One of the insanely cool things about Power BI is the ability to ask your data questions &lt;strong&gt;in plain English. &lt;/strong&gt;Given that my SQL abilities have atrophied to "Select * from LittleBobbyTables" this is particularly useful to me.&lt;/p&gt; &lt;p&gt;I asked it "issues that are open sorted by date" and you'll notice that not only did it work, but it showed me what I meant underneath my query.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_b89aae3d-e519-4082-902f-383f30e82560.png" width="940" height="715"&gt;&lt;/figure&gt;  &lt;p&gt;What about issues closed by a certain person?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_5de1a8d7-dfbc-4e23-9e56-35e3037fbc5c.png" width="940" height="715"&gt;&lt;/figure&gt;  &lt;p&gt;I'm running around in this tool just building charts and asking questions of the repo. It's all in HTML5 but it's just like Excel. It's amazing.&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_3cad378a-a531-4f36-b541-2893d6d91b41.png" width="1001" height="652"&gt;&lt;/figure&gt;  &lt;p&gt;Open issues from last year?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_14a87760-9f14-41b5-a772-254e95b2c96a.png" width="959" height="658"&gt;&lt;/figure&gt;  &lt;p&gt;Average time to close an issue in hours?&lt;/p&gt;&lt;figure&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/939a9e234c8e_14FDA/image_62eafbda-e049-4e14-8dab-590d64234d3d.png" width="959" height="658"&gt;&lt;/figure&gt;  &lt;p&gt;It's amazing to be running queries like this on something as significant as the now open-sourced .NET Core CLR. I didn't need to be an employee to do it. I didn't need special access, I just did it. I'm enjoying this new Microsoft, and very much digging Power BI. Next I'm going to put my Blood Sugar and Diabetes Data in Power PI and encourage others to do the same. &lt;/p&gt; &lt;p&gt;P.S. Check out the code for the Core CLR Hello World app. When was the last time &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/dotnet/corefxlab/blob/master/demos/CoreClrConsoleApplications/HelloWorld/HelloWorld.cs"&gt;you saw an ASCII Art Linux Penguin&lt;/a&gt; in Microsoft Source code? ;)&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84728472/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84728472/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/ywbnmxbcQ-k</guid><link>https://www.youtube.com/watch?v=ywbnmxbcQ-k&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Feb 3rd, 2015 - Open Sourcing and Buildling the Core CLR</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=ywbnmxbcQ-k&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/ywbnmxbcQ-k/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=ywbnmxbcQ-k&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Feb 3rd, 2015 - Open Sourcing and Buildling the Core CLR&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2853&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;36
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;32:00&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 04 Feb 2015 01:23:47 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/ywbnmxbcQ-k" /><a10:updated>2015-02-18T21:30:04Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061206</guid><link>http://www.jerriepelser.com/blog/paging-in-aspnet-webapi-introduction</link><title>Paging in ASP.NET Web API: Introduction</title><description> Jerrie Pelser introduces paging in ASP.NET Web API by looking at the methods some of the most popular APIs use to implement paging.</description><pubDate>Tue, 03 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3879973/jerrie-pelser.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061205</guid><link>http://typecastexception.com/post/2015/01/19/ASPNET-Web-Api-Understanding-OWINKatana-AuthenticationAuthorization-Part-I-Concepts.aspx</link><title>ASP.NET Web Api: Understanding OWIN/Katana Authentication/Authorization Part I: Concepts</title><description> John Atten shows how to add basic OWIN authentication (without using ASP.NET Identity) to a Web Api application using the OAuth Resource Owner Flow, emphasizing understanding the interactions betwe...</description><pubDate>Mon, 02 Feb 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/3978709/john-atten2.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</guid><link>http://feeds.hanselman.com/~/84589054/0/scotthanselman~The-new-Raspberry-Pi-will-run-Windows-and-run-Universal-Apps.aspx</link><category>Win10</category><title>The new Raspberry Pi 2 will run Windows 10 and run Universal Apps</title><description>&lt;div&gt;&lt;p&gt;I'm a huge Raspberry Pi fan. I've got three around the house, I use one for a &lt;a href="http://www.hanselman.com/blog/AddingAirPlayToAReceiverWithoutAnAppleTVRaspbmcAndTheRaspberryPi.aspx"&gt;Media Center&lt;/a&gt;, one for &lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printing&lt;/a&gt;, and one for messing about. Now I'm gonna get a BUNCH more as the &lt;a href="http://www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;&lt;strong&gt;Raspberry Pi 2 has been announced&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;and for a $35 computer that fits in your pocket this new version has some amazing things going for it.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Still tiny! Same size as a Raspberry Pi B+. My cases will still work. ;)  &lt;li&gt;HDMI full sized! Ethernet! Camera port!  &lt;li&gt;Still uses Micro USB for power!  &lt;li&gt;BUT now it has...  &lt;ul&gt; &lt;li&gt;A 900 MHz quad-core ARM Broadcom Cortex A7 with a BCM2836 system on a chip adds up to 3x to 6x the performance. Woof.  &lt;li&gt;1 GIG of RAM (shared with GPU)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;a href="http://www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;&lt;img title="Raspberry Pi 2" style="float: right; display: inline" alt="Raspberry Pi 2" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-new-Raspberry-Pi-2-will-run-a-versio_129C2/Pi2ModB1GB_-comp%20(1).jpg" width="475" align="right" height="269"&gt;&lt;/a&gt;I love using my Raspberry Pi as a "Dedicated Device." While it's clearly a general purpose computer, it's so cheap and powerful I'll use it for one thing and have it do that one thing well. Watch for water in my basement and text me if a sensor gets wet. A &lt;a href="http://www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;tiny Minecraft machine for my kids&lt;/a&gt;. A &lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printing Print Server&lt;/a&gt;. A &lt;a href="http://www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;small games emulator&lt;/a&gt;. An &lt;a href="http://www.hanselman.com/blog/AddingAirPlayToAReceiverWithoutAnAppleTVRaspbmcAndTheRaspberryPi.aspx"&gt;open source media player&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;And now it seems I'll be able to &lt;strong&gt;hack on a Raspberry Pi 2 running Windows 10 while I deploy a Universal Windows App! &lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;&lt;a href="http://blogs.windows.com/buildingapps/2015/02/02/windows-10-coming-to-raspberry-pi-2/"&gt;Windows 10 is coming to the Raspberry Pi 2&lt;/a&gt;&lt;/h2&gt; &lt;p&gt;Not only did the &lt;a href="http://www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;Raspberry Pi Foundation&lt;/a&gt; announce the Raspberry Pi 2, but it seems that &lt;em&gt;&lt;strong&gt;Windows 10 will support Raspberry Pi 2&lt;/strong&gt;&lt;/em&gt; and we can get it free for the Maker community through the &lt;a href="http://dev.windows.com/en-us/featured/Windows-Developer-Program-for-IoT"&gt;Windows Developer Program for IoT&lt;/a&gt; coming later this year. Last year Microsoft announced the &lt;a href="https://blogs.windows.com/buildingapps/2014/10/02/iot-developer-program-update-support-for-intel-galileo-gen-2-boards/"&gt;Windows Developer Program for IoT and put Windows on the Intel Galileo board&lt;/a&gt;. Today Windows gets even better for IoT and Maker scenarios by supporting makers on RPi2.  &lt;p&gt;This means you could theoretically have a Surface Pro 3 running a Universal App. Then a Windows Phone also running that same Universal App. And finally a Raspberry Pi 2 (note there's no shell) also running a Universal App. I could make my little Raspberry Pi 2 a dedicated device that runs Windows 10 plus my App. I can write code for it using the same languages, tools and techniques that I already know.&lt;/p&gt;&lt;figure&gt;&lt;/figure&gt;  &lt;p&gt;It's pretty clear that the way to go with Windows 10 from a developer's perspective is &lt;a href="http://dev.windows.com/en-us/develop/building-universal-windows-apps"&gt;Universal Apps&lt;/a&gt;. You get a great development experience, good API coverage, tooling that makes cross-compilation easy, and now you can go from Raspberry Pi 2, to Phones, Tablets, Xboxen, the cloud and beyond. I'm pretty geeked. &lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Mon, 02 Feb 2015 09:01:08 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/TheNewRaspberryPi2WillRunWindows10AndRunUniversalApps.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">41</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=b61006d0-5267-4e1b-834c-eb0e01ec5c28</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;I'm a huge Raspberry Pi fan. I've got three around the house, I use one for a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AddingAirPlayToAReceiverWithoutAnAppleTVRaspbmcAndTheRaspberryPi.aspx"&gt;Media Center&lt;/a&gt;, one for &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printing&lt;/a&gt;, and one for messing about. Now I'm gonna get a BUNCH more as the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;&lt;strong&gt;Raspberry Pi 2 has been announced&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;and for a $35 computer that fits in your pocket this new version has some amazing things going for it.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Still tiny! Same size as a Raspberry Pi B+. My cases will still work. ;)  &lt;li&gt;HDMI full sized! Ethernet! Camera port!  &lt;li&gt;Still uses Micro USB for power!  &lt;li&gt;BUT now it has...  &lt;ul&gt; &lt;li&gt;A 900 MHz quad-core ARM Broadcom Cortex A7 with a BCM2836 system on a chip adds up to 3x to 6x the performance. Woof.  &lt;li&gt;1 GIG of RAM (shared with GPU)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;&lt;img title="Raspberry Pi 2" style="float: right; display: inline" alt="Raspberry Pi 2" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-new-Raspberry-Pi-2-will-run-a-versio_129C2/Pi2ModB1GB_-comp%20(1).jpg" width="475" align="right" height="269"&gt;&lt;/a&gt;I love using my Raspberry Pi as a "Dedicated Device." While it's clearly a general purpose computer, it's so cheap and powerful I'll use it for one thing and have it do that one thing well. Watch for water in my basement and text me if a sensor gets wet. A &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;tiny Minecraft machine for my kids&lt;/a&gt;. A &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printing Print Server&lt;/a&gt;. A &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;small games emulator&lt;/a&gt;. An &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AddingAirPlayToAReceiverWithoutAnAppleTVRaspbmcAndTheRaspberryPi.aspx"&gt;open source media player&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;And now it seems I'll be able to &lt;strong&gt;hack on a Raspberry Pi 2 running Windows 10 while I deploy a Universal Windows App! &lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.windows.com/buildingapps/2015/02/02/windows-10-coming-to-raspberry-pi-2/"&gt;Windows 10 is coming to the Raspberry Pi 2&lt;/a&gt;&lt;/h2&gt; &lt;p&gt;Not only did the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.raspberrypi.org/raspberry-pi-2-on-sale/"&gt;Raspberry Pi Foundation&lt;/a&gt; announce the Raspberry Pi 2, but it seems that &lt;em&gt;&lt;strong&gt;Windows 10 will support Raspberry Pi 2&lt;/strong&gt;&lt;/em&gt; and we can get it free for the Maker community through the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dev.windows.com/en-us/featured/Windows-Developer-Program-for-IoT"&gt;Windows Developer Program for IoT&lt;/a&gt; coming later this year. Last year Microsoft announced the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://blogs.windows.com/buildingapps/2014/10/02/iot-developer-program-update-support-for-intel-galileo-gen-2-boards/"&gt;Windows Developer Program for IoT and put Windows on the Intel Galileo board&lt;/a&gt;. Today Windows gets even better for IoT and Maker scenarios by supporting makers on RPi2.  &lt;p&gt;This means you could theoretically have a Surface Pro 3 running a Universal App. Then a Windows Phone also running that same Universal App. And finally a Raspberry Pi 2 (note there's no shell) also running a Universal App. I could make my little Raspberry Pi 2 a dedicated device that runs Windows 10 plus my App. I can write code for it using the same languages, tools and techniques that I already know.&lt;/p&gt;&lt;figure&gt;&lt;/figure&gt;  &lt;p&gt;It's pretty clear that the way to go with Windows 10 from a developer's perspective is &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dev.windows.com/en-us/develop/building-universal-windows-apps"&gt;Universal Apps&lt;/a&gt;. You get a great development experience, good API coverage, tooling that makes cross-compilation easy, and now you can go from Raspberry Pi 2, to Phones, Tablets, Xboxen, the cloud and beyond. I'm pretty geeked. &lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid – &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1CQMMt6"&gt;Download for free now!&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84589054/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84589054/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</guid><link>http://feeds.hanselman.com/~/84533898/0/scotthanselman~Creating-exact-D-Models-for-D-Printing-with-JavaScript-and-OpenJSCAD.aspx</link><category>3D Printing</category><category>Musings</category><title>Creating exact 3D Models for 3D Printing with JavaScript and OpenJSCAD</title><description>&lt;div&gt;&lt;p&gt;I have this &lt;a href="http://www.thingiverse.com/thing:482821"&gt;3D Printed Spool Holder&lt;/a&gt; on the top of my &lt;a href="http://www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;Printrbot Simple Metal 3D Printerl&lt;/a&gt; that looks like this:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;img title="Printrbot Simple Metal" alt="Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f52d3562b1fa_1466F/IMG_1095.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;It works great and &lt;a href="http://www.amazon.com/gp/product/B00HF4TCBM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B00HF4TCBM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=JVLVDSQK5FMR64KV&amp;amp;psc=1"&gt;fits my RioRand generic PLA Filament&lt;/a&gt; spool exactly. However, I went down to Fry's Electronics to get some filament today and all they had was small Makerbot spools. They were cheap, so I got two. When I got home I noticed that the hole in the spool is HUGE. It totally won't fit my spool holder.&lt;/p&gt;  &lt;p&gt;This brings us to..&lt;/p&gt;  &lt;h3&gt;The Three Rules of 3D Printing&lt;/h3&gt;  &lt;ol&gt;   &lt;li&gt;All problems in 3D Printing can be solved by 3D Printing something &lt;/li&gt;    &lt;li&gt;The only things that 3D Printing people print is stuff to make their 3D printers work better. &lt;/li&gt;    &lt;li&gt;See rules 1 and 2. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;So, I needed an adapter for my &lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printer (which I have nearly a week of experience with, so fear me)&lt;/a&gt; and opened up &lt;a href="http://www.tinkercad.com"&gt;Tinkercad.com to create it&lt;/a&gt;. Someone recommended Tinkercad as a great HTML5 website for doing quick designs.&lt;/p&gt; &lt;figure&gt;&lt;a href="http://www.tinkercad.com"&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_65405c1c-cd25-4335-96dd-b5cc4e4a43a0.png" width="999" height="767" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;I got lost in this app. I couldn't find a way to make two cylinders and simply &lt;em&gt;center them within each other.&lt;/em&gt;&lt;strong&gt;&amp;#160;&lt;/strong&gt;You can nudge them around but can't center them against their own centers. I actually found forum posts going back to 2012 with members of the team saying &amp;quot;yes, we need that feature&amp;quot; but couldn't figure it out. It's a lovely app and my kids enjoy it but I feel like if you want absolute precision this may not be the place. Then I realized that perhaps this 3D Model was more of a math problem than a modeling problem.&lt;/p&gt;  &lt;p&gt;Now I realize I'm biased, and I am a programmer, but with a &lt;a href="http://www.amazon.com/gp/product/B0002JFMIO?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0002JFMIO&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FXXYI42HQGH6YZUV&amp;amp;=industrial&amp;amp;qid=1422775289&amp;amp;sr=1-2&amp;amp;keywords=calipers&amp;amp;pebp=1422775288062&amp;amp;peasin=B0002JFMIO"&gt;small set of digital calipers&lt;/a&gt; and the excellent &lt;a href="https://github.com/Spiritdude/OpenJSCAD.org/wiki/User-Guide"&gt;OpenJSCAD documentation&lt;/a&gt; I was able to create my adapter in just 10 minutes of hacking and just 7 to 12 lines of JavaScript (depending on how you count).&lt;/p&gt;  &lt;pre class="brush: js; gutter: false; toolbar: false; auto-links: false;"&gt;function main() {&lt;br /&gt;   return union(&lt;br /&gt;       difference(&lt;br /&gt;      cylinder({h: 40, r:26, center:true}),&lt;br /&gt;      cylinder({h: 40, r:15.5, center:true})&lt;br /&gt;    ),&lt;br /&gt;    difference(&lt;br /&gt;        cylinder({start: [0,0,0], end: [0,0,24], r1: 52.5, r2: 26, fn: 50}).translate([0,0,-44]),&lt;br /&gt;        cylinder({start: [0,0,0], end: [0,0,24], r1: 32.5, r2: 15.5, fn: 50}).translate([0,0,-44])&lt;br /&gt;    )&lt;br /&gt;   ).translate([0,0,45]);&lt;br /&gt;}&lt;/pre&gt; &lt;p&gt;From here I downloaded my STL (the 3D description of the object)...&lt;/p&gt; &lt;figure&gt;&lt;a href="http://www.openjscad.org"&gt;&lt;img title="OpenJSCAD" style="display: inline" alt="OpenJSCAD" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_bc5624b7-aabc-4ebb-a67d-2a98ac8c95d4.png" width="999" height="767" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;I then ran it through the &lt;a href="https://netfabb.azurewebsites.net"&gt;Microsoft 3D Model Repair Service&lt;/a&gt; (a good idea to make sure all your designs are &lt;a href="http://airwolf3d.com/wiki/manifolded-edges-how-to-check-if-your-model-is-watertight-and-ready-to-3d-print/"&gt;manifold&lt;/a&gt; and watertight). &lt;/p&gt; &lt;figure&gt;&lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;img title="Repetier" style="display: inline" alt="Repetier" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_697db037-bb22-439e-ab7a-1cf71045daa8.png" width="999" height="772" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;Then into &lt;a href="http://www.repetier.com/download/"&gt;Repetier&lt;/a&gt; and sliced into G-Code (instructions to the printer on how to move) and &lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;printed it with OctoPrint on my OctoPi&lt;/a&gt;.&lt;/p&gt; &lt;figure&gt;&lt;a href="https://twitter.com/OctoPrint3D"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_242efbe2-6ca9-4126-8527-23616d555827.png" width="992" height="733" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;I'm clearly not a 3D designer or modeler and I apparently don't have the patience for CAD tools that won't let me type in a direct number. I KNOW this should be 31mm in diameter, don't force me to use a mouse to &amp;quot;eyeball it.&amp;quot; I was thoroughly impressed with the concept and execution of &lt;a href="http://www.openjscad.org/"&gt;OpenJSCAD&lt;/a&gt;. Of course, OpenJSCAD is a JavaScript implementation of &lt;a href="http://www.openscad.org/"&gt;OpenSCAD&lt;/a&gt;, the &amp;quot;Programmers Solid 3D CAD Modeler&amp;quot; so I'll be exploring their software and &lt;a href="http://www.openscad.org/gallery.html"&gt;amazing gallery as well&lt;/a&gt;! If you're creating anything with regularity that's more mechanical and less organic, OpenJSCAD or OpenSCAD is the way to go, clearly.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Amyuni for sponsoring the feed this week! &lt;a href="http://bit.ly/15G69b5"&gt;Amyuni PDF Converter and Creator for .NET&lt;/a&gt; enables you to integrate powerful PDF functionality with just a few lines of code. Generate and process optimized PDFs with industry proven technology. &lt;b&gt;&lt;u&gt;&lt;a href="http://bit.ly/15G69b5"&gt;Switch Now!&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Sun, 01 Feb 2015 07:37:24 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/CreatingExact3DModelsFor3DPrintingWithJavaScriptAndOpenJSCAD.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">16</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=3fd80cc1-c4a2-4b1c-aefe-29a12e25c4a9</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;I have this &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:482821"&gt;3D Printed Spool Holder&lt;/a&gt; on the top of my &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00IYC60IM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393177&amp;amp;creativeASIN=B00IYC60IM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FLU5CFQWMY4HVTX3&amp;amp;qid=1422343037&amp;amp;sr=8-1&amp;amp;keywords=simple+metal&amp;amp;pebp=1422343040508&amp;amp;peasin=B00IYC60IM"&gt;Printrbot Simple Metal 3D Printerl&lt;/a&gt; that looks like this:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;img title="Printrbot Simple Metal" alt="Printrbot Simple Metal" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f52d3562b1fa_1466F/IMG_1095.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;It works great and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00HF4TCBM?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B00HF4TCBM&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=JVLVDSQK5FMR64KV&amp;amp;psc=1"&gt;fits my RioRand generic PLA Filament&lt;/a&gt; spool exactly. However, I went down to Fry's Electronics to get some filament today and all they had was small Makerbot spools. They were cheap, so I got two. When I got home I noticed that the hole in the spool is HUGE. It totally won't fit my spool holder.&lt;/p&gt;  &lt;p&gt;This brings us to..&lt;/p&gt;  &lt;h3&gt;The Three Rules of 3D Printing&lt;/h3&gt;  &lt;ol&gt;   &lt;li&gt;All problems in 3D Printing can be solved by 3D Printing something &lt;/li&gt;    &lt;li&gt;The only things that 3D Printing people print is stuff to make their 3D printers work better. &lt;/li&gt;    &lt;li&gt;See rules 1 and 2. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;So, I needed an adapter for my &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;3D Printer (which I have nearly a week of experience with, so fear me)&lt;/a&gt; and opened up &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tinkercad.com"&gt;Tinkercad.com to create it&lt;/a&gt;. Someone recommended Tinkercad as a great HTML5 website for doing quick designs.&lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tinkercad.com"&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_65405c1c-cd25-4335-96dd-b5cc4e4a43a0.png" width="999" height="767" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;I got lost in this app. I couldn't find a way to make two cylinders and simply &lt;em&gt;center them within each other.&lt;/em&gt;&lt;strong&gt;&amp;#160;&lt;/strong&gt;You can nudge them around but can't center them against their own centers. I actually found forum posts going back to 2012 with members of the team saying &amp;quot;yes, we need that feature&amp;quot; but couldn't figure it out. It's a lovely app and my kids enjoy it but I feel like if you want absolute precision this may not be the place. Then I realized that perhaps this 3D Model was more of a math problem than a modeling problem.&lt;/p&gt;  &lt;p&gt;Now I realize I'm biased, and I am a programmer, but with a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0002JFMIO?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0002JFMIO&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=FXXYI42HQGH6YZUV&amp;amp;=industrial&amp;amp;qid=1422775289&amp;amp;sr=1-2&amp;amp;keywords=calipers&amp;amp;pebp=1422775288062&amp;amp;peasin=B0002JFMIO"&gt;small set of digital calipers&lt;/a&gt; and the excellent &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/Spiritdude/OpenJSCAD.org/wiki/User-Guide"&gt;OpenJSCAD documentation&lt;/a&gt; I was able to create my adapter in just 10 minutes of hacking and just 7 to 12 lines of JavaScript (depending on how you count).&lt;/p&gt;  &lt;pre class="brush: js; gutter: false; toolbar: false; auto-links: false;"&gt;function main() {
&lt;br&gt;   return union(
&lt;br&gt;       difference(
&lt;br&gt;      cylinder({h: 40, r:26, center:true}),
&lt;br&gt;      cylinder({h: 40, r:15.5, center:true})
&lt;br&gt;    ),
&lt;br&gt;    difference(
&lt;br&gt;        cylinder({start: [0,0,0], end: [0,0,24], r1: 52.5, r2: 26, fn: 50}).translate([0,0,-44]),
&lt;br&gt;        cylinder({start: [0,0,0], end: [0,0,24], r1: 32.5, r2: 15.5, fn: 50}).translate([0,0,-44])
&lt;br&gt;    )
&lt;br&gt;   ).translate([0,0,45]);
&lt;br&gt;}&lt;/pre&gt; &lt;p&gt;From here I downloaded my STL (the 3D description of the object)...&lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openjscad.org"&gt;&lt;img title="OpenJSCAD" style="display: inline" alt="OpenJSCAD" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_bc5624b7-aabc-4ebb-a67d-2a98ac8c95d4.png" width="999" height="767" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;I then ran it through the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://netfabb.azurewebsites.net"&gt;Microsoft 3D Model Repair Service&lt;/a&gt; (a good idea to make sure all your designs are &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~airwolf3d.com/wiki/manifolded-edges-how-to-check-if-your-model-is-watertight-and-ready-to-3d-print/"&gt;manifold&lt;/a&gt; and watertight). &lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;img title="Repetier" style="display: inline" alt="Repetier" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_697db037-bb22-439e-ab7a-1cf71045daa8.png" width="999" height="772" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;Then into &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.repetier.com/download/"&gt;Repetier&lt;/a&gt; and sliced into G-Code (instructions to the printer on how to move) and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;printed it with OctoPrint on my OctoPi&lt;/a&gt;.&lt;/p&gt; &lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/OctoPrint3D"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Creating-exact-3D-Models-for-3D-Printing_145A0/image_242efbe2-6ca9-4126-8527-23616d555827.png" width="992" height="733" /&gt;&lt;/a&gt;&lt;/figure&gt;  &lt;p&gt;I'm clearly not a 3D designer or modeler and I apparently don't have the patience for CAD tools that won't let me type in a direct number. I KNOW this should be 31mm in diameter, don't force me to use a mouse to &amp;quot;eyeball it.&amp;quot; I was thoroughly impressed with the concept and execution of &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openjscad.org/"&gt;OpenJSCAD&lt;/a&gt;. Of course, OpenJSCAD is a JavaScript implementation of &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openscad.org/"&gt;OpenSCAD&lt;/a&gt;, the &amp;quot;Programmers Solid 3D CAD Modeler&amp;quot; so I'll be exploring their software and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openscad.org/gallery.html"&gt;amazing gallery as well&lt;/a&gt;! If you're creating anything with regularity that's more mechanical and less organic, OpenJSCAD or OpenSCAD is the way to go, clearly.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Amyuni for sponsoring the feed this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/15G69b5"&gt;Amyuni PDF Converter and Creator for .NET&lt;/a&gt; enables you to integrate powerful PDF functionality with just a few lines of code. Generate and process optimized PDFs with industry proven technology. &lt;b&gt;&lt;u&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/15G69b5"&gt;Switch Now!&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84533898/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84533898/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/2862ZFSerso</guid><link>https://www.youtube.com/watch?v=2862ZFSerso&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to REALLY use Microsoft Office: Word Styles 101</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=2862ZFSerso&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/2862ZFSerso/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=2862ZFSerso&amp;amp;feature=youtube_gdata"&gt;How to REALLY use Microsoft Office: Word Styles 101&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Lots of people think they understand how to use Microsoft Word. Do you? I break down the basics and importance of Styles in Word in this evenly paced How-To video. Check the full playlist!&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2698&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;134
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;13:38&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=26"&gt;Howto &amp;amp; Style&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 31 Jan 2015 09:36:57 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/2862ZFSerso" /><a10:updated>2015-02-16T17:28:29Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061184</guid><link>http://www.strathweb.com/2015/01/migrating-asp-net-web-api-mvc-6-exploring-web-api-compatibility-shim/</link><title>Migrating from ASP.NET Web API to MVC 6 - exploring Web API Compatibility Shim</title><description> Great post by Filip W. on using the Web API compatibility shim to migrate ASP.NET Web API to ASP.NET MVC 6.</description><pubDate>Fri, 30 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i2.asp.net/media/3265883/filip-wojcieszyn.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</guid><link>http://feeds.hanselman.com/~/84407932/0/scotthanselman~Changing-perspectives-on-your-job-Will-you-renew-your-boss-for-another-season.aspx</link><category>Musings</category><title>Changing perspectives on your job - Will you renew your boss for another season?</title><description>&lt;div&gt;&lt;figure&gt;&lt;a href="http://www.flickr.com/photos/pedrovezini/5158715290"&gt;&lt;img title="LEGO Stormtroopers on a Wire" style="display: inline" alt="LEGO Stormtroopers on a Wire" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/b10350dd61c8_F8D9/5158715290_f0605b197a_b_87f2ba48-3471-4c4a-9ec0-dc6340130f82.jpg" width="999" height="478" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;Within a single week two different friends of mine called me to talk about their job satisfaction. One didn't like the project they were working on and felt that when they were pitched the job they were sold one job but ended up doing another. The other friend felt like review time each year was a Musical Chairs-type parade of employees and they were left wondering &amp;quot;Will I be picked again this year? Will I still have a job next year?&amp;quot;&lt;/p&gt;  &lt;p&gt;This is such a challenge to talk about as some of you may be out of a job and looking right now, but some of you may be in a job and thinking some of the same things as my two friends.&lt;/p&gt;  &lt;p&gt;I'm pretty happy with my job. I like my boss and my team. &lt;a href="http://www.hanselman.com/blog/CategoryView.aspx?category=Remote+Work"&gt;Remote work is a challenge&lt;/a&gt; sometimes, but we are &lt;a href="http://www.hanselman.com/blog/AnnouncingNET2015NETasOpenSourceNETonMacandLinuxandVisualStudioCommunity.aspx"&gt;doing some great work&lt;/a&gt;. However, I never assume my job is granted. I never assume &amp;quot;Hey, I'm Scott Hanselman, I refer to myself in the third person and have Google Juice, I can't be replaced or canned.&amp;quot;&lt;/p&gt;  &lt;p&gt;At the same time, however, I DO feel good about my work and I think I DO provide value to my company. Therefore, I've changed my attitude about Annual Reviews. This isn't just the company's chance to review me, it's also my chance to review them. &lt;/p&gt;  &lt;h3&gt;Do I still want to work there?&lt;/h3&gt;  &lt;p&gt;My wife and I have been married 15 years. The joke is &amp;quot;She's decided to renew me for another season,&amp;quot; just like TV ratings. Well, the Annual Review is my time to decide if *I* want to renew *my Employer* for another season. This is a small brain trick, or trivial change in thinking, but changes in thinking are the first step in changing your world view. &lt;/p&gt;  &lt;p&gt;It also reinforces the impermanence of employment (and tech, and life, etc.) and makes it OK to broach the question. Do I still want to work here? And if you DO decide to &amp;quot;renew your boss for another season,&amp;quot; remember you don't have to stay there forever.&amp;#160; One season at a time, while it feeds your spirit. When it stops, you should stop too.&lt;/p&gt;  &lt;p&gt;This helped my two friends, and I wonder if it helps you, too.&lt;/p&gt;  &lt;p&gt;* &lt;a href="http://www.flickr.com/photos/pedrovezini/5158715290"&gt;LEGO Stormtroopers on a Wire by Pedro Vezini, used under Creative Commons&lt;/a&gt;.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Amyuni for sponsoring the feed this week! &lt;a href="http://bit.ly/15G69b5"&gt;Amyuni PDF Converter and Creator for .NET&lt;/a&gt; enables you to integrate powerful PDF functionality with just a few lines of code. Generate and process optimized PDFs with industry proven technology. &lt;b&gt;&lt;u&gt;&lt;a href="http://bit.ly/15G69b5"&gt;Switch Now!&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;

&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Fri, 30 Jan 2015 02:44:14 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/ChangingPerspectivesOnYourJobWillYouRenewYourBossForAnotherSeason.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">32</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=27c6aaa7-7d72-4b46-97a6-3f9f7c0eb41e</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;figure&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.flickr.com/photos/pedrovezini/5158715290"&gt;&lt;img title="LEGO Stormtroopers on a Wire" style="display: inline" alt="LEGO Stormtroopers on a Wire" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/b10350dd61c8_F8D9/5158715290_f0605b197a_b_87f2ba48-3471-4c4a-9ec0-dc6340130f82.jpg" width="999" height="478" /&gt;&lt;/a&gt;&lt;/figure&gt;   &lt;p&gt;Within a single week two different friends of mine called me to talk about their job satisfaction. One didn't like the project they were working on and felt that when they were pitched the job they were sold one job but ended up doing another. The other friend felt like review time each year was a Musical Chairs-type parade of employees and they were left wondering &amp;quot;Will I be picked again this year? Will I still have a job next year?&amp;quot;&lt;/p&gt;  &lt;p&gt;This is such a challenge to talk about as some of you may be out of a job and looking right now, but some of you may be in a job and thinking some of the same things as my two friends.&lt;/p&gt;  &lt;p&gt;I'm pretty happy with my job. I like my boss and my team. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CategoryView.aspx?category=Remote+Work"&gt;Remote work is a challenge&lt;/a&gt; sometimes, but we are &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AnnouncingNET2015NETasOpenSourceNETonMacandLinuxandVisualStudioCommunity.aspx"&gt;doing some great work&lt;/a&gt;. However, I never assume my job is granted. I never assume &amp;quot;Hey, I'm Scott Hanselman, I refer to myself in the third person and have Google Juice, I can't be replaced or canned.&amp;quot;&lt;/p&gt;  &lt;p&gt;At the same time, however, I DO feel good about my work and I think I DO provide value to my company. Therefore, I've changed my attitude about Annual Reviews. This isn't just the company's chance to review me, it's also my chance to review them. &lt;/p&gt;  &lt;h3&gt;Do I still want to work there?&lt;/h3&gt;  &lt;p&gt;My wife and I have been married 15 years. The joke is &amp;quot;She's decided to renew me for another season,&amp;quot; just like TV ratings. Well, the Annual Review is my time to decide if *I* want to renew *my Employer* for another season. This is a small brain trick, or trivial change in thinking, but changes in thinking are the first step in changing your world view. &lt;/p&gt;  &lt;p&gt;It also reinforces the impermanence of employment (and tech, and life, etc.) and makes it OK to broach the question. Do I still want to work here? And if you DO decide to &amp;quot;renew your boss for another season,&amp;quot; remember you don't have to stay there forever.&amp;#160; One season at a time, while it feeds your spirit. When it stops, you should stop too.&lt;/p&gt;  &lt;p&gt;This helped my two friends, and I wonder if it helps you, too.&lt;/p&gt;  &lt;p&gt;* &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.flickr.com/photos/pedrovezini/5158715290"&gt;LEGO Stormtroopers on a Wire by Pedro Vezini, used under Creative Commons&lt;/a&gt;.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Amyuni for sponsoring the feed this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/15G69b5"&gt;Amyuni PDF Converter and Creator for .NET&lt;/a&gt; enables you to integrate powerful PDF functionality with just a few lines of code. Generate and process optimized PDFs with industry proven technology. &lt;b&gt;&lt;u&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/15G69b5"&gt;Switch Now!&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/84407932/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/84407932/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-and-the-Deploy-Button-with-Elliot-Hamai</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-and-the-Deploy-Button-with-Elliot-Hamai</link><category>Azure</category><title>Azure Websites and the "Deploy Button" with Elliot Hamai</title><description>&lt;p&gt;Scott&amp;nbsp;talks to&amp;nbsp;Azure Websites&amp;nbsp;Software Engineer Elliot Hamai about the new Deploy to Azure button. It's magic, truly. You can just put&amp;nbsp;a&amp;nbsp;link on your GitHub repository that points to the Azure Deploy button and&amp;nbsp;Azure will&amp;nbsp;automatically create a websites and deploy the site directly from&amp;nbsp;your Git Repository! This is a great way&amp;nbsp;to enable your users to&amp;nbsp;quickly deploy your open source project directly from your project's&amp;nbsp;repository!&lt;/p&gt;&lt;p&gt;Check out the details at&amp;nbsp;this &lt;a href="http://azure.microsoft.com/blog/2014/11/13/deploy-to-azure-button-for-azure-websites-2/"&gt;Blog Post on&amp;nbsp;the Azure Websites Deploy to Azure Button&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:53cae584bf5449e6aed3a42e00a376cc"&gt;</description><pubDate>Fri, 30 Jan 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton.mp4" type="video/mp4" length="14373001" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-and-the-Deploy-Button-with-Elliot-Hamai</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott talks to Azure Websites Software Engineer Elliot Hamai about the new Deploy to Azure button. It's magic, truly. You can just put a link on your GitHub repository that points to the Azure Deploy button and Azure will automatically create a websites and deploy the site directly from your Git Repository! This is a great way to enable your users to quickly deploy your open source project directly from your project's repository! Check out the details at this Blog Post on the Azure Websites Deploy to Azure Button. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">615</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton.mp3" expression="full" duration="615" fileSize="9844342" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton.mp4" expression="full" duration="615" fileSize="14373001" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton.webm" expression="full" duration="615" fileSize="39583279" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_high.mp4" expression="full" duration="615" fileSize="84908597" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a4c8/af6e7c57-82a7-4c92-8047-c410bb48a4c8/20141216AzureFridayMagicDeployButton_mid.mp4" expression="full" duration="615" fileSize="53036987" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-and-the-Deploy-Button-with-Elliot-Hamai/RSS</wfw:commentRss></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061183</guid><link>http://www.c-sharpcorner.com/UploadFile/raj1979/custom-facebook-twitter-share-functionality-in-Asp-Net/</link><title>Custom Facebook, Twitter Share Functionality in ASP.NET</title><description> Raj Kumar Beniwal demonstrates how to customize how your ASP.NET content is displayed when shared on Facebook and Twitter.</description><pubDate>Thu, 29 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/4483514/raj-kumar-beniwal.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=4271</guid><link>http://www.jeffreyfritz.com/2015/01/portable-power-and-mega-displays/</link><category>Uncategorized</category><title>Portable Power and Mega Displays</title><description>Anyone who has worked in an office with me knows that I crave screen real estate.  Really&amp;#8230; there is no more valuable commodity for a developer.  We need to see code, debuggers, client applications or browsers, database connections, communication applications, source control screens, and that&amp;#8217;s just getting started.  Its a lot to have to juggle [&amp;#8230;]</description><pubDate>Thu, 29 Jan 2015 14:22:11 Z</pubDate><comments>http://www.jeffreyfritz.com/2015/01/portable-power-and-mega-displays/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2015/01/portable-power-and-mega-displays/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Linux-Virtual-Machine-Management-with-Kundana-Palagiri</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Linux-Virtual-Machine-Management-with-Kundana-Palagiri</link><category>Azure</category><category>Virtual Machines</category><title>Linux Virtual Machine Management with Kundana Palagiri</title><description>&lt;p&gt;Scott talks with Senior Program&amp;nbsp;Manager&amp;nbsp;Kundana Palagiri about&amp;nbsp;Linux Virtual Machine Management. She&amp;nbsp;teaches&amp;nbsp;Scott how to&amp;nbsp;have Azure&amp;nbsp;automatically&amp;nbsp;run shell scripts on Azure VMs as they provision without having to manually&amp;nbsp;SSH into each machine. She also covers Chef and Puppet and how Azure supports both&amp;nbsp;now!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:ba5289f770cf4766808ca42e009f4308"&gt;</description><pubDate>Thu, 29 Jan 2015 23:00:36 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement.mp4" type="video/mp4" length="25999056" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Linux-Virtual-Machine-Management-with-Kundana-Palagiri</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott talks with Senior Program Manager Kundana Palagiri about Linux Virtual Machine Management. She teaches Scott how to have Azure automatically run shell scripts on Azure VMs as they provision without having to manually SSH into each machine. She also covers Chef and Puppet and how Azure supports both now! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1039</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement.mp3" expression="full" duration="1039" fileSize="16625744" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement.mp4" expression="full" duration="1039" fileSize="25999056" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement.webm" expression="full" duration="1039" fileSize="75979773" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_high.mp4" expression="full" duration="1039" fileSize="141442589" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9e99/2605a657-ec5f-4221-a71f-aa3f11559e99/20141216AzureFridayVMManagement_mid.mp4" expression="full" duration="1039" fileSize="89825797" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Linux-Virtual-Machine-Management-with-Kundana-Palagiri/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/0rvm_8NkDjc</guid><link>https://www.youtube.com/watch?v=0rvm_8NkDjc&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio Extension Gallery for nightly builds</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=0rvm_8NkDjc&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/0rvm_8NkDjc/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=0rvm_8NkDjc&amp;amp;feature=youtube_gdata"&gt;Visual Studio Extension Gallery for nightly builds&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This is a working prototype of a new extension gallery for Visual Studio extensions&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
103&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;4
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:57&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Thu, 29 Jan 2015 00:04:56 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/0rvm_8NkDjc" /><a10:updated>2015-02-01T13:23:03Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/wfyKN1-bOGs</guid><link>https://www.youtube.com/watch?v=wfyKN1-bOGs&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Web Publish for Visual Studio 2015</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=wfyKN1-bOGs&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/wfyKN1-bOGs/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=wfyKN1-bOGs&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Web Publish for Visual Studio 2015&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;In this session I will give you a preview of the new Web Publish features that we are working on in Visual Studio 2015 for ASP.NET 5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
230&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;2
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:16:01&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Thu, 29 Jan 2015 23:19:40 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/wfyKN1-bOGs" /><a10:updated>2015-01-30T02:10:23Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061182</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/01/14/running-asp-net-5-applications-in-linux-containers-with-docker.aspx</link><title>Running ASP.NET 5 applications in Linux Containers with Docker</title><description> Nice walkthrough by Ahmet Alp Balkan showing how to run ASP.NET 5 on a Docker-ready Linux VM on Azure.</description><pubDate>Wed, 28 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/4454074/ahmet-alp-balkan.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061181</guid><link>http://netitude.bc3tech.net/2015/01/07/create-your-own-hosted-nuget-server-in-azure/</link><title>Create your own hosted NuGet server in Azure</title><description> Brandon H. walks through deploying your own hosted NuGet server (or Chocolatey server, for that matter) to Azure Websites.</description><pubDate>Tue, 27 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i2.asp.net/media/4483502/brandon-h.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/O-qhFXc953U</guid><link>https://www.youtube.com/watch?v=O-qhFXc953U&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to REALLY use Microsoft Office: Word Section Breaks, Portrait and Layout</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=O-qhFXc953U&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/O-qhFXc953U/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=O-qhFXc953U&amp;amp;feature=youtube_gdata"&gt;How to REALLY use Microsoft Office: Word Section Breaks, Portrait and Layout&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;There&amp;#39;s people who know Word, and there&amp;#39;s people who think they know Word. Here&amp;#39;s a slow-paced How-To Series that demystifies Microsoft Word and Office and helps YOU join the folks who understand the power of Word. This one talks about making a document that switches between portrait and landscape.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2189&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;108
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:59&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 27 Jan 2015 20:52:56 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/O-qhFXc953U" /><a10:updated>2015-02-18T14:16:24Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/h1RBfdSe3xg</guid><link>https://www.youtube.com/watch?v=h1RBfdSe3xg&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Jan 27th, 2015</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=h1RBfdSe3xg&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/h1RBfdSe3xg/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=h1RBfdSe3xg&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Jan 27th, 2015&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1852&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;25
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;20:17&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 27 Jan 2015 18:42:26 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/h1RBfdSe3xg" /><a10:updated>2015-02-09T10:17:32Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061180</guid><link>http://chad.tolkien.id.au/asp-net-vnext-ground-up-1-simplest-possible-thing/</link><title>ASP.NET vNext (MVC6) Ground Up #1 - Simplest possible thing</title><description> Chad Tolkien begins a series of posts designed to bring you up to speed on the changes coming to ASP.NET and MVC 6.</description><pubDate>Mon, 26 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/4483526/chad-tolkien.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/M5fMkiniYgI</guid><link>https://www.youtube.com/watch?v=M5fMkiniYgI&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Tour of changes in Windows 10 Technical Preview 9926</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=M5fMkiniYgI&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/M5fMkiniYgI/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=M5fMkiniYgI&amp;amp;feature=youtube_gdata"&gt;Tour of changes in Windows 10 Technical Preview 9926&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This is a Tour of Changes in Windows 10 Technical Preview 9926, also known as Windows 10 TP2.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
11040&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;186
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;14:05&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 26 Jan 2015 08:36:53 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/M5fMkiniYgI" /><a10:updated>2015-02-17T14:44:39Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061158</guid><link>http://blogs.msdn.com/b/webdev/archive/2015/01/16/asp-net-5-in-visual-studio-2015-ctp-5.aspx</link><title>Making It Better: Updates for ASP.NET 5 in Visual Studio 2015 CTP 5</title><description> Jeffrey T. Fritz announces the release of Visual Studio 2015 CTP 5 and ASP.NET 5 Beta 2.</description><pubDate>Fri, 23 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i3.asp.net/media/3843482/jeff-fritz.jpg?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-Easy-Authentication-and-Authorization-with-Chris-Gillum</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-Easy-Authentication-and-Authorization-with-Chris-Gillum</link><category>Azure</category><title>Azure Websites' "Easy Authentication and Authorization" with Chris Gillum</title><description>&lt;p&gt;Scott talks to Azure Websites software engineer Chris Gillum who gets is up to speed on Azure Websites' Easy Authentication and Authorization. This new &amp;quot;one-click&amp;quot; feature can take *any* Azure Website - that means node.js and PHP as well as ASP.NET and Java - and quickly setup authentication and authorization!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:a0b5e324880a4df4a801a426008035dc"&gt;</description><pubDate>Fri, 23 Jan 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication.mp4" type="video/mp4" length="16646104" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-Easy-Authentication-and-Authorization-with-Chris-Gillum</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott talks to Azure Websites software engineer Chris Gillum who gets is up to speed on Azure Websites' Easy Authentication and Authorization. This new &amp;quot;one-click&amp;quot; feature can take *any* Azure Website - that means node.js and PHP as well as ASP.NET and Java - and quickly setup authentication and authorization! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">678</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication.mp3" expression="full" duration="678" fileSize="10854586" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication.mp4" expression="full" duration="678" fileSize="16646104" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication.webm" expression="full" duration="678" fileSize="46034191" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_high.mp4" expression="full" duration="678" fileSize="86007758" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/2ffe/fbda8fca-6845-4ff9-a2de-50fbe8302ffe/AzureFridayChrisGillumEasyAuthentication_mid.mp4" expression="full" duration="678" fileSize="55215495" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-Easy-Authentication-and-Authorization-with-Chris-Gillum/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-CDN-Content-Distribution-Network-Support-with-Yochay-Kiriaty</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-CDN-Content-Distribution-Network-Support-with-Yochay-Kiriaty</link><category>Azure</category><title>Azure Websites CDN (Content Distribution Network) Support with Yochay Kiriaty</title><description>&lt;p&gt;Scott talks to Yochay Kiriaty about the new CDN support for Azure Websites! Before you could manually create a CDN and copy files over from your Azure Website, but this new feature automatically syncs your Azure Websites static files directly to the CDN! This means faster images, JavaScript, and static content for your users!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:9dfa1c430f914e369953a426008c0bf6"&gt;</description><pubDate>Fri, 23 Jan 2015 00:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN.mp4" type="video/mp4" length="13765688" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-CDN-Content-Distribution-Network-Support-with-Yochay-Kiriaty</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott talks to Yochay Kiriaty about the new CDN support for Azure Websites! Before you could manually create a CDN and copy files over from your Azure Website, but this new feature automatically syncs your Azure Websites static files directly to the CDN! This means faster images, JavaScript, and static content for your users! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">479</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN.mp3" expression="full" duration="479" fileSize="7668071" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN.mp4" expression="full" duration="479" fileSize="13765688" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN.webm" expression="full" duration="479" fileSize="40994736" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_high.mp4" expression="full" duration="479" fileSize="109400913" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1e71/4714f973-3636-4a22-a781-f2a23d3c1e71/AzureFridayYochayWebSitesCDN_mid.mp4" expression="full" duration="479" fileSize="64974390" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Websites-CDN-Content-Distribution-Network-Support-with-Yochay-Kiriaty/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/u8CC0sng1FM</guid><link>https://www.youtube.com/watch?v=u8CC0sng1FM&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to REALLY use Microsoft Word: Tabs and Indents</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=u8CC0sng1FM&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/u8CC0sng1FM/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=u8CC0sng1FM&amp;amp;feature=youtube_gdata"&gt;How to REALLY use Microsoft Word: Tabs and Indents&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;There&amp;#39;s people who know Word, and there&amp;#39;s people who think they know Word. Here&amp;#39;s a slow-paced How-To Series that demystifies Microsoft Word and Office and helps YOU join the folks who understand the power of Word.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
14751&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;448
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;18:34&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=26"&gt;Howto &amp;amp; Style&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Fri, 23 Jan 2015 22:46:40 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/u8CC0sng1FM" /><a10:updated>2015-02-18T20:29:16Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061157</guid><link>http://azure.microsoft.com/en-us/documentation/articles/web-sites-dotnet-lob-application-azure-ad/</link><title>Create an ASP.NET MVC Line-of-Business Application in Azure Websites that Authenticates with Azure Active Directory</title><description> Nice article from Cephas Lin showing how to create an ASP.NET MVC line-of-business (LOB) application in Azure Websites using Azure Active Directory (AAD) as the identity provider, then query direct...</description><pubDate>Thu, 22 Jan 2015 00:00:00 Z</pubDate><enclosure url="//i1.asp.net/media/4775168/cephas2.png?cdn_id=2015-02-04-001" type="image/png" /></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/DNn1cbDJtZI</guid><link>https://www.youtube.com/watch?v=DNn1cbDJtZI&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Jan 20, 2015</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=DNn1cbDJtZI&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/DNn1cbDJtZI/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=DNn1cbDJtZI&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Jan 20, 2015&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1643&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;28
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;32:21&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 21 Jan 2015 00:22:10 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/DNn1cbDJtZI" /><a10:updated>2015-02-14T03:51:30Z</a10:updated></item><item><guid isPermaLink="false">http://madskristensen.net/post/new-handy-visual-studio-extensions---part-2</guid><link>http://feedproxy.google.com/~r/netSlave/~3/RdUimbxw2So/new-handy-visual-studio-extensions---part-2</link><title>New handy Visual Studio extensions - part 2</title><description>&lt;p&gt;A few months ago &lt;a href="http://madskristensen.net/post/new-handy-visual-studio-extensions"&gt;I wrote about some small handy extensions&lt;/a&gt; I created for Visual Studio. This is part 2 with even more handy extensions. So here are some of the extensions I’ve worked on since then.&lt;/p&gt;  &lt;h2&gt;Open Command Line&lt;/h2&gt;  &lt;p&gt;Though I’m not a console-person, I do use both PowerShell and the regular command line quite a bit. Mostly I use the command line to run Grunt commands or with other commands that have to do with my Visual Studio projects.&lt;/p&gt;  &lt;p&gt;The problem is that I always have to &lt;strong&gt;cd&lt;/strong&gt; my way to the root of my projects before I start executing any commands. &lt;/p&gt;  &lt;p&gt;&lt;img title="Open Command Line" alt="Open Command Line" src="https://raw.githubusercontent.com/madskristensen/OpenCommandLine/master/screenshots/context-menu.png" /&gt;&lt;/p&gt;  &lt;p&gt;With the Open Command Line extension I can now just hit &lt;strong&gt;Alt+Space&amp;#160; &lt;/strong&gt;to open my console of choice already on the path of my project root. It supports any console including PowerShell, cmd, Bash etc.&lt;/p&gt;  &lt;p&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/4e84e2cf-2d6b-472a-b1e2-b84932511379"&gt;Download Open Command Line on the VS Gallery&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Open from Azure Websites&lt;/h2&gt;  &lt;p&gt;Sometimes when I build websites, I need to download the deployed content and run it locally. That’s a little cumbersome to do manually, so this extension helps make this super easy.&lt;/p&gt;  &lt;p&gt;The extensions adds an &lt;strong&gt;Open from Azure Websites&lt;/strong&gt; button that does it all automatically and opens the remote website as a project in Visual Studio.&lt;/p&gt;  &lt;p&gt;&lt;img title="Open from Azure Websites" alt="Open from Azure Websites" src="https://raw.githubusercontent.com/ligershark/OpenFromPortal/master/img/FileOpen.png" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/60d414b1-4ead-4fde-9359-588aa126cd6c"&gt;Download Open from Azure Website on the VS Gallery&lt;/a&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Visual Studio Auto Updater&lt;/h2&gt;  &lt;p&gt;I love Visual Studio extensions and I use a lot of them every day. However, it can sometimes be annoying to keep them all up-to-date when new versions are released. &lt;/p&gt;  &lt;p&gt;&lt;img title="Visual Studio Auto Updater" style="margin: 0px 3px 0px 0px; border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" border="0" alt="Visual Studio Auto Updater" src="http://madskristensen.net/posts/files/3e1e6ae5-c507-4dd1-87dc-822a59377563.png" width="175" align="right" height="175" /&gt;The Visual Studio Auto Updater will automatically download and install updates to extensions in the background so you don’t ever have to do it manually again. It will only update the extensions that you have approved for auto updating.&lt;/p&gt;  &lt;p&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/14973bbb-8e00-4cab-a8b4-415a38d78615"&gt;Download Visual Studio Auto Updater on the VS Gallery&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;All of these extensions are of course open source and available on either &lt;a href="https://github.com/madskristensen"&gt;my GitHub profile&lt;/a&gt; or on the &lt;a href="https://github.com/ligershark"&gt;LigerShark profile&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 19 Jan 2015 12:22:34 -0800</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/new-handy-visual-studio-extensions---part-2</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Offline-Web-Based-Data-Storage-with-Cloud-Sync-using-Angular-Cloud-Data-Connector-ACDC</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Offline-Web-Based-Data-Storage-with-Cloud-Sync-using-Angular-Cloud-Data-Connector-ACDC</link><category>Cloud</category><category>JavaScript</category><category>Mobile</category><category>Web Development</category><title>Offline Web Based Data Storage with Cloud Sync using Angular Cloud Data Connector (ACDC)</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by&amp;nbsp;&lt;a href="http://blogs.msdn.com/b/eternalcoding/"&gt;David Catuhe&lt;/a&gt; from the Client Developer Experience team. David is talking about his newest framework Angular Cloud Data Connector (AngularCDC) which enables web developers to enable offline support in their web or mobile applications built with HTML and JavaScript which will later sync to a cloud based data store including the following providers:&lt;/p&gt;&lt;p&gt;Stable&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Azure Mobile Services&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Experimental&lt;/p&gt;&lt;ul class="task-list"&gt;&lt;li&gt;Amazon Web Services (DynamoDB)&lt;/li&gt;&lt;li&gt;Facebook (read only)&lt;/li&gt;&lt;li&gt;Twitter (read only)&lt;/li&gt;&lt;li&gt;Ordrin (read only)&lt;/li&gt;&lt;li&gt;Nitrogen (read only)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/MSOpenTech/AngularCloudDataConnector"&gt;Angular Cloud Data Connector on GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://acdc.azurewebsites.net/"&gt;Angular Cloud Data Connector Homepage&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a class="twitter-follow-button" href="http://twitter.com/deltakosh"&gt;Follow David Catuhe on Twitter&lt;/a&gt;&lt;br&gt;&lt;a class="twitter-follow-button" href="http://twitter.com/cfowlerMSFT"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:96c8aafe9cc04ccabbd6a41a017f97da"&gt;</description><pubDate>Fri, 16 Jan 2015 00:42:07 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync.mp4" type="video/mp4" length="44196494" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Offline-Web-Based-Data-Storage-with-Cloud-Sync-using-Angular-Cloud-Data-Connector-ACDC</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by David Catuhe from the Client Developer Experience team. David is talking about his newest framework Angular Cloud Data Connector (AngularCDC) which enables web developers to enable offline support in their web or mobile applications built with HTML and JavaScript which will later sync to a cloud based data store including the following providers: Stable Azure Mobile ServicesExperimental Amazon Web Services (DynamoDB)Facebook (read only)Twitter (read only)Ordrin (read only)Nitrogen (read only)Show Links Angular Cloud Data Connector on GitHubAngular Cloud Data Connector HomepageTypeScriptFollow David Catuhe on TwitterFollow Cory Fowler on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1173</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync.mp3" expression="full" duration="1173" fileSize="18773730" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync.mp4" expression="full" duration="1173" fileSize="44196494" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync.webm" expression="full" duration="1173" fileSize="123375230" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_high.mp4" expression="full" duration="1173" fileSize="285533613" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9106/ca55a64b-1bdd-4887-bf86-7001b9639106/OfflineWebBasedDataStorageWithCloudSync_mid.mp4" expression="full" duration="1173" fileSize="176592889" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Offline-Web-Based-Data-Storage-with-Cloud-Sync-using-Angular-Cloud-Data-Connector-ACDC/RSS</wfw:commentRss></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059994</guid><link>http://www.asp.net/signalr/overview/performance/signalr-connection-density-testing-with-crank</link><title>SignalR Connection Density Testing with Crank</title><description> This article describes how to use the Crank tool to test an application with multiple simulated clients.</description><pubDate>Mon, 12 Jan 2015 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059995</guid><link>http://www.asp.net/signalr/overview/performance/using-signalr-performance-counters-in-an-azure-web-role</link><title>Using SignalR Performance Counters in an Azure Web Role</title><description> This article describes how to install and use SignalR performance counters in an Azure Web Role.</description><pubDate>Mon, 12 Jan 2015 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/2aZTmK-ID2E</guid><link>https://www.youtube.com/watch?v=2aZTmK-ID2E&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Jan 12th, 2015 - Project Status</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=2aZTmK-ID2E&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/2aZTmK-ID2E/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=2aZTmK-ID2E&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Jan 12th, 2015 - Project Status&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4254&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;32
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;20:51&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 12 Jan 2015 18:30:01 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/2aZTmK-ID2E" /><a10:updated>2015-01-26T16:15:38Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Testing-in-Production-with-Jaime-Espinosa</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Testing-in-Production-with-Jaime-Espinosa</link><category>Azure</category><category>Cloud</category><category>Testing</category><category>websites</category><title>Testing in Production with Jaime Espinosa</title><description>&lt;div class="entry-content"&gt;&lt;div id="entry-body"&gt;&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Jaime Espinosa, a PM from the Azure Websites team, to talk about some improvements and road map items around the Testing in Production feature. Testing in Production is a powerful feature which enables you to route production site traffic to another deployment of your application in another site slot.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Enabling-Testing-in-Production-in-Azure-Websites"&gt;Testing in Production in Azure Websites (PowerShell)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:1cbedf26a1e049e79ba0a41a017e231c"&gt;</description><pubDate>Fri, 09 Jan 2015 01:46:07 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa.mp4" type="video/mp4" length="42121422" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Testing-in-Production-with-Jaime-Espinosa</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Jaime Espinosa, a PM from the Azure Websites team, to talk about some improvements and road map items around the Testing in Production feature. Testing in Production is a powerful feature which enables you to route production site traffic to another deployment of your application in another site slot. Show Links Testing in Production in Azure Websites (PowerShell)</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1518</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa.mp3" expression="full" duration="1518" fileSize="24296109" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa.mp4" expression="full" duration="1518" fileSize="42121422" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/de51/4b306e0f-6d3f-4e00-ba65-63fd7957de51/TIPJaimeEspinosa_mid.mp4" expression="full" duration="1518" fileSize="158590020" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Testing-in-Production-with-Jaime-Espinosa/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/nN63HJBVqfQ</guid><link>https://www.youtube.com/watch?v=nN63HJBVqfQ&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET 5 Community Standup - Jan 6th, 2015 - Renaming Command Line Tools?</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=nN63HJBVqfQ&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/nN63HJBVqfQ/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=nN63HJBVqfQ&amp;amp;feature=youtube_gdata"&gt;ASP.NET 5 Community Standup - Jan 6th, 2015 - Renaming Command Line Tools?&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2012&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;31
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;17:40&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 07 Jan 2015 00:07:03 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/nN63HJBVqfQ" /><a10:updated>2015-01-20T19:13:27Z</a10:updated></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,108e59b5-1467-43f0-a178-511195ac05b8.aspx</guid><link>http://sedodream.com/2015/01/03/HowToGetMSBuildLogFilesInMarkdownFormat.aspx</link><category>MSBuild</category><category>psbuild</category><title>How to get MSBuild log files in Markdown format</title><description>&lt;p&gt;
Have you ever wanted to view MSBuild log files in Markdown format? If you are using &lt;a href="https://github.com/ligershark/psbuild"&gt;psbuild&lt;/a&gt; then
you’ll now get this feature for free if you upgrade your install. &lt;a href="https://github.com/ligershark/psbuild"&gt;psbuild&lt;/a&gt; is
a PowerShell wrapper for msbuild.exe. You can learn more about it on the &lt;a href="https://github.com/ligershark/psbuild"&gt;github
page&lt;/a&gt; or my &lt;a href="http://sedodream.com/2014/07/19/IntroducingPSBuildAnImprovedInterfaceForMsbuildexeInPowerShell.aspx"&gt;previous
blog post&lt;/a&gt; on it.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Using psbuild to build a project the basic command will look like the following.
&lt;/p&gt;
&lt;blockquote&gt;&lt;pre class="brush: bash;"&gt;Invoke-MSBuild myprojectorsln.csproj
&lt;/pre&gt;&lt;/blockquote&gt; 
&lt;p&gt;
After that to get the log you’ll invoke
&lt;/p&gt;
&lt;blockquote&gt;&lt;pre class="brush: bash;"&gt;Open-PSBuildLog
&lt;/pre&gt;&lt;/blockquote&gt; 
&lt;p&gt;
Open-PSBuildLog will open the log file from the last build executed by that instance
of psbuild. The Open-PSBuildLog has a single parameter, format, which defines which
log file to return. This parameter takes the following values.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
detailed 
&lt;li&gt;
diagnostic 
&lt;li&gt;
markdown&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Detailed is the default format. So to get your log file in MSBuild format execute.
&lt;/p&gt;
&lt;blockquote&gt;&lt;pre class="brush: bash;"&gt;Open-PSBuild markdown
&lt;/pre&gt;&lt;/blockquote&gt; 
&lt;p&gt;
This will open the .md file in the default editor. Below is a screenshot of a sample
log file.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/Windows-Live-Writer/How-to-view-MSBuild-log-files-in-Markdow_EAF7/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://sedodream.com/content/binary/Windows-Live-Writer/How-to-view-MSBuild-log-files-in-Markdow_EAF7/image_thumb.png" width="1421" height="624"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
If you have any comments reach out to &lt;a href="https://twitter.com/sayedihashimi"&gt;me
on twitter&lt;/a&gt; or &lt;a href="https://github.com/ligershark/psbuild/issues"&gt;open an issue&lt;/a&gt; in
psbuild to discuss further.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Sat, 03 Jan 2015 00:52:55 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=108e59b5-1467-43f0-a178-511195ac05b8</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,108e59b5-1467-43f0-a178-511195ac05b8.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
Have you ever wanted to view MSBuild log files in Markdown format? If you are using <a href="https://github.com/ligershark/psbuild">psbuild</a> then
you’ll now get this feature for free if you upgrade your install. <a href="https://github.com/ligershark/psbuild">psbuild</a> is
a PowerShell wrapper for msbuild.exe. You can learn more about it on the <a href="https://github.com/ligershark/psbuild">github
page</a> or my <a href="http://sedodream.com/2014/07/19/IntroducingPSBuildAnImprovedInterfaceForMsbuildexeInPowerShell.aspx">previous
blog post</a> on it.
</p>
        <p>
 
</p>
        <p>
Using psbuild to build a project the basic command will look like the following.
</p>
        <blockquote>
          <pre class="brush: bash;">Invoke-MSBuild myprojectorsln.csproj
</pre>
        </blockquote>
        <p>
After that to get the log you’ll invoke
</p>
        <blockquote>
          <pre class="brush: bash;">Open-PSBuildLog
</pre>
        </blockquote>
        <p>
Open-PSBuildLog will open the log file from the last build executed by that instance
of psbuild. The Open-PSBuildLog has a single parameter, format, which defines which
log file to return. This parameter takes the following values.
</p>
        <ul>
          <li>
detailed 
</li>
          <li>
diagnostic 
</li>
          <li>
markdown</li>
        </ul>
        <p>
Detailed is the default format. So to get your log file in MSBuild format execute.
</p>
        <blockquote>
          <pre class="brush: bash;">Open-PSBuild markdown
</pre>
        </blockquote>
        <p>
This will open the .md file in the default editor. Below is a screenshot of a sample
log file.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/Windows-Live-Writer/How-to-view-MSBuild-log-files-in-Markdow_EAF7/image_2.png">
            <img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://sedodream.com/content/binary/Windows-Live-Writer/How-to-view-MSBuild-log-files-in-Markdow_EAF7/image_thumb.png" width="1421" height="624"></img>
          </a>
        </p>
        <p>
 
</p>
        <p>
If you have any comments reach out to <a href="https://twitter.com/sayedihashimi">me
on twitter</a> or <a href="https://github.com/ligershark/psbuild/issues">open an issue</a> in
psbuild to discuss further.
</p>
        <p>
 
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/D2Bc6RjY4X0</guid><link>https://www.youtube.com/watch?v=D2Bc6RjY4X0&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>side waffle dynamic templates</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=D2Bc6RjY4X0&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/D2Bc6RjY4X0/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=D2Bc6RjY4X0&amp;amp;feature=youtube_gdata"&gt;side waffle dynamic templates&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Video showing a prototype of a feature that we are looking to add to SideWaffle. Creating Visual Studio templates from a github repository or folder.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
58&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;2
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;06:01&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 29 Dec 2014 01:26:12 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/D2Bc6RjY4X0" /><a10:updated>2014-12-31T13:30:28Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10582464</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/12/22/ef6-1-2-rtm-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF6.1.2 RTM Available</title><description>&lt;p&gt;Today we are pleased to announce the availability of EF6.1.2. This patch release includes a number of high priority bug fixes and some contributions from our community.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in EF6.1.2?&lt;/h2&gt;  &lt;p&gt;EF6.1.2 is mostly about bug fixes, you can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.1.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of the fixes included in EF6.1.2 on our CodePlex site&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;We also accepted a couple of noteworthy changes from members of the community:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Query cache parameters can be configured from the app/web.configuration file&lt;/strong&gt;       &lt;pre&gt;&amp;lt;entityFramework&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;#160; &amp;lt;queryCache size='1000' cleaningIntervalInSeconds='-1'/&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;lt;/entityFramework&amp;gt;&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SqlFile and SqlResource methods on DbMigration&lt;/strong&gt; allow you to run a SQL script stored as a file or embedded resource. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Where do I get EF6.1.2?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest version of Entity Framework runtime.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The tooling &lt;/strong&gt;is available on the Microsoft Download Center. You only need to install the tooling if you want to create models using the EF Designer, or generate a Code First model from an existing database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://download.microsoft.com/download/2/C/F/2CF7AFAB-4068-4DAB-88C6-CEFD770FAECD/EFTools6.1.2ForVS2012.msi"&gt;Download tooling for &lt;strong&gt;Visual Studio 2012&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://download.microsoft.com/download/2/C/F/2CF7AFAB-4068-4DAB-88C6-CEFD770FAECD/EFTools6.1.2ForVS2013.msi"&gt;Download tooling for &lt;strong&gt;Visual Studio 2013&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;

  &lt;li&gt;The tooling will be included in future releases of&lt;strong&gt; Visual Studio 2015&lt;/strong&gt; (currently in preview). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Thank you to our contributors&lt;/h2&gt;

&lt;p&gt;We’d like to say thank you to folks from the community who have contributed to the 6.1.2 release so far: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BrandonDahler &lt;/li&gt;

  &lt;li&gt;ErikEJ &lt;/li&gt;

  &lt;li&gt;Honza Široký &lt;/li&gt;

  &lt;li&gt;martincostello &lt;/li&gt;

  &lt;li&gt;UnaiZorrilla &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;What’s next?&lt;/h2&gt;

&lt;p&gt;In addition to working on the next major version of EF (Entity Framework 7), we’re also working on another update to EF6. This update to EF6 is tentatively slated to be another patch release (EF6.1.3) and we are working a series of bug fixes and accepting pull requests.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10582464" width="1" height="1"&gt;</description><pubDate>Mon, 22 Dec 2014 22:08:47 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">19</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10582464</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/12/22/ef6-1-2-rtm-available.aspx#comments</comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000061009</guid><link>http://www.asp.net/mvc/overview/performance/profile-and-debug-your-aspnet-mvc-app-with-glimpse</link><title>Profile and debug your ASP.NET MVC app with Glimpse</title><description> Glimpse is a thriving and growing family of open source NuGet packages that provides detailed performance, debugging and diagnostic information for ASP.NET apps. It's trivial to install, lightweigh...</description><pubDate>Fri, 19 Dec 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10579528</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/12/17/asp-net-mvc-5-2-3-web-pages-5-2-3-and-web-api-5-2-3-beta-releases.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET/">ASP.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC/">ASP.NET MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Razor/">Razor</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+Web+Api/">ASP.NET Web Api</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+4-5/">ASP.NET 4.5</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/webapi/">webapi</category><title>ASP.NET MVC 5.2.3, Web Pages 3.2.3 and Web API 5.2.3 Beta releases</title><description>&lt;p&gt;While the MVC team is working hard on MVC 6 as part of the ASP.NET 5 effort, we also keep working on the 5.x packages. Today we are releasing a Beta of ASP.NET MVC 5.2.3, Web Pages 5.2.3 and Web API 5.2.3.&lt;/p&gt;
&lt;p&gt;This preview release addresses 12 issues. Here is the full &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.2.3%20Beta&amp;amp;assignedTo=All&amp;amp;component=Unassigned|Facebook|General|MVC|Web%20API|Web%20Pages%2FRazor&amp;amp;sortField=LastUpdatedDate&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Highlight of issues fixed&lt;/h2&gt;
&lt;h3&gt;Web API Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2092"&gt;2092&lt;/a&gt; Significant performance improvement in the default overload for System.Net.HttpFormatting.ReadAsAsync by caching the default JSON formatter. This can result in improvements of 100s of milliseconds on the second call to ReadAsAsync (or similarly to the write method).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2103"&gt;2103&lt;/a&gt; Batch's inner request's Url not being decoded in WebHost scenarios.&lt;/p&gt;
&lt;p&gt;&lt;a title="https://aspnetwebstack.codeplex.com/workitem/2101" href="https://aspnetwebstack.codeplex.com/workitem/2101"&gt;2101&lt;/a&gt; Error parsing MIME multipart when using irregular mime types&lt;/p&gt;
&lt;h3&gt;MVC Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2155"&gt;2155&lt;/a&gt; Remote attribute does not work boolean fields and Html.CheckBoxFor&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2081"&gt;2081&lt;/a&gt; Performance improvement in OutputCacheAttribute for child action&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2136"&gt;2136&lt;/a&gt; Attribute routing does not set ControllerContext.IsChild correctly&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2172"&gt;2172&lt;/a&gt;, &lt;a href="https://aspnetwebstack.codeplex.com/workitem/2048"&gt;2048&lt;/a&gt; &amp;ndash; Unobtrusive validation fixes&lt;/p&gt;
&lt;h3&gt;MVC and Web Pages Issues&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2085"&gt;2085&lt;/a&gt; Performance improvement in rendering Razor views&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/2119"&gt;2119&lt;/a&gt; Performance improvement in rendering attributes in Razor&lt;/p&gt;
&lt;h3&gt;Shout Out&lt;/h3&gt;
&lt;p&gt;We want to convey a big thank you to &lt;strong&gt;Nick Craver &lt;/strong&gt;and&lt;strong&gt; Marc Gravell&lt;/strong&gt;, who reported two of the performance issues we resolved in this release and provided a pretty cool Pull Request to fix one of them.&lt;/p&gt;
&lt;h3&gt;Issue 2085 in detail&lt;/h3&gt;
&lt;p&gt;Issue &lt;a title="https://aspnetwebstack.codeplex.com/workitem/2085" href="https://aspnetwebstack.codeplex.com/workitem/2085"&gt;2085&lt;/a&gt; was about the fact the MVC copied ViewData for partial views, and templated helpers. In a reasonably large page with a reasonable amount of data in the ViewBag this proves out to be rather costly. We are now using a copy on write strategy instead. We took this improvement over to MVC 6 as well.&lt;/p&gt;
&lt;h4&gt;The Test&lt;/h4&gt;
&lt;p&gt;We built a test site, that put about 50 items in the ViewBag. For each of these items we rendered a partial view. This is similar to having 50 templated helpers (such as DisplayFor and EditorFor) used on a page.&lt;/p&gt;
&lt;p&gt;We ran two types of tests:&lt;/p&gt;
&lt;p&gt;1. Load the site with a constant stream of requests at the rate of 100 requests/second, and compare memory utilization and garbage collection characteristics for MVC 5.2.2 and MVC 5.2.3.&lt;/p&gt;
&lt;p&gt;2. Load the site with maximum amount of requests and compare the requests/second rate between MVC 5.2.2 and MVC 5.2.3.&lt;/p&gt;
&lt;h5&gt;Results&lt;/h5&gt;
&lt;h6&gt;Test 1&lt;/h6&gt;
&lt;p&gt;The interesting data in this scenario as the reduction of time spent in GC and reduction in overall allocations. Note that Gen2 garbage collection count went down from 57 to 1! And the time in GC was sliced almost three fold.&lt;/p&gt;
&lt;table style="width: 599px;" border="1" cellspacing="0" cellpadding="2"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="182"&gt;
&lt;p&gt;&lt;strong&gt;Area&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="145"&gt;
&lt;p&gt;&lt;strong&gt;5.2.2&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="188"&gt;
&lt;p&gt;&lt;strong&gt;5.2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="82"&gt;
&lt;p&gt;&lt;strong&gt;Delta %&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p&gt;Total request (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="144"&gt;
&lt;p align="right"&gt;2,911&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="187"&gt;
&lt;p align="right"&gt;2,869&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="84"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p&gt;Trace duration (seconds)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="144"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="86"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;Request/second&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;97.03&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p align="right"&gt;95.63&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="88"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;GC CPU Samples (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12,139.00 &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6,682.00&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="89"&gt;
&lt;p align="right"&gt;&lt;strong&gt;45%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;Total allocations (MB)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 18,049.79&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12,602.08&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="90"&gt;
&lt;p align="right"&gt;&lt;strong&gt;30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p&gt;&lt;strong&gt;Total GC Pause (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="143"&gt;
&lt;p align="right"&gt;&lt;strong&gt;1,103.20&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;663.00&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;Gen0 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;76&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;107&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;-41%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;Gen1 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;317&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;106&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;67%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;Gen2 GC (count)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;57&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;98%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;CPU / request (msec/req)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;4.17&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2.33&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="91"&gt;
&lt;p align="right"&gt;&lt;strong&gt;44%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p&gt;&lt;strong&gt;% CPU Time spent on GC&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6.40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2.30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="92"&gt;
&lt;p align="right"&gt;&lt;strong&gt;64%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Test 2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this scenario the number of requests/sec went up 70%, and less time was spent in GC.&lt;/p&gt;
&lt;table style="width: 599px;" border="1" cellspacing="0" cellpadding="2"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="183"&gt;
&lt;p&gt;&lt;strong&gt;Area&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="142"&gt;
&lt;p&gt;&lt;strong&gt;5.2.2&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="184"&gt;
&lt;p&gt;&lt;strong&gt;5.2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="88"&gt;
&lt;p&gt;&lt;strong&gt;Delta %&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="185"&gt;
&lt;p&gt;Total request (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="141"&gt;
&lt;p align="right"&gt;5,246&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="182"&gt;
&lt;p align="right"&gt;8,895&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="90"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Trace duration (seconds)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="140"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="181"&gt;
&lt;p align="right"&gt;30&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="92"&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Request/second&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;174.87&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p align="right"&gt;&lt;strong&gt;296.50&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="93"&gt;
&lt;p align="right"&gt;&lt;strong&gt;70%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;GC CPU Samples (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;39,615&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="180"&gt;
&lt;p align="right"&gt;&lt;strong&gt;34,704&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="94"&gt;
&lt;p align="right"&gt;&lt;strong&gt;12.40%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Allocations/Request (MB/Request)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;6.382&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;4.739&amp;nbsp; &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="95"&gt;
&lt;p align="right"&gt;&lt;strong&gt;34.66&lt;/strong&gt;%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Total GC Pause (msec)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="139"&gt;
&lt;p align="right"&gt;&lt;strong&gt;2,974.60&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;3,215.70&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;&lt;strong&gt;-8.11%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Gen0 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;76&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;99&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-30.26%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;Gen1 GC (count)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;317&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;368&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-16.09%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;Gen2 GC (count)&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;&lt;strong&gt;57&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;45&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;&lt;strong&gt;21.05%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;CPU / request (msec/req)&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;87.42&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;155.63&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="96"&gt;
&lt;p align="right"&gt;-78.03%&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="bottom" width="186"&gt;
&lt;p&gt;&lt;strong&gt;% CPU time spent on GC&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="138"&gt;
&lt;p align="right"&gt;&lt;strong&gt;8.60%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="179"&gt;
&lt;p align="right"&gt;&lt;strong&gt;7.80%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="bottom" width="97"&gt;
&lt;p align="right"&gt;&lt;strong&gt;9.30%&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We hope you enjoy these performance and functionality improvements!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10579528" width="1" height="1"&gt;</description><pubDate>Wed, 17 Dec 2014 21:45:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yishai G_</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10579528</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/12/17/asp-net-mvc-5-2-3-web-pages-5-2-3-and-web-api-5-2-3-beta-releases.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10581511</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/12/17/adding-new-items-to-your-asp-net-5-project-with-yeoman-subgenerators.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+5/">ASP.NET 5</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/yeoman/">yeoman</category><title>Adding New Items to Your ASP.NET 5 Project with Yeoman Subgenerators</title><description>&lt;p&gt;Hi Sayed here, this post is graciously authored by Shayne Boyer who is a member of the ASP.NET community that I've been working with lately. Enjoy. &lt;/p&gt;  &lt;p&gt;Sourabh Shirhatti did a great write up on the use of yeoman and the ASP.NET generator for creating projects, &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/12/17/yeoman-generators-for-asp-net-vnext.aspx"&gt;http://blogs.msdn.com/b/webdev/archive/2014/12/17/yeoman-generators-for-asp-net-vnext.aspx&lt;/a&gt; , but another advantage of yeoman is subgenerators for adding additional items to our project.&lt;/p&gt;  &lt;h4&gt;Creating a new Project &lt;/h4&gt;  &lt;p&gt;To summarize, creating a quick “HelloWorldMvc” application is easy with the aspnet generator.&lt;/p&gt;  &lt;p&gt;$ yo aspnet&lt;/p&gt;  &lt;p&gt;You will get the response of what type of project you want to create. Notice that there is a new “Class Library” project type now as well.&lt;/p&gt;  &lt;pre class="brush: bash;"&gt;     _-----_
    |       |    .--------------------------.
    |--(o)--|    |      Welcome to the      |
   `---------´   |   marvellous ASP.NET 5   |
    ( _´U`_ )    |        generator!        |
    /___A___\    '--------------------------'
     |  ~  |     
   __'.___.'__   
 ´   `  |° ´ Y ` 

? What type of application do you want to create? (Use arrow keys)
❯ Console Application 
  Web Application 
  MVC Application 
  Nancy ASP.NET Application 
  Class Library&lt;/pre&gt;

&lt;p&gt;Select the MVC Application, and the generator asks for the name of the application. Enter “HelloWorldMvc”; press enter and the scaffolding will commence and the project template is created.&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;spboyer-mac-dev:HelloWorldMvc shayneboyer$ tree
.
├── Controllers
│   └── HomeController.cs
├── Models
│   └── User.cs
├── Startup.cs
├── Views
│   ├── Home
│   │   └── Index.cshtml
│   └── Shared
│       └── _Layout.cshtml
├── project.json
└── wwwroot&lt;/pre&gt;

&lt;h4&gt;Adding New Items to Your Project&lt;/h4&gt;

&lt;p&gt;If you have been Visual Studio user, you are familiar with the Add &amp;gt; New Item dialog &lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5228.ScreenShot20141206at10.21.39AM_5F00_15E79F76.png"&gt;&lt;img title="Screen Shot 2014-12-06 at 10.21.39 AM" style="border-width: 0px; margin-right: auto; margin-left: auto; float: none; display: block;" border="0" alt="Screen Shot 2014-12-06 at 10.21.39 AM" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1031.ScreenShot20141206at10.21.39AM_5F00_thumb_5F00_4368BF39.png" width="644" height="447" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;when needing to add Controllers, Views, Class, etc. type files to your project. However, when developing in other IDEs such as Sublime Text or Brackets obviously this is not an option. &lt;/p&gt;

&lt;h4&gt;yo aspnet –help&lt;/h4&gt;

&lt;p&gt;Using this command, you can see all of the subgenerators that are available.&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;$ yo aspnet --help

Usage:
  yo aspnet:app [options] 

Options:
  -h,   --help  # Print generator's options and usage  Default: false

  --skip-install # Skip triggering kpm restore automatically  Default: false

Description:
    Creates a basic ASP.NET 5 application

Subgenerators: 

    yo aspnet:BowerJson [options] 
    yo aspnet:Class [options] &amp;lt;name&amp;gt;
    yo aspnet:CoffeeScript [options] &amp;lt;name&amp;gt;
    yo aspnet:Gruntfile [options] &amp;lt;name&amp;gt;
    yo aspnet:HTMLPage [options] &amp;lt;name&amp;gt;
    yo aspnet:JScript [options] &amp;lt;name&amp;gt;
    yo aspnet:JSON [options] &amp;lt;name&amp;gt;
    yo aspnet:MvcController [options] &amp;lt;name&amp;gt;
    yo aspnet:MvcView [options] &amp;lt;name&amp;gt;
    yo aspnet:PackageJson [options] 
    yo aspnet:StartupClass [options] 
    yo aspnet:TextFile [options] &amp;lt;name&amp;gt;
     yo aspnet:WebApiController [options] &amp;lt;name&amp;gt;&lt;/pre&gt;

&lt;p&gt;Adding any of the items is simple, move to the directory you want to have the new item placed in and execute the generator. &lt;/p&gt;

&lt;pre class="brush: bash;"&gt;$ cd Controllers
$ yo aspnet:MvcController ContactController
You called the aspnet subgenerator with the arg ContactController
ContactController.cs created.
   create ContactController.cs&lt;/pre&gt;

&lt;p&gt;Now looking at the overall project tree I have added the new Controller and View.&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;├── Controllers
│   ├── ContactController.cs
│   └── HomeController.cs
├── Models
│   └── User.cs
├── Startup.cs
├── Views
│   ├── Contact
│   │   └── Index.cshtml
│   ├── Home
│   │   └── Index.cshtml
│   └── Shared
│       └── _Layout.cshtml
├── project.json
└── wwwroot&lt;/pre&gt;

&lt;h4&gt;Yo Whats next?&lt;/h4&gt;

&lt;p&gt;Get involved, project is hosted on GitHub at &lt;a href="https://github.com/OmniSharp/generator-aspnet"&gt;omnisharp/generator-aspnet&lt;/a&gt;. I enjoyed adding the subgenerators and see opportunities for growth already. What would you like to see?&lt;/p&gt;

&lt;p&gt;Shayne Boyer 
  &lt;br /&gt;&lt;a href="http://www.twitter.com/spboyer"&gt;@spboyer&lt;/a&gt; on twitter 

  &lt;br /&gt;&lt;a href="http://www.tattoocoder.com"&gt;http://www.tattoocoder.com&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10581511" width="1" height="1"&gt;</description><pubDate>Wed, 17 Dec 2014 21:02:16 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed-Ibrahim-Hashimi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10581511</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/12/17/adding-new-items-to-your-asp-net-5-project-with-yeoman-subgenerators.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10581317</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/12/17/yeoman-generators-for-asp-net-vnext.aspx</link><title>Yeoman generators for ASP.NET 5</title><description>&lt;p&gt;Hi everyone, this post is in my name but it’s authored by Sourabh Shirhatti. He was a &lt;strong&gt;Program Manager Intern &lt;/strong&gt;from the University of Texas at Austin that I’ve had the pleasure of working with this summer. This post is long overdue, we should have posted this a while back. Better late than never :) &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7356.yogif_5F00_3789A694.gif"&gt;&lt;img title="yo-gif" style="float: none; margin-left: auto; display: block; margin-right: auto" alt="yo-gif" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3821.yogif_5F00_thumb_5F00_2C1894AA.gif" width="570" height="450" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Building complex modern web applications used to be difficult because of the lack of tooling to maintain and develop client-side code. Recent Open Source projects have made it easier to manage complex client-side code. Writing Coffeescript/Typescript has made Javascript more manageable. Likewise, SASS/LESS have alleviated many of the pain points of CSS. &lt;/p&gt;  &lt;p&gt;However, this has resulted in a more involved build process to prepare an application for deployment. In addition to compiling your Coffeescript and SASS, readying an application for deployment involves bundling and minification of CSS, minification and possibly inlining of Javascript among other tasks. &lt;/p&gt;  &lt;p&gt;Task runners like &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt; and &lt;a href="http://gulpjs.com/"&gt;Gulp&lt;/a&gt; can help perform most of the the mundane work for you after you've configured them, but configuring them is no trivial task. Take a look at &lt;a href="https://github.com/angular-app/angular-app/blob/master/client/gruntFile.js"&gt;a sample GruntFile&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Additionally, package managers like &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;bower&lt;/code&gt; help manage dependencies for increasingly complex client-side code. &lt;/p&gt;  &lt;p&gt;Setting up all these tasks for every new project can be a daunting task. That's where &lt;a href="https://camo.githubusercontent.com/8afea7b474cbfbd1609035d5a712c39585f4b1c5/687474703a2f2f6769616e742e6766796361742e636f6d2f43726565707943616e646964426963686f6e66726973652e676966"&gt;yeoman&lt;/a&gt; comes in handy. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingGulpGruntBowerAndNpmSupportForVisualStudio.aspx"&gt;Introducing Gulp, Grunt, Bower, and npm support for Visual Studio&lt;/a&gt; is a good read about task runner support in Visual Studio&lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;What's yeoman?&lt;/h3&gt;  &lt;p&gt;Yeoman is a client-side stack of tools that help building web applications. The Yeoman workflow is comprised of three tools: &lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;a scafolding tool (yo) &lt;/li&gt;    &lt;li&gt;a task-runner/build tool (Grunt, Gulp); and &lt;/li&gt;    &lt;li&gt;a package manager (Bower, npm) &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;According to the &lt;a href="http://yeoman.io/"&gt;yeoman homepage&lt;/a&gt;, &amp;quot;Yeoman helps you kickstart new projects, prescribing best practices and tools to help you stay productive&amp;quot;. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;What's yo?&lt;/h3&gt;  &lt;p&gt;As the Yeoman website succintly puts it, &amp;quot;yo scaffolds out a new application, writing your Grunt configuration and pulling in relevant Grunt tasks and Bower dependencies that you might need for your build.&amp;quot;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Why do we care about yeoman?&lt;/h3&gt;  &lt;p&gt;Yeoman runs as a command-line interface written in Node.js providing cross-platform support for Mac, Windows and Linux. A Yeoman generator for ASP.NET 5 emphasizes our continued effort to enable cross-platform development of ASP.NET.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;How do I get started with Yeoman?&lt;/h3&gt;  &lt;p&gt;&lt;u&gt;Install Node.js &lt;/u&gt;&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;Since yeoman runs on Node.js, you can get started by installing the binaries from the &lt;a href="http://nodejs.org/download/"&gt;Node.js website&lt;/a&gt; or using a package manager (&lt;code&gt;brew&lt;/code&gt;, &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, etc). &lt;/p&gt;      &lt;blockquote&gt;       &lt;p&gt;Note: You might want to install &lt;code&gt;nodejs-legacy&lt;/code&gt; on Debian systems to prevent conflicts with Amateur Packet Radio &lt;code&gt;node&lt;/code&gt; Program&lt;/p&gt;     &lt;/blockquote&gt;   &lt;/li&gt; &lt;/ol&gt;  &lt;h4&gt;OSX / Linux&lt;/h4&gt;  &lt;p&gt;In a terminal you can execute the following command.&lt;/p&gt;  &lt;p class="brush: bash;" style="font-family:monospace;"&gt;   if (if ! (which node &amp;gt; /dev/null); then echo &amp;quot;Node.js not found&amp;quot;; fi &amp;amp;&amp;amp; if ! (which npm &amp;gt; /dev/null); then echo &amp;quot;npm not found&amp;quot;; fi) then echo &amp;quot;Looks like you have both Node.js and npm installed&amp;quot;; fi&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h4&gt;Windows&lt;/h4&gt;  &lt;p&gt;In a PowerShell prompt you can execute the following command.&lt;/p&gt;  &lt;p class="brush: bash;" style="font-family:monospace;"&gt;if(!(get-command node -ErrorAction SilentlyContinue)){'node not found' | Write-Error } if(!(get-command npm -ErrorAction SilentlyContinue)){'node not found' | Write-Error }&lt;/p&gt;  &lt;p&gt;&lt;u&gt;&lt;strong&gt;Install &lt;code&gt;yo&lt;/code&gt; &lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;Let's use npm to install &lt;strong&gt;yo&lt;/strong&gt; as well as the &lt;strong&gt;ASP.NET 5 generator&lt;/strong&gt; using the following command&lt;/p&gt;      &lt;pre&gt;&lt;code&gt;npm install -g yo generator-aspnet
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;How do I scaffold a new ASP.NET 5 application?&lt;/h3&gt;

&lt;p&gt;To get started with the Yeoman generator for ASP.NET, launch a Terminal (or powershell) window and type the following command&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;$ yo aspnet&lt;/pre&gt;

&lt;p&gt;You should see a response similar to the following.&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;     _-----_
    |       |    .--------------------------.
    |--(o)--|    |      Welcome to the      |
   `---------´   |    marvellous ASP.NET    |
    ( _´U`_ )    |        generator!        |
    /___A___\    '--------------------------'
     |  ~  |     
   __'.___.'__   
 ´   `  |° ´ Y ` 

? What type of application do you want to create? (Use arrow keys)
❯ Console Application 
  Web Application 
  MVC Application 
  Nancy ASP.NET Application &lt;/pre&gt;

&lt;p&gt;You can use the arrow keys to select a template type. In this article I will be creating a &lt;strong&gt;MVC Application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, you will be prompted to name your application&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;[?] What's the name of your ASP.NET application? (MvcApplication1)&lt;/pre&gt;

&lt;p&gt;I am going to use the default name &lt;code&gt;MvcApplication1&lt;/code&gt;, but you are free to rename your application.&lt;/p&gt;

&lt;p&gt;On proceeding, the generator will create an empty application the following layout&lt;/p&gt;

&lt;pre class="brush: bash;"&gt;.
├── MvcApplication1
│   ├── Controllers
│   │   └── HomeController.cs
│   ├── Models
│   │   └── User.cs
│   ├── Startup.cs
│   ├── Views
│   │   ├── Home
│   │   │   └── Index.cshtml
│   │   └── Shared
│   │       └── _Layout.cshtml
│   └── project.json
└── NuGet.config

6 directories, 7 files&lt;/pre&gt;

&lt;pre class="brush: bash;"&gt;Note you may want to install &lt;a href="https://github.com/aspnet/home#getting-started"&gt;ASP.NET 5 runtime&lt;/a&gt; to get the command line tools.&lt;/pre&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h3&gt;How do I contribute to this project?&lt;/h3&gt;

&lt;p&gt;This project is hosted on GitHub at &lt;a href="https://github.com/OmniSharp/generator-aspnet"&gt;omnisharp/generator-aspnet&lt;/a&gt; and we accept pull requests from the community.&lt;/p&gt;

&lt;p&gt;Sourabh Shirhatti&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10581317" width="1" height="1"&gt;</description><pubDate>Wed, 17 Dec 2014 08:06:54 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed-Ibrahim-Hashimi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10581317</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/12/17/yeoman-generators-for-asp-net-vnext.aspx#comments</comments></item><item><guid isPermaLink="false">http://jeffhandley.com/archive/2014/12/16/Adaptive-Batch-Sizes-for-Backend-Processing.aspx</guid><link>http://feeds.jeffhandley.com/~r/JeffHandley/~3/RQ88icZTd_w/Adaptive-Batch-Sizes-for-Backend-Processing.aspx</link><title>Adaptive Batch Sizes for Backend Processing</title><description>&lt;p&gt;Most business systems include some form of backend processing. This could be report generation, data transformations, credit card processing, payment auditing, or countless other scenarios. It’s typical for these systems to pull records out of a queue, perform the necessary processing, and then move on to the next record. When possible, these systems are engineered to process more than one record at a time, reducing overhead and increasing efficiency. Each time a batch processing system is created though, we face a difficult question.&lt;/p&gt;  &lt;h2&gt;What is the best batch size?&lt;/h2&gt;  &lt;p&gt;This question is always hard to answer because we know that our development environment will differ from the production environment. To combat this problem, most developers define an environment variable or configuration setting that will control the batch size, and then hard-code a default value if the setting is not supplied. This provides a feeling of comfort that we can change the setting in production without having to update the code. But this approach falls short in many ways.&lt;/p&gt;  &lt;h2&gt;NuGet Package Statistics&lt;/h2&gt;  &lt;p&gt;&lt;a href="http://NuGet.org"&gt;NuGet.org&lt;/a&gt; creates records every time a package is downloaded—this happens about 750,000 times per day or 8.5 times per second. The records are stored in the production database in a denormalized table where the raw values can easily be inserted at that pace. Then twice each day, we produce updated package download reports for every package with download activity since the last time its report was generated.&lt;/p&gt;  &lt;p&gt;To generate these package download reports, we have backend processes that aggregate total download numbers, replicate the records &lt;a href="http://blog.nuget.org/20140820/new-statistics-warehouse.html"&gt;into a warehouse database&lt;/a&gt;, and then purge records that are at least 7 days old and that have already been replicated. Each of these processes works against batches of records; choosing batch sizes for each of them was difficult.&lt;/p&gt;  &lt;h2&gt;Throughput Factors&lt;/h2&gt;  &lt;p&gt;When trying to select a batch size for each of these processes, we realized that there are lots of factors that come into play. Here are the variables that we found to have significant impact on throughput:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Scale settings for our production database (SQL Azure) &lt;/li&gt;    &lt;li&gt;Scale settings for our warehouse database (SQL Azure) &lt;/li&gt;    &lt;li&gt;Virtual Machine specifications on our backend processing server (Azure VM) &lt;/li&gt;    &lt;li&gt;Current load on the production database &lt;/li&gt;    &lt;li&gt;Current load on the warehouse database &lt;/li&gt;    &lt;li&gt;Current load on the backend processing server (it performs lots of other backend jobs at the same time) &lt;/li&gt;    &lt;li&gt;Index fragmentation in the production database &lt;/li&gt;    &lt;li&gt;Index fragmentation in the warehouse database &lt;/li&gt;    &lt;li&gt;Number of records in the queue &lt;/li&gt;    &lt;li&gt;Network latency &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Each time any of these factors changed, the previous choice we’d made for our batch sizes become stale. Every once in a while, a batch would fail, cause an error, and raise an operations alert. We would then file a bug: “Stats Replicator cannot process the current batch size without timing out.” There are two obvious fixes for the bug:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Increase the timeout &lt;/li&gt;    &lt;li&gt;Reduce the batch size &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Either of these “fixes” would get the job unstuck, but then it’s just a matter of time before the change is stale.&lt;/p&gt;  &lt;h2&gt;The Edge of Failure&lt;/h2&gt;  &lt;p&gt;Batch processing can be more efficient because it reduces overhead. There’s startup/shutdown time required for each iteration of the process. When you only pay the startup/shutdown cost once but process thousands of records, the savings can be significant. The bigger the batch, the more we save on overhead. But there’s usually a breaking point where giant batch sizes lead to failure. Finding the largest batch size that can be successfully processed often yields the best performance.&lt;/p&gt;  &lt;p&gt;To make the backend processes for &lt;a href="http://NuGet.org"&gt;NuGet.org&lt;/a&gt; as efficient as possible at all times, I created an approach that discovers this breaking point and then automatically adapts batch sizes to achieve the best throughput attainable within the current environment.&lt;/p&gt;  &lt;h2&gt;Defining Batch Size Ranges&lt;/h2&gt;  &lt;p&gt;Instead of defining a single batch size setting to be used, the new approach uses a pair of parameters to specify the minimum and maximum batch sizes. These batch sizes aren’t guesses, they are objective numbers with meaning.&lt;/p&gt;  &lt;h3&gt;Minimum Batch Size&lt;/h3&gt;  &lt;p&gt;The minimum batch size is truly a minimum. If the system fails to process a batch of this size, it is considered an error and the process will crash. This will lead to an operations alert to inform the team that something is wrong.&lt;/p&gt;  &lt;h3&gt;Maximum Batch Size&lt;/h3&gt;  &lt;p&gt;The maximum batch size is the max size that we would ever want to be processed at one time. This number can be selected based on the scenario and it should take into account issues like debugging when a batch encounters a bug. But this number should be as large as you’re comfortable with—don’t worry about what the system will be “capable of” handling—because all of the factors above affect the capability. If you scale your server up significantly, a previously unfathomable batch size may become not only possible, but preferable.&lt;/p&gt;  &lt;h2&gt;Sampling and Adapting&lt;/h2&gt;  &lt;p&gt;With a batch size range provided, we can now take samples of different batch sizes. This sampling will produce two important pieces of data:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;The edge of failure, where the batch succeeds but larger batch sizes fail (generally by exceeding a timeout period) &lt;/li&gt;    &lt;li&gt;The throughput measured for each sampled batch size, in terms of records per second &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;To accomplish the sampling, we take the following approach:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Process the minimum batch size and record the throughput (records/second) &lt;/li&gt;    &lt;li&gt;Incrementally increase the batch size toward the maximum batch size, stepping by 10%      &lt;br /&gt;      &lt;br /&gt;batchSize = minBatchSize + ((maxBatchSize - minBatchSize) / 10 * samplesTaken);       &lt;br /&gt;      &lt;br /&gt;&lt;/li&gt;    &lt;li&gt;Record the throughput for each sample      &lt;br /&gt;      &lt;br /&gt;batchTimes[perSecond] = batchSize;       &lt;br /&gt;      &lt;br /&gt;&lt;/li&gt;    &lt;li&gt;If a batch size times out, record its throughput as Int32.MaxValue and decrease the maximum batch size by 33%      &lt;br /&gt;      &lt;br /&gt;maxBatchSize = maxBatchSize * 2 / 3; &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Once we’ve finished taking our 11 samples (yes, 11, because &lt;a href="http://en.wikipedia.org/wiki/Off-by-one_error#Fencepost_error"&gt;fenceposts&lt;/a&gt;), we then use the sampling data to begin adapting our batch sizes. Each time we’re ready to process another batch, we calculate the next batch size to use. This calculation aims to find the best possible batch size, but we don’t simply want to choose the best batch size we’ve seen so far because there’s usually a batch size better than what we’ve already seen. Instead, we select the best 25% of our batches and then use the average batch size across them.&lt;/p&gt;  &lt;p&gt;var bestBatches = batchTimes.OrderByDescending(b =&amp;gt; b.Key).Take(batchTimes.Count / 4);    &lt;br /&gt;var nextBatchSize = (int)bestBatches.Select(b=&amp;gt; b.Value).Average();&lt;/p&gt;  &lt;p&gt;We will then use this size to process the next batch. We’ll record its throughput and add it into our samples. As we continue to process more batches, we’ll have a larger pool of sample values to select our 25% best batches from, and we’ll be averaging out more batch sizes. But because previous batch sizes were selected based on the averages in the first place, the result is zeroing in on the batch size that yields the best throughput.&lt;/p&gt;  &lt;h2&gt;Examining the Numbers&lt;/h2&gt;  &lt;p&gt;Let’s take a look at how this can play out.&lt;/p&gt;  &lt;h3&gt;Configuration&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;Min Batch Size: 100 &lt;/li&gt;    &lt;li&gt;Max Batch Size: 10000 &lt;/li&gt;    &lt;li&gt;Timeout Period: 30 seconds &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Initial Sampling&lt;/h3&gt;  &lt;ol&gt;   &lt;li&gt;Batch: 100; Time: 1 sec; Pace: 100/sec &lt;/li&gt;    &lt;li&gt;Batch: 1090; Time: 9 sec; Pace: 121/sec &lt;/li&gt;    &lt;li&gt;Batch: 2080; Time: 14 sec; Pace: 149/sec &lt;/li&gt;    &lt;li&gt;Batch: 3070; Time: 19 sec; Pace: 162/sec &lt;/li&gt;    &lt;li&gt;Batch: 4060; Time: 26 sec; Pace: 156/sec &lt;/li&gt;    &lt;li&gt;Batch: 5040; Time: TIMEOUT (Int32.MaxValue). Max set to 10000 * 2 /3 = 6667 &lt;/li&gt;    &lt;li&gt;Batch: 4042; Time: 25 sec; Pace: 161/sec &lt;/li&gt;    &lt;li&gt;Batch: 4699; Time: 29 sec; Pace: 162/sec &lt;/li&gt;    &lt;li&gt;Batch: 5356; Time: TIMEOUT (Int32.MaxValue). Max set to 6667 * 2 / 3 = 4445 &lt;/li&gt;    &lt;li&gt;Batch: 4015; Time: 26 sec; Pace: 154/sec &lt;/li&gt;    &lt;li&gt;Batch: 4445; Time: 27 sec; Pace: 165/sec &lt;/li&gt; &lt;/ol&gt;  &lt;h3&gt;Adapting&lt;/h3&gt;  &lt;p&gt;After taking these 11 samples, we’ve learned that we can’t seem to get past ~5000 records in a batch without timing out; the maximum successful batch was 4699 at 29 seconds (162/sec). But we also see that within the timeout period, larger batches are providing better throughput than smaller batches. The system will now automatically adapt to use this data.&lt;/p&gt;  &lt;p&gt;The samples we've taken can be ordered like this:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;4445 (165/sec) &lt;/li&gt;    &lt;li&gt;4699 (162/sec) &lt;/li&gt;    &lt;li&gt;3070 (162/sec) &lt;/li&gt;    &lt;li&gt;4042 (161/sec) &lt;/li&gt;    &lt;li&gt;4060 (156/sec) &lt;/li&gt;    &lt;li&gt;4015 (154/sec) &lt;/li&gt;    &lt;li&gt;2080 (149/sec) &lt;/li&gt;    &lt;li&gt;1090 (121/sec) &lt;/li&gt;    &lt;li&gt;100 (100/sec) &lt;/li&gt;    &lt;li&gt;5040 (Int32.MaxValue/sec) &lt;/li&gt;    &lt;li&gt;5356 (Int32.MaxValue/sec) &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Considering the best 25% of these values (that will be the top 3), we calculate the average of the batch sizes to be 4071. That will be the next batch size. We’ll time that batch as well, and put its data into the sample set.&lt;/p&gt;  &lt;p&gt;As more batches are executed, we’ll see performance fluctuate, batch sizes vary a bit, but ultimately narrow down to a small deviation. After around 100 iterations, the value becomes relatively static. So the next step is to guard against circumstances changing and our data becoming stale.&lt;/p&gt;  &lt;h2&gt;Periodic Resets&lt;/h2&gt;  &lt;p&gt;After around 100 iterations, we lose some of our ability to adapt. Even if the times start to get very bad for the batch size we’re zeroing in on, there’s too much data indicating that batch size should be efficient. The easiest way to combat this problem is to perform periodic resets. After 100 iterations, simply reset all sample data and start fresh—take 11 new samples and then run 89 more iterations afterward, adapting anew.&lt;/p&gt;  &lt;p&gt;While this reset can lead to a few inefficient batches, it’s an important part of what makes the system fully reliable. If load on the production system or any of the other throughput factors changes, it won’t be long before we reset and discover that we need to change our target range.&lt;/p&gt;  &lt;h2&gt;The Code&lt;/h2&gt;  &lt;p&gt;This approach is in use within a few of our &lt;a href="http://github.com/NuGet/NuGet.Jobs"&gt;backend processes&lt;/a&gt; around package statistics. The most straight-forward example is the job that finds package statistics from the production database that have already been replicated over to the warehouse and can now be purged from the production database.&lt;/p&gt;  &lt;h3&gt;Interesting Methods&lt;/h3&gt;  &lt;p&gt;• &lt;a href="https://github.com/NuGet/NuGet.Jobs/blob/master/src/Stats.PurgeReplicated/Stats.PurgeReplicated.Job.cs#L287"&gt;GetNextBatchSize&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;• &lt;a href="https://github.com/NuGet/NuGet.Jobs/blob/master/src/Stats.PurgeReplicated/Stats.PurgeReplicated.Job.cs#L333"&gt;RecordSuccessfulBatchTime&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;• &lt;a href="https://github.com/NuGet/NuGet.Jobs/blob/master/src/Stats.PurgeReplicated/Stats.PurgeReplicated.Job.cs#L341"&gt;RecordFailedBatchSize&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;• &lt;a href="https://github.com/NuGet/NuGet.Jobs/blob/master/src/Stats.PurgeReplicated/Stats.PurgeReplicated.Job.cs#L176"&gt;PurgeCore&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Benefits&lt;/h2&gt;  &lt;p&gt;The biggest benefit I've seen from this approach is that our production system stays alive and efficient all the time. We used to have to tweak the batch sizes pretty regularly. And when our statistics processing fell behind, it could take a long time to catch up because our batch sizes were conservative. Now, the batch sizes can get more aggressive automatically, while ensuring we avoid timeouts.&lt;/p&gt;  &lt;p&gt;Overall, these processes are now much more hands-off. If we need to increase throughput, we can scale a server up and the process will automatically take advantage of the improvement and use bigger batch sizes if that yields better results. But if the system is under load, the process will automatically back off if smaller batch sizes are proving to run at a steady pace.&lt;/p&gt;  &lt;div id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:70384ba2-08df-4701-8be8-166d3b7b64f5" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;Technorati Tags: &lt;a href="http://technorati.com/tags/NuGet" rel="tag"&gt;NuGet&lt;/a&gt;,&lt;a href="http://technorati.com/tags/Batch+Processing" rel="tag"&gt;Batch Processing&lt;/a&gt;&lt;/div&gt;&lt;img src="http://jeffhandley.com/aggbug/302.aspx" width="1" height="1" /&gt;&lt;img src="//feeds.feedburner.com/~r/JeffHandley/~4/RQ88icZTd_w" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 17 Dec 2014 07:49:56 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Handley</dc:creator><comments>http://jeffhandley.com/archive/2014/12/16/Adaptive-Batch-Sizes-for-Backend-Processing.aspx#feedback</comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://jeffhandley.com/comments/commentRss/302.aspx</wfw:commentRss><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://jeffhandley.com/archive/2014/12/16/Adaptive-Batch-Sizes-for-Backend-Processing.aspx</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Modern-Web-Development-Tools-in-Visual-Studio-2015-with-Mads-Kristensen</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Modern-Web-Development-Tools-in-Visual-Studio-2015-with-Mads-Kristensen</link><category>aspnet</category><category>Cloud</category><category>JavaScript</category><category>Visual Studio</category><category>Web</category><title>Modern Web Development Tools in Visual Studio 2015 with Mads Kristensen</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by &lt;a href="http://madskristensen.net/"&gt;Mads Kristensen&lt;/a&gt; from the ASP.NET Web Tooling Team to talk about the improvements for Modern Web Development in Visual Studio 2015 including &lt;a href="http://bower.io"&gt;Bower&lt;/a&gt;, &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt;, &lt;a href="http://gulpjs.com"&gt;Gulp&lt;/a&gt;, &lt;a href="http://lesscss.org/"&gt;LESS&lt;/a&gt;,&amp;nbsp;&lt;a href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and &lt;a href="http://npmjs.org/"&gt;npm&lt;/a&gt;. Mads also explains how to use the new Task Runner Explorer to harness the power of these tools from within Visual Studio.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014"&gt;Visual Studio Connect Event (on Channel 9)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/023"&gt;Visual Studio Connect: ASP.NET 5 (Panel Discussion)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/8e1b4368-4afb-467a-bc13-9650572db708"&gt;Task Runner Explorer for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/65748cdb-4087-497e-a394-2e3449c8e61e"&gt;Bower, Grunt, Gulp &amp;amp; npm Package Intellisense for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/56633663-6799-41d7-9df7-0f2a504ca361"&gt;Web Essentials for Visual Studio 2013 Update 4&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/ee6e6d8c-c837-41fb-886a-6b50ae2d06a2"&gt;Web Essentials for Visual Studio 2015&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.visualstudio.com/en-us/products/visual-studio-community-vs"&gt;Visual Studio Community Edition 2013&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#t=22m05s"&gt;[Shortcut 22:05] Grunt Tasks for moving &amp;amp; minification of files&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a class="twitter-follow-button" href="http://www.twitter.com/cfowlerMSFT"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;br&gt;&lt;a class="twitter-follow-button" href="http://www.twitter.com/mkristensen"&gt;Follow Mads Kristensen on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:e08d88a435c1489a94b3a4030177ff1f"&gt;</description><pubDate>Wed, 17 Dec 2014 03:05:44 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015.mp4" type="video/mp4" length="95244931" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Modern-Web-Development-Tools-in-Visual-Studio-2015-with-Mads-Kristensen</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Mads Kristensen from the ASP.NET Web Tooling Team to talk about the improvements for Modern Web Development in Visual Studio 2015 including Bower, Grunt, Gulp, LESS, Sass and npm. Mads also explains how to use the new Task Runner Explorer to harness the power of these tools from within Visual Studio. Show Links Visual Studio Connect Event (on Channel 9)Visual Studio Connect: ASP.NET 5 (Panel Discussion)Task Runner Explorer for Visual Studio 2013Bower, Grunt, Gulp &amp;amp; npm Package Intellisense for Visual Studio 2013Web Essentials for Visual Studio 2013 Update 4Web Essentials for Visual Studio 2015Visual Studio Community Edition 2013[Shortcut 22:05] Grunt Tasks for moving &amp;amp; minification of filesFollow Cory Fowler on TwitterFollow Mads Kristensen on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2906</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015.mp3" expression="full" duration="2906" fileSize="46501535" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015.mp4" expression="full" duration="2906" fileSize="95244931" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015.webm" expression="full" duration="2906" fileSize="264756473" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_high.mp4" expression="full" duration="2906" fileSize="592040097" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/044e/c40f157d-7ede-4e4c-9ede-592899f3044e/ModernWebDevToolsInVS2015_mid.mp4" expression="full" duration="2906" fileSize="371945268" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen, Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen, Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Modern-Web-Development-Tools-in-Visual-Studio-2015-with-Mads-Kristensen/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/7u0hTUWuKxg</guid><link>https://www.youtube.com/watch?v=7u0hTUWuKxg&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Dec 16th, 2014 - Design Meeting on Campus</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=7u0hTUWuKxg&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/7u0hTUWuKxg/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=7u0hTUWuKxg&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Dec 16th, 2014 - Design Meeting on Campus&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2800&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;36
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;26:47&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 16 Dec 2014 22:32:12 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/7u0hTUWuKxg" /><a10:updated>2015-01-20T19:13:21Z</a10:updated></item><item><guid isPermaLink="false">http://madskristensen.net/post/grunt-and-gulp-intellisense-in-visual-studio-2013</guid><link>http://feedproxy.google.com/~r/netSlave/~3/E7BvNccSu2g/grunt-and-gulp-intellisense-in-visual-studio-2013</link><title>Grunt and Gulp Intellisense in Visual Studio 2013</title><description>&lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;Update Jan 16, 2015&lt;/strong&gt; – The newly released Visual Studio 2015 CTP 5 also supports Grunt/Gulp Intellisense using the files available in this blog post. In fact, the Intellisense will be a lot better in CTP 5 due to the support for Object Literal Intellisense in the JavaScript Editor. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I’ve spent some time figuring out how to get Intellisense working for Grunt and Gulp in the JavaScript editor. Today, I hit a breakthrough that lights up Intellisense automatically. All it requires is that you perform the following two steps:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;a href="http://madskristensen.net/_custom/gruntgulp.zip?v4"&gt;Download&lt;/a&gt; the JavaScript Intellisense files (zip with two .js files)&lt;/li&gt;    &lt;li&gt;Copy them to &lt;strong&gt;C:\Program Files (x86)\Microsoft Visual Studio 12.0\JavaScript\References&lt;/strong&gt;&lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;If you’ve installed Visual Studio under a different path, then you’ll have to find the correct folder at that location instead.&lt;/p&gt;  &lt;p&gt;This trick also works in Visual Studio 2015 Preview, but then the folder to copy the JavaScript files to is: &lt;strong&gt;C:\Program Files (x86)\Microsoft Visual Studio 14.0\JavaScript\References&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;Here’s what it looks like when editing &lt;strong&gt;GulpFile.js&lt;/strong&gt;:&lt;/p&gt;  &lt;p&gt;&lt;img alt="GulpFile.js Intellisense" src="http://madskristensen.net/posts/files/90f3a593-25dc-4c01-a720-379e2138a7ce.png" width="524" height="240" /&gt;&lt;/p&gt;  &lt;p&gt;And here is &lt;strong&gt;GruntFile.js&lt;/strong&gt;:&lt;/p&gt;  &lt;p&gt;&lt;img alt="GruntFile.js Intellisense" src="http://madskristensen.net/posts/files/f7accde0-85d3-4b9c-8d9b-784b7a6479c2.png" width="666" height="246" /&gt;&lt;/p&gt;  &lt;p&gt;This is my first attempt, so please give it a try and let me know what you think. I want to try building this into Visual Studio 2015 so your feedback is super important.&lt;/p&gt;</description><pubDate>Mon, 15 Dec 2014 17:03:58 -0800</pubDate><enclosure url="http://madskristensen.net/_custom/gruntgulp.zip?v4" type="application/x-zip-compressed" length="5244" /><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/grunt-and-gulp-intellisense-in-visual-studio-2013</feedburner:origLink></item><item><guid isPermaLink="false">http://madskristensen.net/post/grunt-and-gulp-intellisense-in-web-essentials-2015</guid><link>http://feedproxy.google.com/~r/netSlave/~3/FnJwmmCCCVk/grunt-and-gulp-intellisense-in-web-essentials-2015</link><title>Grunt and Gulp Intellisense in Web Essentials 2015</title><description>&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: See this &lt;a href="/post/grunt-and-gulp-intellisense-in-visual-studio-2013"&gt;new blog post&lt;/a&gt; for how to apply the Intellisense to both Visual Studio 2013 and 2015&lt;/p&gt;  &lt;p&gt;The latest release of Web Essentials 2015 provides Intellisense for GruntFile.js and GulpFile.js. For Gulp it just works out of the box, but for Grunt we have to add a little JSDoc comment to our file for Intellisense to light up.&lt;/p&gt;  &lt;p&gt;For Grunt, just add this JSDoc comment on top of the &lt;strong&gt;module.export&lt;/strong&gt; line:&lt;/p&gt;  &lt;pre&gt;/**&lt;br /&gt; * @param {Grunt} grunt&lt;br /&gt; */&lt;br /&gt;module.exports = function(grunt) {…&lt;/pre&gt;

&lt;p&gt;The JSDoc comment instructs the JavaScript Intellisense engine that the &lt;strong&gt;grunt&lt;/strong&gt; parameter is of type &lt;strong&gt;Grunt&lt;/strong&gt; which is specified by Web Essentials.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;JSDoc comments are now natively supported in Visual Studio 2015&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s a video showing the feature for both Gulp and Grunt.&lt;/p&gt;

&lt;p&gt;[youtube:ScXvuavqhzo]&lt;/p&gt;

&lt;p&gt;
  &lt;br /&gt;I hope to be able to remove the requirement on the JSDoc comments, so that Intellisense will just work without you having to do anything. &lt;/p&gt;</description><pubDate>Sat, 13 Dec 2014 12:57:05 -0800</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/grunt-and-gulp-intellisense-in-web-essentials-2015</feedburner:origLink></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/hnRYH5UuR7Q</guid><link>https://www.youtube.com/watch?v=hnRYH5UuR7Q&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Add Grunt and Bower to Visual Studio projects</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=hnRYH5UuR7Q&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/hnRYH5UuR7Q/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=hnRYH5UuR7Q&amp;amp;feature=youtube_gdata"&gt;Add Grunt and Bower to Visual Studio projects&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Web Essentials 2015 makes it easier than ever to add Grunt and Bower to existing projects&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
928&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;10
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:22&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 13 Dec 2014 21:58:00 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/hnRYH5UuR7Q" /><a10:updated>2015-02-10T08:37:51Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/ScXvuavqhzo</guid><link>https://www.youtube.com/watch?v=ScXvuavqhzo&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Gulp and Grunt Intellisense in Visual Studio</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=ScXvuavqhzo&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/ScXvuavqhzo/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=ScXvuavqhzo&amp;amp;feature=youtube_gdata"&gt;Gulp and Grunt Intellisense in Visual Studio&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Web Essentials 2015 now gives Intellisense for both Grunt and Gulp files.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
541&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;6
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:29&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 13 Dec 2014 20:50:30 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/ScXvuavqhzo" /><a10:updated>2015-01-22T15:59:53Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more</link><category>Azure</category><category>.NET</category><category>Community News</category><title>Azure: Premium Storage, RemoteApp, SQL Database Update, Live Media Streaming, Search and More</title><description>&lt;p&gt;Today we released a number of great enhancements to Microsoft Azure. These include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Premium Storage&lt;/strong&gt;: New Premium high-performance Storage for Azure Virtual Machine workloads  &lt;li&gt;&lt;strong&gt;RemoteApp&lt;/strong&gt;: General Availability of Azure RemoteApp service  &lt;li&gt;&lt;strong&gt;SQL Database&lt;/strong&gt;: Enhancements to Azure SQL Databases  &lt;li&gt;&lt;strong&gt;Media Services&lt;/strong&gt;: General Availability of Live Channels for Media Streaming  &lt;li&gt;&lt;strong&gt;Azure Search&lt;/strong&gt;: Enhanced management experience, multi-language support and more  &lt;li&gt;&lt;strong&gt;DocumentDB&lt;/strong&gt;: Support for Bulk Add Documents and Query Syntax Highlighting  &lt;li&gt;&lt;strong&gt;Site Recovery&lt;/strong&gt;: General Availability of disaster recovery to Azure for branch offices and SMB customers  &lt;li&gt;&lt;strong&gt;Azure Active Directory&lt;/strong&gt;: General Availability of Azure Active Directory application proxy and password write back support &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h2&gt;&lt;u&gt;Premium Storage: High-performance Storage for Virtual Machines&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the public preview of our new Azure Premium Storage offering. With the introduction of the new Premium Storage option, Azure now offers two types of durable storage: Premium Storage and Standard Storage. Premium Storage stores data durably on Solid State Drives (SSDs) and provides high performance, low latency, disk storage with consistent performance delivery guarantees.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_9.png" width="640" height="360"&gt;&lt;/a&gt;  &lt;p&gt;Premium Storage is ideal for I/O-sensitive workloads - and is great for database workloads hosted within Virtual Machines.&amp;nbsp; You can optionally attach several premium storage disks to a single VM, and &lt;strong&gt;support&lt;/strong&gt; &lt;strong&gt;up to 32 TB of disk storage per Virtual Machine and drive more than 50,000 IOPS per VM at less than 1 millisecond latency for read operations&lt;/strong&gt;. This provides a wickedly fast storage option that enables you to run even more workloads in the cloud. &lt;/p&gt; &lt;p&gt;Using Premium Storage, Azure now offers the ability to "lift-and-shift" more demanding enterprise applications to the cloud - including SQL Server, Dynamics AX, Dynamics CRM, Exchange Server, MySQL, Oracle Database, IBM DB2, and SAP Business Suite solutions.&lt;/p&gt; &lt;p&gt;Premium Storage is now available in public preview starting today. To sign up to use the Azure Premium Storage preview, visit the &lt;a href="http://azure.microsoft.com/en-us/services/preview/"&gt;Azure Preview page&lt;/a&gt;.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Disk Sizes and Performance&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Premium Storage disks provide up to 5,000 IOPS and 200 MB/sec throughput depending on the disk size. When you create a new premium storage disk you get the option to select the disk size and performance characteristics you want based on your application performance and storage capacity needs.&amp;nbsp; For the public preview, we are offering three Premium Storage disk configurations:&lt;/p&gt; &lt;table class="GridTable7Colorful1" style="border-top: medium none; border-right: medium none; width: 5.75in; border-collapse: collapse; border-bottom: medium none; margin-left: 0.25pt; border-left: medium none; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-yfti-tbllook: 1184; mso-padding-alt: 0in 5.4pt 0in 5.4pt" cellspacing="0" cellpadding="0" width="690" border="1"&gt; &lt;tbody&gt; &lt;tr style="height: 20.25pt; mso-yfti-irow: -1; mso-yfti-firstrow: yes; mso-yfti-lastfirstrow: yes"&gt; &lt;td style="border-top: medium none; height: 20.25pt; border-right: medium none; width: 139.5pt; background: white; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-bottom-alt: solid #666666 .5pt; mso-background-themecolor: background1" valign="top" width="233"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 517" align="center"&gt;&lt;b style="mso-bidi-font-weight: normal"&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;Disk Types&lt;?xml:namespace prefix = "o" /&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 20.25pt; border-right: medium none; width: 93.7pt; background: white; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-bottom-alt: solid #666666 .5pt; mso-background-themecolor: background1" valign="top" width="156"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 1" align="center"&gt;&lt;b style="mso-bidi-font-weight: normal"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;P10 &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 20.25pt; border-right: medium none; width: 90.8pt; background: white; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-bottom-alt: solid #666666 .5pt; mso-background-themecolor: background1" valign="top" width="151"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 1" align="center"&gt;&lt;b style="mso-bidi-font-weight: normal"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;P20&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 20.25pt; border-right: medium none; width: 1.25in; background: white; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-bottom-alt: solid #666666 .5pt; mso-background-themecolor: background1" valign="top" width="150"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 1" align="center"&gt;&lt;b style="mso-bidi-font-weight: normal"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;P30&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr style="height: 22pt; mso-yfti-irow: 0"&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 139.5pt; background: white; border-bottom: medium none; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-background-themecolor: background1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-right-alt: solid #666666 .5pt" width="233"&gt; &lt;p class="MsoNormal" style="text-align: right; line-height: 106%; mso-yfti-cnfc: 68" align="right"&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;Disk Size&lt;span style="mso-bidi-font-weight: bold"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 93.7pt; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="156"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;128 GB&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 90.8pt; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="151"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;512 GB&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 1.25in; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="150"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;1 TB&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr style="height: 22pt; mso-yfti-irow: 1"&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 139.5pt; background: white; border-bottom: medium none; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-background-themecolor: background1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-right-alt: solid #666666 .5pt" width="233"&gt; &lt;p class="MsoNormal" style="text-align: right; line-height: 106%; mso-yfti-cnfc: 4" align="right"&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;IOPS per Disk&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 93.7pt; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153" width="156"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;500&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 90.8pt; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153" width="151"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;2300&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 1.25in; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153" width="150"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;5000&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr style="height: 22pt; mso-yfti-irow: 2; mso-yfti-lastrow: yes"&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 139.5pt; background: white; border-bottom: medium none; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-background-themecolor: background1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-right-alt: solid #666666 .5pt" width="233"&gt; &lt;p class="MsoNormal" style="text-align: right; line-height: 106%; mso-yfti-cnfc: 68" align="right"&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;Throughput per Disk&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 93.7pt; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="156"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt;100 MB/sec&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 90.8pt; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="151"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;150&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt; MB/sec&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; &lt;td style="border-top: medium none; height: 22pt; border-right: #666666 1pt solid; width: 1.25in; background: #cccccc; border-bottom: #666666 1pt solid; padding-bottom: 0in; padding-top: 0in; padding-left: 5.4pt; border-left: medium none; padding-right: 5.4pt; mso-border-alt: solid #666666 .5pt; mso-border-themecolor: text1; mso-border-themetint: 153; mso-border-bottom-themecolor: text1; mso-border-bottom-themetint: 153; mso-background-themecolor: text1; mso-border-right-themecolor: text1; mso-border-right-themetint: 153; mso-border-top-alt: solid #666666 .5pt; mso-border-top-themecolor: text1; mso-border-top-themetint: 153; mso-border-left-alt: solid #666666 .5pt; mso-border-left-themecolor: text1; mso-border-left-themetint: 153; mso-background-themetint: 51" width="150"&gt; &lt;p class="MsoNormal" style="text-align: center; line-height: 106%; mso-yfti-cnfc: 64" align="center"&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-font-kerning: 12.0pt"&gt;200&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: calibri; mso-font-kerning: 12.0pt"&gt; MB/sec&lt;/span&gt;&lt;span style="font-family: &amp;quot;Segoe UI&amp;quot;,sans-serif; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;You can maximize the performance of your VMs by attaching multiple Premium Storage disks to them (up to the network bandwidth limit available to the VM for disk traffic). To learn the disk bandwidth available for each VM size, see the &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn197896.aspx"&gt;Virtual Machine and Cloud Service Sizes for Azure&lt;/a&gt;  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Durability&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Durability of data is of utmost importance for any persistent storage option. Azure customers have critical applications that depend on the persistence of their data and high tolerance against failures. Premium Storage keeps three replicas of data within the same region. In addition, you can also optionally create snapshots of your disks and copy those snapshots to a Standard GRS storage account - which enables you to maintain a geo-redundant snapshot of your data that is stored at least 400 miles away from your primary Azure region.  &lt;h4&gt;&lt;u&gt;&lt;em&gt;Learn More&lt;/em&gt; &lt;/u&gt;&lt;/h4&gt; &lt;p&gt;You can learn more about Premium Storage disks &lt;a href="http://go.microsoft.com/fwlink/?LinkId=521898"&gt;here&lt;/a&gt;.&amp;nbsp; To sign up to use Premium Storage, go to the &lt;a href="http://www.windowsazure.com/en-us/services/preview/"&gt;Azure Preview&lt;/a&gt; page, and sign up for Microsoft Azure Premium Storage service using your subscription.  &lt;h2&gt;&lt;u&gt;RemoteApp: General Availability of Azure RemoteApp&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the general availability of Azure RemoteApp. Using Azure RemoteApp, you can deploy Windows desktop applications in the cloud, and provide your users with an intuitive, high-fidelity, WAN-ready remote application experience.&amp;nbsp; Users can use the cloud-hosted Windows applications you enable on their phones, tablets, or PCs - &lt;strong&gt;including Windows, Mac, iOS and Android based devices&lt;/strong&gt;.&amp;nbsp; We are delivering RemoteApp with a &lt;strong&gt;super competitive price&lt;/strong&gt; - you can host your user's applications in the cloud for just &lt;strong&gt;$10/user/month&lt;/strong&gt;.&amp;nbsp; With today’s release, Azure RemoteApp is backed by an &lt;a href="http://azure.microsoft.com/en-us/support/legal/sla/"&gt;SLA&lt;/a&gt; and supported by Microsoft Support, offering the full scalability and security of the Azure cloud.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Getting Started&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Setting up RemoteApp is easy. In the &lt;a href="https://manage.windowsazure.com"&gt;Azure Management Portal&lt;/a&gt;, select &lt;b&gt;NEW -&amp;gt; App Services -&amp;gt; RemoteApp -&amp;gt; Quick Create. &lt;/b&gt;Pick a name, region, select the scale configuration plan you want to use, pick one of the standard template images, and click OK. When you do this for the first time, your 30-day free trial will also start. This is a fully featured trial, available to all Azure customers.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_1.png" width="768" height="480"&gt;&lt;/a&gt;  &lt;p&gt;A RemoteApp instance is an elastic, automatically scaled, collection of Windows Server VMs that are running the Remote Desktop Session Host role and host the applications. The VMs are all created based on the template image you provide. You can provide your own template image containing your custom apps, or use one of the standard template images we provide. One of these is for Office 365 ProPlus, which you can use if you have a subscription that contains the Office 365 ProPlus service:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_2.png" width="768" height="480"&gt;&lt;/a&gt;  &lt;p&gt;Once enabled, your users can quickly and easily connect to the applications you host in Azure.&amp;nbsp; They can use Windows, Mac, iOS and Android devices to connect to the RemoteApp service - enabling you to use Azure to run your Windows desktop applications anywhere in the world, on any device.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Enabling Hybrid Applications&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Many business-critical Windows applications rely on on-premises infrastructure such as identity and machine management, and require access to on-premises databases and resources. Azure RemoteApp provides a hybrid deployment model that supports all of these scenarios.  &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;b&gt;Hybrid Management&lt;/b&gt;: In a hybrid RemoteApp collection, the VMs which host your applications are joined to your AD domain. Therefore, you can use on-premises management tools like Group Policy, System Center, and many other enterprise management tools that rely on AD membership. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Federated Identity&lt;/b&gt;: You can use Azure Active Directory integrated with your on-premises AD and your users can logon with their familiar corporate identities. When the Windows applications starts, it is running in a fully domain-joined session, with the usual integrated authentication capabilities of a Windows domain. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hybrid Networking&lt;/strong&gt;: Windows applications in a hybrid RemoteApp collection can seamlessly access on-premises data and resources. This capability is built on Azure Virtual Networking with site-to-site VPN, providing cloud-premise virtual network connectivity. In the future, RemoteApp collections will support full range of Azure Networking capabilities, including ExpressRoute. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h4&gt;&lt;em&gt;&lt;u&gt;Performance and Scale Configurations&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;With today's general availability release, we are offering two scale configurations: &lt;b&gt;BASIC &lt;/b&gt;and&lt;b&gt; STANDARD&lt;/b&gt;.  &lt;ul&gt; &lt;li&gt;BASIC is intended for lighter, task-worker use cases, such as a single productivity application or a data-entry frontend to a line of business system. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;STANDARD is intended for typical productivity use cases such as using Outlook, Word, Excel and other knowledge worker line of business and productivity applications. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can select the scale configuration for your RemoteApp collection while creating it. If you want to change it later, you can do so using the &lt;b&gt;SCALE&lt;/b&gt; tab. Your applications and settings and your user data remain intact through this change.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_3.png" width="768" height="480"&gt;&lt;/a&gt;  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Pricing&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;We are making the RemoteApp service available at a very attractive, affordable price.&amp;nbsp; You can host a &lt;b&gt;line of business Windows application for as little as $10/user per month&lt;/b&gt; using the BASIC configuration.  &lt;p&gt;At the STANDARD level, you can host your users’ &lt;b&gt;entire productivity workspace for just $15/user per month&lt;/b&gt;.  &lt;p&gt;&lt;/p&gt; &lt;h4&gt;&lt;em&gt;&lt;u&gt;Learn More&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;A variety of resources are available on the &lt;a href="http://azure.microsoft.com/en-us/services/remoteapp/"&gt;RemoteApp overview page&lt;/a&gt;. You can also &lt;a href="http://remoteapp.azure.com/"&gt;download the client for your device&lt;/a&gt; and take a test drive. Finally, &lt;a href="http://blogs.msdn.com/b/rds/archive/2014/12/11/windows-apps-in-the-cloud-azure-remoteapp-now-generally-available.aspx"&gt;RDV Team blog&lt;/a&gt; discusses today’s new features in more detail.  &lt;h2&gt;&lt;u&gt;SQL Databases: Now with SQL 2014 Features and Compatibility&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today we are making available a preview of the next-generation release of our Azure SQL Database service.&amp;nbsp; We announced some of the preview's new features &lt;a href="http://azure.microsoft.com/blog/2014/11/05/preview-for-greater-sql-server-compatibility-coming-soon-to-azure-sql-database/"&gt;earlier in November&lt;/a&gt;.&amp;nbsp; Today's release delivers near-complete SQL Server 2014 engine compatibility and even better performance.  &lt;p&gt;Our internal benchmark tests (using over 600 million rows of data) show query performance improvements of around 5x with today's preview relative to our existing Premium Tier SQL Database offering and up to 100x performance improvements when using the new In-memory columnstore technology now supported with today's preview release.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Lots of great new features and improvements&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Key highlights of today's preview include:  &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Better management of large databases. &lt;/strong&gt;We now support heavier database workload management with parallel queries&lt;i&gt;,&lt;/i&gt; table partitioning, online indexing, worry-free large index rebuilds with the previous 2GB size limit removed, and&lt;em&gt; &lt;/em&gt;more&lt;em&gt; &lt;/em&gt;alter database commands. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for more programmability capabilities: &lt;/strong&gt;You can now build even more robust applications with CLR, T-SQL Windows functions, XML index, and change tracking support. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;b&gt;Up to 100x performance improvements &lt;/b&gt;with support for In-memory columnstore queries for data mart and analytic workloads. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;b&gt;Improved monitoring and troubleshooting:&lt;/b&gt; Extended Events (XEvents) and visibility into over 100 new table views via an expanded set of Database Management Views (DMVs). &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;New S3 performance level: &lt;/strong&gt;Today's preview introduces a new pricing option for SQL Databases. The new "S3" performance tier delivers 100 DTU of performance (twice the DTU level of the existing S2 tier) and all of the features available in the Standard tier. It enables an even more cost effective way to run applications with higher performance needs. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h4&gt;&lt;em&gt;&lt;u&gt;Learn More and Get Started&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;You can read more about the enhancements in today's preview on the &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/sql-database-preview-whats-new/"&gt;preview getting started page&lt;/a&gt;.&amp;nbsp; To use today's preview, you can navigate to the &lt;b&gt;SETTINGS&lt;/b&gt; part on the SQL Database blade in the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt; and upgrade to use the preview.&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_4.png" width="624" height="348"&gt;&lt;/a&gt;  &lt;p&gt;Try our the new features and give us your feedback!  &lt;h2&gt;&lt;u&gt;Media Services: General Availability of Live Media Streaming&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m very excited to announce the General Availability of Live Channels&lt;b&gt; &lt;/b&gt;Media Streaming support.&amp;nbsp; Live Channels with Azure Media Services is the live services backbone that broadcasters such as &lt;strong&gt;NBC Sports&lt;/strong&gt; have used to deliver live online media streamed events such as &lt;strong&gt;English Premier League&lt;/strong&gt;, &lt;strong&gt;NHL hockey&lt;/strong&gt;, &lt;strong&gt;Sunday Night Football.&amp;nbsp; &lt;/strong&gt;A dozen international broadcasters also used it to seamlessly deliver live media streaming coverage of the &lt;strong&gt;2014 Sochi Winter Olympics&lt;/strong&gt; and &lt;strong&gt;2014 FIFA World Cup&lt;/strong&gt;.  &lt;p&gt;You can now use Live Channels to stream events of your own - and scale to literally millions of users watching them.&amp;nbsp; Today's general availability release is backed by an enterprise-grade Service-Level Agreement (SLA)&lt;b&gt; &lt;/b&gt;for all customers.&amp;nbsp; &lt;p&gt;&lt;img title="Live Streaming" alt="Live Streaming" src="http://i.msdn.microsoft.com/dynimg/IC759890.png"&gt; &lt;h4&gt;&lt;em&gt;&lt;u&gt;Learn More&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;For more information on functionality and pricing, visit the &lt;a href="http://azure.microsoft.com/blog/2014/09/10/getting-started-with-live-streaming-using-the-azure-management-portal/"&gt;Getting Started with Live Streaming&lt;/a&gt; blog post, the &lt;a href="http://azure.microsoft.com/en-us/services/media-services/"&gt;Media Services&lt;/a&gt; webpage or &lt;a href="http://azure.microsoft.com/en-us/pricing/details/media-services/"&gt;Media Services Pricing&lt;/a&gt; webpage, or the &lt;a href="http://msdn.microsoft.com/en-us/library/dn783466.aspx"&gt;Live Streaming&lt;/a&gt; MSDN section.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Search: Portal Management, Multi-language support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I am happy to announce a number of highly requested features available today in &lt;a href="http://azure.microsoft.com/en-us/services/search/" target="_blank"&gt;Azure Search&lt;/a&gt;.&amp;nbsp; Azure Search provides developers with all of the features needed to build out search experience for web and mobile applications without having to deal with the typical complexities that come with managing, tuning and scaling a real-world search service.&amp;nbsp; &lt;h4&gt;&lt;em&gt;&lt;u&gt;Azure Portal Enhancements &lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Helping developers setup and manage their services quickly and easily is a key goal of the &lt;a href="https://portal.azure.com/"&gt;Azure Management Portal&lt;/a&gt;. Today's release adds several new capabilities to the Azure Search support in the portal that makes it even easier to get started with Azure Search and reduce the need to write code.  &lt;p&gt;For example, you can now easily create a new index. In the portal, you can name the search index, set all of the fields, and assign the properties for each of them - all without writing any code:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_5.png" width="624" height="317"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Once you create the index, you can also now drill into usage details like document counts and storage size. You can see all of the fields associated with this index as shown below:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_6.png" width="429" height="595"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Index tuning is another enhancement now supported in the portal user interface. Boosting relevant items not only provides a better search experience, it also helps you achieve business objectives. For example, if you are searching a product index, you might want to boost documents where the result was found in the product name, as opposed to another document where the result was found in the product description. Or you may wish to use a scoring function that allows you to boost items that have high star ratings or that provide higher margins.  &lt;p&gt;The task of tuning an index was previously only available through the API. Starting today, using the &lt;a href="https://portal.azure.com/"&gt;Azure Preview portal&lt;/a&gt; you can create or alter &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn798928.aspx"&gt;scoring profiles&lt;/a&gt;, instantly tuning the results of your search queries without having to write a line of code:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_7.png" width="589" height="459"&gt;&lt;/a&gt;  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Multilanguage Support across 27 Languages&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;With today’s release, Azure Search now has support for &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn879793.aspx"&gt;27 languages&lt;/a&gt;. This allows Azure Search to accommodate the unique characteristics of a given language, enabling word-breaking and text normalization to work as expected for each language. Part of this enhancement includes support for stemming in the relevant languages, reducing words to their &lt;a href="http://en.wikipedia.org/wiki/Stemming"&gt;word stems&lt;/a&gt;. For example, you can search for the word “runs” and find documents that say “run” or “running”.  &lt;p&gt;When creating an index you can choose to include content from multiple languages, allowing you to search and return results based on the chosen language of your user. For more information, you can visit the &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn879793.aspx"&gt;Language Support page&lt;/a&gt;. Over time, we will continue to enhance multi-language support to include additional languages.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;API features&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;Last but not least, we’ve introduced a new &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn832684.aspx"&gt;Azure Search Management REST API&lt;/a&gt; that allows you to perform common administrative tasks, such as creating new services, and scaling services to allow for additional storage or higher query-per-second rates. You can see a sample of how to use this &lt;a href="https://azuresearchmgmtapi.codeplex.com/"&gt;Management API at CodePlex&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Document DB: Bulk Add Documents and Syntax Highlighting&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="http://azure.microsoft.com/en-us/services/documentdb/" target="_blank"&gt;DocumentDB&lt;/a&gt; is a NoSQL document database service designed for scalable and high performance modern applications.&amp;nbsp; DocumentDB is delivered as a fully managed service (meaning you don’t have to manage any infrastructure or VMs yourself) with an enterprise grade SLA.  &lt;p&gt;We now support some nice new capabilities for Document DB in the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Add Documents: &lt;/strong&gt;Upload existing JSON documents via Document Explorer  &lt;li&gt;&lt;strong&gt;Query syntax highlighting: &lt;/strong&gt;Document DB SQL query &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;These features make it even easier to get started and explore DocumentDB.&lt;/p&gt; &lt;h4&gt;&lt;em&gt;Add Documents Support within the Azure Portal&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;The DocumentDB Document Explorer within the Azure Preview Portal now supports the uploading of existing JSON documents - which makes it easy to import and start using existing data stored in existing JSON files. Simply open Document Explorer and click the &lt;b&gt;Add Document &lt;/b&gt;command:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_22.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_10.png" width="313" height="401"&gt;&lt;/a&gt;  &lt;p&gt;In the new blade that opens, click the browse button to open a file explorer and select 1 or more JSON documents to upload. Note that Document Explorer currently supports up to 100 JSON document files in a single upload operation.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_11.png" width="624" height="280"&gt;&lt;/a&gt;  &lt;p&gt;Once you’re satisfied with your selection, click the &lt;b&gt;upload&lt;/b&gt; button. The documents will automatically be added to the Document Explorer grid and aggregate results will be displayed as the upload operation is in progress.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_26.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_12.png" width="624" height="396"&gt;&lt;/a&gt;  &lt;p&gt;Once the operation has completed, you can select up to another 100 documents to upload without having to close the Add Document blade.&amp;nbsp; This makes it easy to import data into your DocumentDB databases.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Query Explorer – Syntax Highlighting&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;We’ve also enabled basic keyword and value highlighting within Query Explorer.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_28.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_13.png" width="486" height="358"&gt;&lt;/a&gt;  &lt;p&gt;This makes it even easier to experiment and test queries against your NoSQL databases.  &lt;p&gt;Please send us your feedback and suggestions on the Microsoft Azure DocumentDB &lt;a href="http://feedback.azure.com/forums/263030-documentdb?filter=top&amp;amp;page=1"&gt;feedback forum&lt;/a&gt;. If you haven’t tried DocumentDB yet, you can learn more about how to get started &lt;a href="http://azure.microsoft.com/en-us/services/documentdb/"&gt;here&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Disaster Recovery: GA of DR for Branch Offices &amp;amp; SMB Customers&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the General Availability of the &lt;b&gt;Disaster Recovery (DR) to Azure for Branch offices and SMB feature &lt;/b&gt;in our Azure Site Recovery (ASR) service.&amp;nbsp; Today's new support enables consistent replication, protection, and recovery of Virtual Machines directly in Microsoft Azure.&amp;nbsp; With this new support we have extended the Azure Site Recovery service to become a simple, reliable &amp;amp; cost effective DR Solution for enabling Virtual Machine replication and recovery between Windows Server 2012 R2 and Microsoft Azure without having to deploy a System Center Virtual Machine Manager on your primary site.  &lt;p&gt;These features&lt;b&gt; &lt;/b&gt;builds on top of the Hyper-V Replica technology available in Windows Server 2012 R2 and Microsoft Azure to provide remote health monitoring, no-impact recovery plan testing and single click orchestrated recovery – all of this backed by an SLA that is enterprise grade.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Verify DR Plans with Confidence&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;The &lt;b&gt;Test Failover&lt;/b&gt; feature within Azure Site Recovery allows you to test your disaster recovery plans &lt;u&gt;without impacting your production workload&lt;/u&gt; which ensures that you can perform periodic DR drills to meet your compliance objectives. You can connect to the virtual machine running in Azure via RDP after enabling the appropriate endpoints for the virtual machine running in Azure.  &lt;p&gt;A &lt;b&gt;Planned Failover&lt;/b&gt; will do a shutdown of your on-premises machine, transfer all the last changes inside the virtual machine to Azure &amp;amp; then bring up an instance of the VM in Azure without any data loss. An &lt;b&gt;Unplanned Failover&lt;/b&gt; is usually triggered when your on-premises site has been hit by an unexpected disaster.  &lt;p&gt;If you are looking for failing over a multi-virtual machine application, you can do so using the &lt;a href="http://aka.ms/asr_ga_blog_rp_blog"&gt;One-Click Orchestration using Recovery Plans&lt;/a&gt; feature available in Azure Site Recovery. Recovery plans make failover and failback from Azure easy and ensure that you meet your Recovery Time Objectives (RTO) goals of your organization.  &lt;p&gt;Check out additional &lt;a href="http://aka.ms/b2a_blog_pricing"&gt;pricing&lt;/a&gt; or &lt;a href="http://aka.ms/b2a_blog_productinfo"&gt;product information&lt;/a&gt; about Azure Site Recovery, and &lt;a href="http://aka.ms/b2a_blog_trial"&gt;sign up for a free Azure trial&lt;/a&gt; and start using it today.  &lt;h2&gt;&lt;u&gt;Active Directory: GA of Application Proxy and Password Writeback support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today's Azure update includes some great updates to Azure Active Directory.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Azure Active Directory Application Proxy &lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;The Azure Active Directory Application Proxy allows you to make your on-premises web applications securely accessible to users who want to use them from the cloud - and enables you to authenticate access to them using Azure AD.  &lt;p&gt;You can do this without changing your applications and without having to change your DMZ configuration. Just install a lightweight connector anywhere on your network and configure access to the application in your Azure Active Directory, and you can make your SharePoint, Outlook Web Access (or any other Web application that relies on Kerberos) available to users outside your corporate network.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/a2f3e6cdd02d_1280A/image_thumb_8.png" width="540" height="254"&gt;&lt;/a&gt;  &lt;p&gt;With today's release we added support for Kerberos Constrained Delegation. Now, once a user has authenticated to Azure Active Directory, the Azure Active Directory Application Proxy can automatically authenticate users to your on-premises application.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Password Writeback for Azure Active Directory Premium Customers&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;With the new Password Writeback support in Azure AD Sync, you can now configure your Active Directory system so that any time a user or administrator changes a password in Azure AD, the new password is also written back to your on-premises Active Directory as well. So, for example, when a user forgets their password to your on-premises AD, they can reset their password using the Azure AD password reset service we provide in the cloud, and then use their new password to sign on to your on-premises AD.&amp;nbsp; This makes it easier for organizations to enable a variety of self-service IT and password reset features to their employees and partners.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Preview of security questions for password reset&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;With today's release we’re also introducing preview support that enables you to configure security questions for password reset scenarios. This enables users to register their answers to secret questions, and then use those answers to prove who they are when they go to reset a forgotten password.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;Add your own password SSO for SaaS applications&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;With today's release we are introducing the preview of functionality that lets you configure password-based single sign-on for any web application that has an HTML sign-in page, even for applications that are not in the &lt;a href="http://azure.microsoft.com/en-us/marketplace/active-directory/#all"&gt;Azure AD Application Gallery&lt;/a&gt;. You can also add any links to your users’ &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn308588.aspx"&gt;Azure AD Access Panel&lt;/a&gt;, such as deep links to specific SharePoint pages, or to web apps that use Active Directory Federation Services.  &lt;h4&gt;&lt;em&gt;&lt;u&gt;More Ways to Get AD Premium&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; &lt;p&gt;We now support the ability to purchase Azure Active Directory Premium online at the &lt;a href="https://portal.office.com/commerce/catalog.aspx"&gt;Office 365 commerce catalogue&lt;/a&gt;, where you can purchase Azure AD Premium licenses for as many users as you want.&amp;nbsp; You can then easily manage your Azure Active Directory by navigating to &lt;a href="http://aka.ms/accessAAD"&gt;http://aka.ms/accessAAD&lt;/a&gt; or through the Office administration portal.&lt;u&gt;&lt;/u&gt;  &lt;p&gt;To learn more about these new capabilities and how you can start using them, read Alex Simons’ post on the &lt;a href="http://blogs.technet.com/b/ad/"&gt;Active Directory Team Blog&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://azure.microsoft.com/"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+Premium+Storage%2c+RemoteApp%2c+SQL+Database+Update%2c+Live+Media+Streaming%2c+Search+and+More&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+Premium+Storage%2c+RemoteApp%2c+SQL+Database+Update%2c+Live+Media+Streaming%2c+Search+and+More&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-premium-storage-remoteapp-sql-database-update-live-media-streaming-search-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Thu, 11 Dec 2014 19:14:56 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Apps-for-Office-with-AngularJS</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Apps-for-Office-with-AngularJS</link><category>Cloud</category><category>JavaScript</category><category>Microsoft Office</category><category>websites</category><title>Building Apps for Office with AngularJS</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by &lt;a href="http://www.actsolution.net/Pages/About-us/About-CEO.aspx"&gt;James Farhat&lt;/a&gt; to talk about building Apps for Office using HTML5 and AngularJS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="dev.office.com/getting-started"&gt;Getting Started with Office Development&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.visualstudio.com/en-us/products/visual-studio-community-vs"&gt;Visual Studio 2013 Community Edition&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://aka.ms/OfficeDevToolsForVS2013"&gt;Office Developer Tools for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://portal.office.com/Signup/MainSignup15.aspx?OfferId=6881A1CB-F4EB-4db3-9F18-388898DAF510&amp;amp;DL=DEVELOPERPACK&amp;amp;ali=1"&gt;Create an Office 365 Developer Tenant&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://dev.office.com/code-samples"&gt;Office 365 Code Samples&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/jamesfarhat/Office-Apps-Attachment-Code-Samples"&gt;Office App Attachment Sample&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:90b9f018d22a4d54ba84a3fc01483b80"&gt;</description><pubDate>Thu, 11 Dec 2014 19:04:52 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5.mp4" type="video/mp4" length="35901033" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Apps-for-Office-with-AngularJS</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by James Farhat to talk about building Apps for Office using HTML5 and AngularJS. Show Links Getting Started with Office DevelopmentVisual Studio 2013 Community EditionOffice Developer Tools for Visual Studio 2013Create an Office 365 Developer TenantOffice 365 Code SamplesOffice App Attachment Sample</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1094</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5.mp3" expression="full" duration="1094" fileSize="17509309" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5.mp4" expression="full" duration="1094" fileSize="35901033" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5.webm" expression="full" duration="1094" fileSize="100272601" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_high.mp4" expression="full" duration="1094" fileSize="238829628" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d4ca/a9d41d12-8360-4101-ac2b-b1a12d73d4ca/AppsForOfficeWithAngularJSAndHTML5_mid.mp4" expression="full" duration="1094" fileSize="147932602" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Apps-for-Office-with-AngularJS/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://jeffhandley.com/archive/2014/12/10/evolving-nuget-code-oredev-2014.aspx</guid><link>http://feeds.jeffhandley.com/~r/JeffHandley/~3/BHSs58MBfMA/evolving-nuget-code-oredev-2014.aspx</link><title>Evolving NuGet's Code at Øredev 2014</title><description>&lt;p&gt;
I had the pleasure of attending Øredev 2014 and presenting two sessions about evolving NuGet's code.  It was my first time attending the conference and it was a terrific experience.
&lt;/p&gt;
&lt;p&gt;
My sessions were essentially 3-year retrospectives on NuGet's code, both server-side and client-side.  I talked through how we built the projects, the initial goals and principles, what we've learned, and what our new principles are.
&lt;/p&gt;
&lt;p&gt;
If you work in a monolithic codebase that you feel is hard to maintain and add features to, and you have that strong desire to throw it all away and start over, then you might be able to relate to the stories.  We found, as many teams do, that there's never a good way to start over, and you have to find creative ways to replace subsystems of the giant beast.  The sessions tell the story of how we've been doing that with NuGet.
&lt;/p&gt;
&lt;h3&gt;Evolving the NuGet.org Architecture&lt;/h3&gt;
&lt;h4&gt;Video&lt;/h4&gt;
&lt;iframe src="//player.vimeo.com/video/111285814" width="500" height="300" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="http://vimeo.com/111285814"&gt;EVOLVING THE NUGET.ORG ARCHITECTURE&lt;/a&gt; from &lt;a href="http://vimeo.com/user4280938"&gt;Øredev Conference&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Slides&lt;/h4&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/41876591" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt; &lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/jeff-handley/evolving-thenugetorgarchitecture" title="Evolving the nuget.org Architecture" target="_blank"&gt;Evolving the nuget.org Architecture&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="//www.slideshare.net/jeff-handley" target="_blank"&gt;jeff-handley&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;h3&gt;NuGet 3.0 - Transitioning from OData to JSON-LD&lt;/h3&gt;
&lt;h4&gt;Video&lt;/h4&gt;
&lt;iframe src="//player.vimeo.com/video/111831403" width="500" height="300" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="http://vimeo.com/111831403"&gt;NuGet 3.0 – Transitioning from OData to JSON-LD&lt;/a&gt; from &lt;a href="http://vimeo.com/user4280938"&gt;Øredev Conference&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Slides&lt;/h4&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/41876590" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt; &lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/jeff-handley/nuget-30-transitioning-from-odata-to-jsonld" title="NuGet 3.0 - Transitioning from OData to JSON-LD" target="_blank"&gt;NuGet 3.0 - Transitioning from OData to JSON-LD&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="//www.slideshare.net/jeff-handley" target="_blank"&gt;jeff-handley&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;img src="http://jeffhandley.com/aggbug/301.aspx" width="1" height="1" /&gt;&lt;img src="//feeds.feedburner.com/~r/JeffHandley/~4/BHSs58MBfMA" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 10 Dec 2014 08:00:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Handley</dc:creator><comments>http://jeffhandley.com/archive/2014/12/10/evolving-nuget-code-oredev-2014.aspx#feedback</comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://jeffhandley.com/comments/commentRss/301.aspx</wfw:commentRss><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://jeffhandley.com/archive/2014/12/10/evolving-nuget-code-oredev-2014.aspx</feedburner:origLink></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Jq86d3P2UEY</guid><link>https://www.youtube.com/watch?v=Jq86d3P2UEY&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Dec 9th, 2014 - How we build it and how it layers</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Jq86d3P2UEY&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Jq86d3P2UEY/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Jq86d3P2UEY&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Dec 9th, 2014 - How we build it and how it layers&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2070&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;18
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;29:01&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 10 Dec 2014 00:16:26 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/Jq86d3P2UEY" /><a10:updated>2015-01-20T19:13:02Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060912</guid><link>http://www.asp.net/aspnet/overview/making-websites-with-aspnet/installing-aspnet-and-web-tools</link><title>Installing ASP.NET and Web Tools</title><description> Scott Hanselman walks through the process of installing ASP.NET, Visual Studio, and the tools you need to start developing your own website today.</description><pubDate>Fri, 05 Dec 2014 00:00:00 -0500</pubDate><enclosure url="http://video.ch9.ms/ch9/b91a/904ea569-5064-47df-b813-2851a0b6b91a/installingaspnetandwebtools_960.jpg" type="image/jpg" /></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,0b21af16-02fe-4428-9cdb-893947f4877b.aspx</guid><link>http://sedodream.com/2014/12/03/IClosedMyBBVACompassAccountBecauseTheyBelieveThatHi123IsAStrongPassword.aspx</link><title>I closed my BBVACompass account because they believe that “Hi123” is a strong password</title><description>&lt;p&gt;
OK, so this off topic, but its so important that I had to blog about this. Let me
give you some background. Last week I was traveling with my family on a road trip
to Canada. Usually I’m super paranoid and never connect to any open wireless network
(I pay for an carry my own mi-fi device due to this). Since we were in Canada I didn’t
want to get hit with so many charges so I chanced it on a few networks. I made sure
to connect to VPN as soon as I could, but there was still some time that I was not
completely protected. At one point I thought that my gmail account had been hacked
(&lt;em&gt;further investigation proved this to be false thankfully&lt;/em&gt;). So I connected
to a known network, applied VPN, double checked that my IP was routed through VPN
and started changing my critical passwords. One of those was an account with &lt;a href="https://www.bbvacompass.com/"&gt;BBVACompass&lt;/a&gt; bank.
I initially setup this account a while back, and evidently I wasn’t as concerned with
online security as I am now. 
&lt;/p&gt;
&lt;p&gt;
When I got to the password reset screen here is the tooltip indicating the password
requirements.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb.png" width="470" height="122"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In developer terms that 4-12 alphanumeric only. You cannot use any special characters
or spaces. I’m not a security expert so I reached out to &lt;a href="https://twitter.com/troyhunt"&gt;@TroyHunt&lt;/a&gt; (founder
of &lt;a title="https://haveibeenpwned.com/" href="https://haveibeenpwned.com/"&gt;https://haveibeenpwned.com/&lt;/a&gt; and
recognized security expert) to see what his thoughts were on this. Here is &lt;a href="https://twitter.com/troyhunt/status/537882940877721601"&gt;his
response&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_1.png" width="591" height="250"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Later in the conversation &lt;a href="https://twitter.com/troyhunt/status/537882940877721601"&gt;BBVACompass
chimed in&lt;/a&gt; stating
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_2.png" width="583" height="100"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
So I looked at the link &lt;a title="http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp" href="http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp"&gt;http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp&lt;/a&gt; to
see if there was some other way to authenticate which was more secure. From what I
understood from that link they have a service called “Site ID” which consists of the
following.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
You enter three security questions/answers 
&lt;li&gt;
When logging in on a new machine you are prompted for security questions/answers and
if the machine is “trusted” 
&lt;li&gt;
When logging in using a trusted machine the password is never submitted over the wire&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
The page that was linked to didn’t include any indication that this was “dual factor
authentication” as the @BBVACompass twitter account tried to pass on me. I let them
know that this is not two/dual factor auth. Even with “Site ID” if you log in on a
compromised machine all security questions/answers and password can be stolen and
users can effectively log in without me ever being notified. That defeats the purpose
of two factor auth. With two factor auth if I sign into google on a compromised machine
you will get my password but when you try and sign in later you’ll have to get access
to my phone’s text messages as well. That is true two factor auth, not security questions. 
&lt;/p&gt;
&lt;p&gt;
Another security expert &lt;a href="https://twitter.com/RobHale77"&gt;@RobHale77&lt;/a&gt; also
chimed in later with the comments below.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_3.png" width="588" height="98"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;What’s a strong password?
&lt;/h3&gt;
&lt;p&gt;
I decided to do a bit more investigation around how BBVACompass is representing password
strength on their change password page. I guessed that the password strength field
was being populated with JavaScript so I opened the site in my browser and use the
in-browser dev tools to look at the code. Here is the getPasswordStrength function,
comments were added by me.
&lt;/p&gt;
&lt;pre class="brush: js;"&gt;// This function will return an integer in the range of 0-100.
// The max that I've seen here is 90
function getPasswordStrength(H){
    var D=(H.length);
    if (D&amp;lt;4) { D=0; }
    if(D&amp;gt;5){
        D=5;
    }
    var F=H.replace(/[0-9]/g,"");
    var G=(H.length-F.length);
    if(G&amp;gt;3){G=3;}
    var A=H.replace(/\W/g,"");
    var C=(H.length-A.length);
    if(C&amp;gt;3){C=3;}
    var B=H.replace(/[A-Z]/g,"");
    var I=(H.length-B.length);
    if(I&amp;gt;3){I=3;}
    var E=((D*10)-20)+(G*10)+(C*15)+(I*10);
    if(E&amp;lt;0){E=0;}
    if(E&amp;gt;100){E=100;}
    return E;
}
&lt;/pre&gt;
&lt;p&gt;
Then this is converted to weak/medium/strong with the following js function, once
again comments were added by me.
&lt;/p&gt;
&lt;pre class="brush: js;"&gt;$.fn.passwordStrength = function( options ){
    return this.each(function(){
        var that = this;that.opts = {};
        that.opts = $.extend({}, $.fn.passwordStrength.defaults, options);
 
        that.div = $(that.opts.targetDiv);
        that.defaultClass = that.div.attr('class');
 
        // opts.classes is declared elsewhere as = Array('weak','medium','strong') so length is 3
        that.percents = (that.opts.classes.length) ? 100 / that.opts.classes.length : 100;
 
         v = $(this)
        .keyup(function(){
            if( typeof el == "undefined" )
                this.el = $(this);
            var s = getPasswordStrength (this.value);
            var p = this.percents;
            var t = Math.floor( s / p );
            
            // from what I can tell 's' will max out at 90 so this if statement will always be skipped
            if( 100 &amp;lt;= s )
                t = this.opts.classes.length - 1;
            
            // t now determines the index for weak/medium/strong
            // weak:     s &amp;lt;= 30
            // medium:    s 40-60 (inclusive)
            // strong:    s &amp;gt;= 70 (maximum I've seen is 90)
            
            this.div
                .removeAttr('class')
                .addClass( this.defaultClass )
                .addClass( this.opts.classes[ t ] );
 
        });
    });
&lt;/pre&gt;
&lt;p&gt;
Since the code is minified it somewhat difficult to follow. What I found was that
a strong password consisted of the following.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
3 numbers 
&lt;li&gt;
1 upper case letter 
&lt;li&gt;
1 lower case letter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
So I decided to try “Hi123” to see if I was right. Sure enough &lt;strong&gt;BBVACompass
told me that &lt;/strong&gt;the selected password &lt;strong&gt;Hi123 is a Strong password!&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_4.png" width="326" height="128"&gt;&lt;/a&gt; This
is beyond insane. It contains a word and a sequence of 3 numbers (&lt;em&gt;likely the most
common sequence at that as well&lt;/em&gt;). BBVACompass, this is misleading at best. This
is nowhere near strong, you are lying to your customers about the security of their
passwords. Here are some passwords and how BBVACompass represents their strength.
If you have an account you can verify this by going to the change password screen
under Online Banking Profile.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;weak&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
aaaa 
&lt;li&gt;
bbbb 
&lt;li&gt;
swrxwuppzx 
&lt;li&gt;
hlzzeseiyg 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;medium&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
1234 
&lt;li&gt;
a123 
&lt;li&gt;
HLZzESeiYG 
&lt;li&gt;
sWrXwUppZX 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;strong&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Hi123 
&lt;li&gt;
123Ab 
&lt;li&gt;
123Food 
&lt;li&gt;
111Hi 
&lt;li&gt;
111Aa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Why on earth is “hlzzeseiyg” &lt;strong&gt;weak&lt;/strong&gt; and “111Aa” is &lt;strong&gt;strong&lt;/strong&gt;?!
Clearly this has been poorly implemented and misleading, fix it now.
&lt;/p&gt;
&lt;h3&gt;What I would like to see as a consumer
&lt;/h3&gt;
&lt;p&gt;
My top recommendation for BBVACompass is to get a security expert/team involved to
redo your online security, but if you cannot afford that then follow what’s below.
&lt;/p&gt;
&lt;p&gt;
I’m not a security expert but here is &lt;a href="https://twitter.com/sayedihashimi/status/538433011914919936"&gt;what
I recommended to BBVACompass&lt;/a&gt; as a consumer.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
Support for very strong passwords. Those that are &amp;gt;= 20 characters and allowing
special characters 
&lt;li&gt;
Support for true two factor auth like password/text or password/call 
&lt;li&gt;
(&lt;em&gt;stretch goal&lt;/em&gt;) Support to view an audit log of devices that have recently
accessed my account&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I am getting all of the above features from google currently.
&lt;/p&gt;
&lt;h3&gt;Be more transparent about weak passwords
&lt;/h3&gt;
&lt;p&gt;
Now that I’ve seen the guts of their getPasswordStrength function I’d like to see
BBVACompass implement a better function for reporting password strength. One that
takes into account dictionary words, and common patterns. As stated I’m not a security
expert but after a quick search I found &lt;a title="http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/" href="http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/"&gt;http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/&lt;/a&gt; which
includes a pointer to live demo jquery.pwstrength.bootstrap (&lt;a title="http://jsfiddle.net/jquery4u/mmXV5/" href="http://jsfiddle.net/jquery4u/mmXV5/"&gt;http://jsfiddle.net/jquery4u/mmXV5/&lt;/a&gt;)
and StrongPass.js (&lt;a title="http://jsfiddle.net/dimitar/n8Dza/" href="http://jsfiddle.net/dimitar/n8Dza/"&gt;http://jsfiddle.net/dimitar/n8Dza/&lt;/a&gt;).
Below are the results for the same “Hi123” password from both.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_5.png" width="340" height="203"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_6.png" width="186" height="93"&gt;&lt;/a&gt;&amp;nbsp; 
&lt;/p&gt;
&lt;p&gt;
As you can see if BBVACompass had used readily available Open Source tools to verify
password strength we wouldn’t be having this conversation. Both reported the password
as being unacceptable.
&lt;/p&gt;
&lt;h3&gt;Accountability
&lt;/h3&gt;
&lt;p&gt;
&lt;strong&gt;As consumers we must hold our online service providers (especially banks)
accountable for online security&lt;/strong&gt;. For the tech savy bunch, it’s your responsibility
to educate your non-tech friends/family about online security and strong passwords.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;As a bank, BBVACompass, needs to hold their development team accountable&lt;/strong&gt; for
providing customers with secure access to accounts online as well as &lt;strong&gt;honest
indications for password strength&lt;/strong&gt;. You’re being dishonest, which means I
cannot trust you.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;h3&gt;Previous pleas ignored by BBVACompass
&lt;/h3&gt;
&lt;p&gt;
I did a search on twitter for @BBVACompass password and discovered that this has been
brought up multiple times by customers. The first of which I found occurred in November
2013! Tweets below.
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_7.png" width="588" height="106"&gt;&lt;/a&gt;&lt;a title="https://twitter.com/gumnos/status/406880230670749696" href="https://twitter.com/gumnos/status/406880230670749696"&gt;https://twitter.com/gumnos/status/406880230670749696&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_8.png" width="582" height="99"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a title="https://twitter.com/JasonSamfield/status/429448195119136768" href="https://twitter.com/JasonSamfield/status/429448195119136768"&gt;https://twitter.com/JasonSamfield/status/429448195119136768&lt;/a&gt;&amp;nbsp;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_9.png" width="571" height="103"&gt;&lt;/a&gt;&lt;a title="https://twitter.com/BenLake5/status/477262736208822273" href="https://twitter.com/BenLake5/status/477262736208822273"&gt;https://twitter.com/BenLake5/status/477262736208822273&lt;/a&gt; 
&lt;/p&gt;
&lt;p align="left"&gt;
BBVACompass, your customers have spoken and we are demanding better online security. &lt;strong&gt;Now
is the time to act&lt;/strong&gt;. I’ve already closed my account and I’ll be advising all
friends/family with a BBVACompass account to do the same. With recent security breaches
of Sony/Target/etc you need to start taking online security more seriously. This blog
post and twitter comments may end up with a few accounts closing, but if your customers
experience wide spread hacking then it will be much more severe. Fix this before it
is too late, &lt;strong&gt;this should be your top development priority IMO&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;h3&gt;My Promise to BBVACompass
&lt;/h3&gt;
&lt;p&gt;
BBVACompass if you support passwords &amp;gt;= 20 characters with special charcters within
90 days I will re-open my account with the same funds as which I closed it the next
time I’m in Florida.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Note: please post comments at &lt;a title="http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/" href="http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/"&gt;http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi &lt;a href="https://twitter.com/BenLake5/status/477262736208822273"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Wed, 03 Dec 2014 07:03:57 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=0b21af16-02fe-4428-9cdb-893947f4877b</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,0b21af16-02fe-4428-9cdb-893947f4877b.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
OK, so this off topic, but its so important that I had to blog about this. Let me
give you some background. Last week I was traveling with my family on a road trip
to Canada. Usually I’m super paranoid and never connect to any open wireless network
(I pay for an carry my own mi-fi device due to this). Since we were in Canada I didn’t
want to get hit with so many charges so I chanced it on a few networks. I made sure
to connect to VPN as soon as I could, but there was still some time that I was not
completely protected. At one point I thought that my gmail account had been hacked
(<em>further investigation proved this to be false thankfully</em>). So I connected
to a known network, applied VPN, double checked that my IP was routed through VPN
and started changing my critical passwords. One of those was an account with <a href="https://www.bbvacompass.com/">BBVACompass</a> bank.
I initially setup this account a while back, and evidently I wasn’t as concerned with
online security as I am now. 
</p>
        <p>
When I got to the password reset screen here is the tooltip indicating the password
requirements.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_2.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb.png" width="470" height="122"></img>
          </a>
        </p>
        <p>
In developer terms that 4-12 alphanumeric only. You cannot use any special characters
or spaces. I’m not a security expert so I reached out to <a href="https://twitter.com/troyhunt">@TroyHunt</a> (founder
of <a title="https://haveibeenpwned.com/" href="https://haveibeenpwned.com/">https://haveibeenpwned.com/</a> and
recognized security expert) to see what his thoughts were on this. Here is <a href="https://twitter.com/troyhunt/status/537882940877721601">his
response</a>.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_4.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_1.png" width="591" height="250"></img>
          </a>
        </p>
        <p>
Later in the conversation <a href="https://twitter.com/troyhunt/status/537882940877721601">BBVACompass
chimed in</a> stating
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_6.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_2.png" width="583" height="100"></img>
          </a>
        </p>
        <p>
So I looked at the link <a title="http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp" href="http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp">http://www.bbvacompass.com/customer-service/online-banking/siteid.jsp</a> to
see if there was some other way to authenticate which was more secure. From what I
understood from that link they have a service called “Site ID” which consists of the
following.
</p>
        <ol>
          <li>
You enter three security questions/answers 
</li>
          <li>
When logging in on a new machine you are prompted for security questions/answers and
if the machine is “trusted” 
</li>
          <li>
When logging in using a trusted machine the password is never submitted over the wire</li>
        </ol>
        <p>
The page that was linked to didn’t include any indication that this was “dual factor
authentication” as the @BBVACompass twitter account tried to pass on me. I let them
know that this is not two/dual factor auth. Even with “Site ID” if you log in on a
compromised machine all security questions/answers and password can be stolen and
users can effectively log in without me ever being notified. That defeats the purpose
of two factor auth. With two factor auth if I sign into google on a compromised machine
you will get my password but when you try and sign in later you’ll have to get access
to my phone’s text messages as well. That is true two factor auth, not security questions. 
</p>
        <p>
Another security expert <a href="https://twitter.com/RobHale77">@RobHale77</a> also
chimed in later with the comments below.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_8.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_3.png" width="588" height="98"></img>
          </a>
        </p>
        <h3>What’s a strong password?
</h3>
        <p>
I decided to do a bit more investigation around how BBVACompass is representing password
strength on their change password page. I guessed that the password strength field
was being populated with JavaScript so I opened the site in my browser and use the
in-browser dev tools to look at the code. Here is the getPasswordStrength function,
comments were added by me.
</p>
        <pre class="brush: js;">// This function will return an integer in the range of 0-100.
// The max that I've seen here is 90
function getPasswordStrength(H){
    var D=(H.length);
    if (D&lt;4) { D=0; }
    if(D&gt;5){
        D=5;
    }
    var F=H.replace(/[0-9]/g,"");
    var G=(H.length-F.length);
    if(G&gt;3){G=3;}
    var A=H.replace(/\W/g,"");
    var C=(H.length-A.length);
    if(C&gt;3){C=3;}
    var B=H.replace(/[A-Z]/g,"");
    var I=(H.length-B.length);
    if(I&gt;3){I=3;}
    var E=((D*10)-20)+(G*10)+(C*15)+(I*10);
    if(E&lt;0){E=0;}
    if(E&gt;100){E=100;}
    return E;
}
</pre>
        <p>
Then this is converted to weak/medium/strong with the following js function, once
again comments were added by me.
</p>
        <pre class="brush: js;">$.fn.passwordStrength = function( options ){
    return this.each(function(){
        var that = this;that.opts = {};
        that.opts = $.extend({}, $.fn.passwordStrength.defaults, options);
 
        that.div = $(that.opts.targetDiv);
        that.defaultClass = that.div.attr('class');
 
        // opts.classes is declared elsewhere as = Array('weak','medium','strong') so length is 3
        that.percents = (that.opts.classes.length) ? 100 / that.opts.classes.length : 100;
 
         v = $(this)
        .keyup(function(){
            if( typeof el == "undefined" )
                this.el = $(this);
            var s = getPasswordStrength (this.value);
            var p = this.percents;
            var t = Math.floor( s / p );
            
            // from what I can tell 's' will max out at 90 so this if statement will always be skipped
            if( 100 &lt;= s )
                t = this.opts.classes.length - 1;
            
            // t now determines the index for weak/medium/strong
            // weak:     s &lt;= 30
            // medium:    s 40-60 (inclusive)
            // strong:    s &gt;= 70 (maximum I've seen is 90)
            
            this.div
                .removeAttr('class')
                .addClass( this.defaultClass )
                .addClass( this.opts.classes[ t ] );
 
        });
    });
</pre>
        <p>
Since the code is minified it somewhat difficult to follow. What I found was that
a strong password consisted of the following.
</p>
        <ul>
          <li>
3 numbers 
</li>
          <li>
1 upper case letter 
</li>
          <li>
1 lower case letter</li>
        </ul>
        <p>
So I decided to try “Hi123” to see if I was right. Sure enough <strong>BBVACompass
told me that </strong>the selected password <strong>Hi123 is a Strong password!</strong></p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_10.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_4.png" width="326" height="128"></img>
          </a> This
is beyond insane. It contains a word and a sequence of 3 numbers (<em>likely the most
common sequence at that as well</em>). BBVACompass, this is misleading at best. This
is nowhere near strong, you are lying to your customers about the security of their
passwords. Here are some passwords and how BBVACompass represents their strength.
If you have an account you can verify this by going to the change password screen
under Online Banking Profile.
</p>
        <p>
          <strong>
            <u>weak</u>
          </strong>
        </p>
        <ul>
          <li>
aaaa 
</li>
          <li>
bbbb 
</li>
          <li>
swrxwuppzx 
</li>
          <li>
hlzzeseiyg 
</li>
        </ul>
        <p>
          <strong>
            <u>medium</u>
          </strong>
        </p>
        <ul>
          <li>
1234 
</li>
          <li>
a123 
</li>
          <li>
HLZzESeiYG 
</li>
          <li>
sWrXwUppZX 
</li>
        </ul>
        <p>
          <strong>
            <u>strong</u>
          </strong>
        </p>
        <ul>
          <li>
Hi123 
</li>
          <li>
123Ab 
</li>
          <li>
123Food 
</li>
          <li>
111Hi 
</li>
          <li>
111Aa</li>
        </ul>
        <p>
Why on earth is “hlzzeseiyg” <strong>weak</strong> and “111Aa” is <strong>strong</strong>?!
Clearly this has been poorly implemented and misleading, fix it now.
</p>
        <h3>What I would like to see as a consumer
</h3>
        <p>
My top recommendation for BBVACompass is to get a security expert/team involved to
redo your online security, but if you cannot afford that then follow what’s below.
</p>
        <p>
I’m not a security expert but here is <a href="https://twitter.com/sayedihashimi/status/538433011914919936">what
I recommended to BBVACompass</a> as a consumer.
</p>
        <ol>
          <li>
Support for very strong passwords. Those that are &gt;= 20 characters and allowing
special characters 
</li>
          <li>
Support for true two factor auth like password/text or password/call 
</li>
          <li>
(<em>stretch goal</em>) Support to view an audit log of devices that have recently
accessed my account</li>
        </ol>
        <p>
I am getting all of the above features from google currently.
</p>
        <h3>Be more transparent about weak passwords
</h3>
        <p>
Now that I’ve seen the guts of their getPasswordStrength function I’d like to see
BBVACompass implement a better function for reporting password strength. One that
takes into account dictionary words, and common patterns. As stated I’m not a security
expert but after a quick search I found <a title="http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/" href="http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/">http://www.sitepoint.com/5-bootstrap-password-strength-metercomplexity-demos/</a> which
includes a pointer to live demo jquery.pwstrength.bootstrap (<a title="http://jsfiddle.net/jquery4u/mmXV5/" href="http://jsfiddle.net/jquery4u/mmXV5/">http://jsfiddle.net/jquery4u/mmXV5/</a>)
and StrongPass.js (<a title="http://jsfiddle.net/dimitar/n8Dza/" href="http://jsfiddle.net/dimitar/n8Dza/">http://jsfiddle.net/dimitar/n8Dza/</a>).
Below are the results for the same “Hi123” password from both.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_12.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_5.png" width="340" height="203"></img>
          </a>
        </p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_14.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_6.png" width="186" height="93"></img>
          </a>  
</p>
        <p>
As you can see if BBVACompass had used readily available Open Source tools to verify
password strength we wouldn’t be having this conversation. Both reported the password
as being unacceptable.
</p>
        <h3>Accountability
</h3>
        <p>
          <strong>As consumers we must hold our online service providers (especially banks)
accountable for online security</strong>. For the tech savy bunch, it’s your responsibility
to educate your non-tech friends/family about online security and strong passwords.
</p>
        <p>
          <strong>As a bank, BBVACompass, needs to hold their development team accountable</strong> for
providing customers with secure access to accounts online as well as <strong>honest
indications for password strength</strong>. You’re being dishonest, which means I
cannot trust you.
</p>
        <p>
 
</p>
        <h3>Previous pleas ignored by BBVACompass
</h3>
        <p>
I did a search on twitter for @BBVACompass password and discovered that this has been
brought up multiple times by customers. The first of which I found occurred in November
2013! Tweets below.
</p>
        <p align="center">
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_16.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_7.png" width="588" height="106"></img>
          </a>
          <a title="https://twitter.com/gumnos/status/406880230670749696" href="https://twitter.com/gumnos/status/406880230670749696">https://twitter.com/gumnos/status/406880230670749696</a>
        </p>
        <p align="center">
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_18.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_8.png" width="582" height="99"></img>
          </a>
        </p>
        <p align="center">
          <a title="https://twitter.com/JasonSamfield/status/429448195119136768" href="https://twitter.com/JasonSamfield/status/429448195119136768">https://twitter.com/JasonSamfield/status/429448195119136768</a> 
</p>
        <p align="center">
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_20.png">
            <img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IclosemyBBVACompassaccountbecausetheybel_13580/image_thumb_9.png" width="571" height="103"></img>
          </a>
          <a title="https://twitter.com/BenLake5/status/477262736208822273" href="https://twitter.com/BenLake5/status/477262736208822273">https://twitter.com/BenLake5/status/477262736208822273</a>
        </p>
        <p align="left">
BBVACompass, your customers have spoken and we are demanding better online security. <strong>Now
is the time to act</strong>. I’ve already closed my account and I’ll be advising all
friends/family with a BBVACompass account to do the same. With recent security breaches
of Sony/Target/etc you need to start taking online security more seriously. This blog
post and twitter comments may end up with a few accounts closing, but if your customers
experience wide spread hacking then it will be much more severe. Fix this before it
is too late, <strong>this should be your top development priority IMO</strong>.
</p>
        <p>
        </p>
        <p>
        </p>
        <p>
        </p>
        <h3>My Promise to BBVACompass
</h3>
        <p>
BBVACompass if you support passwords &gt;= 20 characters with special charcters within
90 days I will re-open my account with the same funds as which I closed it the next
time I’m in Florida.
</p>
        <p>
 
</p>
        <p>
Note: please post comments at <a title="http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/" href="http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/">http://www.reddit.com/r/technology/comments/2o4uat/i_closed_my_bbvacompass_account_because_they/</a>.
</p>
        <p>
Sayed Ibrahim Hashimi <a href="https://twitter.com/BenLake5/status/477262736208822273">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10577494</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/12/02/ef7-priorities-focus-and-initial-release.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF7 - Priorities, Focus, and Initial Release</title><description>&lt;p&gt;We all know, you don’t get to write software in a vacuum. Aside from the technical task we are trying to achieve there are things such as dependencies, stakeholders, release dates, etc. that impact the order and priority of tasks we do. In this post we wanted to share the top factors influencing the features and scenarios we focus on first.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where are we at?&lt;/h2&gt;  &lt;p&gt;Up until recently we’ve been focused on validating our “&lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;New Platforms, New Data Stores&lt;/a&gt;” vision for EF7. This has meant building out a core framework, experimenting with patterns to support data stores with different capabilities, and implementing providers to validate our work.&lt;/p&gt;  &lt;p&gt;In terms of data stores, we have experimented with SQL Server, SQLite, InMemory, Azure Table Storage, and Redis providers. We’ve also had discussions with other folks looking at DocumentDB, SQL Compact, and MongoDB providers. &lt;/p&gt;  &lt;p&gt;For platforms, we have targeted traditional .NET Framework applications (WPF, WinForms, Console, and ASP.NET 4), Phone/Store/Universal, and ASP.NET 5 (a.k.a ASP.NET vNext).&lt;/p&gt;  &lt;p&gt;The vision for EF7 is “a core framework that handles concepts common to most data stores with provider specific extensions that become available when you target a specific provider”. At this stage we feel confident that our architecture works well for our initial scenarios/providers and can evolve to accommodate future requirements.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;Now that we are confident we are building the right thing, it’s time to start working towards a product that developers can use to write real applications with.&lt;/p&gt;  &lt;p&gt;This means we need to focus on tasks such as completing functionality, improving quality, ensuring performance, adding logging, exploring usability, etc.&lt;/p&gt;  &lt;p&gt;One approach to this would be to plug away until we have a production ready product for all providers and platforms that has all the standard features that we expect from an O/RM (of course, with plenty of previews along the way). If we operated in a vacuum, this is the approach our team would choose to take as it would mean we would launch with the best possible product.&lt;strong&gt; However, in the real world we have a series of partners and commitments that mean we need to focus on meeting these goals in incremental steps.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s our top priority?&lt;/h2&gt;  &lt;p&gt;Our team’s top commitment is to provide a data access stack for ASP.NET 5. Because ASP.NET 5 allows apps to target CoreCLR, the existing EF6.x product cannot provide this functionality (as it does not run on CoreCLR and it is not feasible to update it to do so). Within ASP.NET 5 our primary focus is on SQL Server, and then PostgreSQL to support the standard Mac/Linux environment.&lt;/p&gt;  &lt;p&gt;Because ASP.NET 5 applications can also target the full .NET Framework, fulfilling our commitments to ASP.NET 5 will also allow EF7 to be used in other applications that target full .NET (WPF, WinForms, Console, and ASP.NET 4).&lt;/p&gt;  &lt;p&gt;After fulfilling our ASP.NET 5 commitments, the other priorities of our team are as follows. These are in no particular order and we will likely work on them in parallel.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Implement additional features &lt;/li&gt;    &lt;li&gt;Support EF7 on other platforms (Phone, Store, etc.) &lt;/li&gt;    &lt;li&gt;Deliver additional providers that our team will own (SQLite, Azure Table Storage, etc.) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What does this mean?&lt;/h2&gt;  &lt;h3&gt;Scoping functionality for ASP.NET 5 release&lt;/h3&gt;  &lt;p&gt;To meet the dates for the initial release of ASP.NET 5 we are going to have to scope the functionality of EF7 to exclude some features that we would consider basic O/RM functionality. Examples of this include lazy loading and inheritance mapping patterns.&lt;/p&gt;  &lt;p&gt;Because of this, we won’t be pushing EF7 as the ‘go-to release’ for all platforms at the time of initial ASP.NET 5 release. More details on this later in the post.&lt;/p&gt;  &lt;h3&gt;Temporary removal of providers from working branch&lt;/h3&gt;  &lt;p&gt;In order to focus on our top priorities we are going to move several providers to a separate branch that we will not always keep updated with the latest changes. The packages will also not be published as part of nightly builds or pre-releases to NuGet.org. The impacted providers are SQLite, Azure Table Storage, and Redis. This will allow us to iterate on the core framework without the overhead of keeping multiple providers and their tests up-to-date as we go through various interim stages of the core framework. &lt;/p&gt;  &lt;p&gt;Once we have stabilized the core and the code churn reduces, we will bring back the additional providers to validate the core framework again and begin working towards an initial release of these providers. &lt;/p&gt;  &lt;p&gt;One important implication is that the SQLite provider will temporarily not be kept up-to-date or published in our nightly builds. &lt;strong&gt;This temporarily removes the ability to target Phone/Store applications during this period&lt;/strong&gt;. &lt;/p&gt;  &lt;h3&gt;Tasks we’ll be working on&lt;/h3&gt;  &lt;p&gt;Scoping features and removing some providers will allow us to focus on the following activities for the initial ASP.NET 5 release.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Complete in-flight features &lt;/li&gt;    &lt;li&gt;Fix bugs &lt;/li&gt;    &lt;li&gt;Add test coverage &lt;/li&gt;    &lt;li&gt;Test and improve performance &lt;/li&gt;    &lt;li&gt;API reviews &lt;/li&gt;    &lt;li&gt;Exploratory Testing &lt;/li&gt;    &lt;li&gt;Clear exceptions for unsupported scenarios&lt;/li&gt;    &lt;li&gt;Documentation &lt;/li&gt;    &lt;li&gt;Add logging throughout stack &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Initial release for ASP.NET 5 != recommended release&lt;/h2&gt;  &lt;p&gt;As previously mentioned, we won’t be pushing EF7 as the ‘go-to release’ for all platforms at the time of the initial release to support ASP.NET 5. EF7 will be the default data stack for ASP.NET 5 applications, but we will not recommend it as an alternative to EF6 in other applications until we have more functionality implemented.&lt;/p&gt;  &lt;p&gt;Given that ASP.NET 5 is in the same ‘&lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/10/27/ef7-v1-or-v7.aspx"&gt;part v1 and part vNext&lt;/a&gt;’ position as EF, the missing features will be less of an issue. We will of course be working to make them available ASAP.&lt;/p&gt;  &lt;p&gt;We are discussing ways to make this clearer when it comes time to ship a stable version of the EntityFramework package to support ASP.NET 5. We haven’t locked on the details yet (and won’t until we get closer to release) but some options we are considering are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Still have the NuGet package marked as pre-release so that it is not installed when you ask for the latest stable version.&lt;/li&gt;    &lt;li&gt;Only support the ASP.NET 5 platforms so that it is not inadvertently installed in other applications. In this scenario you could still install a pre-release package for use on other platforms.&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Summary&lt;/h2&gt;  &lt;p&gt;To ensure we meet our primary commitments to ASP.NET 5 we are going to be focusing on rounding out the existing features and the SQL Server provider for EF7. &lt;/p&gt;  &lt;p&gt;This means scoping out some very important features and we will not be encouraging folks to transition from EF6 to EF7 until these features are added.&lt;/p&gt;  &lt;p&gt;We will temporarily be suspending work on SQLite, Azure Table Storage, and Redis providers and they will not be included in nightly builds. These are important scenarios for us and we will re-enable them as soon as we meet our ASP.NET 5 commitments.&lt;/p&gt;  &lt;p&gt;We understand this is disappointing to many folks. Most notably, temporarily disabling Phone/Store was a painful decision for us to make. Our team would love to work in isolation and make EF7 a complete and polished product on many providers and platforms before initial release. Unfortunately that is not the case, so we’re working to meet our commitments while still delivering on the all up vision in a reasonable time frame.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10577494" width="1" height="1"&gt;</description><pubDate>Tue, 02 Dec 2014 20:24:02 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">61</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10577494</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/12/02/ef7-priorities-focus-and-initial-release.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Create-your-own-Domain-Specific-Language-in-ASPNET-with-TagHelpers</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Create-your-own-Domain-Specific-Language-in-ASPNET-with-TagHelpers</link><category>ASP.NET</category><category>Cloud</category><category>domain-specific language</category><category>Web Development</category><title>Create your own Domain Specific Language in ASP.NET with TagHelpers</title><description>&lt;div class="entry-content"&gt;&lt;div id="entry-body"&gt;&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week we are joined by&amp;nbsp;&lt;a href="http://www.ntaylormullen.com/"&gt;Taylor Mullen&lt;/a&gt; of the ASP.NET Razor Team on the topic of ASP.NET TagHelpers. TagHelpers are used to help simplify your views by enabling HTML tags in your markup to have additional functionality by enabling TagHelpers in your ASP.NET Project.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Download the &lt;a href="http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs"&gt;Visual Studio 2015 Preview&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/aspnet-5-overview"&gt;ASP.NET 5 Overview&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Damian Edwards &lt;a href="https://github.com/DamianEdwards/TagHelperStarterWeb"&gt;TagHelperStarterWeb&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/ntaylormullen"&gt;Follow Taylor on Twitter&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:dc243e6331864869b953a3f5000d859a"&gt;</description><pubDate>Tue, 02 Dec 2014 17:53:11 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers.mp4" type="video/mp4" length="87102655" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Create-your-own-Domain-Specific-Language-in-ASPNET-with-TagHelpers</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week we are joined by Taylor Mullen of the ASP.NET Razor Team on the topic of ASP.NET TagHelpers. TagHelpers are used to help simplify your views by enabling HTML tags in your markup to have additional functionality by enabling TagHelpers in your ASP.NET Project. Show Links Download the Visual Studio 2015 PreviewASP.NET 5 OverviewDamian Edwards TagHelperStarterWebFollow Taylor on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3037</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers.mp3" expression="full" duration="3037" fileSize="48607619" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers.mp4" expression="full" duration="3037" fileSize="87102655" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers.webm" expression="full" duration="3037" fileSize="236058588" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_high.mp4" expression="full" duration="3037" fileSize="439707540" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1737/6d1b6f8b-1b6d-4630-9835-2997271b1737/TaylorMullenExplainsDSLsInASPNETWithTagHelpers_mid.mp4" expression="full" duration="3037" fileSize="298062390" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">17</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Create-your-own-Domain-Specific-Language-in-ASPNET-with-TagHelpers/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/zN3ZwrQ1ZYM</guid><link>https://www.youtube.com/watch?v=zN3ZwrQ1ZYM&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Dec 2nd, 2014 - Upgrading to dailies</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=zN3ZwrQ1ZYM&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/zN3ZwrQ1ZYM/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=zN3ZwrQ1ZYM&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Dec 2nd, 2014 - Upgrading to dailies&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2396&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;32
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;20:36&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=26"&gt;Howto &amp;amp; Style&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 02 Dec 2014 18:36:15 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/zN3ZwrQ1ZYM" /><a10:updated>2015-01-04T02:13:07Z</a10:updated></item><item><guid isPermaLink="false">http://jeffhandley.com/archive/2014/11/28/Volunteering-with-Cub-Scouts.aspx</guid><link>http://feeds.jeffhandley.com/~r/JeffHandley/~3/C9qf_Uaza4k/Volunteering-with-Cub-Scouts.aspx</link><title>Volunteering with Cub Scouts</title><description>&lt;p&gt;
I've volunteered with the Cub Scouts for the last 5 years and it's been a great experience.  As I'm winding down my role in the pack, I was asked to write a testimonial about how rewarding it has been to be involved.  Here it is.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Spending my days working in an office on a computer, I generally declare that I'm not very handy.  As my sons showed interest in building and fixing things, I would often tell them that I was not capable of doing it.  But after 5 years of volunteering with Pack 561, I've learned that in fact, &lt;u&gt;&lt;b&gt;I am handy, and I can build and fix things&lt;/b&gt;&lt;/u&gt;!
&lt;/p&gt;
&lt;p&gt;
You see, as adults, we tend to know our boundaries; we know what we can and cannot do.  But our children are still learning their boundaries.  And Cub Scouts are taught that in fact, there are no boundaries--you can do whatever you're interested in!  If you want to learn how to whittle, you can!  If you want to learn how to build a Derby car, you can!  If you want to learn how to identify trees, birds, or animal poop, you can!  You can tour a TV station.  You can meet and interview the mayor.  You can experience what it's like to sit in a fire truck or inside a jail cell.  You can learn a little bit about a lot of things so that you can discover what you want to learn more about.
&lt;/p&gt;
&lt;p&gt;
When I first started volunteering with Pack 561, I faced some boundaries.  How could I possibly teach children how to build a Derby car when I've never built one myself?  How could I possibly lead them on a trek at the Arboretum, identifying birds, when I can't tell the difference between a cardinal and a robin?  I can't do these things and I'm too old to learn.  But when I saw first-hand the eagerness to learn that our Scouts have, it rubbed off on me.  I can learn how to build a Derby car!  I can learn to identify birds!  &lt;u&gt;&lt;b&gt;I can learn all kinds of things&lt;/b&gt;&lt;/u&gt;!
&lt;/p&gt;
&lt;p&gt;
I may not have been in Scouts when I was a boy, but I've spent the last 5 years volunteering with the Scouts, and I've learned so much.  But the most important thing I've learned is that I don't have as many boundaries as I thought I had, and I'm not too old to learn about all of the exciting topics that my sons want to learn about themselves.  And just today, I worked with my sons to to take apart and fix two of their toys that have been broken for years.  I used to tell them that I didn't know how to build and fix things, but today I proved to them that &lt;u&gt;&lt;b&gt;life isn't about what you know, it's about what you are willing to learn&lt;/b&gt;&lt;/u&gt;.
&lt;/p&gt;
&lt;p&gt;
Jeff Handley
&lt;/p&gt;
&lt;p&gt;
Den Leader, Den 2 (2009-2015)&lt;br /&gt;
Den Leader, Den 4 (2011-2014)&lt;br /&gt;
Derby Car Workshop Host (2012-2014)&lt;br /&gt;
Webmaster (2013-2014)&lt;br /&gt;
Honorary Scout (2009-2015)
&lt;/p&gt;
&lt;/blockquote&gt;&lt;img src="http://jeffhandley.com/aggbug/300.aspx" width="1" height="1" /&gt;&lt;img src="//feeds.feedburner.com/~r/JeffHandley/~4/C9qf_Uaza4k" height="1" width="1" alt=""/&gt;</description><pubDate>Sat, 29 Nov 2014 06:56:24 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Handley</dc:creator><comments>http://jeffhandley.com/archive/2014/11/28/Volunteering-with-Cub-Scouts.aspx#feedback</comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://jeffhandley.com/comments/commentRss/300.aspx</wfw:commentRss><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://jeffhandley.com/archive/2014/11/28/Volunteering-with-Cub-Scouts.aspx</feedburner:origLink></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10575597</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/24/content-negotiation-in-mvc-5-or-how-can-i-just-write-json.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET/">ASP.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/-NET/">.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/tips+and+tricks/">tips and tricks</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+Framework/">ASP.NET MVC Framework</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+Web+Api/">ASP.NET Web Api</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/JSON/">JSON</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/webapi/">webapi</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+vNext/">ASP.NET vNext</category><title>Content negotiation in MVC 6 (or how can I just write JSON)</title><description>&lt;h3&gt;[Update] - We decided to make two significant changes starting with Beta3, we are to not include the XML formatter by default, as well as special treat browsers. The content below is still relevant up to MVC 6 Beta2.&lt;/h3&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;In this blog, I intend to provide a simplified how-things-work and how-to-change-the-behavior. It is not intended as a deep dive into content negotiation.&lt;/p&gt;
&lt;p&gt;Since Web API 1 controller code can return an object of an arbitrary type and the framework will send it as JSON or XML to the client. The process of picking the output format is called &amp;ldquo;content negotiation&amp;rdquo;. The basic rules can be described simply as:&lt;/p&gt;
&lt;p&gt;1. The framework will attempt to return the format that the client asked for using the &lt;strong&gt;Accept &lt;/strong&gt;header.&lt;/p&gt;
&lt;p&gt;2. In absence of a specific format requested or inferred, the default format is JSON.&lt;/p&gt;
&lt;p&gt;3. If the format the client asked for is &lt;strong&gt;not available&lt;/strong&gt; the framework will return the default format JSON. (Example: accept header was application/DoesNotExistFormat)&lt;/p&gt;
&lt;p&gt;MVC 6 combined Web API and MVC into a single framework. Although content negotiation was revamped, the basic rules have not changed. There are some enhancements to the API, factoring of the code and a few behavior improvements for edge cases have been added.&lt;/p&gt;
&lt;p&gt;A common question about content negotiation is: Why is my API returning XML by default. Nine out of ten times the reason is that the developer is using a browser to test the API, using Chrome or FireFox. The Chrome browser is asking for XML in the accept header and the server follows the above rules.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Here is a simple GET request from Chrome to localhost:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1 &lt;br /&gt;Host: localhost:5001 &lt;br /&gt;Proxy-Connection: keep-alive &lt;br /&gt;&lt;strong&gt;Accept: &lt;/strong&gt;text/html,application/xhtml+xml,&lt;strong&gt;application/xml&lt;/strong&gt;;q=0.9,image/webp,*/*;q=0.8 &lt;br /&gt;User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36 &lt;br /&gt;Accept-Encoding: gzip, deflate, sdch &lt;br /&gt;Accept-Language: en-US,en;q=0.8,he;q=0.6&lt;/p&gt;
&lt;p&gt;Note that the accept header asks for several formats including &lt;strong&gt;application/xml&lt;/strong&gt;, but does not ask for application/json. Hence the server will just return the only format it can match which is XML.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;In contrast if we made the same request with IE it will simply not ask for XML:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1 &lt;br /&gt;&lt;strong&gt;Accept: text/html, application/xhtml+xml, */*&lt;/strong&gt; &lt;br /&gt;Accept-Language: en-US,en;q=0.7,he;q=0.3 &lt;br /&gt;User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko &lt;br /&gt;Accept-Encoding: gzip, deflate &lt;br /&gt;Host: localhost:5001 &lt;br /&gt;DNT: 1 &lt;br /&gt;Proxy-Connection: Keep-Alive&lt;/p&gt;
&lt;p&gt;Since the browser did not ask for any format that the framework recognizes, it will fallback to the default rule and return JSON data.&lt;/p&gt;
&lt;p&gt;Note: q factors are assigned to specific accept headers, this is something content negotiation will support. This blog doesn&amp;rsquo;t cover these scenarios.&lt;/p&gt;
&lt;h3&gt;What do I do about it&lt;/h3&gt;
&lt;p&gt;There are a few ways to look at it, the simplest one is to &lt;strong&gt;use the right tool for the right job&lt;/strong&gt;. The browser&amp;rsquo;s job is to render &lt;strong&gt;HTML&lt;/strong&gt;, so why use it to test your APIs? There are much better tools for that, like Fiddler, browser dev tools, or test your javascript call to the API rather than hitting it directly from the browser.&lt;/p&gt;
&lt;p&gt;For me this is where I stop, the API is behaving as expected and will support any client following the HTTP spec.&lt;/p&gt;
&lt;h3&gt;Thanks for your advice, but I still want to just return JSON!&lt;/h3&gt;
&lt;p&gt;Many developers just care about returning JSON, while others still want to be able to content negotiate the result for some actions.&lt;/p&gt;
&lt;p&gt;Here are some ways to implement the behavior.&lt;/p&gt;
&lt;h4&gt;Return a JSON result explicitly&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Pros &amp;ndash; The code is simple to read, and there is no magic involved. It&amp;rsquo;s easy to test, and you can mix in other action results.&lt;/li&gt;
&lt;li&gt;Cons &amp;ndash; The code is explicit, and there is no notion of what is going to get returned for any introspection APIs such as &amp;ldquo;ApiDescriptionProvider&amp;rdquo;. ApiDescriptionProvider is the replacement to ApiExplorer. &lt;/li&gt;
&lt;/ul&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:740fd584-3797-4b5d-8dd4-30b2aa9bf3bd" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 300px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;IActionResult&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetMeData()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; data = GetDataFromSource();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;if&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; (data == &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; HttpNotFound();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; Json(data);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Remove the XML output formatter from the system.&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Pros &amp;ndash; A single change in options.&lt;/li&gt;
&lt;li&gt;Cons &amp;ndash; This is a global approach that removes XML from content negotiation. If one of the clients requires XML it is not longer available by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;note: In MVC6 XmlOutputSerializer was broken into two distinct serializers. The one below is registered by default.&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:65e5e377-fd8e-4cf2-b56a-312d24729960" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 300px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;services.Configure&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;MvcOptions&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;gt;(options =&amp;gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;options&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;.OutputFormatters&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;.RemoveAll(&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;formatter =&amp;gt; formatter.Instance &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;is&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;XmlDataContractSerializerOutputFormatter&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Use the &lt;strong&gt;[Produces(&amp;ldquo;application/json&amp;rdquo;)]&lt;/strong&gt; attribute &amp;ndash; New in MVC 6&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Pros &amp;ndash; Keeps code in the action simple, and can be applied locally or globally in various ways.&lt;/li&gt;
&lt;li&gt;Cons &amp;ndash; Can&amp;rsquo;t mix a string with Produces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;By applying the attribute to an action&lt;/strong&gt;&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:978cfebe-032c-4ce4-a55f-1e7dee09d1ef" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 300px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;[&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Produces&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515;"&gt;"application/json"&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;)]&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;List&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Data&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;gt; GetMeData()&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetDataFromSource();&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;By adding the filter globally to startup.cs&lt;/strong&gt;&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:83abfbf0-0e3d-45f1-8c82-8f12e77653f9" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;services.Configure&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;MvcOptions&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;gt;(options =&amp;gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;options.Filters.Add(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;ProducesAttribute&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515;"&gt;"application/json"&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;))&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;By applying it to a base class&lt;/strong&gt;&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:83f7e85c-c1be-4796-9360-f71166784129" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 500px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;[&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Produces&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515;"&gt;"application/json"&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;)]&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;JsonController&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; : &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Controller&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; { }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;HomeController&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; : &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;JsonController&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;List&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Data&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;gt; GetMeData()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetDataFromSource();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;What else changed in content negotiation in MVC 6&lt;/h3&gt;
&lt;p&gt;1. If the controller returns a string (regardless of declared return type), expect to get a text/plain content type.&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:9fbf9661-3407-4792-8223-242e5c6ac94e" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 300px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;object&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetData()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515;"&gt;"The Data"&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;;&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetString()&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515;"&gt;"The Data"&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2. If the controller return null or the return type is void, expect a status code of 204 (NoContent) rather than 200. And the body will be empty.&lt;/p&gt;
&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:8fcfd6c4-4f85-4a47-91e7-7505949cfc1d" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;"&gt;
&lt;div style="background: #fff; max-height: 500px; overflow: auto;"&gt;&lt;ol style="background: #ffffff; margin: 0; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Task&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; DoSomethingAsync()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #008000;"&gt;// Do something.&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; DoSomething()&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #008000;"&gt;// Do something.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt; GetString()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;;&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;List&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af;"&gt;Data&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;&amp;gt; GetData()&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="background: #ffffff; color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background: #ffffff; color: #000000;"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Both the behaviors above are controlled by the &lt;a href="https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNet.Mvc.Core/Formatters/HttpNoContentOutputFormatter.cs"&gt;HttpNoContentOutputFormatter&lt;/a&gt; and the &lt;a href="https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNet.Mvc.Core/Formatters/TextPlainFormatter.cs"&gt;TextPlainFormatter&lt;/a&gt;. Both these behaviors can be overridden by removing the formatters from the &lt;strong&gt;Options.OutputFormatter&lt;/strong&gt; collection, similarly to how the XML formatter was removed in the example above.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10575597" width="1" height="1"&gt;</description><pubDate>Mon, 24 Nov 2014 18:34:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yishai G_</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">13</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10575597</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/24/content-negotiation-in-mvc-5-or-how-can-i-just-write-json.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Ng0Y0zMOrxk</guid><link>https://www.youtube.com/watch?v=Ng0Y0zMOrxk&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Nov 18th, 2014 - Open Source All The Things</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Ng0Y0zMOrxk&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Ng0Y0zMOrxk/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Ng0Y0zMOrxk&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Nov 18th, 2014 - Open Source All The Things&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2701&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;37
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;18:41&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 18 Nov 2014 18:25:53 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/Ng0Y0zMOrxk" /><a10:updated>2014-12-11T15:33:47Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/_zwW5Kdn4Os</guid><link>https://www.youtube.com/watch?v=_zwW5Kdn4Os&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Tour of changes between Windows 10 9860 and 9879 Technical Preview</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=_zwW5Kdn4Os&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/_zwW5Kdn4Os/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=_zwW5Kdn4Os&amp;amp;feature=youtube_gdata"&gt;Tour of changes between Windows 10 9860 and 9879 Technical Preview&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This is a tour of the changes between the Windows 10 Technical Preview Build 9860 and the latest 9879 that just came out. Check back often for updates as new builds are released!&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
17308&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;145
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;11:14&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 15 Nov 2014 08:31:04 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/_zwW5Kdn4Os" /><a10:updated>2015-02-15T00:27:31Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10573130</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/14/katana-asp-net-5-and-bridging-the-gap.aspx</link><title>Katana, ASP.NET 5, and bridging the gap</title><description>&lt;p&gt;This post is for developers that have been using the Microsoft Owin components (e.g. the &lt;a href="http://katanaproject.codeplex.com/"&gt;Katana&lt;/a&gt; project) and want to know how it relates to &lt;a href="https://github.com/aspnet/home"&gt;ASP.NET 5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As discussed in Katana&amp;rsquo;s &lt;a href="http://katanaproject.codeplex.com/wikipage?title=roadmap"&gt;roadmap&lt;/a&gt;, the next major version of Katana is being fully integrated into ASP.NET 5. This integration has resulted in several changes that make Katana v3.0 based components not directly compatible with 5. Developers and consumers of v3.0 based components may choose to fully migrate their components or use OWIN to help bridge the gap.&lt;/p&gt;
&lt;h3&gt;Migrate&lt;/h3&gt;
&lt;p&gt;Developers may choose to update their components to integrate directly with ASP.NET 5. ASP.NET 5 builds on the concepts, designs, and components initially developed in Katana so the migration process should be largely mechanical.Here is a list of changes made to Katana components that developers can use as a guide when migrating their own components. I will use the StaticFile middleware as a reference to demonstrate most of the changes.&lt;/p&gt;
&lt;h5&gt;Hosting and Repositories&lt;/h5&gt;
&lt;p&gt;The first thing you&amp;rsquo;ll notice looking at the &lt;a href="http://katanaproject.codeplex.com/wikipage?title=roadmap"&gt;roadmap&lt;/a&gt; is that we are building the new components on &lt;a href="https://github.com/aspnet/StaticFiles/blob/dev/src/Microsoft.AspNet.StaticFiles/StaticFileExtensions.cs"&gt;GitHub&lt;/a&gt;. The new code base is divided into many smaller repositories, with the roadmap showing where each component moved to.&lt;/p&gt;
&lt;h5&gt;Packages and Versions&lt;/h5&gt;
&lt;p&gt;The next most obvious change is renaming the packages and namespaces from Microsoft.Owin.* to Microsoft.AspNet.* to conform to the rest of ASP.NET. Due to the rename the package versions have been reset to v1.0.0.&lt;/p&gt;
&lt;h5&gt;Startup&lt;/h5&gt;
&lt;p&gt;The Startup class conventions have been refined. Katana would search for an assembly that specified the OwinStartup attribute and then fallback to searching all assemblies for a class named Startup or AssemblyName.Startup. ASP.NET does not define an attribute and it only searches the primary application assembly for a type named Startup (in any namespace). The &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/Katana/StaticFilesSample/Startup.cs"&gt;Configuration&lt;/a&gt;(&lt;a href="https://github.com/owin/museum-piece-owin/blob/826a356981d5698c6d0619e0574c682a3b696ae5/src/Owin/IAppBuilder.cs"&gt;IAppBuilder&lt;/a&gt; app) method is now &lt;a href="https://github.com/aspnet/StaticFiles/blob/dev/samples/StaticFileSample/Startup.cs"&gt;Configure&lt;/a&gt;(&lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.Http/IApplicationBuilder.cs"&gt;IApplicationBuilder&lt;/a&gt; app). Middleware can still define &lt;a href="https://github.com/aspnet/StaticFiles/blob/dev/src/Microsoft.AspNet.StaticFiles/StaticFileExtensions.cs"&gt;extension&lt;/a&gt; methods to add themselves to the pipeline.&lt;/p&gt;
&lt;h5&gt;Dependency Injection&lt;/h5&gt;
&lt;p&gt;The availability and usage of dependency injection has been significantly expanded. The Startup class constructor and its Configure method can both have parameters injected. IApplicationBuilder.ApplicationServices is the IServiceProvider available for any manual dependency resolution. Middleware can also take &lt;a href="https://github.com/aspnet/StaticFiles/blob/dev/src/Microsoft.AspNet.StaticFiles/StaticFileMiddleware.cs"&gt;constructor&lt;/a&gt; parameters via &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.Http.Extensions/UseMiddlewareExtensions.cs"&gt;injection&lt;/a&gt;, as well as having services injected per-request as parameters to the Invoke method. Middleware and applications can also access services from HttpContext.ApplicationServices or RequestServices.&lt;/p&gt;
&lt;h5&gt;Request Object Model&lt;/h5&gt;
&lt;p&gt;Implementing &lt;a href="https://github.com/aspnet/StaticFiles/blob/dev/src/Microsoft.AspNet.StaticFiles/StaticFileMiddleware.cs"&gt;middleware&lt;/a&gt; should look familiar with a &lt;a&gt;&lt;em&gt;next&lt;/em&gt; &lt;/a&gt;parameter and an &lt;em&gt;Invoke&lt;/em&gt; method. The &lt;a href="http://katanaproject.codeplex.com/SourceControl/latest#src/Microsoft.Owin/IOwinContext.cs"&gt;IOwinContext&lt;/a&gt; family of APIs have been renamed to &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.Http/HttpContext.cs"&gt;HttpContext&lt;/a&gt; but don&amp;rsquo;t worry, it&amp;rsquo;s not the old &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.httpcontext(v=vs.110).aspx"&gt;System.Web&lt;/a&gt; HttpContext; moving middleware over should only need to account for minor refactoring. Under the hood things are a little different though. IOwinContext&amp;rsquo;s &lt;a href="http://katanaproject.codeplex.com/SourceControl/latest#src/Microsoft.Owin/OwinContext.cs"&gt;default&lt;/a&gt; implementation was based on the raw &lt;a href="http://owin.org/spec/spec/owin-1.0.0.html#_3.2._Environment"&gt;OWIN&lt;/a&gt; abstraction. HttpContext&amp;rsquo;s &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.PipelineCore/DefaultHttpContext.cs"&gt;default&lt;/a&gt; implementation is based on an &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.FeatureModel/IFeatureCollection.cs"&gt;IFeatureCollection&lt;/a&gt; that exposes groups of functionality via &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.HttpFeature/IHttpRequestFeature.cs"&gt;feature interfaces&lt;/a&gt;. These feature interfaces can be implemented on top of &lt;a href="https://github.com/aspnet/KestrelHttpServer/blob/dev/src/Kestrel/ServerRequest.cs"&gt;different&lt;/a&gt; &lt;a href="https://github.com/aspnet/Hosting/blob/dev/src/Microsoft.AspNet.TestHost/ClientHandler.cs#L113"&gt;servers&lt;/a&gt; (or on top of the OWIN &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.Owin/OwinFeatureCollection.cs"&gt;abstraction&lt;/a&gt;), making the object model server independent. See this Channel 9 &lt;a href="http://channel9.msdn.com/Shows/Web+Camps+TV/ASP-NET-vNext-with-Chris-Ross"&gt;video&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h5&gt;Platform&lt;/h5&gt;
&lt;p&gt;With ASP.NET 5 comes support for a new platform, the &amp;ldquo;&lt;a href="http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx"&gt;cloud-optimized CLR&lt;/a&gt;&amp;rdquo;. Most of the ASP.NET 5 components have been cross-compiled to target both the full .NET CLR and the new platform. Katana v3.0 based components only target the full .NET CLR and will not run on the new platform.&lt;/p&gt;
&lt;p&gt;Almost all of the Katana components have already been migrated to ASP.NET 5, there are just a few security middleware and the CORS middleware remaining. Note that migrated components will not be usable in a Katana v3 based application. Migration may also not be an option if you do not own the component.&lt;/p&gt;
&lt;h3&gt;OWIN Interop&lt;/h3&gt;
&lt;p&gt;Some developers will need their components to work with both Katana v3.0 based applications and ASP.NET 5. Developers and consumers may also not have the option to migrate their components and must attempt to use them as is. Katana v3.0 and ASP.NET 5 both support extensibility via OWIN and this can be used to enable interop between the two. &lt;a href="http://owin.org/"&gt;OWIN&lt;/a&gt; is a community standard designed to reduce component interdependencies in an HTTP pipeline for improved interoperability. OWIN based components can plug into ASP.NET 5 using the new OWIN pipeline builder (the &lt;a href="https://github.com/owin/owin/issues/6"&gt;standard&lt;/a&gt; is still a work in progress) or IAppBuilder extensions.&lt;/p&gt;
&lt;h5&gt;OWIN Builder&lt;/h5&gt;
&lt;p&gt;ASP.NET 5 has built in support for the new OWIN pipeline builder model. See the &lt;a href="https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.Owin/OwinExtensions.cs"&gt;extensions&lt;/a&gt; and &lt;a href="https://github.com/aspnet/Entropy/blob/dev/samples/Owin.HelloWorld/Startup.cs"&gt;samples&lt;/a&gt;. Middleware may use any OWIN helpers they wish internally, including the IOwinContext if that&amp;rsquo;s what they&amp;rsquo;re &lt;a href="http://katanaproject.codeplex.com/SourceControl/latest#src/Microsoft.Owin.StaticFiles/StaticFileMiddleware.cs"&gt;already&lt;/a&gt; using. Middleware that depend on IAppBuilder and/or the OwinMiddleware base class won&amp;rsquo;t be able to use the OWIN pipeline builder approach directly. Removing these dependencies is recommended.&lt;/p&gt;
&lt;h5&gt;IAppBuilder Bridge&lt;/h5&gt;
&lt;p&gt;Middleware that can&amp;rsquo;t remove their IAppBuilder or OwinMiddleware dependencies can use a modified approach to run in ASP.NET 5. See this linked &lt;a href="https://github.com/aspnet/Entropy/blob/dev/samples/Owin.IAppBuilderBridge/KAppBuilderExtensions.cs"&gt;sample&lt;/a&gt; for an IApplicationBuilder extension that provides an IAppBuilder for use with Katana v3 based middleware. This extension creates a new AppBuilder instance and then wraps the OWIN pipeline builder pattern around it to integrate into ASP.NET 5. The sample also shows how to populate IAppBuilder.Properties data that the middleware may depend on, the data protection provider in this case.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/thinktecture/Thinktecture.IdentityServer.v3/blob/vNext/source/HostvNext/Config/IApplicationBuilderExtensions.cs"&gt;Thinktecture&lt;/a&gt; folks helped write this sample and used it to get their Katana v3 based identity framework up and running on ASP.NET 5, including Katana security middleware and Web API v2. This is a nice quick way to get existing components up and running, but should be considered a temporary solution. The OWIN community is moving away from IAppBuilder in favor of the OWIN pipeline builder referenced above. The Katana v3.0 versions of migrated components will also only receive incremental bug fixes, not new feature development. As noted above, Katana components will only work on the full .NET framework, not on the new Core framework.&lt;/p&gt;
&lt;p&gt;Note that the OWIN integration is limited to standard and common functionality defined by the community so not all ASP.NET 5 features will be available. For example parts the security middleware pattern will not be able to interoperate across between OWIN and ASP.NET 5 because OWIN does not define a standard for them.&lt;/p&gt;
&lt;p&gt;This post was written by Chris Ross. He can be reached on Twitter @tratcher&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10573130" width="1" height="1"&gt;</description><pubDate>Fri, 14 Nov 2014 23:54:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pranav rastogi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10573130</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/14/katana-asp-net-5-and-bridging-the-gap.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10573042</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/11/14/ef6-1-2-beta-2-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>EF6.1.2 Beta 2 Available</title><description>&lt;p&gt;Today we are making Beta 2 of the EF6.1.2 release available. This patch release contains bug fixes and some contributions from our community. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;When will EF6.1.2 RTM?&lt;/h2&gt;  &lt;p&gt;We were originally planning to go straight to RTM from Beta 1. However, we ended up taking a number of important bug fixes after Beta 1 shipped and we decided that the churn in the code base warranted another pre-release before we RTM. The pre-releases are important because they allow our customers and provider/extension writers to report any issues before we ship the RTM release.&lt;/p&gt;  &lt;p&gt;Our plan is to ship RTM sometime next month. This may change if we have additional high priority bugs reported on Beta 2.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in Beta 2?&lt;/h2&gt;  &lt;p&gt;EF6.1.2 is mostly about bug fixes, you can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.1.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of the fixes included in EF6.1.2 on our CodePlex site&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;We also accepted a couple of noteworthy changes from members of the community:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Query cache parameters can be configured from the app/web.configuration file&lt;/strong&gt;       &lt;pre&gt;&amp;lt;entityFramework&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;#160; &amp;lt;queryCache size='1000' cleaningIntervalInSeconds='-1'/&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;lt;/entityFramework&amp;gt;&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SqlFile and SqlResource methods on DbMigration&lt;/strong&gt; allow you to run a SQL script stored as a file or embedded resource. &lt;/p&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;DbContext.Database.CurrentTransaction&lt;/strong&gt; gives you access to the transaction the underlying store connection is enlisted in.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Where do I get the beta?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.2-beta2"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012, Visual Studio 2013, and Visual Studio 2015 Preview is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=44234"&gt;available on the Microsoft Download Center&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Support&lt;/h2&gt;

&lt;p&gt;This is a preview of changes that will be available in the final release of EF6.1.2 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;

&lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the &lt;strong&gt;entity-framework&lt;/strong&gt; tag. &lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Thank you to our contributors&lt;/h2&gt;

&lt;p&gt;We’d like to say thank you to folks from the community who have contributed to the 6.1.2 release so far: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BrandonDahler &lt;/li&gt;

  &lt;li&gt;ErikEJ &lt;/li&gt;

  &lt;li&gt;Honza Široký &lt;/li&gt;

  &lt;li&gt;martincostello &lt;/li&gt;

  &lt;li&gt;UnaiZorrilla &lt;/li&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10573042" width="1" height="1"&gt;</description><pubDate>Fri, 14 Nov 2014 18:33:42 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10573042</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/11/14/ef6-1-2-beta-2-available.aspx#comments</comments></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=3341</guid><link>http://www.jeffreyfritz.com/2014/11/so-long-november/</link><category>Personal - Software and IT</category><title>So Long and Thanks for All the Fish!</title><description>This is a tough post for me to write&amp;#8230; it is not something easy for me, but I&amp;#8217;ll get right to it. Friday, November 14th is the last day I will be working for Telerik as a Developer Advocate.  I&amp;#8217;ve been working for Telerik for almost two years and have enjoyed every bit of it.  I [&amp;#8230;]</description><pubDate>Fri, 14 Nov 2014 13:30:56 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/so-long-november/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/so-long-november/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=4051</guid><link>http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-making-html-more-cool/</link><category>Uncategorized</category><title>ASP.NET Tag Helpers – Making HTML More Cool!</title><description>I&amp;#8217;ve been at the AngleBrackets conference this week giving several talks and hanging out with the ASP.NET team members at the event.  We&amp;#8217;ve had several great conversations about the new ASP.NET Tag Helpers functionality in the just announced ASP.NET 5 release.  That version is just in beta at this point, but we&amp;#8217;re already contributing and getting [&amp;#8230;]</description><pubDate>Thu, 13 Nov 2014 23:45:38 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-making-html-more-cool/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-making-html-more-cool/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060783</guid><link>http://www.asp.net/vnext/overview/aspnet-vnext/aspnet-5-overview</link><title>ASP.NET 5 Overview</title><description> ASP.NET 5 is a significant redesign of ASP.NET. This topic introduces the new concepts in ASP.NET 5 and explains how they help you develop modern web apps.</description><pubDate>Wed, 12 Nov 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060790</guid><link>http://www.asp.net/vnext/overview/aspnet-vnext/grunt-and-bower-in-visual-studio-2015</link><title>Manage Client-Side Web Development in Visual Studio 2015, Using Grunt and Bower</title><description> ASP.NET 5.0 brings some big changes to the project system and build process for ASP.NET apps. In modern web app development, there are lots of moving parts: Server-side code (such as ASP.NET), clie...</description><pubDate>Wed, 12 Nov 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060782</guid><link>http://www.asp.net/vnext/overview/aspnet-vnext/vc</link><title>View components and Inject in ASP.NET MVC 6</title><description> This topic shows how to create a view component in ASP.NET MVC 6 and how to inject a service into a view.</description><pubDate>Wed, 12 Nov 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060784</guid><link>http://www.asp.net/vnext/overview/aspnet-vnext/create-a-web-api-with-mvc-6</link><title>Create a Web API in MVC 6</title><description> One of the goals of ASP.NET 5.0 is to unify the MVC and Web API frameworks. In this topic you will learn: How to create a simple web API in ASP.NET MVC 6. How to start from the Empty project templa...</description><pubDate>Wed, 12 Nov 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10569549</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/12/announcing-asp-net-features-in-visual-studio-2015-preview-and-vs2013-update-4.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+vNext/">ASP.NET vNext</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2013+Update+4/">Visual Studio 2013 Update 4</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2015/">Visual Studio 2015</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+5/">ASP.NET 5</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+5+Preview/">ASP.NET 5 Preview</category><title>Announcing ASP.NET features in Visual Studio 2015 Preview and VS2013 Update 4</title><description>&lt;p&gt;Today we released both &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517033"&gt;Visual Studio 2015 Preview&lt;/a&gt; and &lt;a href="http://go.microsoft.com/fwlink/?LinkId=510314"&gt;VS2013 Update 4&lt;/a&gt;. The ASP.NET team provided many new features and updates to both the runtime and tooling in Visual Studio 2015 Preview, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_ASP.NET_5_Preview"&gt;ASP.NET 5 Preview runtime with VS2015 Preview only&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#_ASP.NET_5_Preview_1"&gt;ASP.NET 5 Preview tooling with VS2015 Preview only&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#_ASP.NET_tooling_updates"&gt;ASP.NET tooling update for both VS2015 Preview and VS2013 Update 4&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#_ASP.NET_runtime_updates"&gt;ASP.NET runtime updates, most of which are in VS2013 Update 4 as well&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#_WebForm_4.6_Improvements"&gt;WebForm 4.6 improvement for VS2015 Preview only&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="_ASP.NET_5_Preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ASP.NET 5 Preview runtime&lt;/h1&gt;
&lt;p&gt;This release of Visual Studio supports creating and developing ASP.NET 5 Preview applications. ASP.NET 5 Preview is a lean and composable .NET stack for building modern web applications for both cloud and on-premises servers. It includes the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASP.NET MVC and Web API, which have been unified into a single programming model.&lt;/li&gt;
&lt;li&gt;A no-compile developer experience.&lt;/li&gt;
&lt;li&gt;Environment-based configuration for a seamless transition to the cloud.&lt;/li&gt;
&lt;li&gt;Dependency injection out-of-the-box.&lt;/li&gt;
&lt;li&gt;NuGet everything, even the runtime itself.&lt;/li&gt;
&lt;li&gt;Run in IIS, or self-hosted in your own process.&lt;/li&gt;
&lt;li&gt;All open source through the &lt;a href="http://www.dotnetfoundation.org/"&gt;.NET Foundation&lt;/a&gt;, and takes contributions in &lt;a href="https://github.com/aspnet"&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;ASP.NET 5 runs on Windows with the .NET Framework or .NET Core.&lt;/li&gt;
&lt;li&gt;.NET Core is a new cloud optimized runtime that supports true side-by-side versioning.&lt;/li&gt;
&lt;li&gt;ASP.NET 5 runs on OS X and Linux with the Mono runtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Visual Studio 2015 Preview includes Beta1 runtime packages for &lt;a href="http://go.microsoft.com/fwlink/?LinkId=400692"&gt;ASP.NET 5&lt;/a&gt;. You can find all the details for the specific enhancements added and issues fixed in the published &lt;a href="http://go.microsoft.com/fwlink/?LinkId=403951"&gt;release notes&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;Here are some helpful links to get you started with ASP.NET 5 Preview:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction: &lt;a href="https://github.com/aspnet/Home"&gt;https://github.com/aspnet/Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a href="https://github.com/aspnet/Home/wiki"&gt;https://github.com/aspnet/Home/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Music Store Sample: &lt;a href="https://github.com/aspnet/musicstore"&gt;https://github.com/aspnet/musicstore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="_ASP.NET_5_Preview_1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ASP.NET 5 Preview tooling features&lt;/h1&gt;
&lt;p&gt;To optimize ASP.NET 5 Preview project development experiences in Visual Studio, we created new Visual Studio features including new templates, a new project system, combined IntelliSense to support multi-framework targeting, and an updated NuGet package manager.&lt;/p&gt;
&lt;h2&gt;Templates&lt;/h2&gt;
&lt;h3&gt;ASP.NET 5 templates&lt;/h3&gt;
&lt;p&gt;The "ASP.NET 5 Empty" and "ASP.NET 5 Starter Web" templates are added to "New ASP.NET Project" dialog for C#.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7711.111214_5F00_0406_5F00_AnnouncingA1.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The "ASP.NET 5 Class Library" and "ASP.NET 5 Console Application" templates are added to "New Project" dialog under "Visual C#"/Web.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/controlpanel/blogs/posteditor.aspx/C:\Users\xinqiu.REDMOND\AppData\Local\Temp\WindowsLiveWriter1286139640\supfiles5A8275B2\image[3].png"&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2018.111214_5F00_0406_5F00_AnnouncingA2.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;ASP.NET 5 templates use a new project structure&lt;/h3&gt;
&lt;p&gt;The ASP.NET 5 project structure contains a &lt;em&gt;project.json&lt;/em&gt; configuration file, and "&lt;em&gt;.kproj&lt;/em&gt;" project file. ASP.NET 5 project templates uses a new project layout, creating a project folder under &amp;lt;&lt;em&gt;solutionFolder&lt;/em&gt;&amp;gt;\&lt;em&gt;src&lt;/em&gt;, and use the &lt;em&gt;global.json&lt;/em&gt; file to specify the project reference folder.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Global.json&lt;/em&gt; file contains "sources": ["src"] element, indicating the "src" folder as the parent folder of project references. By default, project-to-project reference lookups will use the parent directory, plus the &lt;em&gt;global.json&lt;/em&gt;-defined directories. For example, we have the following solution structure and &lt;em&gt;project.json&lt;/em&gt; dependency visibility:&lt;/p&gt;
&lt;p&gt;Solution1\global.json&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;Content: {" sources": ["src"] }&lt;/p&gt;
&lt;p&gt;Solution1\src\WebApp1&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;Possible Dependencies: "ClassLib1 " : ""&lt;/p&gt;
&lt;p&gt;Solution1\src\ClassLib1&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;Possible Dependencies: "WebApp1" : ""&lt;/p&gt;
&lt;p&gt;Solution1\test\TestProj1&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;Possible Dependencies: "WebApp1" : "", "ClassLib1 " : "", "TestProj2 " : ""&lt;/p&gt;
&lt;p&gt;Solution1\test\TestProj2&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;Possible Dependencies: "WebApp1" : "", "ClassLib1 " : "", "TestProj1 " : ""&lt;/p&gt;
&lt;p&gt;The ASP.NET 5 Application template contains the target frameworks "aspnet50" and "aspnetcore50"specified in &lt;em&gt;project.json&lt;/em&gt;. They display as "ASP.NET 5.0" and "ASP.NET Core 5.0" under the solution explorer's &lt;strong&gt;References&lt;/strong&gt; node.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8625.111214_5F00_0406_5F00_AnnouncingA3.png" alt="" /&gt;&lt;/p&gt;
&lt;h3&gt;The ASP.NET 5 web project template&lt;/h3&gt;
&lt;p&gt;The ASP.NET 5 web project template contains a layout to optimize for both static content and for package restore from &lt;a href="https://www.npmjs.org/"&gt;NPM&lt;/a&gt; and &lt;a href="http://bower.io/"&gt;Bower&lt;/a&gt;. The template puts static contents under the &lt;strong&gt;wwwroot&lt;/strong&gt; folder that is determined by the&amp;nbsp;&lt;strong&gt;webroot&lt;/strong&gt;&amp;nbsp;element of &lt;em&gt;project.json&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;"ASP.NET 5 Starter Web" template contains &lt;em&gt;bower.json&lt;/em&gt; to use with Bower to get frontend packages, &lt;em&gt;package.json&lt;/em&gt; to use with NPM to get Grunt, and &lt;em&gt;gruntfile.js&lt;/em&gt; to manage tasks defined by &lt;em&gt;project.json&lt;/em&gt; scripts. The template's &lt;em&gt;project.json&lt;/em&gt; file contains "postrestore" and "prepare" scripts to use NPM, as well as Grunt and Bower to install necessary packages to the project during build. It also uses the "packExclude" element to define the folders and files that should be excluded during "KPM pack".&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1778.111214_5F00_0406_5F00_AnnouncingA4.png" alt="" /&gt;&lt;/p&gt;
&lt;h3&gt;The ASP.NET 5 Starter Web template and EF&lt;/h3&gt;
&lt;p&gt;The ASP.NET 5 Starter Web template contains the code first migration for Entity Framework 7.0.0-beta.&lt;/p&gt;
&lt;p&gt;You can use the &lt;a href="https://github.com/aspnet/home"&gt;k command&lt;/a&gt; from the command line to perform an Entity Framework code first migration if you specified &lt;span style="color: #2e75b6;"&gt;&lt;span style="font-family: Consolas; font-size: 9pt; background-color: white;"&gt;"ef" &lt;span style="color: black;"&gt;: &lt;span style="color: #a31515;"&gt;"EntityFramework.Commands"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; as &lt;/span&gt;the file &lt;em&gt;project.json&lt;/em&gt;'s commands element. For example:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"k ef migration" from command line returns the following:&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt;Usage: ef migration [options] [command] &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt;Options: &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt; -h|--help Show help information &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt;Commands: &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt; add Add a new migration &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt; apply Apply migrations to the database &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt; list List the migrations &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 72pt;"&gt;&lt;span style="font-family: Courier New;"&gt; script Generate a SQL script from migrations &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: Courier New;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sample commands can be: &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: Courier New;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k ef migration add MyMigrationWithOnly1ContextInCode &lt;/span&gt;&lt;/p&gt;
&lt;p style="margin-left: 36pt;"&gt;&lt;span style="font-family: Courier New;"&gt;k ef migration add MyMigration --context MyContext &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: Courier New;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k ef migration script --context MyContext &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: Courier New;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k ef migration apply --context MyContext &lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;"ASP.NET 5 Starter Web" template and command line scaffolding&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/08/23/how-to-customize-scaffolding-templates-for-asp-net-vnext.aspx"&gt;command line scaffolding&lt;/a&gt; the ASP.NET 5 Start Web template because "&lt;span style="color: #2e75b6; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;gen&lt;/span&gt;"&lt;span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;:&lt;/span&gt;"&lt;span style="color: #a31515; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;Microsoft.Framework.CodeGeneration&lt;/span&gt;"is specified in &lt;em&gt;project.json&lt;/em&gt;'s commands element.&lt;/p&gt;
&lt;h2&gt;Projects and Builds&lt;/h2&gt;
&lt;h3&gt;Project file no longer includes project directory items and references&lt;/h3&gt;
&lt;p&gt;ASP.NET 5 projects uses the &lt;em&gt;&amp;lt;projectName&amp;gt;.kproj&lt;/em&gt; file as Visual Studio's project file. The &lt;em&gt;.kproj&lt;/em&gt; file doesn't include any files from the current directory or sub-directories, as Visual Studio automatically includes and monitors the ASP.NET 5 project directory files.&lt;/p&gt;
&lt;h3&gt;Project.json file is used to define project information&lt;/h3&gt;
&lt;p&gt;Visual Studio uses the &lt;a href="https://github.com/aspnet/Home/wiki/Project.json-file"&gt;&lt;em&gt;project.json&lt;/em&gt;&lt;/a&gt; file for reference and package dependencies, version definitions, framework configurations, compile options, build events, package creation meta-data, and run commands, as well as other details. This way, the project can be edited and run in Linux and on MacOS machines that do not have Visual Studio.&lt;/p&gt;
&lt;h3&gt;Dependencies node for Bower and NPM dependencies&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Solution Explorer&lt;/strong&gt; for ASP.NET 5 Web Applications has a &lt;strong&gt;Dependencies&lt;/strong&gt; node showing Bower and NPM dependencies. The Bower dependencies are from &lt;em&gt;bower.json&lt;/em&gt; in the project folder. The NPM dependencies are from &lt;strong&gt;package.json&lt;/strong&gt; in the project folder.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;Dependencies &lt;/strong&gt;node, under the Bower and NPM's package nodes, you can uninstall a package through the context menu command, which will automatically remove the package from the corresponding JSON file.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0702.111214_5F00_0406_5F00_AnnouncingA5.png" alt="" /&gt;&lt;/p&gt;
&lt;h3&gt;References node displays all frameworks defined in project.json file&lt;/h3&gt;
&lt;p&gt;In the &lt;strong&gt;Solution Explorer&lt;/strong&gt; of an ASP.NET 5 Application, the &lt;strong&gt;References&lt;/strong&gt; node displays all frameworks defined in the &lt;em&gt;project.json&lt;/em&gt; file.&lt;/p&gt;
&lt;h3&gt;Project's property page can be used to define runtime information&lt;/h3&gt;
&lt;p&gt;The ASP.NET 5 Application's &lt;strong&gt;Property Page&lt;/strong&gt; is a tool window and can be used to specify the &lt;a href="https://github.com/aspnet/Home/"&gt;KRE&lt;/a&gt; target version, the debug target, and whether binaries and NuGet packages should be created during a Visual Studio build.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1881.111214_5F00_0406_5F00_AnnouncingA6.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6175.111214_5F00_0406_5F00_AnnouncingA7.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6574.111214_5F00_0406_5F00_AnnouncingA8.png" alt="" /&gt;&lt;/p&gt;
&lt;h3&gt;Fast build time with Visual Studio&lt;/h3&gt;
&lt;p&gt;Visual Studio uses the Roslyn engine to compile ASP.NET 5 projects at design time. Therefore, the project has already been compiled when you issue a "build" request. In Visual Studio 2015 Preview, Visual Studio simply passes the design time compiler output to the build request. This avoids another build and improves performance when you build, run, or debug ASP.NET 5 projects.&lt;/p&gt;
&lt;h3&gt;Support NuGet Package Manager&lt;/h3&gt;
&lt;p&gt;Visual Studio supports the NuGet Package Manager and the NuGet Package Console for ASP.NET 5 projects.&lt;/p&gt;
&lt;h3&gt;Support xUnit tests in Test explorer&lt;/h3&gt;
&lt;p&gt;Visual Studio supports running and debugging for ASP.NET 5&amp;nbsp;&lt;span style="font-family: Segoe UI; font-size: x-small;"&gt;&lt;a title="xUnit" href="http://xunit.github.io/"&gt;xUnit&lt;/a&gt;&lt;/span&gt;&amp;nbsp;tests through test explorer. All you need to do is add the xUnit dependencies and test commands to the test project's &lt;em&gt;project.json&lt;/em&gt; file, as shown below (&lt;em&gt;NOTE&lt;/em&gt;: To install the xUnit packages you will need to add &lt;a href="https://www.myget.org/F/aspnetvnext/api/v2"&gt;https://www.myget.org/F/aspnetvnext/api/v2&lt;/a&gt; as a NuGet package source):&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #2e75b6; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;"dependencies"&lt;span style="color: black;"&gt;: { &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #2e75b6; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;"Xunit.KRunner"&lt;span style="color: black;"&gt;: &lt;span style="color: #a31515;"&gt;"1.0.0-beta1"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;}, &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #2e75b6; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;"commands"&lt;span style="color: black;"&gt;: { &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #2e75b6; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;"test"&lt;span style="color: black;"&gt;: &lt;span style="color: #a31515;"&gt;"Xunit.KRunner"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="background: white;"&gt;&lt;span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;"&gt;},&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0652.111214_5F00_0406_5F00_AnnouncingA9.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;From the command line, you can use &lt;strong&gt;k test&lt;/strong&gt; to get the running result, where &lt;em&gt;k.cmd&lt;/em&gt; is from the current targeting &lt;a href="https://github.com/aspnet/home/"&gt;K Runtime Environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7181.111214_5F00_0406_5F00_AnnouncingA10.png" alt="" /&gt;&lt;/p&gt;
&lt;h3&gt;Support Task Runner Explorer&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/8e1b4368-4afb-467a-bc13-9650572db708"&gt;Task Runner Explorer&lt;/a&gt; is integrated to Visual Studio, which can be enabled by selecting the &lt;em&gt;gruntfile.js&lt;/em&gt; file's context menu item &lt;strong&gt;Task Runner Explorer&lt;/strong&gt;, or via Visual Studio's menu-item &lt;strong&gt;View&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Other Windows&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Task Runner Explorer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3225.111214_5F00_0406_5F00_AnnouncingA11.png" alt="" /&gt;&lt;/p&gt;
&lt;h2&gt;IntelliSense and Error list&lt;/h2&gt;
&lt;p&gt;We give combined IntelliSense when showing IntelliSense in the code editor. An IntelliSense item that exists in one framework, but not in another will be listed in the IntelliSense with a warning sign. The IntelliSense tooltip indicates which framework supports it and which framework doesn't.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4466.111214_5F00_0406_5F00_AnnouncingA12.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Build errors shows which target framework the error is from. So, if you have an error in the code that is recognized by two targeting frameworks, it will show in two places in the error and output error list, with the same description and file location, but with different project names which includes the framework name.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0677.111214_5F00_0406_5F00_AnnouncingA13.png" alt="" /&gt;&lt;/p&gt;
&lt;h2&gt;NuGet Package Manager&lt;/h2&gt;
&lt;p&gt;The NuGet Package Manager is rewritten using the tool window style and can be viewed per project and solution. Each project can open a &lt;strong&gt;NuGet Package Manager&lt;/strong&gt; window at the same time. This change applies to all type of projects that uses NuGet Package Manager.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7140.111214_5F00_0406_5F00_AnnouncingA14.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="_ASP.NET_tooling_updates"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ASP.NET tooling updates for both VS2015 Preview and VS2013 Update 4&lt;/h1&gt;
&lt;p&gt;All of the following tooling updates have been blogged with detail in &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/10/16/announcing-new-web-features-in-visual-studio-2013-update-4-rc.aspx"&gt;"Announcing new Web Features in Visual Studio 2013 Update 4 RC"&lt;/a&gt;, except two new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;JSON editor IntelliSense for package.json/bower.json &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;JSON editor Duplicate property validation&lt;/span&gt;
&lt;h3&gt;&amp;nbsp;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span style="color: #323e4f;"&gt;JSON Editor Improvement&lt;/span&gt;&lt;/h3&gt;
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
&lt;p&gt;We have made some improvements in the JSON editor, including performance improvements such as loading JSON schema asynchronously, caching of the child schemas, and better IntelliSense. Additionally, there are the following new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JSON Schema validation&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;- &lt;/span&gt;Add JSON schema validation feature, based on the schema that is defined in the schema drop-down list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Un-minify context menu&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;-You can right-click the JSON editor and select&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Un-minify context menu&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;to un-minify any long arrays in the JSON file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reload Schemas context menu&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;-Visual Studio will cache the schema that is downloaded from Internet and will use the cache even after you restart Visual Studio. If you know the schema is changed, you can use the context menu&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Reload Schemas Ctrl+Shift+J&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;to re-download the current used schema in the active JSON document, and then use it immediately on the current document.&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;strong&gt;IntelliSense for package.json/bower.json&lt;/strong&gt; - In addition to proving IntelliSense and validation for both package.json and bower.json files, Visual Studio also provides live IntelliSense for both Bower and NPM packages directly within the JSON editor&lt;/div&gt;
&lt;p style="background: white;"&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1777.111214_5F00_0406_5F00_AnnouncingA15.png" alt="" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div style="background: white;"&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&lt;strong&gt;Duplicate property validation&lt;/strong&gt; - The JSON editor will now provide validation for any duplicate properties. This helps catch this common problem with JSON file authoring. &lt;/span&gt;&lt;/div&gt;
&lt;p style="background: white;"&gt;&lt;img src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5700.111214_5F00_0406_5F00_AnnouncingA16.png" alt="" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span style="color: #323e4f;"&gt;HTML Editor&lt;/span&gt;&lt;/h3&gt;
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
&lt;p&gt;Microsoft improved the HTML editor with some bug fixes, updated IntelliSense for web standards, and introduced the following new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Better client template formatting&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;- &lt;/span&gt;The HTML editor does not parse or format double-curly syntax {{&amp;hellip;}} anymore. This is to make sure that the content of that syntax is not treated as being HTML and therefore being invalidated, nor does it try to format them, which cannot be done correctly by using the HTML formatter. This is great for Angular, Handlebars, Mustache, and other double-curly template syntaxes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support for custom elements, polymer-elements and attributes&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;- The &lt;/span&gt;HTML Editor no longer validates unknown attributes for custom elements, as there will be many custom made tags in different frameworks. Therefore, there will no longer be squiggles under the unknown elements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic IntelliSense for Web Components&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;- HTML Editor has IntelliSense for&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&amp;lt;link&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;rel="import"&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;/&amp;gt;&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;that is part of the&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;a href="http://www.w3.org/wiki/WebComponents/"&gt;&lt;span style="color: #0072c6;"&gt;Web Components standard&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML element tooltips&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;- Tooltips are supplied for HTML elements in the editor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;#region support&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;The &lt;/span&gt;HTML editor now supports region folding. You can use surrounding snippets to surround the current selection as well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Todo/Hack comment support in Task List &lt;/strong&gt;&amp;ndash; The HTML editor now supports Todo, Hack etc. &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/zce12xx2(v=vs.120).aspx"&gt;comment token&lt;/a&gt; and display them in Task List.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Angular icons&lt;/strong&gt; - Both Angular directives (ex. &amp;lt;ng-view&amp;gt;) and attributes (ex. ng-controller) now show in IntelliSense with an Angular logo to make it easy to identify them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bootstrap icons&lt;/strong&gt; - The IntelliSense provided in HTML class attributes now shows the Bootstrap logo if the class name was defined by the Bootstrap CSS file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CSS/LESS/Sass Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Todo/Hack comment support in Task List&lt;/strong&gt; &amp;ndash; The CSS/LESS/Sass editor now supports Todo, Hack etc. &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/zce12xx2(v=vs.120).aspx"&gt;comment token&lt;/a&gt; and display them in Task List.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@viewport fix for LESS editor&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;- &lt;/span&gt;In LESS editor,&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;@viewport will not show verification warning anymore.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Provide many more snippets&lt;/strong&gt;&amp;nbsp;&amp;ndash; The CSS/LESS/Sass Editor now provides more snippets to ease the development experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Browser Link&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CSS automatically synchronous&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;- &lt;/span&gt;Now, saving the CSS file or changing it externally (such as by using a LESS/SASS compiler) will cause the whole CSS file to reload in the browser. If the file is in a state where it cannot auto-sync,&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Ctrl&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;+&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;S&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;will cause an automatic reload, and this should put it back into a good state without having to refresh the linked browsers (&lt;strong&gt;Ctrl&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;+&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Alt&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;+&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Enter&lt;/strong&gt;). The feature can be disabled in the toolbar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;WebJobs Tooling&lt;/h2&gt;
&lt;p&gt;Visual Studio now supports controlling web jobs through &lt;strong&gt;Server Explorer&lt;/strong&gt; WebJobs' node inside an Azure Website in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View WebJobs nodes underneath Website nodes in &lt;strong&gt;Server Explorer&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Start/Stop Continuous WebJobs from &lt;strong&gt;Server Explorer&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Run On-demand or Scheduled jobs from &lt;strong&gt;Server Explorer&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;View WebJob Dashboard from &lt;strong&gt;Server Explorer&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use the&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;View Dashboard&lt;/strong&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;/span&gt;context menu to go to the Azure website's WebJob dash board.&lt;/p&gt;
&lt;h2&gt;WebJobs SDK&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div style="background: white;"&gt;&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;WebJobs SDK is pre-installed in the Azure WebJob project templates. &lt;/span&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="_ASP.NET_runtime_updates"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ASP.NET runtime updates&lt;/h1&gt;
&lt;p&gt;The following runtime packages are added to both VS2013 Update 4 and VS2015 Preview, except &lt;em&gt;EF6.1.2-beta1&lt;/em&gt; and &lt;em&gt;EF 7&lt;/em&gt;, which are in VS2015 Preview only.&lt;/p&gt;
&lt;h2&gt;Microsoft ASP.NET and Web ASP.NET MVC 5.2.2&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use ASP.NET MVC 5.2.2. This release does not have any new features or bug fixes in MVC. We made a &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/07/28/announcing-the-beta-release-of-web-pages-3-2-1.aspx"&gt;change in Web Pages&lt;/a&gt; for a significant performance improvement, and have subsequently updated all other dependent packages we own to depend on this new version of Web Pages.&lt;/p&gt;
&lt;h2&gt;ASP.NET Web API 5.2.2&lt;/h2&gt;
&lt;p&gt;In this release we have made a dependency change for Json.Net 6.0.4. For more information on what is new in this release of Json.NET, see &lt;a href="http://james.newtonking.com/archive/2014/08/04/json-net-6-0-release-4-json-merge-dependency-injection"&gt;Json.NET 6.0 Release 4 - JSON Merge, Dependency Injection&lt;/a&gt;. This release does not have any other new features or bug fixes in Web API. We have subsequently updated all other dependent packages we own to depend on this new version of Web API.&lt;/p&gt;
&lt;h3&gt;ASP.NET Web API OData 5.3.1&lt;/h3&gt;
&lt;p&gt;See this&amp;nbsp;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-odata-53"&gt;release note for Web API OData 5.3&lt;/a&gt;. &lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;See this &lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-odata-53"&gt;release note for Web API OData 5.3&lt;/a&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;SignalR 2.1.2&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use SignalR 2.1.2. For more information, see the &lt;a href="https://github.com/SignalR/SignalR/releases/tag/2.1.2"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;SignalR 2.1.2 release note&lt;/span&gt;&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2&gt;Microsoft Owin 3.0 Package&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use Microsoft Owin 3.0 NuGet packages. For more information, see this&lt;span style="color: #333333; font-family: Segoe UI; font-size: 10pt;"&gt;&amp;nbsp;&lt;a href="https://katanaproject.codeplex.com/releases/view/113283"&gt;&lt;span style="color: #0072c6;"&gt;Katana 3.0 release note&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;NuGet 2.8.3&lt;/h2&gt;
&lt;p&gt;Support for DevExtreme project and BizTalkProject are added to 2.8.3. For more information, see the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.8.3"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;NuGet 2.8.3 Release Notes&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;ASP.NET Identity 2.1.0&lt;/h2&gt;
&lt;p&gt;Added SignInManager to make it easier to use security features such as Account Lockout, and Two-Factor Authentication for login. For more information, see &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/08/05/announcing-rtm-of-asp-net-identity-2-1-0.aspx"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Announcing RTM of ASP.NET Identity 2.1.0&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Entity Framework 6.x&lt;/h2&gt;
&lt;p&gt;This release includes the EF6.1.2-beta1 version of the runtime and tooling. EF6.1.2 is mostly about bug fixes, you can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.1.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;&lt;span style="color: #0563c1;"&gt;list of the fixes included in EF6.1.2 on our CodePlex site&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Entity Framework 6.1.1 runtime is included in a number of places in this release.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;The runtime will be installed if you create a new model using the Entity Framework Tools in a project that does not already have the EF runtime installed.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;The runtime is pre-installed in new ASP.NET projects, depending on the project template you select.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note, VS2013 Update 4 only includes EF6.1.1 .&lt;/p&gt;
&lt;h2&gt;Entity Framework 7 Beta1 for VS2015 Preview Only&lt;/h2&gt;
&lt;p&gt;EF7 is a lightweight and extensible version of Entity Framework that enables new platforms and new data stores. Starting with EF7, Windows Phone, Windows Store, ASP.NET 5, and traditional desktop application can all now take advantage of Entity Framework. In addition to relational databases, EF7 also supports non-relational data stores such as Azure Table Storage and Redis. For more information on EF7, see our &lt;a href="https://github.com/aspnet/EntityFramework/wiki/What-is-EF7-all-about"&gt;&lt;span style="color: #0563c1;"&gt;What is EF7 all about&lt;/span&gt;&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;a name="_WebForm_4.6_Improvements"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;WebForm 4.6 Improvements for VS2015 Preview Only&lt;/h1&gt;
&lt;p&gt;ASP.NET team continues to improve ASP.NET Web Forms. We added the following features in this release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP 2 support&lt;/li&gt;
&lt;li&gt;Async Model Binding&lt;/li&gt;
&lt;li&gt;Use Roslyn Code Dom Compilers&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;ASP.NET 5 Preview Tutorials&lt;/h1&gt;
&lt;p&gt;You can find ASP.NET tutorials in &lt;a href="http://asp.net/vNext"&gt;http://asp.net/vNext&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are the links that you can find from the "ASP.NET 5 Starter web" template as well:&lt;/p&gt;
&lt;h2&gt;Customize app&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398600"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add Controllers and Views&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398602"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add Data using EntityFramework&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398603"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add Authentication using Identity&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398606"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add real time support using SignalR&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398604"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add Class library&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517848"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Add client packages using Bower&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517849"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Manage client packages using Grunt&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517850"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Develop on different platforms&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Run &amp;amp; Deploy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517851"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Run your app locally&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517852"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Run your app on ASP.NET Core 5&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517853"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Run commands in your project.json&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398609"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Publish to Microsoft Azure Web Sites&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Get help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398610"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;Get help&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517854"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;ASP.NET 5 source code&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=517855"&gt;&lt;span style="font-family: Segoe UI; font-size: 10pt;"&gt;ASP.NET 5 documentation&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Known Issues&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;When publishing an ASP.NET 5 project and using the&amp;nbsp;Precompile option, the content will be skipped if it had been previously published with the same version. The workaround is to change the version property in project.json.&lt;/li&gt;
&lt;li&gt;ASP.NET 5 web projects&amp;nbsp;need a wwwroot element in project.json. For existing projects you can add "wwwroot":".\". See &lt;a href="https://github.com/aspnet/Home/wiki/Project.json-file"&gt;https://github.com/aspnet/Home/wiki/Project.json-file&lt;/a&gt; for more information. If the wwwroot element is missing&amp;nbsp;and web publish is invoked, an error is returned stating that kpm pack has existed with code 1.&lt;/li&gt;
&lt;li&gt;When publishing an ASP.NET 5 project, the build is not verified before publish starts. The workaround here is to build your project before publishing.&lt;/li&gt;
&lt;li&gt;After scaffolding&amp;nbsp;an empty ASP.NET 5 project from the command line, the readme that is shown has old content. The contents should not be used directly in your projects.&lt;/li&gt;
&lt;li&gt;For ASP.NET 5 projects, the IntelliSense project dropdown doesn't associate code files in subfolders with the project. Instead Miscellaneous Files is shown.&lt;/li&gt;
&lt;li&gt;For ASP.NET 5 projects, in a project targeting both aspnet50 and aspnetcore50 installing a package targeting desktop using&amp;nbsp;NuGet&amp;nbsp;Package Manager for solution fails with a 404. The work around is to install the package at the project level instead.&lt;/li&gt;
&lt;li&gt;For ASP.NET 5 projects,&amp;nbsp;in a project targeting both aspnet50 and aspnetcore50 installing a package&amp;nbsp;using NuGet Package Manager&amp;nbsp;doesn't install it in the correct dependency section. For e.g. a package that is only supported on aspnet50 will still be dropped under the shared dependency section in the project.json. You will need to move it to the correct dependencies section.&lt;/li&gt;
&lt;li&gt;Microsoft .NET Framework 4.6 (it can also be referred to as Microsoft .NET Framework 4.5.3) is installed after installing VS2015 Preview. Customers may also obtain this new version of .NET Framework 4.6 via stand-alone installer &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=44928"&gt;here&lt;/a&gt; or from the Windows 10 Tech Preview. VS2013, VS2012 and VS2010sp1 users may experience a warning dialog box popping up when either creating new Web Site or Windows Azure project or when opening existing projects. The warning dialog claims that "Configuring Web http://localhost:xxxxx/ for ASP.NET 4.5 failed". You can ignore this dialog box. For detailed workaround and patches, please see &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/11/11/dialog-box-may-be-displayed-to-users-when-opening-projects-in-microsoft-visual-studio-after-installation-of-microsoft-net-framework-4-6.aspx"&gt;this post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;We'd love to hear your feedback. For Visual Studio tooling related issues, please submit bugs through &lt;a href="https://connect.microsoft.com/visualstudio"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;Connect&lt;/span&gt;&lt;/a&gt;, send suggestions on &lt;a href="http://visualstudio.uservoice.com/forums/121579-visual-studio"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;UserVoice&lt;/span&gt;&lt;/a&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;,&lt;/span&gt; and quick thoughts via &lt;a href="http://msdn.microsoft.com/en-us/library/zzszcehe.aspx"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;Send-a-Smile&lt;/span&gt;&lt;/a&gt; in the Visual Studio IDE. For ASP.NET vNext, please provide feedback in &lt;a href="http://github.com/aspnet"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;GitHub&lt;/span&gt;&lt;/a&gt; or the &lt;a href="http://forums.asp.net/1255.aspx/1?ASP+NET+vNext"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;ASP.NET vNext forum&lt;/span&gt;&lt;/a&gt;. If you ask a question in Stack Overflow, use the &lt;a href="http://stackoverflow.com/questions/tagged/asp.net-vnext"&gt;&lt;span style="color: #00749e; text-decoration: underline;"&gt;asp.net-vnext&lt;/span&gt;&lt;/a&gt; tag.&amp;nbsp; Thanks for being with us in this exciting time!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10569549" width="1" height="1"&gt;</description><pubDate>Wed, 12 Nov 2014 15:35:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">29</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10569549</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/12/announcing-asp-net-features-in-visual-studio-2015-preview-and-vs2013-update-4.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10571432</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/12/new-developer-and-debugging-features-for-azure-webjobs-in-visual-studio.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Azure/">Azure</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Azure+Web+Sites/">Azure Web Sites</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Azure+WebJobs/">Azure WebJobs</category><title>New Developer and Debugging Features for Azure WebJobs in Visual Studio</title><description>&lt;p&gt;With Visual Studio Update 3, the Web Tools Extensions team added a number of great features to make it easier for ASP.NET developers publishing web applications to Azure Websites to enable background processing using Azure WebJobs. Since the Update 3 release, &lt;a href="http://azure.microsoft.com/en-us/updates/general-availability-azure-websites-webjobs/"&gt;Azure WebJobs has reached general availability&lt;/a&gt;, and to coincide with the release of Azure WebJobs we've added more features to Visual Studio to make it easier than ever to build, deploy, and debug WebJobs. This blog post will introduce you to some of the new features for developers who want to create, deploy, and debug Azure WebJobs. Through a simple walk-through of getting an ASP.NET site enabled with a pair of Azure WebJobs, you'll learn how to get started without even leaving Visual Studio.&lt;/p&gt;
&lt;h2&gt;Adding WebJobs to an Existing ASP.NET Web App&lt;/h2&gt;
&lt;p&gt;To start this demonstration, I've created a bare-bones ASP.NET MVC Web Site using Visual Studio 2013. WebJobs can be added to any existing ASP.NET application. Likewise, the Azure SDK includes project templates for creating WebJobs without the need for an existing ASP.NET application. WebJobs can be deployed either as part of an existing ASP.NET web project, or they can be deployed to Azure Websites directly via a simple project-level context menu item.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2185.clip_5F00_image001_5F00_0725DCA2.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image001" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3755.clip_5F00_image001_5F00_thumb_5F00_182F2BE7.png" alt="clip_image001" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'll right-click the Web Application Project node in &lt;strong&gt;Solution Explorer&lt;/strong&gt;, expand the &lt;strong&gt;Add&lt;/strong&gt; context menu, and select the &lt;strong&gt;New Azure WebJob Project&lt;/strong&gt; context menu item from the fly-out. This will drop a new Azure WebJob project into my existing Visual Studio solution. If I'd had an existing Console Application or WebJobs project sitting on disk, I could have selected the &lt;strong&gt;Existing Project as Azure WebJob&lt;/strong&gt; context menu instead, which would allow me to browse my local computer to find an existing project.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8054.clip_5F00_image002_5F00_260171E2.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6811.clip_5F00_image002_5F00_thumb_5F00_57F9126C.png" alt="clip_image002" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When I select the New Azure WebJob Project context menu item, the &lt;strong&gt;Add Azure WebJob&lt;/strong&gt; dialog opens. Using this dialog, I'll specify that I want this first WebJob to be a &lt;strong&gt;Continuous &lt;/strong&gt;one. I'll give the Project and WebJob a name, and click the &lt;strong&gt;OK &lt;/strong&gt;button.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2021.clip_5F00_image003_5F00_65CB5867.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image003" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8867.clip_5F00_image003_5F00_thumb_5F00_17C2F8F2.png" alt="clip_image003" width="640" height="341" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Visual Studio Update 4 or the Azure SDK 2.5, I'll have two project templates to choose from based on the run mode of my WebJob. Since I've selected &lt;strong&gt;Continuous&lt;/strong&gt; for this first WebJob, the code dropped into the project will be specific to a continuous scenario.&lt;/p&gt;
&lt;p&gt;Once the project is added to my solution, I'll open up the &lt;strong&gt;Program.cs&lt;/strong&gt; file from the project. The code in this file uses the WebJobs' &lt;strong&gt;JobHost&lt;/strong&gt; object to start up the WebJob and block it from exiting. This will allow the continuous WebJob to remain in memory so that it can monitor an Azure Storage Queue for incoming messages.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3000.clip_5F00_image004_5F00_77A7EC34.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6646.clip_5F00_image004_5F00_thumb_5F00_6C7E61EA.png" alt="clip_image004" width="640" height="365" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Included along with the &lt;strong&gt;Program.cs&lt;/strong&gt; file that launches my WebJob is a second file containing boilerplate code that uses the WebJobs SDK to watch an Azure Storage Queue. The code below, from &lt;strong&gt;Functions.cs&lt;/strong&gt;, demonstrates how the &lt;strong&gt;QueueTrigger&lt;/strong&gt; attribute is used to define a method parameter as one that will be populated when messages land on the Storage Queue being watched by the code. For more information on the various attributes available for monitoring Queues, Blobs, or Service Bus objects, take a &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/websites-webjobs-resources/#additionalsdk"&gt;look at the long list of WebJobs SDK resources available&lt;/a&gt; on ASP.NET.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3583.clip_5F00_image005_5F00_4139CAE3.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image005" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0882.clip_5F00_image005_5F00_thumb_5F00_73316B6D.png" alt="clip_image005" width="640" height="376" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'll follow the same process again to add a second WebJob to the ASP.NET project. This time I'll select &lt;strong&gt;Run on Demand&lt;/strong&gt; from the &lt;strong&gt;Run Type&lt;/strong&gt; menu. This WebJob will be one that doesn't run continuously or watch Azure Storage Queues, but rather, will run only when a user elects to run the WebJob from within Visual Studio or from the Azure Management Portal.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2538.clip_5F00_image006_5F00_0103B169.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3108.clip_5F00_image006_5F00_thumb_5F00_27D1C7A9.png" alt="clip_image006" width="640" height="341" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code for scheduled and on-demand WebJobs is slightly different from the code dropped in for continuous WebJobs. The &lt;strong&gt;Program.cs&lt;/strong&gt; code for an on-demand job, shown below, doesn't block the WebJob's EXE from exiting. Instead, it presumes a one-time run is needed, and then the WebJob simply exits.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7331.clip_5F00_image007_5F00_35A40DA4.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image007" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5287.clip_5F00_image007_5F00_thumb_5F00_679BAE2E.png" alt="clip_image007" width="640" height="378" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code below, from the on-demand WebJob project, simply has a method in it named &lt;strong&gt;ManualTrigger&lt;/strong&gt; that drops a message into an Azure Storage Queue using the &lt;strong&gt;Queue&lt;/strong&gt; attribute decorating the final method parameter. When the value of this out parameter is set in the second line of the method, a new Azure Storage Queue message is dropped into the queue so that it can be processed by the first WebJob, which is running continuously and watching the queue for incoming messages.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2134.clip_5F00_image008_5F00_4780A171.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7652.clip_5F00_image008_5F00_thumb_5F00_5552E76C.png" alt="clip_image008" width="640" height="390" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea is simple - the first WebJob is running continuously, watching an Azure Storage Queue for incoming messages, whereas the second WebJob will be executed manually to drop messages into the Azure Storage Queue being watched.&lt;/p&gt;
&lt;h2&gt;Simultaneous Web Site and WebJob Publishing from Visual Studio&lt;/h2&gt;
&lt;p&gt;Now that the site is ready and armed with both on-demand and continuous WebJobs for background processing, the site and the WebJobs can easily be published with one context-menu click. The WebJobs tooling knows, at this point, that the two WebJob projects should be published along with the Web Application Project's content files.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8233.clip_5F00_image009_5F00_63252D67.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image009" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7245.clip_5F00_image009_5F00_thumb_5F00_5C05F0EF.png" alt="clip_image009" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since I'll be publishing my Web Application with WebJobs, I'll need to select &lt;strong&gt;Microsoft Azure Websites&lt;/strong&gt; when asked what my publishing target will be.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7750.clip_5F00_image010_5F00_3BEAE432.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2553.clip_5F00_image010_5F00_thumb_5F00_7BB4CAB7.png" alt="clip_image010" width="612" height="480" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since I don't yet have a destination Website running in Azure to which my Web Application Project can be deployed, I'll click the &lt;strong&gt;New&lt;/strong&gt; button in the &lt;strong&gt;Select Existing Website&lt;/strong&gt; dialog.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2475.clip_5F00_image011_5F00_1E789326.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image011" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8322.clip_5F00_image011_5F00_thumb_5F00_175956AE.png" alt="clip_image011" width="480" height="284" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'll give the site a name and select the appropriate region for it to be published into.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5621.clip_5F00_image012_5F00_773E49F0.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7367.clip_5F00_image012_5F00_thumb_5F00_701F0D78.png" alt="clip_image012" width="579" height="467" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To enable remote debugging of my Website and Azure WebJobs, I'll select &lt;strong&gt;Debug&lt;/strong&gt; from the &lt;strong&gt;Configuration&lt;/strong&gt; drop-down menu.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7762.clip_5F00_image013_5F00_2BDEA62C.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image013" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4628.clip_5F00_image013_5F00_thumb_5F00_5DD646B6.png" alt="clip_image013" width="613" height="480" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;During the publish preview, take note that the WebJobs are going to be published along with the Website contents. Since WebJobs run from the &lt;strong&gt;App_Data&lt;/strong&gt; folder of an existing Website, I can see the two WebJobs' content in the &lt;strong&gt;Publish Preview&lt;/strong&gt; dialog.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7271.clip_5F00_image014_5F00_3DBB39F9.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image014" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4478.clip_5F00_image014_5F00_thumb_5F00_607F0267.png" alt="clip_image014" width="612" height="480" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure WebJobs make use of Azure Storage for passing messages through queues and for storing or retrieving files from Azure Blob containers. In addition, the WebJobs Dashboard makes use of Azure Storage to store up statistics about how and when the WebJobs are executed. To reap these benefits, I'll need to configure the host Azure Website with the Storage Account connection string for my WebJobs storage and dashboard.&lt;/p&gt;
&lt;h2&gt;Configuring the WebJobs Connection String&lt;/h2&gt;
&lt;p&gt;Luckily, the Azure SDK for Visual Studio gives me easy accessibility to my Azure Storage accounts within the Visual Studio &lt;strong&gt;Server Explorer&lt;/strong&gt;. By right-clicking on the &lt;strong&gt;Storage&lt;/strong&gt; node of the &lt;strong&gt;Server Explorer&lt;/strong&gt;, I can easily create a new Azure Storage Account using the context menu.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1325.clip_5F00_image015_5F00_2B727337.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image015" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1348.clip_5F00_image015_5F00_thumb_5F00_2048E8ED.png" alt="clip_image015" width="524" height="311" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When I click the &lt;strong&gt;Create Storage Account&lt;/strong&gt; context menu item, the &lt;strong&gt;Create Storage Account&lt;/strong&gt; dialog opens, providing an opportunity to specify the Storage Account's name that I'd like to create. I'll also select the same region that will house my Azure Website, placing both the Website and the Storage Account into the same geographical region.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2577.16_2D00_storage_2D00_account_2D00_creation_5F00_070AAD52.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="16-storage-account-creation" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3666.16_2D00_storage_2D00_account_2D00_creation_5F00_thumb_5F00_46D493D7.png" alt="16-storage-account-creation" width="490" height="359" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the storage account has been created I'll right-click on it to get the storage account properties.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4162.clip_5F00_image017_5F00_1B663531.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image017" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1460.clip_5F00_image017_5F00_thumb_5F00_7B4B2873.png" alt="clip_image017" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When the properties panel opens, I'll click the ellipse button next to the &lt;strong&gt;Connection String&lt;/strong&gt; property in the panel.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1351.clip_5F00_image018_5F00_091D6E6F.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image018" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8625.clip_5F00_image018_5F00_thumb_5F00_01FE31F7.png" alt="clip_image018" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Storage Account Connection String&lt;/strong&gt; dialog will open, providing me an opportunity to copy the Storage Account's connection string to my clipboard.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3426.clip_5F00_image019_5F00_043ABAB3.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image019" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1362.clip_5F00_image019_5F00_thumb_5F00_641FADF5.png" alt="clip_image019" width="600" height="250" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now I'll create two connection strings to configure WebJobs' connectivity in my Website named &lt;strong&gt;AzureWebJobsStorage&lt;/strong&gt; and &lt;strong&gt;AzureWebJobsDashboard&lt;/strong&gt;, and I'll paste in the connection string I copied earlier as the value of the connection string. The final step is to select &lt;strong&gt;Custom&lt;/strong&gt; from the &lt;strong&gt;Database Type&lt;/strong&gt; column in the &lt;strong&gt;Website Settings&lt;/strong&gt; panel.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8228.clip_5F00_image020_5F00_4404A138.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image020" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6175.clip_5F00_image020_5F00_thumb_5F00_23E9947B.png" alt="clip_image020" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that the Web Application and WebJobs are published and configured, I&amp;rsquo;ll use the new &lt;strong&gt;Server Explorer&lt;/strong&gt; tools for WebJobs and the remote debugging features to make sure everything is operating properly.&lt;/p&gt;
&lt;h2&gt;Managing and Debugging WebJobs using the Server Explorer&lt;/h2&gt;
&lt;p&gt;Now that the Web Application Project and accompanying WebJobs have been deployed, I'm going to want to debug into my continuous job to make sure it is working as expected and designed. To get a deeper dive into how the WebJob is executing, I'll set a breakpoint in the continuous job's code.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4431.clip_5F00_image021_5F00_03CE87BE.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image021" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2376.clip_5F00_image021_5F00_thumb_5F00_386EE3F9.png" alt="clip_image021" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some of the WebJobs-related features we're most proud of are visible in the &lt;strong&gt;Server Explorer&lt;/strong&gt;. Underneath each Website node in &lt;strong&gt;Server Explorer&lt;/strong&gt;, we've added a folder grouping to all of the associated WebJobs. To make the jobs easier to locate in the tree we've grouped them by continuous and on-demand or scheduled. We've hung various context menu items from the WebJobs nodes' context menu that are appropriate for the type of WebJob being clicked. I'll use the &lt;strong&gt;Start&lt;/strong&gt; menu gesture from the continuous WebJob node to start up my continuous WebJob.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7585.clip_5F00_image022_5F00_464129F4.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image022" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6507.clip_5F00_image022_5F00_thumb_5F00_54136FEF.png" alt="clip_image022" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that the WebJob has been started, I'll use the &lt;strong&gt;Attach Debugger&lt;/strong&gt; menu item to attach the Visual Studio debugger to the WebJob running in Azure. Once I click this menu item, Visual Studio will attach to the remote debugger running in Azure Websites, and attach the debugger to the WebJob's EXE.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7178.clip_5F00_image023_5F00_4CF43377.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image023" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7181.clip_5F00_image023_5F00_thumb_5F00_5AC67972.png" alt="clip_image023" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the Continuous WebJob is running and the debugger attached, I can use the Scheduled/On-demand WebJob context gesture to start the on-demand job, which will send a message into the Azure Storage queue my Continuous WebJob is watching. The on-demand job will wake up and drop a message into the Azure Storage Queue.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8662.clip_5F00_image024_5F00_53A73CFA.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image024" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8255.clip_5F00_image024_5F00_thumb_5F00_6F4BC8F0.png" alt="clip_image024" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the on-demand job drops a message into the Azure Storage queue being watched by the continuous WebJob and the message is picked up and processed by the WebJobs SDK, the contents of the message is visible in the debugger's watch window. Even though the code for my WebJob is actually running live in Azure, I'm able to debug the code locally within Visual Studio from my development workstation, giving me a deep level of visibility into how the WebJob code is executing in the cloud!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5554.clip_5F00_image025_5F00_682C8C78.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="clip_image025" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2620.clip_5F00_image025_5F00_thumb_5F00_75FED273.png" alt="clip_image025" width="640" height="442" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With the Visual Studio Update 4 and Azure SDK 2.5 releases we've greatly expanded our investment into making it easier than ever before for web developers to add background processing to their Websites. We've taken steps toward providing a greater level of control over the WebJobs running in an Azure Website, and we've provided deeper diagnostics and debugging features so that developers have great visibility into how their code is running in Azure. We hope you enjoy these new features and that you learn more about what's available in the Azure WebJobs SDK to extend this functionality. Have fun adding background processing to your ASP.NET Web Applications with Azure WebJobs!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10571432" width="1" height="1"&gt;</description><pubDate>Wed, 12 Nov 2014 15:35:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bradygaster</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10571432</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/12/new-developer-and-debugging-features-for-azure-webjobs-in-visual-studio.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10571601</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/11/12/visual-studio-2015-preview-and-entity-framework.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>Visual Studio 2015 Preview and Entity Framework</title><description>&lt;p&gt;Today we are pleased to announce the availability of Visual Studio 2015 Preview. You can &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517033"&gt;download it&lt;/a&gt; and read more about the release on the &lt;a href="http://blogs.msdn.com/b/visualstudio/"&gt;Visual Studio team blog&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;This post details the places that Entity Framework is included in Visual Studio 2015 Preview. Our team is concurrently working on two versions of Entity Framework, both of which are included in this preview.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6.1.2 (Beta 1)&lt;/h2&gt;  &lt;p&gt;This release includes Beta 1 of Entity Framework 6.1.2 runtime and tooling. EF6.1.2 includes a number bug fixes and community contributions, you can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.1.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of the changes included in EF6.1.2 on our CodePlex site&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;The Entity Framework 6.1.2 runtime is included in a number of places in this release.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The runtime will be installed if you create a new model using the Entity Framework Tools in a project that does not already have the EF runtime installed. &lt;/li&gt;    &lt;li&gt;The runtime is pre-installed in new ASP.NET projects, depending on the project template you select. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;If you encounter any issues using this beta of the 6.1.2 release be sure to &lt;a href="https://entityframework.codeplex.com/WorkItem/Create"&gt;report them on our CodePlex site&lt;/a&gt; so that we can look at fixing them for RTM.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 7 &lt;/h2&gt;  &lt;p&gt;EF7 is the next major version of Entity Framework and is still in the early stages of development.&amp;#160; EF7 is a lightweight and extensible version of EF that enables new platforms and new data stores. &lt;/p&gt;  &lt;p&gt;You can find more detailed information about EF7 at &lt;a title="http://aka.ms/AboutEF7" href="http://aka.ms/AboutEF7"&gt;http://aka.ms/AboutEF7&lt;/a&gt;. The page includes design information, links to relevant blog posts, and instruction about trying out the latest builds.&lt;/p&gt;  &lt;p&gt;Visual Studio 2015 Preview includes a pre-release version of the EF7 runtime that is installed in new ASP.NET 5 projects. &lt;/p&gt;  &lt;h3&gt;Quality of EF7&lt;/h3&gt;  &lt;p&gt;&lt;strong&gt;We’d love to have you try out EF7 but just remember there are still a lot of rough edges and missing functionality.&lt;/strong&gt; The EF7 project involves some major changes in the core of Entity Framework, you can read more about this in our recent ‘&lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/10/27/ef7-v1-or-v7.aspx"&gt;EF7 – v1 or v7?&lt;/a&gt;’ blog post. &lt;/p&gt;  &lt;p&gt;This release is designed to give you an idea of what the experience will be like and you will quickly hit limitations if you deviate from the examples. &lt;/p&gt;  &lt;p&gt;If you have a keen eye you may notice that the EF7 package is marked as ‘Beta 1’. This is a side effect of being part of a larger set of previews that are currently marked as Beta and &lt;strong&gt;we do not consider the EF7 code base to be at a level of quality or functionality where we would typically mark it as beta&lt;/strong&gt;. This is just a result of the complexities of having a series of smaller autonomous products that are also involved in an all up release.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10571601" width="1" height="1"&gt;</description><pubDate>Wed, 12 Nov 2014 13:35:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10571601</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/11/12/visual-studio-2015-preview-and-entity-framework.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition</guid><link>http://weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition</link><category>.NET</category><category>Community News</category><category>Visual Studio</category><title>Announcing Open Source of .NET Core Framework, .NET Core Distribution for Linux/OSX, and Free Visual Studio Community Edition</title><description>&lt;p&gt;This week we are holding our &lt;a href="http://www.visualstudio.com/connect-event-vs"&gt;Connect() developer event&lt;/a&gt; in New York City.&amp;nbsp; This is an event that is being streamed online for free, and it covers some of the great new capabilities coming with the Visual Studio 2015 and .NET 5 releases.&amp;nbsp; You can watch the event live as well as on-demand &lt;a href="http://www.visualstudio.com/connect-event-vs"&gt;here&lt;/a&gt;.  &lt;p&gt;I just finished giving the opening keynote of the event during which I made several big announcements:&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Announcing the Open Sourcing of the .NET Core Runtime and Libraries &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Over the last several years we have integrated more and more open source technology into our .NET, Visual Studio, and Azure offerings.&amp;nbsp; We have also begun to open source more of our own code and technology as well.&lt;/p&gt; &lt;p&gt;Earlier this year, at the Build 2014 conference, I announced the creation of the &lt;a href="http://www.dotnetfoundation.org/" target="_blank"&gt;.NET Foundation&lt;/a&gt; – which is an independent organization designed to foster the development and collaboration of open source technologies for .NET.&amp;nbsp; We have now open sourced ASP.NET, EF, Web API, NuGet and the "Roslyn" C# and VB compilers under it.&amp;nbsp; &lt;/p&gt; &lt;p&gt;It has been great to see the energy and innovation in these technologies since we made the open source announcements. We continue to have dedicated Microsoft teams working on each of them (several of the teams have more developers than ever before).&amp;nbsp; The open source process is now enabling the teams to collaborate even more with other developers in the community, and &lt;em&gt;every single one&lt;/em&gt; of the above projects have now accepted code contributions from developers outside Microsoft.&amp;nbsp; The combination is enabling an even richer flow of ideas, and even better products.&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Open Sourcing the .NET Core Runtime and Libraries&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;Today I’m excited to announce that we are going even further, and will be &lt;strong&gt;open sourcing the .NET Core Runtime&lt;/strong&gt;.&amp;nbsp; This will include everything needed to execute .NET code – including the CLR, Just-In-Time Compiler (JIT), Garbage Collector (GC), and core .NET base class libraries.&lt;/p&gt; &lt;p&gt;We are releasing the source under the MIT open source license and are also issuing an explicit patent promise to clarify users patent rights to .NET.&amp;nbsp; This morning, we published the public repository on GitHub where the project will be hosted: &lt;a href="https://github.com/dotnet/corefx" target="_blank"&gt;https://github.com/dotnet/corefx&lt;/a&gt;  &lt;p&gt;Today’s source release includes many of the newer core .NET framework libraries (ImmutableCollections, SIMD, XML and MetadataReader).&amp;nbsp; These libraries are fully open, and are ready to accept contributions.&amp;nbsp; Over the next several weeks and months we will continue to transfer source (including the Core CLR which is not there right now but in the process of being moved) into the repository and likewise make it open for contributions.  &lt;p&gt;&lt;u&gt;&lt;em&gt;What does this open sourcing mean?&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;Today’s open source announcement means that developers will have a fully supported, fully open source, fully cross platform .NET stack for creating server and cloud applications – including everything from the C#/VB compilers, to the CLR runtime, to the core .NET base class libraries, to the higher-level .NET Web, Data and API frameworks.  &lt;p&gt;It is an exciting day for .NET, and the new open source process will allow the .NET teams in Microsoft to collaborate even more deeply with other developers around the world.&amp;nbsp; The result is going to be even better products for everyone.  &lt;h2&gt;&lt;u&gt;Announcing .NET Core Framework on Linux and OSX&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Last month at a Cloud Event we held in San Francisco, Satya Nadella – our CEO – showed a slide like this one where he talked about how Microsoft loves Linux:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/fa5d1ce7201f_EFDE/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/fa5d1ce7201f_EFDE/image_thumb_1.png" width="560" height="334"&gt;&lt;/a&gt;  &lt;p&gt;We’ve worked hard with &lt;a href="http://azure.microsoft.com" target="_blank"&gt;Azure&lt;/a&gt; to make it a first-class cloud platform for Linux based applications, and shared how more than 20% of all VMs running on Azure are Linux based.&amp;nbsp; In fact, we now have 5 different Linux distributions officially supported for use on Azure – with full integration within our management portal and command-line extensibility.  &lt;p&gt;&lt;em&gt;&lt;u&gt;Bringing Core .NET to Linux and OS X&lt;/u&gt;&lt;/em&gt;  &lt;p&gt;Today I’m excited to announce the .NET side of our Linux support.&amp;nbsp; In addition to making the .NET server stack open-source, we are also going to release an official distribution of the .NET Core for Linux, as well as an official distribution of .NET Core for the Mac operation system as well.  &lt;p&gt;This will enable you to build .NET server and cloud applications and run them on both Windows Server and Linux.&amp;nbsp; It is going to enable every developer – regardless of what operating system they use to develop or target – to use .NET. And to do so on a fully open source runtime.  &lt;p&gt;We will be working closely with the Mono community as we complete our Linux port.&amp;nbsp; The Mono community have done a great job advancing .NET and Linux over the last decade.&amp;nbsp; Releasing the .NET Core source under an open source license is going to enable us to collaborate together much more closely going forward.&amp;nbsp; There are many Linux enhancements Mono has built that we would like to use, and likewise there are improvements Mono will be able to benefit from by being able to use the .NET source code.&amp;nbsp; Today’s set of announcements are a big win for everyone.  &lt;h2&gt;&lt;u&gt;Announcing Visual Studio Community Edition&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m also excited to announce that we are launching a new &lt;u&gt;free edition &lt;/u&gt;of Visual Studio today that will empower even more developers to build great apps and solutions.  &lt;p&gt;The new Visual Studio Community 2013 edition is a full-featured IDE.&amp;nbsp; It supports multiple project types in one solution file in a single IDE, and has all of the productivity features and IDE extensibility capabilities (meaning you can use Xamarin, ReSharper, VsVim, and any other VSIX extension) that developers love in Visual Studio.  &lt;p&gt;It is now available &lt;u&gt;completely free&lt;/u&gt; for:  &lt;ul&gt; &lt;li&gt;Any individual developer working on a commercial or non-commercial project  &lt;li&gt;Any developer contributing to an open source project  &lt;li&gt;Anyone in an academic research or course setting (e.g. students, teachers, classroom, online course)  &lt;li&gt;Any non-enterprise organization with 5 or fewer developers working on a commercial/non-commercial project together&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;We are making it available for download starting today, and developers can download and start using it immediately.&amp;nbsp; There is no program you need to join to use it – simply visit &lt;a href="http://www.visualstudio.com" target="_blank"&gt;www.visualstudio.com&lt;/a&gt;, click the download button, and you are good to go.&amp;nbsp; &lt;p&gt;It is going to enable even more developers to take advantage of Visual Studio and build even better applications.&amp;nbsp; We are looking forward to seeing what you build with it.  &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;It has never been a better time to be a software developer.&amp;nbsp; Software is what enables organizations to succeed in today’s digital environment.&amp;nbsp; It is what enables businesses to connect better with customers, to deliver amazing new experiences, to drive new revenue streams, and to run operations more efficiently.  &lt;p&gt;Using the cloud, every software developer on the planet can now create and build solutions that can reach millions of users, with no upfront costs, powered by a cloud infrastructure that delivers completely global reach.&amp;nbsp; The impact an individual developer can now have has never been greater than it is today.  &lt;p&gt;Our goal at Microsoft is to provide developers with the platform and tools that will make them incredibly successful.&amp;nbsp; It is a mission we have had since the very beginning of the company.&amp;nbsp; Today’s .NET open source, cross platform, and Visual Studio Community edition announcements will enable the development technology we build to be leveraged by an even wider range of developers.&amp;nbsp; We are really excited to see some of the new apps and solutions that are built with it.  &lt;p&gt;In addition to the above announcements, we are also announcing and demoing tons of new features and services for the first time at our &lt;a href="http://www.visualstudio.com/connect-event-vs" target="_blank"&gt;Connect() event&lt;/a&gt; streamed from New York.&amp;nbsp; You can watch the online presentations &lt;a href="http://www.visualstudio.com/connect-event-vs" target="_blank"&gt;here&lt;/a&gt;.&amp;nbsp; Also read &lt;a href="http://aka.ms/soma-connect" target="_blank"&gt;Soma’s blog post&lt;/a&gt; for a summary of some of the new VS 2015 and .NET 5 capabilities we announced this week.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;a href="http://www.twitter.com/scottgu" target="_blank"&gt;@scottgu&lt;/a&gt;&lt;/em&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition&amp;g=https%3A//weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Announcing+Open+Source+of+.NET+Core+Framework%2c+.NET+Core+Distribution+for+Linux%2fOSX%2c+and+Free+Visual+Studio+Community+Edition&amp;v3=ScottGu%27s%20Blog%20-%20Announcing+Open+Source+of+.NET+Core+Framework%2c+.NET+Core+Distribution+for+Linux%2fOSX%2c+and+Free+Visual+Studio+Community+Edition&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Wed, 12 Nov 2014 15:45:50 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/815</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/815</link><category>.net</category><category>asp.net</category><title>ASP.NET 5 for .NET Framework &amp; .NET Core</title><description>&lt;p&gt;ASP.NET 5 introduces support for a new flavor of .NET called .NET Core, but it also runs on the .NET Framework you use today. .NET Core offers some unique advantages over .NET Framework, which this video will summarize, along with demonstrating how Visual Studio has been enhanced to easily enable you to write your ASP.NET 5 applications to target both .NET flavors simultaneously.&amp;nbsp;&lt;/p&gt;&lt;p&gt;You can learn more about &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517736"&gt;.NET Core here&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:451a578b549a4a219865a3cd014bcff0"&gt;</description><pubDate>Wed, 12 Nov 2014 15:20:00 Z</pubDate><comments>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/815</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET 5 introduces support for a new flavor of .NET called .NET Core, but it also runs on the .NET Framework you use today. .NET Core offers some unique advantages over .NET Framework, which this video will summarize, along with demonstrating how Visual Studio has been enhanced to easily enable you to write your ASP.NET 5 applications to target both .NET flavors simultaneously.  You can learn more about .NET Core here. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">432</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/812</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/812</link><category>.net</category><category>asp.net</category><title>Web Forms 4.6</title><description>&lt;p&gt;ASP.NET Web Forms 4.6&amp;nbsp; brings in new features such as HTTP 2, Async Model binding and CodeDOM Providers for .NET Compiler Platform (&amp;quot;Roslyn&amp;quot;). Pranav Rastogi demonstrates some of these new features in this video.&lt;/p&gt;&lt;p&gt;You can learn more about &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517734"&gt;ASP.NET WebForms 4.6 here&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:bb504bf0601e458681d9a3d3015a39f7"&gt;</description><pubDate>Wed, 12 Nov 2014 15:20:00 Z</pubDate><comments>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/812</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web Forms 4.6  brings in new features such as HTTP 2, Async Model binding and CodeDOM Providers for .NET Compiler Platform (&amp;quot;Roslyn&amp;quot;). Pranav Rastogi demonstrates some of these new features in this video. You can learn more about ASP.NET WebForms 4.6 here. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">508</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/811</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/811</link><category>asp.net</category><title>ASP.NET Tooling in Visual Studio 2015</title><description>&lt;p&gt;With Visual Studio 2015, we reimagined the project system for ASP.NET from the ground up, making it lighter-weight and more robust.&amp;nbsp; Developers can make changes to their source and see it reflected in the browser with just a refresh. Or add files to the filesystem and see them automatically reflected in your project.&amp;nbsp; All of these new features, including building, running, scaffolding, and unit testing is available from a cross-platform friendly command line. Sayed Hashimi demonstrates some of these new capabilities.&lt;/p&gt;&lt;p&gt;You can learn more about &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517733"&gt;ASP.NET 5 Tooling here&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:1054aea168fd40a09665a3c6013fae1c"&gt;</description><pubDate>Wed, 12 Nov 2014 15:20:00 Z</pubDate><comments>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/811</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">With Visual Studio 2015, we reimagined the project system for ASP.NET from the ground up, making it lighter-weight and more robust.  Developers can make changes to their source and see it reflected in the browser with just a refresh. Or add files to the filesystem and see them automatically reflected in your project.  All of these new features, including building, running, scaffolding, and unit testing is available from a cross-platform friendly command line. Sayed Hashimi demonstrates some of these new capabilities. You can learn more about ASP.NET 5 Tooling here. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">574</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/810</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/810</link><category>.net</category><category>asp.net</category><title>ASP.NET 5</title><description>&lt;p&gt;ASP.NET 5 has been re-imagined from the ground up to provide a faster development experience, best in class performance, full side-by-side support, and cross platform support for Linux and Mac. In this video, Scott Hunter gives an overview of what's new in ASP.NET 5 and provides a short demo of the new tooling inside of Visual Studio 2015.&amp;nbsp;&lt;/p&gt;&lt;p&gt;You can learn more about &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517731"&gt;ASP.NET 5 here&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:debb0c21a8654ac283a0a3d9012f8dcb"&gt;</description><pubDate>Wed, 12 Nov 2014 15:20:00 Z</pubDate><comments>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/810</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET 5 has been re-imagined from the ground up to provide a faster development experience, best in class performance, full side-by-side support, and cross platform support for Linux and Mac. In this video, Scott Hunter gives an overview of what's new in ASP.NET 5 and provides a short demo of the new tooling inside of Visual Studio 2015.  You can learn more about ASP.NET 5 here. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">826</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10571156</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/11/dialog-box-may-be-displayed-to-users-when-opening-projects-in-microsoft-visual-studio-after-installation-of-microsoft-net-framework-4-6.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/KB3002340/">KB3002340</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/kb3002339/">kb3002339</category><title>Dialog box may be displayed to users when opening projects in Microsoft Visual Studio after installation of Microsoft .NET Framework 4.6</title><description>&lt;p&gt;After the installation of the Microsoft .NET Framework 4.6, users may experience the following dialog box displayed in Microsoft Visual Studio when either creating new Web Site or Windows Azure project or when opening existing projects.&lt;/p&gt;
&lt;p&gt;Configuring Web &lt;a href="http://localhost:64886/"&gt;http://localhost:64886/&lt;/a&gt; for ASP.NET 4.5 failed. You must manually configure this site for ASP.NET 4.5 in order for the site to run correctly. ASP.NET 4.0 has not been registered on the Web server. You need to manually configure your Web server for ASP.NET 4.0 in order for your site to run correctly.&lt;/p&gt;
&lt;p&gt;NOTE: Microsoft .NET Framework 4.6 may also be referred to as Microsoft .NET Framework 4.5.3&lt;/p&gt;
&lt;p&gt;This issue may impact the following Microsoft Visual Studio versions: Visual Studio 2013, Visual Studio 2012, Visual Studio 2010 SP1&lt;/p&gt;
&lt;h2&gt;Workaround:&lt;/h2&gt;
&lt;p&gt;Select &amp;ldquo;OK&amp;rdquo; when the dialog is presented. This dialog box is benign and there will be no impact to the project once the dialog box is cleared. This dialog will continue to be displayed when Web Site Project or Windows Azure Projects are created or opened until the fix has been installed on the machine.&lt;/p&gt;
&lt;h2&gt;Resolution:&lt;/h2&gt;
&lt;p&gt;Microsoft has published a fix for all impacted versions of Microsoft Visual Studio.&lt;/p&gt;
&lt;p&gt;Visual Studio 2013 &amp;ndash;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download &lt;a href="http://go.microsoft.com/fwlink/?LinkId=510314"&gt;Visual Studio 2013 Update 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For more information on the Visual Studio 2013 Update 4, please refer to: &lt;a href="http://go.microsoft.com/fwlink/?LinkID=518762&amp;amp;clcid=0x409"&gt;Visual Studio 2013 Update 4 KB Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Visual Studio 2012&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An update to address this issue for Microsoft Visual Studio 2012 has been published: &lt;a href="http://support.microsoft.com/kb/3002339"&gt;KB3002339&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To install this update directly from the Microsoft Download Center, &lt;a href="http://download.microsoft.com/download/A/0/2/A02C37E0-77F7-448A-BD5C-F66AB1F78DBC/VS11-KB3002339.exe"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Visual Studio 2010 SP1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An update to address this issue for Microsoft Visual Studio 2010 SP1 has been published: &lt;a href="http://support.microsoft.com/kb/3002340"&gt;KB3002340&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This update is available from &lt;a href="http://update.microsoft.com/"&gt;Windows Update&lt;/a&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;To install this update directly from the Microsoft Download Center, &lt;a href="http://download.microsoft.com/download/6/7/E/67E041A1-00DA-4948-90BE-75A0146C08F5/VS10SP1-KB3002340-x86.exe"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10571156" width="1" height="1"&gt;</description><pubDate>Tue, 11 Nov 2014 18:00:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10571156</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/11/dialog-box-may-be-displayed-to-users-when-opening-projects-in-microsoft-visual-studio-after-installation-of-microsoft-net-framework-4-6.aspx#comments</comments></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=3921</guid><link>http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-the-basics/</link><category>Uncategorized</category><title>ASP.NET Tag Helpers – The Basics</title><description>A few days ago I wrote a blog post about how I got started writing my first ASP.NET Tag Helper that delivered a Kendo UI DatePicker widget.  I realize that I rambled through the features of the tag helper, and in this article I want to cover in detail each of the features currently available in [&amp;#8230;]</description><pubDate>Tue, 11 Nov 2014 19:26:24 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-the-basics/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/asp-net-tag-helpers-the-basics/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments></item><item><guid isPermaLink="false">http://fritzblog2.azurewebsites.net/?p=351</guid><link>http://www.jeffreyfritz.com/2014/11/asp-net-mvc-tag-helpers-web-controls-2-0/</link><category>Uncategorized</category><title>ASP.NET MVC Tag Helpers – Web Controls 2.0?</title><description>I have already heard a bit of feedback about my previous post about ASP.NET Tag Helpers. I want to make sure that I address several of your questions about this new feature in MVC 6, and I&amp;#8217;m going to start with this backhanded question from a number of my friends: &amp;#8220;Isn&amp;#8217;t this just Web Controls [&amp;#8230;]</description><pubDate>Mon, 10 Nov 2014 20:19:48 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/asp-net-mvc-tag-helpers-web-controls-2-0/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/asp-net-mvc-tag-helpers-web-controls-2-0/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=3461</guid><link>http://www.jeffreyfritz.com/2014/11/get-started-with-asp-net-mvc-taghelpers/</link><category>CodeProject</category><category>Uncategorized</category><title>Get Started with ASP.NET MVC TagHelpers</title><description>We are almost to the BETA cycle of ASP.NET vNext, and I&amp;#8217;ve been following the ASP.NET team&amp;#8217;s development on GitHub.  If you didn&amp;#8217;t know already, the all-star developers at Microsoft are cranking away on the next version of ASP.NET in a completely open-source model.One of the cool new features set to be released with the next version [&amp;#8230;]</description><pubDate>Sun, 09 Nov 2014 20:23:42 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/get-started-with-asp-net-mvc-taghelpers/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/get-started-with-asp-net-mvc-taghelpers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">15</slash:comments></item><item><guid isPermaLink="false">http://www.jeffreyfritz.com/?p=3441</guid><link>http://www.jeffreyfritz.com/2014/11/site-moved-updated-and-just-better/</link><category>Uncategorized</category><title>Site Moved, Updated, and Just Better</title><description>If you frequent my blog, and I know that not too many people do just yet, you&amp;#8217;ll notice that I&amp;#8217;ve changed things up a bit.  I&amp;#8217;ve moved from my old provider to Azure and WordPress to make my life a bit easier in managing things. I&amp;#8217;ve spoken for a while on how great Azure is, [&amp;#8230;]</description><pubDate>Sat, 08 Nov 2014 10:16:19 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/11/site-moved-updated-and-just-better/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/11/site-moved-updated-and-just-better/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10570670</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/11/07/where-can-you-meet-the-team-november-2014-at-anglebrackets-and-connect.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><title>Where can you meet the team? November 2014 at AngleBrackets and Connect();</title><description>&lt;p&gt;We&amp;rsquo;ve got two big events coming up next week.&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://anglebrackets.org/"&gt;AngleBrackets&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nov 10&lt;sup&gt;th&lt;/sup&gt;-13&lt;sup&gt;th&lt;/sup&gt; in Vegas is an exciting open-source web conference that&amp;rsquo;s collocated with DevIntersections. That means you can register for one and attend both! Come see &lt;em&gt;&lt;strong&gt;Scotts Hanselman&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;Scott Guthrie&lt;/strong&gt;&lt;/em&gt;, along with web tooling PM &lt;em&gt;&lt;strong&gt;Mads Kristensen&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;Mohit Srivastava&lt;/strong&gt;&lt;/em&gt; ,&amp;nbsp;and industry luminaries like Kathleen Dollard and K. Scott Allen!&lt;/p&gt;
&lt;h2&gt;&lt;a href="http://www.visualstudio.com/connect-event-vs"&gt;Connect();&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Starting on Wednesday, November 12, join industry leaders &lt;strong&gt;Scott Guthrie&lt;/strong&gt;, &lt;strong&gt;S. "Soma" Somasegar&lt;/strong&gt;, &lt;strong&gt;Brian Harry&lt;/strong&gt;, and &lt;strong&gt;Scott Hanselman&lt;/strong&gt; live from New York as they share insights about new technologies and features coming to .NET, ASP.NET, Azure, Visual Studio, and Visual Studio Online. They'll be joined on stage with demos from subject matter experts, &lt;strong&gt;Amanda Silver&lt;/strong&gt;, &lt;strong&gt;Jay Schmelzer&lt;/strong&gt;, &lt;strong&gt;Daniel Moth&lt;/strong&gt;, and &lt;strong&gt;Brian Keller&lt;/strong&gt;. Afterwards, engage in live, interactive Q&amp;amp;A sessions with the keynote speakers before jumping into the technical details with over 40 on-demand technical sessions.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Come back on Thursday, November 13, to interact with engineering team members in live sessions from the Microsoft Campus in Redmond, WA and gain further insight about the newest tools, frameworks, and services.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10570670" width="1" height="1"&gt;</description><pubDate>Fri, 07 Nov 2014 19:13:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10570670</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/11/07/where-can-you-meet-the-team-november-2014-at-anglebrackets-and-connect.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/2oafQVI4Lx4</guid><link>https://www.youtube.com/watch?v=2oafQVI4Lx4&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Nov 4th, 2014 - LIVE from the MVP Summit</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=2oafQVI4Lx4&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/2oafQVI4Lx4/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=2oafQVI4Lx4&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Nov 4th, 2014 - LIVE from the MVP Summit&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1637&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;26
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;23:51&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 04 Nov 2014 19:17:47 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/2oafQVI4Lx4" /><a10:updated>2014-11-23T06:41:25Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/023</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/023</link><category>.net</category><category>azure</category><category>asp.net</category><title>ASP.NET 5 (Panel Discussion)</title><description>&lt;p&gt;As a Web Developer today you have many opportunities to create some amazing websites and services. Weather its updating an existing site to support responsive design, creating a new single page application (SPA), or a service that can power any device using REST APIs, ASP.NET and Visual Studio will help you get the job done.&lt;/p&gt;&lt;p&gt;Join us for a panel discussion with the ASP.NET product team to dive deeper into what's new in frameworks such as MVC, Web API, and others, along with how Visual Studio&amp;nbsp;2015 continues to evolve to be the best HTML, JavaScript and CSS editing and design experience, along with your favorite browser and the best open source technologies.&lt;/p&gt;&lt;p&gt;You can learn more about &lt;a href="http://go.microsoft.com/fwlink/?LinkId=517731"&gt;ASP.NET 5 here&lt;/a&gt;.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6787dbd33f144693876ea3d3016cc38a"&gt;</description><pubDate>Mon, 03 Nov 2014 04:55:45 Z</pubDate><comments>http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/023</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">As a Web Developer today you have many opportunities to create some amazing websites and services. Weather its updating an existing site to support responsive design, creating a new single page application (SPA), or a service that can power any device using REST APIs, ASP.NET and Visual Studio will help you get the job done. Join us for a panel discussion with the ASP.NET product team to dive deeper into what's new in frameworks such as MVC, Web API, and others, along with how Visual Studio 2015 continues to evolve to be the best HTML, JavaScript and CSS editing and design experience, along with your favorite browser and the best open source technologies. You can learn more about ASP.NET 5 here. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2720</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Cory Fowler, Sayed Hashimi, David Fowler</dc:creator></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Kl_-uLmRETw</guid><link>https://www.youtube.com/watch?v=Kl_-uLmRETw&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET MVP Summit - Insider ASP.NET vNext</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Kl_-uLmRETw&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Kl_-uLmRETw/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Kl_-uLmRETw&amp;amp;feature=youtube_gdata"&gt;ASP.NET MVP Summit - Insider ASP.NET vNext&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4027&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;22
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:25:51&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 03 Nov 2014 21:33:59 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/Kl_-uLmRETw" /><a10:updated>2014-12-19T21:00:14Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services</guid><link>http://weblogs.asp.net/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services</link><category>Azure</category><category>.NET</category><category>Community News</category><title>Azure: Announcing New Real-time Data Streaming and Data Factory Services</title><description>&lt;p&gt;The last three weeks have been busy ones for Azure.&amp;nbsp; Two weeks ago we &lt;a href="http://weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure" target="_blank"&gt;announced a partnership with Docker&lt;/a&gt; to enable great container-based development experiences on Linux, Windows Server and Microsoft Azure.  &lt;p&gt;Last week we held our Cloud Day event and &lt;a href="http://azure.microsoft.com/blog/2014/10/20/azures-getting-bigger-faster-and-more-open/" target="_blank"&gt;announced&lt;/a&gt; our new &lt;a href="http://azure.microsoft.com/blog/2014/10/20/azures-getting-bigger-faster-and-more-open/" target="_blank"&gt;G-Series of Virtual Machines as well as Premium Storage offering&lt;/a&gt;.&amp;nbsp; The G-Series VMs provide the largest VM sizes available in the public cloud today (nearly 2x more memory than the largest AWS offering, and 4x more memory than the largest Google offering).&amp;nbsp; The new Premium Storage offering (which will work with both our D-series and G-series of VMs) will support up to 32TB of storage per VM, &amp;gt;50,000 IOPS of disk IO per VM, and enable sub-1ms read latency.&amp;nbsp; Combined they provide an enormous amount of power that enables you to run even bigger and better solutions in the cloud.  &lt;p&gt;Earlier this week, we officially opened our new &lt;a href="http://blogs.microsoft.com/blog/2014/10/26/microsoft-azure-australia-geo-generally-available/" target="_blank"&gt;Azure Australia regions&lt;/a&gt; – which are our 18th and 19th Azure regions open for business around the world.&amp;nbsp; Then at TechEd Europe we &lt;a href="http://weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more" target="_blank"&gt;announced another round of new features&lt;/a&gt; – including the launch of the new &lt;a href="http://azure.microsoft.com/en-us/marketplace/" target="_blank"&gt;Azure MarketPlace&lt;/a&gt;, a bunch of great network improvements, our new &lt;a href="http://azure.microsoft.com/en-us/services/batch/" target="_blank"&gt;Batch computing service&lt;/a&gt;, general availability of our &lt;a href="http://azure.microsoft.com/en-us/services/automation/" target="_blank"&gt;Azure Automation service&lt;/a&gt; and more.  &lt;p&gt;Today, I’m excited to blog about even more new services we have released this week in the Azure Data space.&amp;nbsp; These include: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Event Hubs:&lt;/strong&gt; is a scalable service for ingesting and storing data from websites, client apps, and IoT sensors.  &lt;li&gt;&lt;strong&gt;Stream Analytics&lt;/strong&gt;: is a cost-effective event processing engine that helps uncover real-time insights from event streams.  &lt;li&gt;&lt;strong&gt;Data Factory:&lt;/strong&gt; enables better information production by orchestrating and managing diverse data and data movement. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Azure Event Hub is now available in general availability, and the new Azure Stream Analytics and Data Factory services are now in public preview.  &lt;h2&gt;&lt;u&gt;Event Hubs: Log Millions of events per second in near real time&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;The &lt;a href="http://azure.microsoft.com/en-us/services/event-hubs/" target="_blank"&gt;Azure Event Hub service&lt;/a&gt; is a highly scalable telemetry ingestion service that can &lt;strong&gt;log millions of events per second&lt;/strong&gt; in near real time.&amp;nbsp; You can use the Event Hub service to collect data/events from any IoT device, from any app (web, mobile, or a backend service), or via feeds like social networks.&amp;nbsp; We are using it internally within Microsoft to monitor some of our largest online systems.&lt;/p&gt; &lt;p&gt;Once you collect events with Event Hub you can then analyze the data using any real-time analytics system (like Apache Storm or our new Azure Stream Analytics service) and store/transform it into any data storage system (including HDInsight and Hadoop based solutions).&lt;/p&gt; &lt;p&gt;Event Hub is delivered as a managed service on Azure (meaning we run, scale and patch it for you and provide an enterprise SLA).&amp;nbsp; It delivers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ability to log millions of events per second in near real time  &lt;li&gt;Elastic scaling support with the ability to scale-up/down with no interruption  &lt;li&gt;Support for multiple protocols including support for HTTP and AMQP based events  &lt;li&gt;Flexible authorization and throttling device policies  &lt;li&gt;Time-based event buffering with event order preservation&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;The pricing model for Event Hubs is very flexible – for just $11/month you can provision a basic Event Hub with guaranteed performance capacity to capture 1 MB/sec of events sent to your Event Hub.&amp;nbsp; You can then provision as many additional capacity units as you need if your event traffic goes higher.&amp;nbsp; &lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Getting Started with Capturing Events&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can create a new Event Hub using the Azure Portal or via the command-line.&amp;nbsp; Choose New-&amp;gt;App Service-&amp;gt;Service Bus-&amp;gt;Event Hub in the portal to do so:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb.png" width="870" height="327"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Once created, events can be sent to an Event Hub with either a strongly-typed API (e.g. .NET or Java client library) or by just sending a raw HTTP or AMQP message to the service.&amp;nbsp; Below is a simple example of how easy it is to log an IoT event to an Event Hub using just a standard HTTP post request.&amp;nbsp; Notice the Authorization header in the HTTP post – you can use this to optionally enable flexible authentication/authorization for your devices:&lt;/p&gt; &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;POST https://your-namespace.servicebus.windows.net/your-event-hub/messages?timeout=60&amp;amp;api-version=2014-01 HTTP/1.1&lt;?xml:namespace prefix = "o" /&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;Authorization: SharedAccessSignature sr=your-namespace.servicebus.windows.net&amp;amp;sig=tYu8qdH563Pc96Lky0SFs5PhbGnljF7mLYQwCZmk9M0%3d&amp;amp;se=1403736877&amp;amp;skn=RootManageSharedAccessKey&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;ContentType: application/atom+xml;type=entry;charset=utf-8&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;Host: your-namespace.servicebus.windows.net&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;Content-Length: 42&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;Expect: 100-continue&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 10pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;{ "DeviceId":"dev-01", "Temperature":"37.0" }&lt;/span&gt;&lt;span lang="EN" style="font-size: 10pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Your Event Hub can collect up to millions of messages per second like this, each storing whatever data schema you want within them, and the Event Hubs service will store them in-order for you to later read/consume. &lt;/p&gt; &lt;p&gt;&lt;em&gt;&lt;u&gt;Downstream Event Processing&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Once you collect events, you no doubt want to do something with them.&amp;nbsp; Event Hubs includes an intelligent processing agent that allows for automatic partition management and load distribution across readers.&amp;nbsp; You can implement any logic you want within readers, and the data sent to the readers is delivered in the order it was sent to the Event Hub. &lt;/p&gt; &lt;p&gt;In addition to supporting the ability for you to write custom Event Readers, we also have two easy ways to work with pre-built stream processing systems: including our new Azure Stream Analytics Service and Apache Storm.&amp;nbsp; Our new Azure Stream Analytics service supports doing stream processing directly from Event Hubs, and Microsoft has created an Event Hubs Storm Spout for use with Apache Storm clusters.&lt;/p&gt; &lt;p&gt;The below diagram helps express some of the many rich ways you can use Event Hubs to collect and then hand-off events/data for processing:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_3.png" width="621" height="297"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Event Hubs provides a super flexible and cost effective building-block that you can use to collect and process any events or data you can stream to the cloud.&amp;nbsp; It is very cost effective, and provides the scalability you need to meet any needs.&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Learning More about Event Hubs&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;For more information about Azure Event Hubs, please review the following resources:  &lt;ul&gt; &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/event-hubs/"&gt;Azure Event Hubs&lt;/a&gt;  &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn789972.aspx"&gt;Event Hubs Conceptual Overview&lt;/a&gt;  &lt;li&gt;&lt;a href="https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=servbus"&gt;Azure Service Bus Forum&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/hdinsight-storm-sensor-data-analysis"&gt;Storm Spout Resources&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/stream-analytics/"&gt;Azure Stream Analytics Resources&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Stream Analytics: Distributed Stream Processing Service for Azure&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the preview our new Azure Stream Analytics service – a fully managed real-time distributed stream computation service that provides low latency, scalable processing of streaming data in the cloud with an enterprise grade SLA. The new Azure Stream Analytics service &lt;strong&gt;easily scales from small projects with just a few KB/sec of throughput to a&lt;/strong&gt; &lt;strong&gt;gigabyte/sec or more of streamed data messages/events&lt;/strong&gt;.&amp;nbsp;&amp;nbsp; &lt;p&gt;Our Stream Analytics pricing model enable you to run low throughput streaming workloads continuously at low cost, and enables you to only have to scale up as your business needs increase.&amp;nbsp; We do this while maintaining built in guarantees of event delivery, and state management for fast recovery which enables mission critical business continuity.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Dramatically Simpler Developer Experience for Stream Processing Data&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;Stream Analytics supports a SQL-like language that dramatically lowers the bar of the developer expertise required to create a scalable stream processing solution. A developer can simply write a few lines of SQL to do common operations including basic filtering, temporal analysis operations, joining multiple live streams of data with other static data sources, and detecting stream patterns (or lack thereof).  &lt;p&gt;This dramatically reduces the complexity and time it takes to develop, maintain and apply time-sensitive computations on real-time streams of data. Most other streaming solutions available today require you to write complex custom code, but with Azure Stream Analytics you can write simple, declarative and familiar SQL.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Fully Managed Service that is Easy to Setup&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;With Stream Analytics you can dramatically accelerate how quickly you can derive valuable real time insights and analytics on data from devices, sensors, infrastructure, or applications. With a few clicks in the Azure Portal, you can create a streaming pipeline, configure its inputs and outputs, and provide SQL-like queries to describe the desired stream transformations/analysis you wish to do on the data. Once running, you are able to monitor the scale/speed of your overall streaming pipeline and make adjustments to achieve the desired throughput and latency.  &lt;p&gt;You can create a new Stream Analytics Job in the Azure Portal, by choosing &lt;strong&gt;New-&amp;gt;Data Services-&amp;gt;Stream Analytics&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_4.png" width="624" height="272"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Setup Streaming Data Input&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;Once created, your first step will be to add a Streaming Data Input.&amp;nbsp; This allows you to indicate where the data you want to perform stream processing on is coming from.&amp;nbsp; From within the portal you can choose &lt;strong&gt;Inputs-&amp;gt;Add An Input &lt;/strong&gt;to launch a wizard that enables you to specify this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_5.png" width="624" height="264"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;We can use the Azure Event Hub Service to deliver us a stream of data to perform processing on. If you already have an Event Hub created, you can choose it from a list populated in the wizard above.&amp;nbsp; You will also be asked to specify the format that is being used to serialize incoming event in the Event Hub (e.g. JSON, CSV or Avro formats).&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Setup Output Location&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;The next step to developing our Stream Analytics job is to add a Streaming Output Location.&amp;nbsp; This will configure where we want the output results of our stream processing pipeline to go.&amp;nbsp; We can choose to easily output the results to Blob Storage, another Event Hub, or a SQL Database:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_7.png" width="624" height="232"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Note that being able to use another Event Hub as a target provides a powerful way to connect multiple streams into an overall pipeline with multiple steps.&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Write Streaming Queries&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;Now that we have our input and output sources configured, we can now write SQL queries to transform, aggregate and/or correlate the incoming input (or set of inputs in the event of multiple input sources) and output them to our output target.&amp;nbsp; We can do this within the portal by selecting the &lt;strong&gt;QUERY&lt;/strong&gt; tab at the top.&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_6.png" width="624" height="94"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;There are a number of interesting queries you can write to processing the incoming stream of data.&amp;nbsp; For example, in the previous Event Hub section of this blog post I showed how you can use an HTTP POST command to submit JSON based temperature data from an IoT device to an Event Hub with data in JSON format like so:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;span lang="EN" style="font-size: 9pt; font-family: &amp;quot;Courier New&amp;quot;; color: black; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &amp;quot;Times New Roman&amp;quot;; mso-ansi-language: en"&gt;{ "DeviceId":"dev-01", "Temperature":"37.0" }&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;When multiple devices are streaming events simultaneously into our Event Hub like this, it would feed into our Stream Analytics job as a stream of continuous data events that look like the sequence below:&lt;/p&gt; &lt;p&gt;&lt;img alt="" src="https://acomdpsstorage.blob.core.windows.net/dpsmedia-prod/azure.microsoft.com/en-us/documentation/articles/stream-analytics-get-started/20141029115546/azurestreamanalyticssqloutput1.png"&gt;&lt;/p&gt; &lt;p&gt;Wouldn’t it be interesting to be able to analyze this data using a time-window perspective instead?&amp;nbsp; For example, it would be useful to calculate in real-time what the average temperature of each device was in the last 5 seconds of multiple readings.&lt;/p&gt; &lt;p&gt;With the Stream Analytics Service we can now dynamically calculate this over our incoming live stream of data just by writing a SQL query like so:&lt;/p&gt; &lt;form id="RunwayMasterForm" method="post"&gt; &lt;blockquote&gt; &lt;div class="wa-container" data-tag-area="content" data-tag-group="body"&gt;&lt;section class="wa-section wa-section-documentationArticle"&gt; &lt;div class="wa-content"&gt;&lt;pre class="prettyprint  prettyprinted"&gt;&lt;span class="pln"&gt;SELECT &lt;/span&gt;&lt;span class="typ"&gt;DateAdd&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;second&lt;/span&gt;&lt;span class="pun"&gt;,-&lt;/span&gt;&lt;span class="lit"&gt;5&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="typ"&gt;System&lt;/span&gt;&lt;span class="pun"&gt;.&lt;/span&gt;&lt;span class="typ"&gt;TimeStamp&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;as&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;WinStartTime&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; system&lt;/span&gt;&lt;span class="pun"&gt;.&lt;/span&gt;&lt;span class="typ"&gt;TimeStamp&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;as&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;WinEndTime&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;DeviceId&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;Avg&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="typ"&gt;Temperature&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;as&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;AvgTemperature&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;Count&lt;/span&gt;&lt;span class="pun"&gt;(*)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;as&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;EventCount&lt;/span&gt;&lt;span class="pln"&gt; 
    FROM input
    GROUP BY &lt;/span&gt;&lt;span class="typ"&gt;TumblingWindow&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;second&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="lit"&gt;5&lt;/span&gt;&lt;span class="pun"&gt;),&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;DeviceId&lt;/span&gt;&lt;span class="pln"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/form&gt;
&lt;p&gt;Running this query in our Stream Analytics job will aggregate/transform our incoming stream of data events and output data like below into the output source we configured for our job (e,g, a blog storage file or a SQL Database):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://acomdpsstorage.blob.core.windows.net/dpsmedia-prod/azure.microsoft.com/en-us/documentation/articles/stream-analytics-get-started/20141029115546/azurestreamanalyticssqloutput2.png"&gt;&lt;/p&gt;
&lt;p&gt;The great thing about this approach is that the data is being aggregated/transformed in real time as events are being streamed to us, and it scales to handle literally gigabytes of data event streamed per second.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;Scaling your Stream Analytics Job&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Once defined, you can easily monitor the activity of your Stream Analytics Jobs in the Azure Portal: &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_9.png" width="624" height="282"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;You can use the &lt;strong&gt;SCALE&lt;/strong&gt; tab to dynamically increase or decrease scale capacity for your stream processing – allowing you to pay only for the compute capacity you need, and enabling you to handle jobs with gigabytes/sec of streamed data.&amp;nbsp; &lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;Learning More about Stream Analytics Service&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;For more information about Stream Analytics, please review the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/stream-analytics/" target="_blank"&gt;Stream Analytics Home Page&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/10/29/announcing-azure-stream-analytics-for-real-time-event-processing/" target="_blank"&gt;Blog Post Announcing Stream Analytics Preview&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/stream-analytics-get-started/" target="_blank"&gt;Getting Started with Stream Analytics Tutorial&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/services/stream-analytics/" target="_blank"&gt;Stream Analytics Documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;&lt;u&gt;Data Factory: Fully managed service to build and manage information production pipelines &lt;/u&gt;&lt;/h2&gt;
&lt;p&gt;Organizations are increasingly looking to fully leverage all of the data available to their business.&amp;nbsp; As they do so, the data processing landscape is becoming more diverse than ever before – data is being processed across geographic locations, on-premises and cloud, across a wide variety of data types and sources (SQL, NoSQL, Hadoop, etc), and the volume of data needing to be processed is increasing exponentially. Developers today are often left writing large amounts of custom logic to deliver an information production system that can manage and co-ordinate all of this data and processing work. 
&lt;p&gt;To help make this process simpler, I’m excited to announce the preview of our new Azure Data Factory service – a fully managed service that makes it easy to compose data storage, processing, and data movement services into streamlined, scalable &amp;amp; reliable data production pipelines. Once a pipeline is deployed, Data Factory enables easy monitoring and management of it, greatly reducing operational costs.&amp;nbsp; &lt;p&gt;&lt;u&gt;&lt;em&gt;Easy to Get Started&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;The Azure Data Factory is a fully managed service. Getting started with Data Factory is simple. With a few clicks in the &lt;a href="https://portal.azure.com/"&gt;Azure preview portal&lt;/a&gt;, or via our command line operations, a developer can create a new data factory and link it to data and processing resources.&amp;nbsp; From the new Azure Marketplace in the Azure Preview Portal, choose &lt;strong&gt;Data + Analytics –&amp;gt; Data Factory&lt;/strong&gt; to create a new instance in Azure:&lt;/p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_11.png" width="847" height="491"&gt;&lt;/a&gt; 
&lt;p&gt;&lt;u&gt;&lt;em&gt;Orchestrating Information Production Pipelines across multiple data sources&lt;/em&gt;&lt;/u&gt; 
&lt;p&gt;Data Factory makes it easy to coordinate and manage data sources from a variety of locations – including ones both in the cloud and on-premises.&amp;nbsp; Support for working with data on-premises inside SQL Server, as well as Azure Blob, Tables, HDInsight Hadoop systems and SQL Databases is included in this week’s preview release.&amp;nbsp; &lt;p&gt;Access to on-premises data is supported through a data management gateway that allows for easy configuration and management of secure connections to your on-premises SQL Servers.&amp;nbsp; Data Factory balances the scale &amp;amp; agility provided by the cloud, Hadoop and non-relational platforms, with the management &amp;amp; monitoring that enterprise systems require to enable information production in a hybrid environment. 
&lt;p&gt;&lt;u&gt;&lt;em&gt;Custom Data Processing Activities using Hive, Pig and C#&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;This week’s preview enables data processing using Hive, Pig and custom C# code activities.&amp;nbsp; Data Factory activities can be used to clean data, anonymize/mask critical data fields, and transform the data in a wide variety of complex ways. &lt;/p&gt;
&lt;p&gt;The Hive and Pig activities can be run on an HDInsight cluster you create, or alternatively you can allow Data Factory to fully manage the Hadoop cluster lifecycle on your behalf.&amp;nbsp; Simply author your activities, combine them into a pipeline, set an execution schedule and you’re done – no manual Hadoop cluster setup or management required.&amp;nbsp; &lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;Built-in Information Production Monitoring and Dashboarding&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Data Factory also offers an up-to-the moment monitoring dashboard, which means you can deploy your data pipelines and immediately begin to view them as part of your monitoring dashboard.&amp;nbsp; Once you have created and deployed pipelines to your Data Factory you can quickly assess end-to-end data pipeline health, pinpoint issues, and take corrective action as needed. &lt;/p&gt;
&lt;p&gt;Within the Azure Preview Portal, you get a visual layout of all of your pipelines and data inputs and outputs. You can see all the relationships and dependencies of your data pipelines across all of your sources so you always know where data is coming from and where it is going at a glance. We also provide you with a historical accounting of job execution, data production status, and system health in a single monitoring dashboard:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_26.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/282efe892640_10ED0/image_thumb_12.png" width="866" height="444"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;Learning More about Stream Analytics Service&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;For more information about Data Factory, please review the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/data-factory-get-started/" target="_blank"&gt;Getting Started Tutorial for Data Factory&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/services/data-factory"&gt;More Data Factory Tutorials&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=516973"&gt;Install the PowerShell SDK&lt;/a&gt; 
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=516903"&gt;Access our code sample repository&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;&lt;u&gt;Other Great Data Improvements&lt;/u&gt;&lt;/h2&gt;
&lt;p&gt;Today’s releases make it even easier for customers to stream, process and manage the movement of data in the cloud.&amp;nbsp; Over the last few months we’ve released a bunch of other great data updates as well that make Azure a great platform to perform any data needs.&amp;nbsp; Since August:&amp;nbsp; &lt;p&gt;We released a major update of our &lt;strong&gt;SQL Database service&lt;/strong&gt;, which is a relational database as a service offering.&amp;nbsp; The &lt;a href="http://azure.microsoft.com/en-us/services/sql-database/" target="_blank"&gt;new SQL DB editions&lt;/a&gt; (Basic/Standard/Premium ) support a 99.99% SLA, larger database sizes, dedicated performance guarantees, point-in-time recovery, new auditing features, and the ability to easily setup active geo-DR support.&amp;nbsp; &lt;/p&gt;
&lt;p&gt;We released a preview of our new &lt;strong&gt;DocumentDB service&lt;/strong&gt;, which is a &lt;a href="http://azure.microsoft.com/en-us/services/documentdb/" target="_blank"&gt;fully-managed, highly-scalable, NoSQL Document Database service&lt;/a&gt; that supports saving and querying JSON based data.&amp;nbsp; It enables you to linearly scale your document store and scale to any application size.&amp;nbsp; &lt;a href="http://azure.microsoft.com/blog/2014/10/09/azure-documentdb-profile-of-msn-health-and-fitness-2/" target="_blank"&gt;Microsoft MSN portal recently was rewritten to use it&lt;/a&gt; – and stores more than 20TB of data within it.&lt;/p&gt;
&lt;p&gt;We released our new &lt;strong&gt;Redis Cache service&lt;/strong&gt;, which is a &lt;a href="http://weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb" target="_blank"&gt;secure/dedicated Redis cache offering, managed as a service by Microsoft&lt;/a&gt;.&amp;nbsp; Redis is a popular open-source solution that enables high-performance data types, and our Redis Cache service enables you to standup an in-memory cache that can make the performance of any application much faster. &lt;/p&gt;
&lt;p&gt;We released major updates to our &lt;strong&gt;HDInsight Hadoop service&lt;/strong&gt;, which is a 100% Apache Hadoop-based service in the cloud. We have also added built-in support for using two popular frameworks in the Hadoop ecosystem: &lt;a href="http://azure.microsoft.com/blog/2014/08/25/azure-hdinsight-makes-hbase-nosql-database-a-ga-feature/" target="_blank"&gt;Apache HBase&lt;/a&gt; and &lt;a href="http://azure.microsoft.com/blog/2014/10/15/microsoft-brings-real-time-analytics-to-hadoop-with-storm-preview/" target="_blank"&gt;Apache Storm&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;We released a preview of our new &lt;strong&gt;Search-As-A-Service offering&lt;/strong&gt;, which provides a &lt;a href="http://azure.microsoft.com/en-us/services/search/" target="_blank"&gt;managed search offering&lt;/a&gt; based on ElasticSearch that you can easily integrate into any Web or Mobile Application.&amp;nbsp; It enables you to build search experiences over any data your application uses (including data in SQLDB, DocDB, Hadoop and more). &lt;/p&gt;
&lt;p&gt;And we have released a preview of our &lt;strong&gt;Machine Learning service&lt;/strong&gt;, which provides a &lt;a href="http://azure.microsoft.com/en-us/services/machine-learning/" target="_blank"&gt;powerful cloud-based predictive analytics service&lt;/a&gt;.&amp;nbsp; It is designed for both new and experienced data scientists, includes 100s of algorithms from both the open source world and Microsoft Research, and supports writing ML solutions using the popular R open-source language.&lt;/p&gt;
&lt;p&gt;You’ll continue to see major data improvements in the months ahead – we have an exciting roadmap of improvements ahead.&lt;/p&gt;
&lt;h4&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h4&gt;
&lt;p&gt;Today’s Microsoft Azure release enables some great new data scenarios, and makes building applications that work with data in the cloud even easier. 
&lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://azure.com/"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it. 
&lt;p&gt;Hope this helps, 
&lt;p&gt;Scott 
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services&amp;g=https%3A//weblogs.asp.net/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+Announcing+New+Real-time+Data+Streaming+and+Data+Factory+Services&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+Announcing+New+Real-time+Data+Streaming+and+Data+Factory+Services&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-announcing-new-real-time-data-streaming-and-data-factory-services&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Fri, 31 Oct 2014 06:39:05 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B332</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B332</link><category>application-development</category><category>microsoft-.net</category><title>Entity Framework Now and Later</title><description>Entity Framework 7 will be a new release of EF and will build on the host of great features from EF6, such as async query and save, testability improvements, connection resiliency, custom Code First conventions, Code First sproc mapping, command interception, and many others. EF7 will enable new data sources, be lightweight and extensible, but still build on familiar concepts. We cover the new features, the move to OSS, and the how-to’s of upgrading. We also take a look at what’s coming next for Entity Framework, EF Tooling, Code First, and more. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:15d892d8deb8446bba07a3d300ad1bd7"&gt;</description><pubDate>Wed, 29 Oct 2014 09:30:16 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B332</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Entity Framework 7 will be a new release of EF and will build on the host of great features from EF6, such as async query and save, testability improvements, connection resiliency, custom Code First conventions, Code First sproc mapping, command interception, and many others. EF7 will enable new data sources, be lightweight and extensible, but still build on familiar concepts. We cover the new features, the move to OSS, and the how-to’s of upgrading. We also take a look at what’s coming next for Entity Framework, EF Tooling, Code First, and more.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4410</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B314</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B314</link><category>microsoft-asp.net</category><title>ASP.NET Identity</title><description>ASP.NET Identity is a totally rewritten framework that brings the ASP.NET membership system into the modern era. ASP.NET Identity makes it easier to integrate different authentication systems such as local username, password as well as social logins such as Facebook, Twitter etc. It also gives you greater control over persisting data to your backend technology of choice. ASP.NET Identity is a game changer by bringing in more modern authentication systems such as Two-Factor Authentication. You can use ASP.NET Identity to secure Web Apps as well as Web APIs. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:42e79d23ddf54f11a13da3d300ad13d5"&gt;</description><pubDate>Wed, 29 Oct 2014 09:30:09 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B314</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Identity is a totally rewritten framework that brings the ASP.NET membership system into the modern era. ASP.NET Identity makes it easier to integrate different authentication systems such as local username, password as well as social logins such as Facebook, Twitter etc. It also gives you greater control over persisting data to your backend technology of choice. ASP.NET Identity is a game changer by bringing in more modern authentication systems such as Two-Factor Authentication. You can use ASP.NET Identity to secure Web Apps as well as Web APIs.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4400</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B344</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B344</link><category>microsoft-.net</category><category>microsoft-asp.net</category><title>The Future of Microsoft .NET on the Server</title><description>Join Microsoft’s “Lesser Scott&amp;quot; as he introduces you to new thinking around ASP.NET and the .NET Framework. What does ASP.NET look like in 2014 and beyond? In a world of NuGets and modular frameworks, of lightweight VMs, how could ASP.NET change and get faster, leaner, meaner, and more. The next version of ASP.NET is fully open source and available on GitHub. The next version of ASP.NET is currently in preview, and in this talk Scott puts it all into context. These apps can use a cloud-optimized subset of the .NET Framework. You don't have to use Visual Studio to develop ASP.NET applications. You can develop and run this version on platforms that Visual Studio doesn't run on. But Visual Studio provides the best development experience, and we cover the next version of ASP.NET both inside and outside the IDE. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:0713f6440caf43c78409a3d300ad1c22"&gt;</description><pubDate>Wed, 29 Oct 2014 09:30:16 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B344</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join Microsoft’s “Lesser Scott&amp;quot; as he introduces you to new thinking around ASP.NET and the .NET Framework. What does ASP.NET look like in 2014 and beyond? In a world of NuGets and modular frameworks, of lightweight VMs, how could ASP.NET change and get faster, leaner, meaner, and more. The next version of ASP.NET is fully open source and available on GitHub. The next version of ASP.NET is currently in preview, and in this talk Scott puts it all into context. These apps can use a cloud-optimized subset of the .NET Framework. You don't have to use Visual Studio to develop ASP.NET applications. You can develop and run this version on platforms that Visual Studio doesn't run on. But Visual Studio provides the best development experience, and we cover the next version of ASP.NET both inside and outside the IDE.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4286</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B323</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B323</link><category>visual-studio</category><category>microsoft-asp.net</category><title>Building Web Apps Using ASP.NET and Visual Studio 2013</title><description>Learn about the latest features in Visual Studio 2013, including dozens of tips and tricks for building web applications using ASP.NET and Visual Studio 2013. Learn about the new HTML5 editor, new powerful CSS3 features, great new innovations in publishing and Microsoft Azure integration, and much more. We also push the new Browser Link technology to its limits and beyond, explore what mobile and multi-browser development looks like with Visual Studio 2013, as well as look at new ways to run Web API or SignalR that use significantly less memory. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:1ff832039bfd4aaead83a3d300ad169e"&gt;</description><pubDate>Wed, 29 Oct 2014 09:30:11 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B323</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Learn about the latest features in Visual Studio 2013, including dozens of tips and tricks for building web applications using ASP.NET and Visual Studio 2013. Learn about the new HTML5 editor, new powerful CSS3 features, great new innovations in publishing and Microsoft Azure integration, and much more. We also push the new Browser Link technology to its limits and beyond, explore what mobile and multi-browser development looks like with Visual Studio 2013, as well as look at new ways to run Web API or SignalR that use significantly less memory.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4453</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B220</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B220</link><category>microsoft-.net</category><category>microsoft-asp.net</category><title>Microsoft .NET Open Source Software Projects Showcase</title><description>Microsoft has been fostering open development and collaboration on the .NET platform, and with the creation of the .NET Foundation we are committed to a vibrant .NET OSS ecosystem. Come join a few of the community’s OSS project leaders and learn about their .NET OSS projects and how you can get involved. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:0bb93b24946b449c989ea3d300ad07ce"&gt;</description><pubDate>Wed, 29 Oct 2014 09:29:59 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2014/DEV-B220</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Microsoft has been fostering open development and collaboration on the .NET platform, and with the creation of the .NET Foundation we are committed to a vibrant .NET OSS ecosystem. Come join a few of the community’s OSS project leaders and learn about their .NET OSS projects and how you can get involved.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3700</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Jay Schmelzer, Marcus Wendt, Edward Thomson, Bertrand Le Roy</dc:creator></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more</guid><link>http://weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more</link><category>azure</category><category>Community News</category><category>.NET</category><title>Azure: New Marketplace, Network Improvements, New Batch Service, Automation Service, more</title><description>&lt;p&gt;Today we released a major set of updates to Microsoft Azure. Today’s updates include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Marketplace&lt;/strong&gt;: Announcing Azure Marketplace and partnerships with key technology partners  &lt;li&gt;&lt;strong&gt;Networking&lt;/strong&gt;: Network Security Groups, Multi-NIC, Forced Tunneling, Source IP Affinity, and much more  &lt;li&gt;&lt;strong&gt;Batch Computing&lt;/strong&gt;: Public Preview of the new Azure Batch Computing Service  &lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: General Availability of the Azure Automation Service &lt;li&gt;&lt;strong&gt;Anti-malware&lt;/strong&gt;: General Availability of Microsoft Anti-malware for Virtual Machines and Cloud Services  &lt;li&gt;&lt;strong&gt;Virtual Machines&lt;/strong&gt;: General Availability of many more VM extensions – PowerShell DSC, Octopus, VS Release Management &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h2&gt;&lt;u&gt;Marketplace: Announcing Azure Marketplace and partnerships with key technology partners&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Last week, at our &lt;a href="http://blogs.microsoft.com/blog/2014/10/20/delivering-complete-cloud-every-business-industry-geography/" target="_blank"&gt;Cloud Day event&lt;/a&gt; in San Francisco, I announced a new Azure Marketplace that helps to better connect Azure customers with partners, ISVs and startups.&amp;nbsp; With just a couple of clicks, you can now quickly discover, purchase, and deploy any number of solutions directly into Azure.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Exploring the Marketplace&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;You can explore the Azure Marketplace by clicking the Marketplace title that is pinned by default to the home-screen of the Azure Preview Portal:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_26.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_12.png" width="834" height="513"&gt;&lt;/a&gt;  &lt;p&gt;Clicking the Marketplace tile will enable you to explore a large selection of applications, VM images, and services that you can provision into your Azure subscription:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_1.png" width="879" height="565"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Using the marketplace provides a super easy way to take advantage of a rich ecosystem of applications and services integrated to run great with Azure.&amp;nbsp; Today’s marketplace release includes multi-VM templates to run Hadoop clusters powered by Cloudera or Hortenworks, Linux VMs powered by Unbuntu, CoreOS, Suse, CentOS, Microsoft SharePoint Server Farms, Cassandra Clusters powered by DataStax, and a wide range of security virtual appliances.&lt;/p&gt; &lt;p&gt;You can click any of the items in the gallery to learn more about them and optionally deploy them.&amp;nbsp; Doing so will walk you though a simple to follow creation wizard that enables you to optionally configure how/where they will run, as well as display any additional pricing required for the apps/services/VM images that you select.&lt;/p&gt; &lt;p&gt;For example, below is all it takes to stand-up an 8-node DataStax Enterprise cluster:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_28.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_13.png" width="847" height="800"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Solutions you purchase through the Marketplace will be automatically billed to your Azure subscription (avoiding the need for you to setup a separate payment method).&amp;nbsp; Virtual Machine images will support the ability to bring your own license or rent the image license by the hour (which is ideal for proof of concept solutions or cases where you need the solution for only a short period of time).&amp;nbsp; Both Azure Direct customers as well as customers who pay using an Enterprise Agreement can take advantage of the Azure Marketplace starting today.&lt;/p&gt; &lt;p&gt;You can &lt;a href="http://azure.microsoft.com/en-us/marketplace/" target="_blank"&gt;learn more&lt;/a&gt; about the Azure Marketplace as well as &lt;a href="http://azure.microsoft.com/en-us/marketplace/" target="_blank"&gt;browse the items within it here&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Networking: Lots and lots of New Features and Improvements&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;This week’s Azure update includes a ton of new capabilities to the Azure networking stack.&amp;nbsp; You can use these new networking capabilities immediately in the North Europe region, and they will be supported worldwide in all regions in November 2014.&amp;nbsp; The new network capabilities include:  &lt;p&gt;&lt;u&gt;&lt;em&gt;Network Security Groups&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;You can now create Network Security groups to define access control rules for inbound and outbound traffic to a Virtual machine or a group of virtual machines in a subnet. The security groups and the rules can be managed and updated independent of the life cycle of the VM.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Multi-NIC Support&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can now create and manage multiple virtual network interfaces (NICs) on a VM.&amp;nbsp; Multi-NIC support is a fundamental requirement for a majority of network virtual appliances that can be deployed in Azure. Having this support now enabled within Azure will enable even richer network virtual appliances to be used.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Forced Tunneling&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can now redirect or “force” all Internet-bound traffic that originates in a cloud application back through an on-premises network via a Site-to-Site VPN tunnel for inspection and auditing. This is a critical security capability for enterprise grade applications.  &lt;p&gt;&lt;u&gt;&lt;em&gt;ExpressRoute Enhancements&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can now share a single ExpressRoute connection across multiple Azure subscriptions. Additionally, a single Virtual Network in Azure can now be linked to more than one ExpressRoute circuit, thereby enabling much richer backup and disaster recovery scenarios.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_7.png" width="374" height="201"&gt;&lt;/a&gt;  &lt;p&gt;&lt;em&gt;&lt;u&gt;New VPN Gateway Sizes&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;To cater to the growing hybrid connectivity throughput needs and the number of cross premise sites, we are announcing the availability of a higher performance Azure VPN gateway. This will enable a faster ExpressRoute and Site-to-Site VPN gateways with more tunnels.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Operations and audit logs for VNet Gateways and ExpressRoute&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;You can now view operations logs for Virtual Network Gateways and ExpressRoute circuits. The &lt;a href="https://manage.windowsazure.com"&gt;Azure portal&lt;/a&gt; will now show operations logs and information on all API calls you make and important infrastructure changes made such as scheduled updates to gateways.  &lt;p&gt;&lt;em&gt;&lt;u&gt;Advanced Virtual Network Gateway policies&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;We now enable the ability for you to control encryption for the tunnel between Virtual Networks. You now have a choice between 3DES, AES128, AES256 and Null encryption, and you can also enable Perfect Forward Secrecy (PFS) for IPsec/IKE gateways.  &lt;p&gt;&lt;em&gt;&lt;u&gt;Source IP Affinity&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The Azure Load Balancer now supports a new distribution mode called Source IP Affinity (also known as session affinity or client IP affinity). You can now load balance traffic based on a 2-tuple (Source-IP, Destination-IP) or 3-tuple (Source-IP, Destination-IP and Protocol) distribution modes.  &lt;p&gt;&lt;em&gt;&lt;u&gt;Nested policies for Traffic Manager&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;You can now create nested policies for traffic management. This allows tremendous flexibility in creating powerful load-balancing and failover schemes to support the needs of larger, more complex deployments.&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;Portal Support for Managing Internal Load Balancer, Reserved and Instance IP addresses for Virtual Machines&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;It is now possible to use the Azure Preview Portal to manage creating and setting up internal load balancers, as well as reserved and instance IP addresses for virtual machines.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Automation: General Availability of Azure Automation Service&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I am excited to announce the General Availability of the Azure Automation service. Azure Automation enables the creation, deployment, monitoring, and maintenance of resources in an Azure environment using a highly scalable and reliable workflow engine. The service can be used to orchestrate time-consuming and frequently repeated operational tasks across Azure and third-party systems while decreasing operating expenses.  &lt;p&gt;Azure Automation allows you to build runbooks (PowerShell Workflows) to describe your administration processes, provides a secure global assets store so you don’t need to hardcode sensitive information within your runbooks, and offers scheduling so that runbooks can be triggered automatically.&lt;/p&gt; &lt;p&gt;Runbooks can automate a wide range of scenarios – from simple day to day manual tasks to complex processes that span multiple Azure services and 3rd party systems. Because Automation is built on PowerShell, you can take advantage of the many existing PowerShell modules, or author your own to integrate with third party systems.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Creating and Editing Runbooks&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;You can create a runbook from scratch, or start by importing an existing template in the runbook gallery:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_3.png" width="624" height="409"&gt;&lt;/a&gt;  &lt;p&gt;Editing experience for runbooks can also be performed directly in the administration portal:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_4.png" width="624" height="473"&gt;&lt;/a&gt;  &lt;p&gt;&lt;u&gt;&lt;em&gt;Pricing&lt;/em&gt;&lt;/u&gt;  &lt;p&gt;Available as a pay-as-you-go service, Automation is billed based on the number of job run time minutes used in a given Azure subscription.&amp;nbsp; 500 minutes of free job runtime credits are also included each month for Azure customers to use at no charge.  &lt;p&gt;&lt;em&gt;&lt;u&gt;Learn More&lt;/u&gt;&lt;/em&gt;  &lt;p&gt;To learn more about Azure Automation, check out the following resources:  &lt;ul&gt; &lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/tag/azure-automation/"&gt;Azure Automation Blogs&lt;/a&gt;  &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/automation/"&gt;MSDN Documentation&lt;/a&gt;  &lt;li&gt;&lt;a href="https://social.msdn.microsoft.com/Forums/en-US/home?forum=azureautomation"&gt;Azure Automation Forum&lt;/a&gt;  &lt;li&gt;&lt;a href="http://feedback.azure.com/forums/246290-azure-automation"&gt;User Voice&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Batch Service: Preview of Azure Batch - new job scheduling service for parallel and HPC apps&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the public preview of our new Azure Batch Service. This new platform service provides “job scheduling as a service” with auto-scaling of compute resources, making it easy to run large-scale parallel and high performance computing (HPC) work in Azure. You submit jobs, we start the VMs, run your tasks, handle any failures, and then shut things down as work completes.  &lt;p&gt;Azure Batch is the job scheduling engine that we use internally to manage encoding for Azure Media Services, and for testing Azure itself. With this preview, we are excited to expand our SDK with a new application framework from GreenButton, a company Microsoft acquired earlier in the year. The Azure Batch SDK makes it easy to cloud-enable parallel, cluster, and HPC applications by describing jobs with the required resources, data, and one or more compute tasks.  &lt;p&gt;Azure Batch can be used to run large volumes of similar tasks or applications in parallel, programmatically. A command line program or script takes a set of data files as input, processes the data in a series of tasks, and produces a set of output files. Examples of batch workloads that customers are running today in Azure include calculating risk for banks and insurance companies, designing new consumer and industrial products, sequencing genes and developing new drugs, searching for new energy sources, rendering 3D animations, and transcoding video.  &lt;p&gt;Azure Batch makes it easy for these customers to use hundreds, thousands, tens of thousands of cores, or more on demand. With job scheduling as a service, Azure developers can focus on using batch computing in their applications and delivering services without needing to build and manage a work queue, scaling resources up and down efficiently, dispatching tasks, and handling failures.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_11.png" width="624" height="351"&gt;&lt;/a&gt;  &lt;p&gt;The scale of Azure helps batch computing customers get their work done faster, experiment with different designs, run larger and more precise models, and test a large number of different scenarios without having to invest in and maintain large clusters.  &lt;p&gt;&lt;a href="http://azure.microsoft.com/en-us/services/batch/" target="_blank"&gt;Learn more&lt;/a&gt; about Azure Batch and start using it for your applications today.  &lt;h2&gt;&lt;u&gt;Virtual Machines: General Availability of Microsoft Anti-Malware for VMs and Cloud Services&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce that the Microsoft Anti-malware security extension for Virtual Machines and Cloud Services is now generally available.&amp;nbsp; We are releasing it as a &lt;u&gt;free capability&lt;/u&gt; that you can &lt;u&gt;use at no additional charge&lt;/u&gt;.  &lt;p&gt;The Microsoft Anti-malware security extension can be used to help identify and remove viruses, spyware or other malicious software.&amp;nbsp; It provides real-time protection from the latest threats and also supports on-demand scheduled scanning.&amp;nbsp; Enabling it is a good security best practice for applications hosted either on-premises or in the cloud.  &lt;p&gt;&lt;u&gt;&lt;em&gt;Enabling the Anti-Malware Extension &lt;/em&gt;&lt;/u&gt; &lt;p&gt;You can select and configure the Microsoft Antimalware security extension for virtual machines using the &lt;a href="https://portal.azure.com/"&gt;Azure preview portal&lt;/a&gt;, Visual Studio or API’s/PowerShell.&amp;nbsp; Antimalware events are then logged to the customer configured Azure Storage account via Azure Diagnostics and can be piped to HDInsight or a SIEM tool for further analysis. More information is available in the &lt;a href="http://go.microsoft.com/fwlink/?linkid=398023&amp;amp;clcid=0x409"&gt;Microsoft Antimalware Whitepaper&lt;/a&gt;.  &lt;p&gt;To enable antimalware feature on existing virtual machine, select the &lt;b&gt;EXTENSIONS&lt;/b&gt; tile on a Virtual Machine in the Azure Preview Portal, then click &lt;b&gt;ADD&lt;/b&gt; in the command bar and select the &lt;b&gt;Microsoft Antimalware &lt;/b&gt;extension. Then, click &lt;b&gt;CREATE&lt;/b&gt; and customize any settings:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_6.png" width="918" height="578"&gt;&lt;/a&gt;  &lt;h2&gt;&lt;u&gt;Virtual Machines: General Availability of even more VM Extensions&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;In addition to enabling the Microsoft Anti-Malware extension for Virtual Machines, today’s release also includes support for a whole bunch more new VM extensions that you can enable within your Virtual Machines.&amp;nbsp; These extensions can be added and configured using the same &lt;strong&gt;EXTENSIONS&lt;/strong&gt; tile on Virtual Machine resources within the Azure Preview Portal (the same screen-shot as in the Anti-malware section above).&lt;/p&gt; &lt;p&gt;The new extensions enabled today include:&lt;/p&gt; &lt;p&gt;&lt;em&gt;&lt;u&gt;PowerShell Desired State Configuration&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The PowerShell Desired State Configuration Extension can be used to deploy and configure Azure VMs using &lt;a href="http://technet.microsoft.com/en-us/library/dn249912.aspx"&gt;Desired State Configuration&lt;/a&gt; (DSC) technology. DSC enables you to declaratively specify how you want your software environment to be configured. DSC configuration can also be automated using the &lt;a href="http://azure.microsoft.com/en-us/downloads/"&gt;Azure PowerShell &lt;/a&gt;SDK, and you can push configurations to any Azure VM and have them enacted automatically. For more details, please see this desired state configuration &lt;a href="http://blogs.msdn.com/b/powershell/archive/2014/08/07/introducing-the-azure-powershell-dsc-desired-state-configuration-extension.aspx"&gt;blog post&lt;/a&gt;.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_9.png" width="703" height="415"&gt;&lt;/a&gt;&amp;nbsp; &lt;p&gt;&lt;em&gt;&lt;u&gt;Octopus&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://octopusdeploy.com/"&gt;Octopus&lt;/a&gt; simplifies the deployment of &lt;a href="http://ASP.NET"&gt;ASP.NET&lt;/a&gt; web applications, Windows Services and other applications by automatically configuring IIS, installing services and making configuration changes. Octopus integration of Azure was one of the top requested features on &lt;a href="http://feedback.azure.com/forums/216843-virtual-machines/suggestions/5730576-add-octopus-deploy-agent-installation-option"&gt;Azure UserVoice&lt;/a&gt; and with this integration we will simplify the deployment and configuration of octopus on the VM.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_8.png" width="692" height="464"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;em&gt;&lt;u&gt;Visual Studio Release Management&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Release Management for Visual Studio is a continuous delivery solution that automates the release process through all of your environments from TFS through to production. Visual Studio Release Management is integrated with TFS and you can configure multi-stage release pipelines to automatically deploy and validate your applications on multiple environments. With the new Visual Studio Release Management extension, VMs can be preconfigured with the necessary components for required for Release Management to operate.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_22.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/10eca7a7dba9_492A/image_thumb_10.png" width="624" height="393"&gt;&lt;/a&gt;  &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/" target="_blank"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://azure.com" target="_blank"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu" target="_blank"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+New+Marketplace%2c+Network+Improvements%2c+New+Batch+Service%2c+Automation+Service%2c+more&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+New+Marketplace%2c+Network+Improvements%2c+New+Batch+Service%2c+Automation+Service%2c+more&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-new-marketplace-network-improvements-new-batch-service-automation-service-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Tue, 28 Oct 2014 14:35:34 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/AngularJS-Module-for-Microsoft-Azure-Active-Directory-Authentication</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/AngularJS-Module-for-Microsoft-Azure-Active-Directory-Authentication</link><category>Authentication</category><category>Azure</category><category>Cloud</category><title>AngularJS Module for Microsoft Azure Active Directory Authentication</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week&amp;nbsp;&lt;a href="http://cloudidentity.com"&gt;Vittorio Bertocci&lt;/a&gt; joins us to demonstrate a new Azure Active Directory library, for JavaScript. This module is implemented using AngularJS and enables the ability to do single sign-on from your front-end JavaScript code. Vittorio ends the segment with a white boarding session to discuss how the module functions.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/AzureAD/azure-activedirectory-library-for-js"&gt;Azure Active Directory Library for JavaScript&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/AzureADSamples/SinglePageApp-DotNet"&gt;SPA Sample for Azure Active Directory for JavaScript&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/tags/azure-active-directory/info"&gt;Azure Active Directory on StackOverflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cloudidentity.com/blog/2014/10/09/the-use-of-azure-ad-behind-deploy-to-azure/"&gt;The use of Azure Active Directory behind deploy to Azure&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cloudidentity.com/blog/2014/10/28/adal-javascript-and-angularjs-deep-dive"&gt;ADAL JavaScript and AngularJS Deep Dive&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:0eeaa0d35b274ac18d25a3ce011963d3"&gt;</description><pubDate>Tue, 28 Oct 2014 15:15:02 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu.mp4" type="video/mp4" length="70565548" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/AngularJS-Module-for-Microsoft-Azure-Active-Directory-Authentication</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Vittorio Bertocci joins us to demonstrate a new Azure Active Directory library, for JavaScript. This module is implemented using AngularJS and enables the ability to do single sign-on from your front-end JavaScript code. Vittorio ends the segment with a white boarding session to discuss how the module functions. Show Links Azure Active Directory Library for JavaScriptSPA Sample for Azure Active Directory for JavaScriptAzure Active Directory on StackOverflowThe use of Azure Active Directory behind deploy to AzureADAL JavaScript and AngularJS Deep Dive</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2014</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu.mp3" expression="full" duration="2014" fileSize="32226954" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu.mp4" expression="full" duration="2014" fileSize="70565548" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu.webm" expression="full" duration="2014" fileSize="213188720" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_high.mp4" expression="full" duration="2014" fileSize="586630012" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eeb8/42a3fda5-9629-438b-bdcc-b3df2bd1eeb8/AngularJSModuleforMicrosoftAzureActiveDirectoryAu_mid.mp4" expression="full" duration="2014" fileSize="346944625" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Vittorio Bertocci</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Vittorio Bertocci</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/AngularJS-Module-for-Microsoft-Azure-Active-Directory-Authentication/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/ixpyZcVqqro</guid><link>https://www.youtube.com/watch?v=ixpyZcVqqro&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Oct 28th, 2014 - Configuration</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=ixpyZcVqqro&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/ixpyZcVqqro/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=ixpyZcVqqro&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Oct 28th, 2014 - Configuration&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1620&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;25
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;24:00&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 28 Oct 2014 23:14:02 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/ixpyZcVqqro" /><a10:updated>2015-01-02T20:13:15Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10567754</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/10/27/ef7-v1-or-v7.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF7 – v1 or v7?</title><description>&lt;p&gt;A while ago we blogged about &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;EF7 targeting new platforms and new data stores&lt;/a&gt;. In that post we shared that our EF6.x code base wasn&amp;rsquo;t setup to achieve what we wanted to in EF7, and that EF7 would be a &amp;ldquo;lightweight and extensible version of EF&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;That begs the question, is EF7 the next version of EF, or is it something new? Before we dig into the answer, let&amp;rsquo;s cover exactly what&amp;rsquo;s the same and what&amp;rsquo;s changing.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;What&amp;rsquo;s staying the same?&lt;/h2&gt;
&lt;p&gt;When it comes to writing code, most of the top level experience is staying the same in EF7.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You still create a class that derives from &lt;strong&gt;DbContext&lt;/strong&gt; and has &lt;strong&gt;DbSet&amp;lt;TEntity&amp;gt;&lt;/strong&gt; properties for each type in your model.&lt;/li&gt;
&lt;li&gt;You still use LINQ to write queries against your &lt;strong&gt;DbSet&lt;/strong&gt; properties.&lt;/li&gt;
&lt;li&gt;You still &lt;strong&gt;Add&lt;/strong&gt; and &lt;strong&gt;Remove&lt;/strong&gt; instances of types from your &lt;strong&gt;DbSet&lt;/strong&gt; properties.&lt;/li&gt;
&lt;li&gt;There are still &lt;strong&gt;DbContext.ChangeTracker&lt;/strong&gt; and &lt;strong&gt;DbContext.Database&lt;/strong&gt; properties for accessing change tracking information and database related APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;An example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example, this code looks exactly the same in EF6.x and EF7.&lt;/p&gt;
&lt;pre class="scroll"&gt;&lt;code class="csharp"&gt;using (var db = new BloggingContext())&lt;br /&gt;{&lt;br /&gt; db.Blogs.Add(new Blog { Url = "blogs.msdn.com/adonet" });&lt;br /&gt; db.SaveChanges();&lt;br /&gt; &lt;br /&gt; var blogs = from b in db.Blogs.Include(b =&amp;gt; b.Posts)&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;orderby b.Name&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;select b;&lt;br /&gt;&lt;br /&gt; foreach (var blog in blogs)&lt;br /&gt; {&lt;br /&gt; &amp;nbsp;Console.WriteLine(blog.Name);&lt;br /&gt; &amp;nbsp;foreach (var post in blog.Posts)&lt;br /&gt; &amp;nbsp;{&lt;br /&gt; &amp;nbsp;&amp;nbsp;Console.WriteLine(" -" + post.Title);&lt;br /&gt; &amp;nbsp;}&lt;br /&gt; }&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;What&amp;rsquo;s changing?&lt;/h2&gt;
&lt;p&gt;While the top level API remains the same (or very similar), EF7 does also include a number of significant changes. These changes can be grouped into a series of buckets.&lt;/p&gt;
&lt;h3&gt;Bucket #1: New Features&lt;/h3&gt;
&lt;p&gt;One of the key motivations behind EF7 is to provide a code base that will allow us to more quickly add new features. While many of these will come after the initial RTM, we have been able to easily implement some of them as we build out the core framework.&lt;/p&gt;
&lt;p&gt;Some examples of features already added to EF7 include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Batching of updates for relational databases&lt;/strong&gt; means that EF7 no longer sends an individual command for every insert/update/delete statement. In many situations EF7 will batch multiple statements together into a single roundtrip to the database. We&amp;rsquo;ll expand the capabilities of batching in future releases too.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unique constrains &lt;/strong&gt;allows you to identify additional unique keys within your entities in addition to the primary key. You can then use these alternate keys as the target of foreign key relationships.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;h3&gt;Bucket #2: Behavior Changes&lt;/h3&gt;
&lt;p&gt;EF6 and earlier releases have some unintuitive behavior in the top level APIs. While the APIs are staying the same, we are taking the opportunity to remove some limitations and chose more expected behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;An example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An example of this is how queries are processed. In EF6.x the entire LINQ query was translated into a single SQL query that was executed in the database. This meant your query could only contain things that EF knew how to translate to SQL and you would often get complex SQL that did not perform well.&lt;/p&gt;
&lt;p&gt;In EF7 we are adopting a model where the provider gets to select which bits of the query to execute in the database, and how they are executed. This means that query now supports evaluating parts of the query on the client rather than database. It also means the providers can make use of queries with multiple results sets etc., rather than creating one single SELECT with everything in it.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Bucket #3: Simple, lightweight components&lt;/h3&gt;
&lt;p&gt;Under the covers EF7 is built over the top of a lighter weight and more flexible set of components. Many of these provide the same functionality as components from EF6.x, but are designer to be faster, easier to use, and easier to replace or customize. To achieve this they are factored differently and bare varying resemblance to their counterparts from EF6.x.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;An example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A good example of this is the metadata that EF stores about your entity types and how they map to the data store. The MetadataWorkspace from EF6.x (and earlier versions) was a complex component with a difficult API. MetadataWorkspace was not built with a lightweight and performant O/RM in mind and achieving basic tasks is difficult. For example here is the code to find out which table the Blog entity type is mapped to:&lt;/p&gt;
&lt;pre class="scroll"&gt;&lt;code class="csharp"&gt;using (var context = new BloggingContext())&lt;br /&gt;{&lt;br /&gt; var metadata = ((IObjectContextAdapter)context).ObjectContext.MetadataWorkspace;&lt;br /&gt; var objectItemCollection = ((ObjectItemCollection)metadata.GetItemCollection(DataSpace.OSpace));&lt;br /&gt; &lt;br /&gt; var entityType = metadata&lt;br /&gt; &amp;nbsp;.GetItems&amp;lt;EntityType&amp;gt;(DataSpace.OSpace)&lt;br /&gt; &amp;nbsp;.Single(e =&amp;gt; objectItemCollection.GetClrType(e) == typeof(Blog));&lt;br /&gt; &lt;br /&gt; var entitySet = metadata&lt;br /&gt; &amp;nbsp;.GetItems&amp;lt;EntityContainer&amp;gt;(DataSpace.CSpace).Single()&lt;br /&gt; &amp;nbsp;.EntitySets&lt;br /&gt; &amp;nbsp;.Single(s =&amp;gt; s.ElementType.Name == entityType.Name);&lt;br /&gt; &lt;br /&gt; var mapping = metadata.GetItems&amp;lt;EntityContainerMapping&amp;gt;(DataSpace.CSSpace).Single()&lt;br /&gt; &amp;nbsp;.EntitySetMappings&lt;br /&gt; &amp;nbsp;.Single(s =&amp;gt; s.EntitySet == entitySet);&lt;br /&gt; &lt;br /&gt; var table = mapping&lt;br /&gt; &amp;nbsp;.EntityTypeMappings.Single()&lt;br /&gt; &amp;nbsp;.Fragments.Single()&lt;br /&gt; &amp;nbsp;.StoreEntitySet;&lt;br /&gt; &lt;br /&gt; var tableName = (string)table.MetadataProperties["Table"].Value ?? table.Name;&lt;br /&gt;}&lt;br /&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In EF7 we are using a metadata model that is simple to use and purpose built for the needs of Entity Framework. To highlight this point, here is the EF7 code to achieve the same thing as the EF6.x code listed above.&lt;/p&gt;
&lt;pre class="scroll"&gt;&lt;code class="csharp"&gt;using (var db = new BloggingContext())&lt;br /&gt;{&lt;br /&gt; var tableName = db.Model.GetEntityType(typeof(Blog)).Relational().Table;&lt;br /&gt;} &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Bucket #4: Removal of some features&lt;/h3&gt;
&lt;p&gt;Removing features is always a tough decision, and not something we take lightly. Given the major changes in EF7 we have identified some features that we will not be bringing forward.&lt;/p&gt;
&lt;p&gt;Most of the features not coming forwards in EF7 are legacy features that are only used by a very small number of developers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multiple Entity Sets per Type (MEST)&lt;/strong&gt; is a legacy feature that allows you to use the same CLR type for multiple entity sets (i.e. you have a Products and RetiredProducts table that are both mapped to the Product class). This feature was never supported thru the DbContext API or code-based models. Although possible, it was difficult to use from the EF Designer too. Requirements like this are better solved with inheritance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Very complex type to table mappings&lt;/strong&gt; were possible in EF6.x. For example you could have an inheritance hierarchy that combined TPH, TPT, and TPC mappings as well as Entity Splitting all in the same hierarchy. This sounds great, but is one of the major contributing factors to the complexity of the MetadataWorkspace in EF6.x. In EF7 there will be cases where your CLR types need to more closely match your table structure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the features we are retiring because there is already another (we believe better) way of doing things. While we&amp;rsquo;d love to continue pulling everything forward, we need to balance time, resources, and the cost of adding support for highly requested features as we move forward. To be able to continue devloping and improving the stack we need to shed some of the baggage.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Retiring the EDMX model format&lt;/strong&gt; in favor of code-based modeling is perhaps the most significant change in EF7. You can read more about this change and the reasoning behind it in our &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/10/21/ef7-what-does-code-first-only-really-mean.aspx"&gt;recent post on the topic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ObjectContext API&lt;/strong&gt; was the primary Entity Framework API until DbContext was introduced in EF4.1. Since then we have seen DbContext quickly become the API of choice for EF developers. Given this, and the much cleaner API surface that DbContext provides, we are not bringing ObjectContext forward into EF7. Of course, the important features you needed to drop down to ObjectContext API for in the past will be available from DbContext API, but factored into a cleaner API surface.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Not everything will be there in the initial release&lt;/h2&gt;
&lt;p&gt;Because much of the core of EF7 is new, the first release of EF7 isn&amp;rsquo;t going to have all the features that are required for all applications. There is always a tension between wanting to ship quickly and wanting to have more features in a given release. As soon as we have the core framework and basic functionality implemented we will provide a release of EF7 for folks to use in applications with simpler requirements. We&amp;rsquo;ll then provide a series of quick releases that add more and more features.&lt;/p&gt;
&lt;p&gt;Of course, this means EF7 isn&amp;rsquo;t going to be usable for every application when it is first released, and for that reason we are continuing development of EF6.x for some time and expect many of our customers to remain on that release.&lt;/p&gt;
&lt;p&gt;An example of this is lazy loading support, we know this is a critical feature for a number of developers, but at the same time there are many applications that can be developed without this feature. Rather than making everyone wait until it is implemented, we will ship when we have a stable code base and are confident that we have the correct factoring in our core components. &lt;strong&gt;To be clear, it's not that we are planning to remove lazy loading support from EF7, just that some apps can start taking advantage of the benefits of EF7 before lazy loading is implemented.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;So, is it a v1 or a v7?&lt;/h2&gt;
&lt;p&gt;The answer is both. There were actually three options we discussed in terms of naming/branding for EF7:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Call it v7 of Entity Framework&lt;/strong&gt; &amp;ndash; Given the top level API and patterns are the same as past releases, this is in many ways a major version of the same product. Per &lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;, breaking API changes and removal of features is a permissible (and inevitable) part of major releases.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a sub-product under Entity Framework&lt;/strong&gt; &amp;ndash; This option was somewhat of a middle ground. While the developer experience is undoubtedly EF, creating a sub product would help communicate that there are also a significant number of changes. This would be akin to the &amp;ldquo;Entity Framework Everywhere&amp;rdquo; name we used for the initial design document we published in CodePlex.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Call it something new and make it v1&lt;/strong&gt; &amp;ndash; Given the number of changes, we did consider naming it something new.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We decided that once you start writing code, this feels so much like Entity Framework that is really isn&amp;rsquo;t something new (that ruled out option #3). While there are going to be some nuances between the v6 and v7 transition that need to be documented and explained, it would ultimately be more confusing to have two different frameworks that have almost identical APIs and patterns.&lt;/p&gt;
&lt;p&gt;Options #1 and #2 both seem valid to us. Our ultimate conclusion was that #1 is going to cause some confusion in the short term, but make the most sense in the long term. To a lesser extent we&amp;rsquo;ve tackled similar hurdles in the past with the introduction of DbContext API and Code First in EF4.1 and then the move out of the .NET Framework in EF6 (and subsequent duplications of types, namespace changes, etc.). While these were confusing things to explain, in the long term it seems to have been the correct decision to continue with one product name.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Of course, this is a somewhat subjective decision and there are no doubt folks who are going to agree and some who will disagree (there are even mixed opinions within our team).&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10567754" width="1" height="1"&gt;</description><pubDate>Mon, 27 Oct 2014 21:06:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">85</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10567754</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/10/27/ef7-v1-or-v7.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10567023</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/23/asp-net-identity-2-2-0-alpha1.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Identity/">Identity</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/iden/">iden</category><title>ASP.NET Identity 2.2.0-alpha1</title><description>&lt;p&gt;We are releasing a preview of ASP.NET Identity 2.2.0-alpha1. The main focus in this release was to fix bugs and address performance issues.&lt;/p&gt;
&lt;h2&gt;Download this release&lt;/h2&gt;
&lt;p&gt;You can download ASP.NET Identity from the NuGet gallery. You can install or update these packages using the NuGet Package Manager Console, like this:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Install-Package &lt;/em&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.Identity.EntityFramework"&gt;&lt;em&gt;Microsoft.AspNet.Identity.EntityFramework&lt;/em&gt;&lt;/a&gt;&lt;em&gt; &amp;ndash;Version 2.2.0-alpha1 -pre&amp;nbsp; &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Install-Package &lt;/em&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.Identity.Core"&gt;&lt;em&gt;Microsoft.AspNet.Identity.Core&lt;/em&gt;&lt;/a&gt;&lt;em&gt; -Version 2.2.0-alpha1 -pre&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Install-Package &lt;/em&gt;&lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.Identity.OWIN"&gt;&lt;em&gt;Microsoft.AspNet.Identity.OWIN&lt;/em&gt;&lt;/a&gt;&lt;em&gt; -Version 2.2.0-alpha1 &amp;ndash;pre&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;What&amp;rsquo;s in this release?&lt;/h2&gt;
&lt;p&gt;Following &lt;a href="https://aspnetidentity.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Resolved|Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=2.2.0-alpha1&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=LastUpdatedDate&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All" target="_blank"&gt;query&lt;/a&gt; has the list of all issues fixed in this release..&lt;/p&gt;
&lt;h2&gt;Samples/ Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;We have lots of samples for Identity at &lt;a href="https://aspnet.codeplex.com/"&gt;https://aspnet.codeplex.com&lt;/a&gt;. Please look for the Identity folder in the source. &lt;a href="https://aspnet.codeplex.com/SourceControl/latest"&gt;https://aspnet.codeplex.com/SourceControl/latest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For documentation on ASP.NET Identity please visit &lt;a href="http://www.asp.net/identity"&gt;http://www.asp.net/identity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/features-api/account-confirmation-and-password-recovery-with-aspnet-identity"&gt;Account Confirmation and password recovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/features-api/two-factor-authentication-using-sms-and-email-with-aspnet-identity"&gt;Two-Factor Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/migrations"&gt;Migrating from Membership to Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/getting-started/aspnet-identity-recommended-resources"&gt;ASP.NET Identity Recommended resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Migrating from ASP.NET Identity 2.1.0&lt;/h2&gt;
&lt;p&gt;This is a compatible release with 2.1.0 and there are no database schema changes with this release.&lt;/p&gt;
&lt;h2&gt;Give feedback and get support&lt;/h2&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;If you find any bugs please open them at our Codeplex Site where we track all our bugs &lt;a href="https://aspnetidentity.codeplex.com/"&gt;https://aspnetidentity.codeplex.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you want to discuss these features or have questions, please discuss them on Stack Overflow and use the following tag &amp;ldquo;asp.net-identity&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10567023" width="1" height="1"&gt;</description><pubDate>Fri, 24 Oct 2014 01:15:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pranav rastogi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10567023</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/23/asp-net-identity-2-2-0-alpha1.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/QBJPaYICbRw</guid><link>https://www.youtube.com/watch?v=QBJPaYICbRw&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Tour of changes between Windows 10 9841 and 9860 Technical Preview</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=QBJPaYICbRw&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/QBJPaYICbRw/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=QBJPaYICbRw&amp;amp;feature=youtube_gdata"&gt;Tour of changes between Windows 10 9841 and 9860 Technical Preview&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This is a tour of the changes between the first Windows 10 Technical Preview Build 9841 and the latest 9860 that just came out. Check back often for updates as new builds are released!&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
9451&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;129
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:48&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Fri, 24 Oct 2014 06:29:26 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/QBJPaYICbRw" /><a10:updated>2015-02-10T09:24:25Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10566309</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/10/21/ef7-what-does-code-first-only-really-mean.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF7 - What Does “Code First Only” Really Mean</title><description>&lt;p&gt;A while back we &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;blogged about our plans to make EF7 a lightweight and extensible version of EF&lt;/a&gt; that enables new platforms and new data stores. We also talked about our EF7 plans in the &lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B417"&gt;Entity Framework session at TechEd North America&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Prior to EF7 there are two ways to store models, in the xml-based EDMX file format or in code. Starting with EF7 we will be retiring the EDMX format and having a single code-based format for models.&lt;b&gt; A number of folks have raised concerns around this move and most of it stems from misunderstanding about what a statement like “EF7 will only support Code First” really means.&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;&amp;#160;&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;Code First is a bad name&lt;/h2&gt;  &lt;p&gt;Prior to EF4.1 we supported the Database First and Model First workflows. Both of these use the EF Designer to provide a boxes-and-lines representation of a model that is stored in an xml-based .edmx file. Database First reverse engineers a model from an existing database and Model First generates a database from a model created in the EF Designer.&lt;/p&gt;  &lt;p&gt;In EF4.1 we introduced Code First. Understandably, based on the name, most folks think of Code First as defining a model in code and having a database generated from that model. In actual fact, Code First can be used to target an existing database or generate a new one. There is tooling to reverse engineer a Code First model based on an existing database. This tooling originally shipped in the EF Power Tools and then, in EF6.1, was integrated into the same wizard used to create EDMX models.&lt;/p&gt;  &lt;p&gt;Another way to sum this up is that &lt;b&gt;rather than a third alternative to Database &amp;amp; Model First, Code First is really an alternative to the EDMX file format&lt;/b&gt;. Conceptually, Code First supports both the Database First and Model First workflows.&lt;/p&gt;  &lt;p&gt;Confusing… we know. We got the name wrong.&lt;b&gt; Calling it something like “code-based modeling” would have been much clearer.&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;&amp;#160;&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;Is code-base modeling better?&lt;/h2&gt;  &lt;p&gt;Obviously there is overhead in maintaining two different model formats. But aside from removing this overhead, there are a number of other reasons that we chose to just go forward with code-based modeling in EF7.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;Source control merging, conflicts, and code reviews&lt;/b&gt; are hard when your whole model is stored in an xml file. We’ve had lots of feedback from developers that simple changes to the model can result in complicated diffs in the xml file. On the other hand, developers are used to reviewing and merging source code. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Developers know how to write and debug code&lt;/b&gt;. While a designer is arguably easier for simple tasks, many projects end up with requirements beyond what you can do in the designer. When it comes time to drop down and edit things, xml is hard and code is more natural for most developers. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;The ability to customize the model based on the environment&lt;/b&gt; is a common requirement we hear from customers. This includes scenarios such as multi-tenant database where you need to specify a schema or table prefix that is known when the app starts. You may also need slight tweaks to your model when running against a different database provider. Manipulating an xml-based model is hard. On the other hand, using conditional logic in the code that defines your model is easy. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Code based modeling is less repetitive&lt;/b&gt; because your CLR classes also make up your model and there are conventions that take care of common configuration. For example, consider a &lt;em&gt;Blog&lt;/em&gt; entity with a &lt;em&gt;BlogId&lt;/em&gt; primary key. In EDMX-based modeling you would have a &lt;em&gt;BlogId&lt;/em&gt; property in your CLR class, a &lt;em&gt;BlogId&lt;/em&gt; property (plus column and mapping) specified in xml and some additional xml content to identify &lt;em&gt;BlogId&lt;/em&gt; as the key. In code-based modeling, having a &lt;em&gt;BlogId&lt;/em&gt; property on your CLR class is all that is needed. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Providing useful errors is also much easier in code.&lt;/b&gt; We’ve all seen the “&lt;em&gt;Error 3002: Problem in mapping fragments starting at line 46:…&lt;/em&gt;” errors. The error reporting on EDMX could definitely be improved, but throwing an exception from the line of code-based configuration that caused an issue is always going to be easier.       &lt;br /&gt;We should note that in EF6.x you would sometimes get these unhelpful errors from the Code First pipeline, this is because it was built over the infrastructure designed for EDMX, in EF7 this is not the case. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;There is also an important feature that could have been implemented for EDMX, but was only ever available for code-based models.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;Migrations&lt;/b&gt; allows you to create a database from your code-based model and evolve it as your model changes over time. For EDMX models you could generate a SQL script to create a database to match your current model, but there was no way to generate a change script to apply changes to an existing database. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;So, what will be in EF7?&lt;/h2&gt;  &lt;p&gt;In EF7 all models will be represented in code. There will be tooling to reverse engineer a model from an existing database (similar to what’s available in EF6.x). You can also start by defining the model in code and use migrations to create a database for you (and evolve it as your model changes over time).&lt;/p&gt;  &lt;p&gt;We should also note that we’ve made some improvements to migrations in EF7 to resolve the issues folks encountered trying to use migrations in a team environment.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What about…&lt;/h2&gt;  &lt;p&gt;We’ve covered all the reasons we think code-based modeling is the right choice going forwards, but there are some legitimate questions this raises.&lt;/p&gt;  &lt;h3&gt;What about visualizing the model?&lt;/h3&gt;  &lt;p&gt;The EF Designer was all about visualizing a model and in EF6.x we also had the ability to generate a read-only visualization of a code-based model (using the EF Power Tools). We’re still considering what is the best approach to take in EF7. There is definitely value in being able to visualize a model, especially when you have a lot of classes involved. &lt;/p&gt;  &lt;p&gt;With the advent of Roslyn, we could also look at having a read/write designer over the top of a code-based model. Obviously this would be significantly more work and it’s not something we’ll be doing right away (or possibly ever), but it is an idea we’ve been kicking around.&lt;/p&gt;  &lt;h3&gt;What about the “Update model from database” scenario?&lt;/h3&gt;  &lt;p&gt;“Update model from database” is a process that allows you to incrementally pull additional database objects (or changes to existing database objects) into your EDMX model. Unfortunately the implementation of this feature wasn’t great and you would often end up losing customizations you had made to the model, or having to manually fix-up some of the changes the wizard tried to apply (often dropping to hand editing the xml). &lt;/p&gt;  &lt;p&gt;For Code First you can re-run the reverse engineer process and have it regenerate your model. This works fine in basic scenarios, but you have to be careful how you customize the model otherwise your changes will get reverted when the code is re-generated. There are some customizations that are difficult to apply without editing the scaffolded code. &lt;/p&gt;  &lt;p&gt;Our first step in EF7 is to provide a similar reverse engineer process to what’s available in EF6.x – and that is most likely what will be available for the initial release. We do also have some ideas around pulling in incremental updates to the model without overwriting any customization to previously generated code. These range from only supporting simple additive scenarios, to using Roslyn to modify existing code in place. We’re still thinking through these ideas and don’t have definite plans as yet.&lt;/p&gt;  &lt;h3&gt;What about my existing models?&lt;/h3&gt;  &lt;p&gt;We’re not trying to hide the fact that EF7 is a big change from EF6.x. We’re keeping the concepts and many of the top level APIs from past versions, but under the covers there are some big changes. For this reason, we don’t expect folks to move existing applications to EF7 in a hurry. We are going to be continuing development on EF6.x for some time. &lt;/p&gt;  &lt;p&gt;We have another blog post coming shortly that explores how EF7 is part v7 and part v1 and the implications this has for existing applications.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Is everyone going to like this change?&lt;/h2&gt;  &lt;p&gt;We’re not kidding ourselves, it’s not possible to please everyone and we know that some folks are going to prefer the EF Designer and EDMX approach over code-based modeling. &lt;/p&gt;  &lt;p&gt;At the same time, we have to balance the time and resources we have and deliver what we think is the best set of features and capabilities to help developers write successful applications. This wasn’t a decision we took lightly, but we think it’s the best thing to do for the long-term success of Entity Framework and its customers – the ultimate goals being to provide a faster, easier to use stack and reduce the cost of adding support for highly requested features as we move forward.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10566309" width="1" height="1"&gt;</description><pubDate>Tue, 21 Oct 2014 17:41:35 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">138</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10566309</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/10/21/ef7-what-does-code-first-only-really-mean.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/WebJobs-GA-Series-Episode-1-WebJobs-Tooling-with-Brady-Gaster</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/WebJobs-GA-Series-Episode-1-WebJobs-Tooling-with-Brady-Gaster</link><category>Azure</category><category>Cloud</category><category>websites</category><title>WebJobs GA Series Episode 1: WebJobs Tooling with Brady Gaster</title><description>&lt;div class="entry-content"&gt;&lt;div id="entry-body"&gt;&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Brady Gaster kicks off a series on the WebJobs feature within Azure Websites which has just became Generally Available. Brady shows us how to use the WebJobs tooling in Visual Studio. He also has a special surprise for us at the end of the show where he shows of the &amp;quot;Deploy to Azure&amp;quot; button which he created with encouragement from &lt;a href="http://www.devinrader.info/"&gt;Devin Rader&lt;/a&gt; and a bit of help from our good friend &lt;a href="http://www.cloudidentity.com/blog/" target="_blank"&gt;Vittorio Bertocci&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/websites-webjobs-resources/"&gt;WebJobs Resources&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/08/18/enabling-command-line-or-continuous-delivery-of-azure-webjobs/"&gt;Enabling command line or continuous delivery of Azure WebJobs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.bradygaster.com/post/the-deploy-to-azure-button"&gt;The Deploy to Azure Button&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/bradygaster/deploytoazure"&gt;Deploy to Azure (Source Code)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cloudidentity.com/blog/2014/10/09/the-use-of-azure-ad-behind-deploy-to-azure/"&gt;The use of Azure Active Directory behind deploy to Azure&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/jj554200.aspx"&gt;CQRS Journey&lt;/a&gt; (Microsoft Patterns and Practices)&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:2f44d0b1959e4e5da116a3ca017a6c18"&gt;</description><pubDate>Tue, 21 Oct 2014 08:41:21 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster.mp4" type="video/mp4" length="93444747" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/WebJobs-GA-Series-Episode-1-WebJobs-Tooling-with-Brady-Gaster</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Brady Gaster kicks off a series on the WebJobs feature within Azure Websites which has just became Generally Available. Brady shows us how to use the WebJobs tooling in Visual Studio. He also has a special surprise for us at the end of the show where he shows of the &amp;quot;Deploy to Azure&amp;quot; button which he created with encouragement from Devin Rader and a bit of help from our good friend Vittorio Bertocci. Show Links WebJobs ResourcesEnabling command line or continuous delivery of Azure WebJobsThe Deploy to Azure ButtonDeploy to Azure (Source Code)The use of Azure Active Directory behind deploy to AzureCQRS Journey (Microsoft Patterns and Practices)</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2738</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster.mp3" expression="full" duration="2738" fileSize="43823627" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster.mp4" expression="full" duration="2738" fileSize="93444747" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster.webm" expression="full" duration="2738" fileSize="262275196" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_high.mp4" expression="full" duration="2738" fileSize="560893821" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/10b4/a90497ff-4d9b-43f9-8a96-9101e7c010b4/WebJobGASeriesWebJobsToolingWithBradyGaster_mid.mp4" expression="full" duration="2738" fileSize="358192780" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Brady Gaster, emiller</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Brady Gaster, emiller</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/WebJobs-GA-Series-Episode-1-WebJobs-Tooling-with-Brady-Gaster/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Ax79T2UrOro</guid><link>https://www.youtube.com/watch?v=Ax79T2UrOro&amp;feature=youtube_gdata</link><a10:author><a10:name>Scott Hanselman</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/shanselman</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>ASP.NET Community Standup - Oct 20th, 2014 - Beta 1 and Migrations</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Ax79T2UrOro&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Ax79T2UrOro/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Ax79T2UrOro&amp;amp;feature=youtube_gdata"&gt;ASP.NET Community Standup - Oct 20th, 2014 - Beta 1 and Migrations&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og"&gt;Scott Hanselman&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2491&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;19
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;21:26&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=24"&gt;Entertainment&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 20 Oct 2014 21:41:41 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/shanselman/uploads/Ax79T2UrOro" /><a10:updated>2014-11-11T10:47:05Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10565300</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/16/microsoft-asp-net-mvc-security-update-broke-my-build.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+Framework/">ASP.NET MVC Framework</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+1-0+RC/">ASP.NET MVC 1.0 RC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+Web+Api/">ASP.NET Web Api</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+vNext/">ASP.NET vNext</category><title>Microsoft Asp.Net MVC Security Update MS14-059 broke my build!</title><description>&lt;p&gt;Microsoft just released a new security update to be automatically applied to machines configured to use Microsoft Update.&amp;nbsp; The security bulletin is available here: &lt;a href="https://technet.microsoft.com/en-us/library/security/ms14-059"&gt;https://technet.microsoft.com/en-us/library/security/ms14-059&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, some ASP.NET MVC 3 and 4 VS projects can no longer build after the update is applied. These projects will fail with the following error:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;&lt;/em&gt;&lt;em&gt;Could not locate the assembly "System.Web.Mvc,Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35,processorArchitecture=MSIL".&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This happens when your project references assemblies from the GAC or the &lt;em&gt;Reference Assemblies&lt;/em&gt;&amp;nbsp;folder. Project references to System.Web.Mvc.dll are no longer resolved because the assembly version of System.Web.Mvc.dll was incremented.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The problem can be resolved by implemented one of the following solutions:&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1. (Preferred) Install Microsoft.AspNet.Mvc&amp;nbsp;from the NuGet gallery (this will install a binding redirect in your web.config).&amp;nbsp; You can do this from the NuGet package manager or the NuGet console inside Visual Studio:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;em&gt;&amp;gt;Install-Package Microsoft.AspNet.Mvc -Version&amp;nbsp;&amp;lt;version&amp;gt; -Project PROJECTNAME &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; MVC 4 version: 4.0.40804.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; MVC 3 version: 3.0.50813.1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2. Manually update the reference to System.Web.MVC.dll (don&amp;rsquo;t use the one in the GAC).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Try the &lt;em&gt;Add Reference -&amp;gt; Assemblies -&amp;gt; Extensions&lt;/em&gt; dialog box.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In either case ensure that the Copy Local project property for the assembly is set to true so it ends up in your bin folder which is needed for deployment.&amp;nbsp;There is a known NuGet bug that resets the Copy Local flag: &lt;a href="https://nuget.codeplex.com/workitem/4344"&gt;https://nuget.codeplex.com/workitem/4344&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For MVC projects built prior to VS 2012 references to MVC assemblies were added from either the GAC or the Assembly References folder.&amp;nbsp; Most recent MVC templates add references to assemblies installed via NuGet packages, this is why option No.1 above is preferred.&amp;nbsp; The NuGet gallery has become very popular.&lt;/p&gt;
&lt;p&gt;As a side note, a similar issue may occur when creating a new MVC 3 project in Visual Studio 2010, this is documented in the security bulletin:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;MVC 3.0 RTM is installed on my system and after installing the update I can no longer create a new project in Visual Studio 2010, how can I correct this?&amp;nbsp;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;ASP.NET MVC 3.0 templates for Visual Studio 2010 rely on assemblies that are installed in the Reference Assemblies folder. Since the updated version of the assembly for MVC 3.0 is incremented, templates will no longer work. To solve this problem, install the MVC 3.0.1 tooling refresh for Visual Studio 2010.&lt;/em&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Finally, the decision to increment the assembly version was to secure those applications that were deployed on servers owned by third parties, in this case the vulnerable assembly may be in the GAC. In order to ensure the application runs the secure assembly, the assembly version had to be incremented.&lt;/p&gt;
&lt;p&gt;Some ASP.NET MVC 5 projects may also be affected by a somewhat related issue.&amp;nbsp; When you run your application within Visual Studio it might fail with an error that looks like the following:&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &lt;em&gt;Compiler Error Message: CS0234: The type or namespace name 'Ajax' does not exist in the namespace 'System.Web.Mvc' (are you missing an assembly reference?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is because the assembly Copy Local flag has been reset most likely due to the NuGet bug mentioned previously.&lt;/p&gt;
&lt;p&gt;A variation of this problem, affecting all versions of MVC,&amp;nbsp;is that your assembly is no longer deployed with your application from within Visual Studio.&amp;nbsp;&amp;nbsp;Visual Studio sets the Copy Local flag to false by default when the assembly is installed in the GAC, for reference see these MSDN articles:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/vslangproj.reference.copylocal.aspx"&gt;http://msdn.microsoft.com/en-us/library/vstudio/vslangproj.reference.copylocal.aspx&lt;/a&gt;&amp;nbsp;and &lt;a href="http://msdn.microsoft.com/en-us/library/ez524kew%28VS.80%29.aspx"&gt;http://msdn.microsoft.com/en-us/library/ez524kew%28VS.80%29.aspx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Manually setting the Copy Local flag to true fixes these issues.&lt;/p&gt;
&lt;p&gt;Another problem affecting MVC 4 applications can generate an error that looks like the following:&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &lt;em&gt;Could not load file or assembly 'Newtonsoft.Json, Version=4.5.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' or one of its dependencies.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is not a build-specific issue and happens because the MVC assemblies are now installed in the GAC, the Newtonsoft.Json.dll assembly can no longer be resolved; copying the assembly to the application's probing path (bin or equivalent folder) resolves this problem.&amp;nbsp; You can get Newtonsoft.Json 4.5.6 from the NuGet gallery.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;If your application does not have any custom logic for loading assemblies it is likely it is running a pre-release version of MVC which did not have a dependency on Newtonsoft.Json; in this case you are strongly advised to upgrade your application to a supported release of MVC.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10565300" width="1" height="1"&gt;</description><pubDate>Thu, 16 Oct 2014 22:47:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguell - MSFT</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">54</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10565300</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/16/microsoft-asp-net-mvc-security-update-broke-my-build.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10563938</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/16/announcing-new-web-features-in-visual-studio-2013-update-4-rc.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2013/">Visual Studio 2013</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2013+Update+4/">Visual Studio 2013 Update 4</category><title>Announcing new Web Features in Visual Studio 2013 Update 4 RC</title><description>&lt;p&gt;Today, the Visual Studio team announced the release of &lt;a href="http://go.microsoft.com/fwlink/?LinkId=510314"&gt;Visual Studio 2013 Update 4 RC&lt;/a&gt;.&amp;nbsp; Our team added a few useful features and did some bug fixing in this update to improve the web development experience.&lt;/p&gt;
&lt;h2&gt;Microsoft ASP.NET and Web Tools 2013.4 RC&lt;/h2&gt;
&lt;h3&gt;JSON Editor Improvement&lt;/h3&gt;
&lt;p&gt;We made a few improvements in the JSON editor, including performance improvements such as loading the JSON schema asynchronously, caching child schemas, improving IntelliSense, etc. We also have the following new features:&lt;/p&gt;
&lt;h4&gt;JSON Schema validation&lt;/h4&gt;
&lt;p&gt;We added a JSON schema validation feature, based on the schema selected in the drop-down list.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0576.clip_5F00_image0015_5F00_47108421.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image001[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2728.clip_5F00_image0015_5F00_thumb_5F00_44D3FB65.png" alt="clip_image001[5]" width="555" height="353" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Un-minify context menu button&lt;/h4&gt;
&lt;p&gt;You can right-click the JSON editor and select Un-minify context menu button to un-minify any long arrays in the JSON file.&lt;/p&gt;
&lt;p&gt;For example, un-minify the following JSON content.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4478.clip_5F00_image0025_5F00_227C65EC.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image002[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6457.clip_5F00_image0025_5F00_thumb_5F00_54E0396B.png" alt="clip_image002[5]" width="586" height="321" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will get the following:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3326.clip_5F00_image0035_5F00_35315FA3.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image003[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6076.clip_5F00_image0035_5F00_thumb_5F00_2E7E5620.png" alt="clip_image003[5]" width="377" height="334" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In contrast, formatting document using formatting menu command or &amp;ldquo;Ctrl-K,Ctrl-D&amp;rdquo; will keep the original array format:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6560.clip_5F00_image0045_5F00_79DDF9E4.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image004[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1205.clip_5F00_image0045_5F00_thumb_5F00_453D9DA9.png" alt="clip_image004[5]" width="481" height="178" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Reload Schemas context menu button&lt;/h4&gt;
&lt;p&gt;VS will cache the schema downloaded from internet and will use the cache even after you restart VS. If you know the schema has changed, you can use the context menu &amp;ldquo;Reload Schemas Ctrl+Shift+J&amp;rdquo; to re-download the current selected schema in the active JSON document, and use it immediately for the current document.&lt;/p&gt;
&lt;h3&gt;HTML Editor&lt;/h3&gt;
&lt;p&gt;We improved the HTML editor with some bug fixes, updated IntelliSense for web standards, and introduced the following new features.&lt;/p&gt;
&lt;h4&gt;Better client template formatting&lt;/h4&gt;
&lt;p&gt;The HTML editor is not parsing or formatting the double-curly syntax {{&amp;hellip;}} any more. That makes sure that we don&amp;rsquo;t treat the content of those curlies as being HTML and therefore not invalidating them, nor try to format them which we can&amp;rsquo;t do correctly using the HTML formatter. This is great for Angular, Handlebars, Mustache and other double-curly template syntaxes.&lt;/p&gt;
&lt;h4&gt;Support for custom elements, polymer-elements and attributes&lt;/h4&gt;
&lt;p&gt;We no longer validate unknown attributers for custom elements as there will be many custom made tags in different frameworks. So there will no longer be squiggles under the unknown elements.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7870.clip_5F00_image0055_5F00_0C92F39C.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image005[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8078.clip_5F00_image0055_5F00_thumb_5F00_37D78AA3.png" alt="clip_image005[5]" width="435" height="60" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Basic IntelliSense for Web Components&lt;/h4&gt;
&lt;p&gt;We have IntelliSense for &amp;lt;link &lt;strong&gt;rel=&amp;rdquo;import&amp;rdquo;&lt;/strong&gt; /&amp;gt; which is part of the &lt;a href="http://www.w3.org/wiki/WebComponents/"&gt;Web Components standard&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;HTML element tooltips&lt;/h4&gt;
&lt;p&gt;We now supply tooltips for HTML elements in the editor.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4452.clip_5F00_image007_5F00_1C9F31A2.jpg"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image007" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3617.clip_5F00_image007_5F00_thumb_5F00_7CF057D9.jpg" alt="clip_image007" width="628" height="166" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;#region support&lt;/h4&gt;
&lt;p&gt;HTML editor now supports region folding. You can use a surrounding snippet to surround the current selection as well.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1663.clip_5F00_image008_5F00_2F542B59.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8424.clip_5F00_image008_5F00_thumb_5F00_06498C5D.png" alt="clip_image008" width="624" height="628" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;TODO/Hack/etc. comment support in HTML pages in Task List&lt;/h4&gt;
&lt;p&gt;We now display Todo, Hack etc &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/zce12xx2(v=vs.120).aspx"&gt;comment token&lt;/a&gt; from HTML pages to the TaskList.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7875.clip_5F00_image0095_5F00_0B2C4019.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image009[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0844.clip_5F00_image0095_5F00_thumb_5F00_4206945F.png" alt="clip_image009[5]" width="642" height="404" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;CSS/LESS/Sass Editor&lt;/h3&gt;
&lt;p&gt;We improved CSS/LESS/Sass editor with some bug fixes, updated IntelliSense for web standards, improved the selectors level 4 IntelliSense, and introduced the following new features.&lt;/p&gt;
&lt;h4&gt;Todo/Hack/etc. from CSS/LESS/Sass editor comment support in Task List&lt;/h4&gt;
&lt;p&gt;We now display Todo, Hack etc &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/zce12xx2(v=vs.120).aspx"&gt;comment token&lt;/a&gt; from CSS/LESS/Sass pages to the TaskList.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0451.clip_5F00_image0105_5F00_2257BA97.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image010[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2110.clip_5F00_image0105_5F00_thumb_5F00_5FE51860.png" alt="clip_image010[5]" width="645" height="401" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;@viewport fix for LESS editor&lt;/h4&gt;
&lt;p&gt;In LESS editor, @viewport will not show verification warnings any more. E.g.:&lt;/p&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: blue;"&gt;@viewport &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;{ &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;width&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;: &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;device-width&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;; } &lt;/span&gt;&lt;/pre&gt;
&lt;h4&gt;Many more snippets&lt;/h4&gt;
&lt;p&gt;We now provide more snippets to ease the developing experience.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7824.clip_5F00_image0115_5F00_1248EBE0.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image011[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7245.clip_5F00_image0115_5F00_thumb_5F00_1DDEA91F.png" alt="clip_image011[5]" width="650" height="539" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Browser Link&lt;/h3&gt;
&lt;h4&gt;CSS auto-sync&lt;/h4&gt;
&lt;p&gt;Now, saving the CSS file or changing it externally (like with a LESS/SASS compiler) will cause the whole CSS file to reload in the browser. If the file was in a state where it couldn&amp;rsquo;t auto-sync, Ctrl+S will cause an automatic reload that should put it back in a good state, without needing to refresh the linked browsers(Ctrl+Alt+Enter). The feature can be disabled in the toolbar.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6663.clip_5F00_image0125_5F00_3746AC59.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image012[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5280.clip_5F00_image0125_5F00_thumb_5F00_777CC5D3.png" alt="clip_image012[5]" width="449" height="185" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;WebJobs Tooling&lt;/h3&gt;
&lt;p&gt;We now support controlling WebJobs through the Server Explorer WebJobs node inside Azure Websites.&lt;/p&gt;
&lt;h4&gt;WebJobs node underneath Website node in Server Explorer&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8345.clip_5F00_image0135_5F00_09C58C96.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image013[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2480.clip_5F00_image0135_5F00_thumb_5F00_6E21009F.png" alt="clip_image013[5]" width="305" height="293" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Start/Stop and debug WebJobs from Server Explorer&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3073.clip_5F00_image0144_5F00_599BB121.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image014[4]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6138.clip_5F00_image0144_5F00_thumb_5F00_00D5FA57.png" alt="clip_image014[4]" width="401" height="211" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Run On -demand or Scheduled jobs from Server Explorer&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8360.clip_5F00_image0155_5F00_410C13D1.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image015[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/2425.clip_5F00_image0155_5F00_thumb_5F00_256787DB.png" alt="clip_image015[5]" width="448" height="229" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;View WebJobs Dashboard from Server Explorer&lt;/h4&gt;
&lt;p&gt;You can use &amp;ldquo;View Dashboard&amp;rdquo; context menu to go to the Azure website&amp;rsquo;s WebJobs dashboard, as shown in the above screenshots.&lt;/p&gt;
&lt;h3&gt;WebJobs SDK&lt;/h3&gt;
&lt;h4&gt;The WebJobs SDK is pre-installed in the Azure WebJob project templates&lt;/h4&gt;
&lt;p&gt;As before, you can create a new WebJob project using the &amp;ldquo;Azure WebJob&amp;rdquo; project template.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8780.image_5F00_thumb52_5F00_3ECF8B15.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[52]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3426.image_5F00_thumb52_5F00_thumb_5F00_23973214.png" alt="image_thumb[52]" width="959" height="663" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The generated file will contain a package.config with following content:&lt;/p&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: blue;"&gt;&amp;lt;?&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;xml &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;1.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;encoding&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;utf-8&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;?&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;packages&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;&lt;span style="background-color: #ffff00;"&gt;Microsoft.Azure.WebJobs&lt;/span&gt;&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;1.0.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;&lt;span style="background-color: #ffff00;"&gt;Microsoft.Azure.WebJobs.Core&lt;/span&gt;&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;1.0.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;Microsoft.Data.Edm&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;5.6.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;Microsoft.Data.OData&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;5.6.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;Microsoft.Data.Services.Client&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;5.6.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;Microsoft.WindowsAzure.ConfigurationManager&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;2.0.3&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;Newtonsoft.Json&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;6.0.4&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;System.Spatial&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;5.6.0&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;package &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;id&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;WindowsAzure.Storage&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;version&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;4.2.1&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: red;"&gt;targetFramework&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;=&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;"&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;net45&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;" &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;/&amp;gt; &amp;lt;/&lt;/span&gt;&lt;span style="background: white; color: #a31515;"&gt;packages&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;ASP.NET MVC 5.2.2&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use ASP.NET MVC 5.2.2. This release doesn&amp;rsquo;t have any new features or bug fixes in MVC. We made a &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/07/28/announcing-the-beta-release-of-web-pages-3-2-1.aspx"&gt;change in Web Pages&lt;/a&gt; for a significant performance improvement and have subsequently updated all other dependent packages we own to depend on this new version of Web Pages.&lt;/p&gt;
&lt;h2&gt;ASP.NET Web API 5.2.2&lt;/h2&gt;
&lt;p&gt;In this release we have made a dependency change for Json.Net 6.0.4. For information on what is new in this release of Json.NET, see &lt;a href="http://james.newtonking.com/archive/2014/08/04/json-net-6-0-release-4-json-merge-dependency-injection"&gt;Json.NET 6.0 Release 4 - JSON Merge, Dependency Injection&lt;/a&gt;. This release doesn&amp;rsquo;t have any other new features or bug fixes in Web API. We have subsequently updated all other dependent packages we own to depend on this new version of Web API.&lt;/p&gt;
&lt;h2&gt;ASP.NET Web API OData 5.3.1 beta&lt;/h2&gt;
&lt;p&gt;Please see this &lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-odata-53#OD"&gt;release note for Web API OData 5.3 and 5.3.1 beta&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;SignalR 2.1.2&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use SignalR 2.1.2. Please see &lt;a href="https://github.com/SignalR/SignalR/releases/tag/2.1.2"&gt;its release note on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Owin 3.0&lt;/h2&gt;
&lt;p&gt;Template packages are updated to use Owin 3.0 NuGet packages. Please see &lt;a href="https://katanaproject.codeplex.com/releases/view/113283"&gt;this Owin 3.0 release note&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;We hope you can evaluate these new features and let us know about any bugs and suggestions.&amp;nbsp; For VS features, please use &lt;a href="http://connect.microsoft.com/VisualStudio"&gt;Connect&lt;/a&gt; to submit bugs, &lt;a href="http://aspnet.uservoice.com/"&gt;ASP.NET UserVoice&lt;/a&gt; to submit and vote for suggestions, and the &lt;a href="http://forums.asp.net/"&gt;ASP.NET Forums&lt;/a&gt; for Q&amp;amp;A.&amp;nbsp; You can also visit the following open source sites to leave suggestions and open issues directly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/"&gt;MVC/WebAPI/WebPages CodePlex site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://entityframework.codeplex.com/"&gt;Entity Framework CodePlex site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetidentity.codeplex.com/"&gt;ASP.NET Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/"&gt;ASP.NET roadmap, tools and samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SignalR/SignalR"&gt;SignalR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aspnetfriendlyurls.codeplex.com/"&gt;ASP.NET Friendly URLs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10563938" width="1" height="1"&gt;</description><pubDate>Thu, 16 Oct 2014 16:57:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">16</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10563938</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/16/announcing-new-web-features-in-visual-studio-2013-update-4-rc.aspx#comments</comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060324</guid><link>http://www.asp.net/web-api/overview/security/individual-accounts-in-web-api</link><title>Secure a Web API with Individual Accounts and Local Login in ASP.NET Web API 2.2</title><description> This topic shows how to secure a web API using OAuth2 to authenticate against a membership database. Software versions used in the tutorial Visual Studio 2013 Update 3 Web API 2.2 ASP.NET Identity...</description><pubDate>Wed, 15 Oct 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure</guid><link>http://weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure</link><category>Community News</category><category>Azure</category><category>.NET</category><title>Docker and Microsoft: Integrating Docker with Windows Server and Microsoft Azure</title><description>&lt;p&gt;I’m excited to announce today that Microsoft is partnering with Docker, Inc to enable great container-based development experiences on Linux, Windows Server and Microsoft Azure.  &lt;p&gt;Docker is an open platform that enables developers and administrators to build, ship, and run distributed applications. Consisting of Docker Engine, a lightweight runtime and packaging tool, and Docker Hub, a cloud service for sharing applications and automating workflows, Docker enables apps to be quickly assembled from components and eliminates the friction between development, QA, and production environments.  &lt;p&gt;Earlier this year, Microsoft released support for &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/virtual-machines-docker-vm-extension/"&gt;Docker containers with Linux on Azure&lt;/a&gt;.&amp;nbsp; This support integrates with the Azure VM agent extensibility model and Azure command-line tools, and makes it easy to deploy the latest and greatest Docker Engine in Azure VMs and then deploy Docker based images within them.&amp;nbsp;&amp;nbsp; &lt;h2&gt;&lt;u&gt;Docker Support for Windows Server + Docker Hub integration with Microsoft Azure &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today, I’m excited to announce that we are working with Docker, Inc to extend our support for Docker much further.&amp;nbsp; Specifically, I’m excited to announce that:  &lt;p&gt;1) Microsoft and Docker are integrating the open-source Docker Engine with the next release of Windows Server.&amp;nbsp; This release of Windows Server will include new container isolation technology, and support running both .NET and other application types (Node.js, Java, C++, etc) within these containers.&amp;nbsp; Developers and organizations will be able to use Docker to create distributed, container-based applications for Windows Server that leverage the Docker ecosystem of users, applications and tools.&amp;nbsp; It will also enable a new class of distributed applications built with Docker that use Linux and Windows Server images together.&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/DockerandMicrosoft_12F1F/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; margin: 0px 0px 0px 25px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/DockerandMicrosoft_12F1F/image_thumb_2.png" width="624" height="290"&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;2) We will support the Docker client natively on Windows.&amp;nbsp; Developers and administrators running Windows will be able to use the same standard Docker client and interface to deploy and manage Docker based solutions with both Linux and Windows Server environments.&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/DockerandMicrosoft_12F1F/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/DockerandMicrosoft_12F1F/image_thumb_1.png" width="624" height="279"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;3) Docker for Windows Server container images will be available in the &lt;a href="https://registry.hub.docker.com/" target="_blank"&gt;Docker Hub&lt;/a&gt; alongside the Docker for Linux container images available today.&amp;nbsp; This will enable developers and administrators to easily share and automate application workflows using both Windows Server and Linux Docker images.&lt;/p&gt; &lt;p&gt;4) We will integrate &lt;a href="https://registry.hub.docker.com/" target="_blank"&gt;Docker Hub&lt;/a&gt; with the Microsoft Azure Gallery and Azure Management Portal.&amp;nbsp; This will make it trivially easy to deploy and run both Linux and Windows Server based Docker images in Microsoft Azure. &lt;/p&gt; &lt;p&gt;5) Microsoft is contributing code to Docker’s Open Orchestration APIs.&amp;nbsp; These APIs provide a portable way to create multi-container Docker applications that can be deployed into any datacenter or cloud provider environment. This support will allow a developer or administrator using the Docker command line client to launch either Linux or Windows Server based Docker applications directly into Microsoft Azure from his or her development machine. &lt;/p&gt; &lt;h2&gt;&lt;u&gt;Exciting Opportunities Ahead&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;At Microsoft we continue to be inspired by technologies that can dramatically improve how quickly teams can bring new solutions to market. The partnership we are announcing with Docker today will enable developers and administrators to use the best container tools available for both Linux and Windows Server based applications, and to run all of these solutions within Microsoft Azure.&amp;nbsp; We are looking forward to seeing the great applications you build with them. &lt;p&gt;You can learn more about today’s announcements &lt;a href="http://azure.microsoft.com/blog/2014/10/15/new-windows-server-containers-and-azure-support-for-docker/" target="_blank"&gt;here&lt;/a&gt; and &lt;a href="http://msopentech.com/blog/2014/10/15/docker-containers-coming-microsoft-linux-server-near/" target="_blank"&gt;here&lt;/a&gt;. &lt;p&gt;Hope this helps, &lt;p&gt;Scott  &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure&amp;g=https%3A//weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Docker+and+Microsoft%3a+Integrating+Docker+with+Windows+Server+and+Microsoft+Azure&amp;v3=ScottGu%27s%20Blog%20-%20Docker+and+Microsoft%3a+Integrating+Docker+with+Windows+Server+and+Microsoft+Azure&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/docker-and-microsoft-integrating-docker-with-windows-server-and-microsoft-azure&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Wed, 15 Oct 2014 13:30:50 Z</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10563998</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/10/announcing-microsoft-aspnet-facebook-1-1-rtm.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/MVC/">MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC/">ASP.NET MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+Facebook/">ASP.NET MVC Facebook</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Microsoft-AspNet-Facebook/">Microsoft.AspNet.Facebook</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Microsoft-AspNet-Mvc-Facebook/">Microsoft.AspNet.Mvc.Facebook</category><title>Announcing Microsoft.ASPNET.Facebook 1.1 RTM</title><description>&lt;p&gt;The NuGet packages for Microsoft.ASPNET.Facebook 1.1 are now live on the NuGet gallery!&lt;/p&gt;  &lt;h3&gt;Download this release&lt;/h3&gt;  &lt;p&gt;You can install or update the NuGet packages for Microsoft.ASPNET.Facebook 1.1 using the NuGet Package Manager Console, like this:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Install-Package Microsoft.AspNet.Facebook –Version 1.1.0 &lt;/li&gt; &lt;/ul&gt;  &lt;h4&gt;&lt;strong&gt;What’s in this release?&lt;/strong&gt;&lt;/h4&gt;  &lt;p&gt;In this release, we enabled better support for the Safari browser and added a new feature that gives developers the ability to add custom logic for browsers that do not have cookies enabled. You can find detailed explanation for the new features &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/09/09/announcing-microsoft-aspnet-facebook-1-1-beta.aspx"&gt;here&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;The Visual Studio template that uses this updated package will be released soon. The Visual Studio Facebook 1.0 template can be found &lt;a href="http://go.microsoft.com/fwlink/?LinkID=509965&amp;amp;clcid=0x409"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10563998" width="1" height="1"&gt;</description><pubDate>Fri, 10 Oct 2014 22:50:38 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kirthi [MSFT]</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10563998</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/10/announcing-microsoft-aspnet-facebook-1-1-rtm.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10563480</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/10/references-js-file-s-auto-sync-feature.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/References/">References</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/javascript/">javascript</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Visual+Studio+2013/">Visual Studio 2013</category><title>_references.js file’s auto sync feature</title><description>&lt;p&gt;In VS2013 RTM, we shipped a not well known feature for _references.js file: /// &amp;lt;autosync enabled=&amp;quot;true&amp;quot; /&amp;gt;. &lt;/p&gt;  &lt;p&gt;If we specify /// &amp;lt;autosync enabled=&amp;quot;true&amp;quot; /&amp;gt; in the beginning of ~/scripts/_references.js, then any addition, rename, deletion of JavaScript files in the project will automatically change the content in this file. You can disable this feature by removing the line or put assign false to enabled attribute.&lt;/p&gt;  &lt;p&gt;For example, create a new MVC project, open scripts/_references.js file and you will see the following if you are using VS2013 with update 3.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6153.clip_5F00_image001_5F00_49EBEDCE.png"&gt;&lt;img title="clip_image001" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image001" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1538.clip_5F00_image001_5F00_thumb_5F00_6EE9AE47.png" width="811" height="396" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Drag and drop bootstrap.js file to the Scripts folder to make a copy, and all the missing “.js” files and the newly added “.js” files are automatically referenced in the _references.js file. Note, we ignore the “.min.js” files if the non-minified “.js” file exists.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1145.clip_5F00_image003_5F00_05A8F5D1.jpg"&gt;&lt;img title="clip_image003" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image003" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3617.clip_5F00_image003_5F00_thumb_5F00_4A559012.jpg" width="628" height="322" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;You can enable and disable the auto sync feature via editor’s context menu button “Auto-sync JavaScript References”. You can always manually update the project’s JavaScript references using the context menu button “Update JavaScript References”.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5367.clip_5F00_image004_5F00_31C5F2C2.png"&gt;&lt;img title="clip_image004" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3225.clip_5F00_image004_5F00_thumb_5F00_56578046.png" width="455" height="440" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;For more details in _references.js, please visit Mads’ blog &lt;a href="http://madskristensen.net/post/the-story-behind-_referencesjs"&gt;The story behind _references.js&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10563480" width="1" height="1"&gt;</description><pubDate>Fri, 10 Oct 2014 17:00:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10563480</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/10/references-js-file-s-auto-sync-feature.aspx#comments</comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060273</guid><link>http://www.asp.net/web-forms/overview/security/create-an-aspnet-web-forms-app-with-sms-two-factor-authentication</link><title>Create an ASP.NET Web Forms app with SMS Two-Factor Authentication</title><description> This tutorial shows you how to build an ASP.NET Web Forms app with Two-Factor Authentication. This tutorial was designed to complement the tutorial titled Create a secure ASP.NET Web Forms app with...</description><pubDate>Thu, 09 Oct 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10563113</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/07/where-can-you-meet-the-team-november-2014-at-anglebrackets-and-teched.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/meet+the+team/">meet the team</category><title>Where can you meet the team? November 2014 at AngleBrackets and TechEd</title><description>&lt;p&gt;We on the Web Tools team love hanging out with the community. We thought it would be cool to start sharing exactly where we will be and what conferences or user groups you can join us at!&lt;/p&gt;
&lt;p&gt;The .NET Developer Blog has a great &lt;em&gt;&lt;a href="http://blogs.msdn.com/b/dotnet/p/dotnetusergroups.aspx"&gt;always updated list of .NET User Groups, so be sure to bookmark that also&lt;/a&gt;&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve got two big events coming up soon, and there is still time to register!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://anglebrackets.org/"&gt;AngleBrackets&lt;/a&gt; Nov 10&lt;sup&gt;th&lt;/sup&gt;-13&lt;sup&gt;th&lt;/sup&gt; in Vegas is an exciting open-source web conference that&amp;rsquo;s collocated with DevIntersections. That means you can register for one and attend both! Come see All the Lesser Scotts (Hanselman and Hunter) as well as Scott Guthrie, along with industry luminaries like Kathleen Dollard and K. Scott Allen!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://europe.msteched.com/"&gt;TechEd Europe&lt;/a&gt; is in Spain this year Oct 28&lt;sup&gt;th&lt;/sup&gt;-31&lt;sup&gt;st&lt;/sup&gt; and if you&amp;rsquo;re in or around Europe, you deserve a Spanish vacation. Join Scott Hunter, Pranav Rastogi, and Brady Gaster talking all things web this year in Barcelona.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;ll post to the this blog each month with our list of exciting events. Make sure you&amp;rsquo;ve subscribed!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10563113" width="1" height="1"&gt;</description><pubDate>Tue, 07 Oct 2014 21:20:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10563113</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/07/where-can-you-meet-the-team-november-2014-at-anglebrackets-and-teched.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb</guid><link>http://weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb</link><category>azure</category><category>Community News</category><category>.NET</category><title>Azure: Redis Cache, Disaster Recovery to Azure, Tagging Support, Elastic Scale for SQLDB, DocDB</title><description>&lt;p&gt;Over the last few days we’ve released a number of great enhancements to Microsoft Azure.&amp;nbsp; These include:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Redis Cache&lt;/strong&gt;: General Availability of Redis Cache Service  &lt;li&gt;&lt;strong&gt;Site Recovery&lt;/strong&gt;: General Availability of Disaster Recovery to Azure using Azure Site Recovery  &lt;li&gt;&lt;strong&gt;Management&lt;/strong&gt;: Tags support in the Azure Preview Portal  &lt;li&gt;&lt;strong&gt;SQL DB&lt;/strong&gt;: Public preview of Elastic Scale for Azure SQL Database (available through .NET lib, Azure service templates)  &lt;li&gt;&lt;strong&gt;DocumentDB&lt;/strong&gt;: Support for Document Explorer, Collection management and new metrics  &lt;li&gt;&lt;strong&gt;Notification Hub&lt;/strong&gt;: Support for Baidu Push Notification Service  &lt;li&gt;&lt;strong&gt;Virtual Network&lt;/strong&gt;: Support for static private IP support in the Azure Preview Portal  &lt;li&gt;&lt;strong&gt;Automation updates&lt;/strong&gt;: Active Directory authentication, PowerShell script converter, runbook gallery, hourly scheduling support&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h2&gt;&lt;u&gt;Redis Cache: General Availability of Redis Cache Service&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the General Availability of the Azure Redis Cache. The Azure Redis Cache service provides the ability for you to use a secure/dedicated &lt;a href="http://redis.io/"&gt;Redis cache&lt;/a&gt;, managed as a service by Microsoft. The Azure Redis Cache is now the &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn766201.aspx"&gt;recommended&lt;/a&gt; distributed cache solution we advocate for Azure applications.  &lt;h3&gt;&lt;em&gt;Redis Cache&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Unlike traditional caches which deal only with key-value pairs, Redis is popular for its support of &lt;b&gt;high performance &lt;/b&gt;&lt;a href="http://redis.io/topics/data-types"&gt;&lt;b&gt;data types&lt;/b&gt;&lt;/a&gt;, on which you can perform atomic operations such as appending to a string, incrementing the value in a hash, pushing to a list, computing set intersection, union and difference, or getting the member with highest ranking in a sorted set.&amp;nbsp; Other features include support for transactions, pub/sub, Lua scripting, keys with a limited time-to-live, and configuration settings to make Redis behave more like a traditional cache.  &lt;p&gt;Finally, Redis has a healthy, vibrant open source ecosystem built around it. This is reflected in the diverse set of &lt;a href="http://redis.io/clients"&gt;Redis clients &lt;/a&gt;available across multiple languages. This allows it to be used by nearly any application, running on either Windows or Linux, that you host inside of Azure.  &lt;h3&gt;&lt;em&gt;Redis Cache Sizes and Editions&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The Azure Redis Cache Service is today offered in the following sizes:&amp;nbsp; 250 MB, 1 GB, 2.8 GB, 6 GB, 13 GB, 26 GB, 53 GB.&amp;nbsp; We plan to support even higher-memory options in the future.  &lt;p&gt;Each Redis cache size option is also offered in two editions:  &lt;ul&gt; &lt;li&gt;&lt;b&gt;Basic&lt;/b&gt; – A single cache node, without a formal SLA, recommended for use in dev/test or non-critical workloads.  &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; – A multi-node, replicated cache configured in a two-node Master/Replica configuration for high-availability, and backed by an enterprise SLA. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;With the Standard edition, we manage replication between the two nodes and perform an automatic failover in the case of any failure of the Master node (because of either an un-planned server failure, or in the event of planned patching maintenance). This helps ensure the availability of the cache and the data stored within it.&amp;nbsp; &lt;p&gt;Details on Azure Redis Cache pricing can be found on the &lt;a href="http://azure.microsoft.com/en-us/pricing/details/cache/"&gt;Azure Cache pricing page&lt;/a&gt;.&amp;nbsp; Prices start as low as $17 a month.  &lt;h3&gt;&lt;em&gt;Create a New Redis Cache and Connect to It&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;You can create a new instance of a Redis Cache using the &lt;a href="http://portal.azure.com" target="_blank"&gt;Azure Preview Portal&lt;/a&gt;.&amp;nbsp; Simply select the &lt;strong&gt;New-&amp;gt;Redis Cache&lt;/strong&gt; item to create a new instance.&amp;nbsp; &lt;p&gt;You can then use a wide variety of programming languages and corresponding &lt;a href="http://redis.io/clients"&gt;client packages&lt;/a&gt; to connect to the Redis Cache you’ve provisioned.&amp;nbsp; You use the same Redis client packages that you’d use to connect to your own Redis instance as you do to connect to an Azure Redis Cache service.&amp;nbsp; The API + libraries are exactly the same.  &lt;p&gt;Below we’ll use a .NET Redis client called &lt;a href="http://github.com/StackExchange/StackExchange.Redis#documentation"&gt;StackExchange.Redis&lt;/a&gt; to connect to our Azure Redis Cache instance. First open any Visual Studio project and add the &lt;strong&gt;StackExchange.Redis&lt;/strong&gt; NuGet package to it, with the NuGet package manager.&amp;nbsp; Then, obtain the cache endpoint and key respectively from the Properties blade and the Keys blade for your cache instance within the Azure Preview Portal.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_1.png" width="499" height="262"&gt;&lt;/a&gt;  &lt;p&gt;Once you’ve retrieved these, create a connection instance to the cache with the code below:  &lt;blockquote&gt; &lt;p&gt;var connection = StackExchange.Redis.ConnectionMultiplexer.Connect("contoso5.redis.cache.windows.net,ssl=true,password=...");&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Once the connection is established, retrieve a reference to the Redis cache database, by calling the ConnectionMultiplexer.GetDatabase method.  &lt;blockquote&gt; &lt;p&gt;IDatabase cache = connection.GetDatabase();&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Items can be stored in and retrieved from a cache by using the StringSet and StringGet methods (or their async counterparts – StringSetAsync and StringGetAsync).  &lt;blockquote&gt; &lt;p&gt;cache.StringSet("Key1", "HelloWorld");  &lt;p&gt;cache.StringGet("Key1");&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;You have now stored and retrieved a “Hello World” string from a Redis cache instance running on Azure. For an example of an end to end application using Azure Redis Cache, please check out the &lt;a href="http://azure.microsoft.com/blog/2014/06/05/mvc-movie-app-with-azure-redis-cache-in-15-minutes/" target="_blank"&gt;MVC Movie Application&lt;/a&gt; blog post.  &lt;h3&gt;&lt;em&gt;Using Redis for ASP.NET Session State and Output Caching&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;You can also take advantage of Redis to store out-of-process ASP.NET Session State as well as to share Output Cached content across web server instances.&amp;nbsp; &lt;p&gt;For more details on using Redis for Session State, checkout this blog post: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/05/12/announcing-asp-net-session-state-provider-for-redis-preview-release.aspx"&gt;ASP.NET Session State for Redis&lt;/a&gt;.&amp;nbsp; &lt;p&gt;For details on using Redis for Output Caching, checkout this MSDN post: &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn798898.aspx"&gt;ASP.NET Output Cache for Redis&lt;/a&gt;  &lt;h3&gt;&lt;em&gt;Monitoring and Alerting&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Every Azure Redis cache instance has built-in monitoring support on by default. Currently you can track Cache Hits, Cache Misses, Get/Set Commands, Total Operations, Evicted Keys, Expired Keys, Used Memory, Used Bandwidth and Used CPU.&amp;nbsp; You can easily visualize these using the Azure Preview Portal:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_2.png" width="624" height="547"&gt;&lt;/a&gt;  &lt;p&gt;You can also create alerts on metrics or events (just click the “Add Alert” button above). For example, you could create an alert rule to notify the cache administrator when the cache is seeing evictions. This in turn might signal that the cache is running hot and needs to be scaled up with more memory.  &lt;h3&gt;&lt;em&gt;Learn more&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;For more information about the Azure Redis Cache, please visit the following links:  &lt;ul&gt; &lt;li&gt;Azure Blog: &lt;a href="http://aka.ms/azureredisblogpost"&gt;Lap around Azure Redis Cache&lt;/a&gt;  &lt;li&gt;Channel 9 Videos: Redis Cache &lt;a href="http://aka.ms/azurefridayredis101"&gt;101&lt;/a&gt;, &lt;a href="http://aka.ms/azurefridayredis102"&gt;102&lt;/a&gt;, &lt;a href="http://aka.ms/azurefridayredis103"&gt;103&lt;/a&gt;  &lt;li&gt;Home Page : &lt;a href="http://azure.microsoft.com/en-us/services/cache/"&gt;Azure Redis Cache&lt;/a&gt;  &lt;li&gt;MSDN Documentation: &lt;a href="http://msdn.microsoft.com/en-us/library/dn690523.aspx"&gt;Azure Redis Cache&lt;/a&gt;  &lt;li&gt;Questions? : &lt;a href="http://social.msdn.microsoft.com/forums/azure/en-US/home?forum=azurecache"&gt;Azure Cache Forum&lt;/a&gt;  &lt;li&gt;Feature requests: &lt;a href="http://feedback.azure.com/forums/169382-cache"&gt;Azure Cache UserVoice&lt;/a&gt; &lt;b&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Site Recovery: Announcing the General Availability of Disaster Recovery to Azure &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the general availability of the Azure Site Recovery Service’s new &lt;b&gt;Disaster Recovery to Azure &lt;/b&gt;functionality.&amp;nbsp; The &lt;strong&gt;Disaster Recovery to Azure&lt;/strong&gt; capability enables consistent replication, protection, and recovery of on-premises VMs to Microsoft Azure. With support for both Disaster Recovery and &lt;a href="http://aka.ms/asr_ga_blog_migration"&gt;Migration to Azure&lt;/a&gt;, the Azure Site Recovery service now provides a simple, reliable, and cost-effective DR solution for enabling Virtual Machine replication and recovery between on-premises private clouds across different enterprise locations, or directly to the cloud with Azure.  &lt;p&gt;This month’s release builds upon our recent &lt;a href="http://aka.ms/asr_ga_blog_inmageacquisition"&gt;InMage acquisition&lt;/a&gt;, and the &lt;a href="http://aka.ms/asr_ga_blog_asr_scout"&gt;integration of InMage Scout with Azure Site Recovery&lt;/a&gt; enables us to provide hybrid cloud business continuity solutions for any&lt;i&gt; &lt;/i&gt;customer IT environment – regardless of whether it is Windows or Linux, running on physical servers or virtualized servers using Hyper-V, VMware or other virtualization solutions. Microsoft Azure is now the ideal destination for disaster recovery for virtually every enterprise server in the world.  &lt;p&gt;In addition to enabling &lt;i&gt;replication to&lt;/i&gt; and &lt;em&gt;disaster recovery in&lt;/em&gt; Azure, the Azure Site Recovery service also enables the automated protection of VMs, remote health monitoring of them, no-impact disaster recovery plan testing, and single click orchestrated recovery - all backed by an enterprise-grade SLA. A new addition with this GA release is the ability to also invoke Azure Automation runbooks from within Azure Site Recovery Plans, enabling you to further automate your solutions. &lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_9.png" width="638" height="548"&gt;&lt;/a&gt; &lt;/p&gt; &lt;h3&gt;&lt;em&gt;Learn More about Azure Site Recovery&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;For more information on Azure Site Recovery, check out the recording of the &lt;a href="http://aka.ms/asr_ga_blog_teched"&gt;Azure Site Recovery session at TechEd 2014&lt;/a&gt; where we discussed the preview.&amp;nbsp; You can also visit the &lt;a href="http://aka.ms/asr_ga_blog_forum"&gt;Azure Site Recovery forum on MSDN&lt;/a&gt; for additional information and to engage with the engineering team or other customers.  &lt;p&gt;Once you’re ready to get started with Azure Site Recovery, check out additional &lt;a href="http://aka.ms/asr_ga_blog_pricing"&gt;pricing&lt;/a&gt; or &lt;a href="http://aka.ms/asr_ga_blog_landingpage"&gt;product information&lt;/a&gt;, and &lt;a href="http://aka.ms/asr_ga_blog_trial"&gt;sign up for a free Azure trial&lt;/a&gt;.  &lt;p&gt;Beginning this month, Azure Backup and Azure Site Recovery will also be available in a convenient, and economical promotion offer available for purchase via a Microsoft Enterprise Agreement.&amp;nbsp; Each unit of the Azure Backup &amp;amp; Site Recovery annual subscription offer covers protection of a single instance to Azure with Site Recovery, as well as backup of data with Azure Backup.&amp;nbsp; You can contact your Microsoft Reseller or Microsoft representative for more information.  &lt;h2&gt;&lt;u&gt;Management: Tag Support with Resources&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the support of tags in the Azure management platform and in the Azure preview portal.  &lt;p&gt;Tags provide an easy way to organize your Azure resources and resources groups, by allowing you to tag your resources with name/value pairs to further categorize and view resources across resource groups and across subscriptions.&amp;nbsp; For example, you could use tags to identify which of your resources are used for “production” versus “dev/test” – and enable easy filtering/searching of the resources based on which tag you were interested in – regardless of which application or resource group they were in.&amp;nbsp; &lt;h3&gt;&lt;em&gt;Using Tags&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;To get started with the new Tag support, browse to any resource or resource group in the Azure Preview Portal and click on the &lt;b&gt;Tags&lt;/b&gt; tile on the resource.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_3.png" width="577" height="687"&gt;&lt;/a&gt;  &lt;p&gt;On the Tags blade that appears, you'll see a list of any tags you've already applied. To add a new tag, simply specify a name and value and press enter. After you've added a few tags, you'll notice autocomplete options based on pre-existing tag names and values to better ensure a consistent taxonomy across your resources and to avoid common mistakes, like misspellings.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_5.png" width="314" height="282"&gt;&lt;/a&gt;  &lt;p&gt;You can also use our command-line tools to tag resources as well.&amp;nbsp; Below is an example of using the Azure PowerShell module to quickly tag all of the resources in your Azure subscription:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_6.png" width="576" height="185"&gt;&lt;/a&gt;  &lt;p&gt;Once you've tagged your resources and resource groups, you can view the full list of tags across all of your subscriptions using the &lt;b&gt;Browse&lt;/b&gt; hub.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_7.png" width="576" height="289"&gt;&lt;/a&gt;  &lt;p&gt;You can also “pin” tags to your Startboard for quick access.&amp;nbsp; This provides a really easy way to quickly jump to any resource in a tag you’ve pinned:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_8.png" width="576" height="324"&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;&lt;u&gt;SQL Databases: Public Preview of Elastic Scale Support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I am excited to announce the public preview of &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/sql-database-elastic-scale-get-started/" target="_blank"&gt;Elastic Scale for Azure SQL Database&lt;/a&gt;. Elastic Scale enables the data-tier of an application to scale out via industry-standard sharding practices, while significantly streamlining the development and management of your sharded cloud applications. The new capabilities are provided through .NET libraries and Azure service templates that are hosted in your own Azure subscription to manage your highly scalable applications. Elastic Scale implements the infrastructure aspects of sharding and thus allows you to instead focus on the business logic of your application.  &lt;p&gt;Elastic Scale allows developers to establish a “contract” that defines where different slices of data reside across a collection of database instances.&amp;nbsp; This enables applications to easily and automatically direct transactions to the appropriate database (shard) and perform queries that cross many or all shards using simple extensions to the ADO.NET programming model. Elastic Scale also enables coordinated data movement between shards to split or merge ranges of data among different databases and satisfy common scenarios such as pulling a busy tenant into its own shard.&amp;nbsp; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_22.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_10.png" width="672" height="435"&gt;&lt;/a&gt;  &lt;p&gt;We are also announcing the &lt;a href="http://go.microsoft.com/?linkid=9862613"&gt;Federation Migration Utility&lt;/a&gt; which is available as part of the preview. This utility will help current SQL Database Federations customers migrate their Federations application to Elastic Scale without having to perform any data movement.  &lt;p&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=510913"&gt;Get Started&lt;/a&gt; with the Elastic Scale preview today, and watch our &lt;a href="http://go.microsoft.com/?linkid=9862609"&gt;Channel 9 video&lt;/a&gt; to learn more.  &lt;h2&gt;&lt;u&gt;DocumentDB: Document Explorer, Collection management and new metrics&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Last week we released a bunch of updates to the Azure DocumentDB service experience in the Azure Preview Portal. We continue to improve the developer and management experiences so you can be more productive and build great applications on DocumentDB. These improvements include:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Document Explorer:&lt;/strong&gt; View and access JSON documents in your database account  &lt;li&gt;&lt;strong&gt;Collection management:&lt;/strong&gt; Easily add and delete collections  &lt;li&gt;&lt;strong&gt;Database performance metrics and storage information:&lt;/strong&gt; View performance metrics and storage consumed at a Database level  &lt;li&gt;&lt;strong&gt;Collection performance metrics and storage information:&lt;/strong&gt; View performance metrics and storage consumed at a Collection level  &lt;li&gt;&lt;strong&gt;Support for Azure tags:&lt;/strong&gt; Apply custom tags to DocumentDB Accounts&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;&lt;em&gt;Document Explorer&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Near the bottom of the DocumentDB Account, Database, and Collection blades, you’ll now find a new &lt;b&gt;Developer Tools&lt;/b&gt; lens with a &lt;b&gt;Document Explorer&lt;/b&gt; part.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_11.png" width="316" height="86"&gt;&lt;/a&gt;  &lt;p&gt;This part provides you with a read-only document explorer experience. Select a database and collection within the Document Explorer and view documents within that collection.&lt;/p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_26.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_12.png" width="624" height="419"&gt;&lt;/a&gt;  &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;Note that the Document Explorer will load up to the first 100 documents in the selected Collection. You can load additional documents (in batches of 100) by selecting the “Load more” option at the bottom of the Document Explorer blade. Future updates will expand Document Explorer functionality to enable document CRUD operations as well as the ability to filter documents.  &lt;h3&gt;&lt;em&gt;Collection Management&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The DocumentDB Database blade now allows you to quickly create a new Collection through the &lt;b&gt;Add Collection&lt;/b&gt; command found on the top left of the Database blade.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_28.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_13.png" width="623" height="453"&gt;&lt;/a&gt; &lt;/p&gt; &lt;h3&gt;&lt;em&gt;Health Metrics&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;We’ve added a new Collection blade which exposes Collection level performance metrics and storage information. You can access this new blade by selecting a Collection from the list of Collections on the Database blade.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_30.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_14.png" width="269" height="429"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;The Database and Collection level metrics are available via the Database and Collection blades.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_32.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_15.png" width="624" height="288"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_34.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_16.png" width="599" height="376"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;As always, we’d love to hear from you about the DocumentDB features and experiences you would find most valuable within the Azure portal. You can submit your suggestions on the Microsoft Azure DocumentDB &lt;a href="http://feedback.azure.com/forums/263030-documentdb?filter=top&amp;amp;page=1"&gt;feedback forum&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Notification Hubs: support for Baidu Cloud Push&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Azure Notification Hubs enable cross platform mobile push notifications for Android, iOS, Windows, Windows Phone, and Kindle devices. Thousands of customers now use Notification Hubs for instant cross platform broadcast, personalized notifications to dynamic segments of their mobile audience, or simply to reach individual customers of their mobile apps regardless which device they use.&amp;nbsp; Today I am excited to announce support for another mobile notifications platform, &lt;a href="http://developer.baidu.com/en/index.html"&gt;Baidu Cloud Push&lt;/a&gt;, which will help Notification Hubs customers reach the diverse family of Android devices in China.&amp;nbsp; &lt;p&gt;Delivering push notifications to Android devices in China is no easy task, due to a diverse set of app stores and push services. Pushing notifications to an Android device via Google Cloud Messaging Service (GCM) does not work, as most Android devices in China are not configured to use GCM.&amp;nbsp; To help app developers reach every Android device independent of which app store they’re configured with, Azure Notification Hubs now supports sending push notifications via the &lt;a href="http://developer.baidu.com/en/index.html"&gt;Baidu Cloud Push&lt;/a&gt; service.  &lt;p&gt;To use Baidu from your Notification Hub, register your app with Baidu, and obtain the appropriate identifiers (UserId and ChannelId) for your application.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_36.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_17.png" width="523" height="343"&gt;&lt;/a&gt;  &lt;p&gt;Then configure your Notification Hub within the Azure Management Portal with these identifiers:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_38.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_18.png" width="523" height="177"&gt;&lt;/a&gt;  &lt;p&gt;For more details, follow the tutorial in &lt;a href="http://go.microsoft.com/fwlink/?LinkId=512837"&gt;English&lt;/a&gt; &amp;amp; &lt;a href="http://go.microsoft.com/fwlink/?LinkId=512838"&gt;Chinese&lt;/a&gt;. You can learn more about Push Notifications using Azure at the Notification Hubs &lt;a href="http://azure.microsoft.com/en-us/documentation/services/notification-hubs/"&gt;dev center&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Virtual Machines: Instance-Level Public IPs generally available&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Azure now supports the ability for you to assign public IP addresses to VMs and web or worker roles so they become directly addressable on the Internet - without having to map a virtual IP endpoint for access. With Instance-Level Public IPs, you can enable scenarios like running FTP servers in Azure and monitoring VMs directly using their IPs.&lt;/p&gt; &lt;p&gt;For more information, please visit the &lt;a href="http://click.email.microsoftemail.com/?qs=54c1798550c20120d62bf126f5b6245282280f7d3e357fff947861367b8232b7e76be9ad00e78c0c"&gt;Instance-Level Public IP Addresses&lt;/a&gt; webpage.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Automation: Updates&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="http://weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more" target="_blank"&gt;Earlier this year&lt;/a&gt;, we &lt;a href="http://weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more" target="_blank"&gt;introduced&lt;/a&gt; preview availability of Azure Automation, a service that allows you to automate the deployment, monitoring, and maintenance of your Azure resources. I am excited to announce several new features in Azure Automation:  &lt;ul&gt; &lt;li&gt;Active Directory Authentication  &lt;li&gt;PowerShell Script Converter  &lt;li&gt;Runbook Gallery  &lt;li&gt;Hourly Scheduling &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;&lt;em&gt;Active Directory Authentication&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;We now offer an easier alternative to using certificates to authenticate from the Azure Automation service to your Azure environment. You can now authenticate to Azure using an Azure Active Directory organization identity which provides simple, credential-based authentication.  &lt;p&gt;If you do not have an Active Directory user set up already, simply create a new user and provide the user with access to manage your Azure subscription. Once you have done this, create an Automation Asset with its credentials and reference the credential in your runbook. You need to do this setup only once and can then use the stored credentials going forward, greatly simplifying the number of steps that you need to take to start automating. You can read this &lt;a href="http://azure.microsoft.com/blog/2014/08/27/azure-automation-authenticating-to-azure-using-azure-active-directory/"&gt;blog&lt;/a&gt; to learn more about getting set up with Active Directory Authentication.  &lt;h3&gt;&lt;em&gt;PowerShell Script Converter&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Azure Automation now supports importing PowerShell scripts as runbooks. When a PowerShell script is imported that does not contain a single PowerShell Workflow, Automation will attempt to convert it from PowerShell script to PowerShell Workflow, and then create a runbook from the result. This allows the vast amount of PowerShell content and knowledge that exists today to be more easily leveraged in Azure Automation, despite the fact that Automation executes PowerShell Workflow and not PowerShell.  &lt;h3&gt;&lt;em&gt;Runbook Gallery&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The Runbook Gallery allows you to quickly discover Automation sample, utility, and scenario runbooks from within the Azure management portal. The Runbook Gallery consists of runbooks that can be used as is or with minor modification, and runbooks that can serve as examples of how to create your own runbooks. The Runbook Gallery features content not only by Microsoft, but also by active members of the Azure community. If you have created a runbook that you think other users may benefit from, you can share it with the community on &lt;a href="http://gallery.technet.microsoft.com/scriptcenter/site/search?f%5B0%5D.Type=RootCategory&amp;amp;f%5B0%5D.Value=WindowsAzure&amp;amp;f%5B0%5D.Text=Windows%20Azure&amp;amp;f%5B1%5D.Type=SubCategory&amp;amp;f%5B1%5D.Value=WindowsAzure_automation&amp;amp;f%5B1%5D.Text=Automation"&gt;Script Center&lt;/a&gt; and it will show up in the Gallery. If you are interested in learning more about the Runbook Gallery, this &lt;a href="http://aka.ms/RunbookGallery"&gt;TechNet article&lt;/a&gt; describes how the Gallery works in more detail and provides information on how you can contribute.  &lt;p&gt;You can access the Gallery from &lt;b&gt;+New&lt;/b&gt;, and then selecting &lt;b&gt;App Services &amp;gt; Automation &amp;gt; Runbook &amp;gt; From Gallery&lt;/b&gt;.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_40.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_19.png" width="624" height="286"&gt;&lt;/a&gt;  &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;In the Gallery wizard, you can browse for runbooks by selecting the category in the left hand pane and then view the description of the selected runbook in the right pane. You can then preview the code and finally import the runbook into your personal space:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_46.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/51df831d1ba3_110D4/image_thumb_22.png" width="624" height="409"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;We will be adding the ability to expand the Gallery to include PowerShell scripts in the near future. These scripts will be converted to Workflows when they are imported to your Automation Account using the new PowerShell Script Converter. This means that you will have more content to choose from and a tool to help you get your PowerShell scripts running in Azure.  &lt;h3&gt;&lt;em&gt;Hourly Scheduling&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Based on popular request from our users, hourly scheduling is now available in Azure Automation. This feature allows you to schedule your runbook hourly or every X hours, making it that much easier to start runbooks at a regular frequency that is smaller than a day.  &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="http://azure.microsoft.com/en-us/pricing/free-trial/" target="_blank"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://azure.microsoft.com/" target="_blank"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu" target="_blank"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb&amp;g=https%3A//weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+Redis+Cache%2c+Disaster+Recovery+to+Azure%2c+Tagging+Support%2c+Elastic+Scale+for+SQLDB%2c+DocDB&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+Redis+Cache%2c+Disaster+Recovery+to+Azure%2c+Tagging+Support%2c+Elastic+Scale+for+SQLDB%2c+DocDB&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-redis-cache-disaster-recovery-to-azure-tagging-support-elastic-scale-for-sqldb-docdb&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Tue, 07 Oct 2014 05:02:02 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Fixing-Works-on-my-Machine-with-Vagrant</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Fixing-Works-on-my-Machine-with-Vagrant</link><category>Virtualization</category><category>Web</category><title>Fixing "Works on my Machine" with Vagrant</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory goes solo to show you a great tool for working on different projects, or working with large teams, called &lt;a href="http://www.vagrantup.com"&gt;Vagrant&lt;/a&gt;. Vagrant is a tool which helps you create and configure lightweight, reproducible, and portable development environments. Vagrant leverages virtualization technologies such as Virtual Box, VMWare Fusion/Workstation and&amp;nbsp;&lt;a href="http://www.microsoft.com/en-us/server-cloud/solutions/virtualization.aspx"&gt;Hyper-V&lt;/a&gt; to stand up development environments which are configured using a Vagrantfile and in some cases a provisioning script which can use &lt;a href="http://www.ansible.com/home"&gt;Ansible&lt;/a&gt;,&amp;nbsp;&lt;a href="http://cfengine.com/"&gt;CFEngine&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.getchef.com/chef/"&gt;Chef&lt;/a&gt;, &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;,&amp;nbsp;&lt;a href="https://puppetlabs.com/"&gt;Puppet&lt;/a&gt; or &lt;a href="http://www.saltstack.com/"&gt;Salt&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In addition to the provisioners above&amp;nbsp;the Hyper-V Provider for Windows adds the ability to provision your Windows boxes using&amp;nbsp;&lt;a href="http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx"&gt;Windows Remote Management&lt;/a&gt; (WinRM).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Notes&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.vagrantup.com/downloads.html"&gt;Download Vagrant&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://vagrantcloud.com/"&gt;Vagrant Cloud&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://blog.syntaxc4.net/post/2014/09/03/windows-boxes-for-vagrant-courtesy-of-modern-ie.aspx"&gt;Windows Boxes for Vagrant courtesy of Modern.ie&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.modern.ie/en-us/virtualization-tools#downloads"&gt;Modern.ie Virtual Machines&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/MSOpenTech/vagrant-windows-hyperv"&gt;MS Open Tech: Vagrant Hyper-V Code on Github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/MSOpenTech/vagrant-azure"&gt;MS Open Tech: Vagrant Azure Code on Github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.packer.io/"&gt;Packer.io&lt;/a&gt;: Create Vagrant Boxes for Multiple Platforms with on simple Configuration&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:3e0d527d8fcc4b249bd7a3b900c5f27c"&gt;</description><pubDate>Tue, 07 Oct 2014 22:33:17 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant.mp4" type="video/mp4" length="41911538" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Fixing-Works-on-my-Machine-with-Vagrant</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory goes solo to show you a great tool for working on different projects, or working with large teams, called Vagrant. Vagrant is a tool which helps you create and configure lightweight, reproducible, and portable development environments. Vagrant leverages virtualization technologies such as Virtual Box, VMWare Fusion/Workstation and Hyper-V to stand up development environments which are configured using a Vagrantfile and in some cases a provisioning script which can use Ansible, CFEngine, Chef, Docker, Puppet or Salt. In addition to the provisioners above the Hyper-V Provider for Windows adds the ability to provision your Windows boxes using Windows Remote Management (WinRM). Show Notes Download VagrantVagrant CloudWindows Boxes for Vagrant courtesy of Modern.ieModern.ie Virtual MachinesMS Open Tech: Vagrant Hyper-V Code on GithubMS Open Tech: Vagrant Azure Code on GithubPacker.io: Create Vagrant Boxes for Multiple Platforms with on simple Configuration  </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1610</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant.mp3" expression="full" duration="1610" fileSize="25771084" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant.mp4" expression="full" duration="1610" fileSize="41911538" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant.webm" expression="full" duration="1610" fileSize="117705098" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_high.mp4" expression="full" duration="1610" fileSize="220949071" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7e53/084c6dcb-9625-4bd7-b054-6a78d54e7e53/FixingWorksOnMyMachineWithVagrant_mid.mp4" expression="full" duration="1610" fileSize="145175039" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Fixing-Works-on-my-Machine-with-Vagrant/RSS</wfw:commentRss></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10560779</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/10/06/asp-net-vnext-in-visual-studio-14-ctp-4.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+vNext/">ASP.NET vNext</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/vs14/">vs14</category><title>ASP.NET vNext in Visual Studio “14” CTP 4</title><description>&lt;p&gt;Today we released updates for ASP.NET vNext in &lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=400850"&gt;Visual Studio &amp;ldquo;14&amp;rdquo; CTP &lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;4&lt;/span&gt;. This release includes the ASP.NET vNext runtime and tooling improvements as outlined below.&lt;/p&gt;
&lt;h3&gt;ASP.NET vNext Runtime&lt;/h3&gt;
&lt;p&gt;This CTP includes our alpha4 runtime packages for ASP.NET vNext. You can find details on the specific enhancements added and issues fixed in the published &lt;a href="https://github.com/aspnet/home/releases/tag/v1.0.0-alpha4"&gt;release notes&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;For information on how to get started with ASP.NET vNext using Visual Studio &amp;ldquo;14&amp;rdquo; check out the article &lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/getting-started-with-aspnet-vnext-and-visual-studio"&gt;Getting Started with ASP.NET vNext and Visual Studio "14"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/aspnet/musicstore"&gt;MVC Music Store&lt;/a&gt; and &lt;a href="https://github.com/aspnet/bugtracker"&gt;Bug Tracker&lt;/a&gt; sample projects have been updated for this release. You can find instructions on how to open, build, run, and publish these sample ASP.NET vNext projects in the documentation in the corresponding GitHub repos.&lt;/p&gt;
&lt;p&gt;There are a few notable breaking changes in this release from Visual Studio &amp;ldquo;14&amp;rdquo; CTP3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project.json now uses "aspnet50" and "aspnetcore50" as framework values, instead of "net45" and "k10".&lt;/li&gt;
&lt;li&gt;Project.json has a new &amp;ldquo;webroot&amp;rdquo; element to indicate the static content folder and an &amp;ldquo;exclude&amp;rdquo; element for folders to be excluded from compilation.&lt;/li&gt;
&lt;li&gt;The Startup.cs IBuilder parameter was renamed to IApplicationBuilder.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ASP.NET vNext Tooling&lt;/h3&gt;
&lt;h4&gt;Performance improvements to compilation in Visual Studio&lt;/h4&gt;
&lt;p&gt;VS uses the Roslyn engine to compile ASP.NET vNext projects at design time. Therefore the project has already been compiled when you issue a &amp;ldquo;build&amp;rdquo; request. In Visual Studio &amp;ldquo;14&amp;rdquo; CTP4, VS simply passes the design time compiler output to the build request. This avoids another build and improves performance when you build, run, or debug ASP.NET vNext projects.&lt;/p&gt;
&lt;h4&gt;NuGet Package Manager support&lt;/h4&gt;
&lt;p&gt;Visual Studio now supports the NuGet Package Manager and console for ASP.NET vNext projects.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/8461.image_5F00_thumb10_5F00_5FC75FBC.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[10]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3034.image_5F00_thumb10_5F00_thumb_5F00_21CDCEFE.png" alt="image_thumb[10]" width="904" height="604" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use this UI for upgrading current alpha ASP.NET vNext packages, click the Settings button and add package sources from developing sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.myget.org/F/aspnetmaster/api/v2"&gt;https://www.myget.org/F/aspnetmaster/api/v2&lt;/a&gt; for packages built from github.com/aspnet master branches&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myget.org/F/aspnetvnext/api/v2"&gt;https://www.myget.org/F/aspnetvnext/api/v2&lt;/a&gt; for packages build from github.com/aspnet dev branches&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;New layout for ASP.NET vNext solutions and projects&lt;/h4&gt;
&lt;p&gt;ASP.NET vNext solutions created in project template now has a new project layout. While this new layout is not required, it helps with cleanly separating your application source code from other artifacts in your solution. New solutions now contain a &lt;em&gt;&amp;lt;solutionFolder&amp;gt;\src&lt;/em&gt; folder for your application projects. A top level global.json file indicates the src folder can be used for looking up project references. This makes it easy to separate test code under a different folder, but still be able to reference application projects from your test projects. For test projects, we recommend to put them under &lt;em&gt;&amp;lt;solutionFolder&amp;gt;\test&lt;/em&gt; directory.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;ASP.NET vNext web project template also puts static contents under the wwwroot folder that is determined by the webroot element of project.json.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5127.image_5F00_thumb34_5F00_16B1170B.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[3][4]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6281.image_5F00_thumb34_5F00_thumb_5F00_3EC59534.png" alt="image_thumb[3][4]" width="831" height="468" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Global.json file in new solutions for project-to-project references&lt;/h4&gt;
&lt;p&gt;In the previous picture, you can see a global.json file in the same level as the solution file, to make better support for project-to-project references. It contains &amp;ldquo;sources&amp;rdquo;: [&amp;ldquo;src&amp;rdquo;] element, indicating the &amp;ldquo;src&amp;rdquo; folder as the parent folder for looking for project references.&lt;/p&gt;
&lt;p&gt;By default, project-to-project references lookup will use parent directory, plus the global.json-defined directories. For example, we have the following solution structure and project.json dependency visibility:&lt;/p&gt;
&lt;p&gt;Solution1\global.json&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;content {&amp;ldquo;sources&amp;rdquo;: [&amp;ldquo;src&amp;rdquo;] }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Solution1\src\WebApp1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Possible Dependencies: &amp;rdquo;ClassLib1&amp;rdquo; :&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Solution1\src\ClassLib1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Possible Dependencies: &amp;rdquo;WebApp1&amp;rdquo; :&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Solution1\test\TestProj1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Possible Dependencies: &amp;rdquo;WebApp1&amp;rdquo; :&amp;rdquo;&amp;rdquo;, &amp;rdquo;ClassLib1&amp;rdquo; :&amp;rdquo;&amp;rdquo;, &amp;rdquo;TestProj2&amp;rdquo; :&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Solution1\test\TestProj2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Possible Dependencies: &amp;rdquo;WebApp1&amp;rdquo; :&amp;rdquo;&amp;rdquo;, &amp;rdquo;ClassLib1&amp;rdquo; :&amp;rdquo;&amp;rdquo;, &amp;rdquo;TestProj1&amp;rdquo; :&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We only need two simple steps to add an ASP.NET vNext class library reference to the default ASP.NET vNext web application.&lt;/p&gt;
&lt;p&gt;1. In Solution Explorer, add a new project under the &amp;ldquo;src&amp;rdquo; folder. Note, we need to append the &amp;ldquo;src&amp;rdquo; folder to the &amp;ldquo;Add New Project&amp;rdquo; Location edit box manually at this time. (VS will do this automatically in a future release.)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7215.image_5F00_thumb4_5F00_thumb_5F00_255D91FA.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[4]_thumb" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/4064.image_5F00_thumb4_5F00_thumb_5F00_thumb_5F00_19C7D4BB.png" alt="image_thumb[4]_thumb" width="956" height="662" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. Open web project&amp;rsquo;s project.json file, add &amp;ldquo;ClassLibrary1&amp;rdquo;:&amp;rdquo;&amp;rdquo; inside the &amp;ldquo;dependencies&amp;rdquo; element&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7217.image_5F00_thumb61_5F00_433EA6AC.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[6][1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/1385.image_5F00_thumb61_5F00_thumb_5F00_69A089F7.png" alt="image_thumb[6][1]" width="834" height="540" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Debugging support for ASP.NET vNext unit tests&lt;/h4&gt;
&lt;p&gt;In VS &amp;ldquo;14&amp;rdquo; CTP3, support was added for running xUnit.NET tests in the VS Test Explorer tool window. VS &amp;ldquo;14&amp;rdquo; CTP4 now supports debugging tests from the tool window as well.&lt;/p&gt;
&lt;h4&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5001.image_5F00_thumb81_5F00_7E25D975.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="image_thumb[8][1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5516.image_5F00_thumb81_5F00_thumb_5F00_207D6EEF.png" alt="image_thumb[8][1]" width="693" height="462" border="0" /&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;Immediate refresh of the Project References node for project.json dependency changes&lt;/h4&gt;
&lt;p&gt;In this release, we enhanced ASP.NET vNext project References node behavior to immediately reflect project.json file dependency changes, while the package checking and loading happens in the background.&lt;/p&gt;
&lt;h3&gt;Known Issues&lt;/h3&gt;
&lt;p&gt;1. There are some known tooling issues with the new solution structure, which you need to be careful about, especially when adding project-to-project references:&lt;/p&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;When you create a new ASP.NET vNext project, an empty project folder is created under the solution folder. This folder should be removed, because the real project folder is created under &amp;lt;solutionFolder&amp;gt;\src subfolder.&lt;/li&gt;
&lt;li&gt;In an ASP.NET vNext project, when you right-click the solution "src" folder or solution node, and add a new project to it (say ClassLibrary1), the Add New Project file dialog uses the solution folder as the location, instead of the "src" location. Project-to-project references will not work properly at runtime as a result. &lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/7266.clip_5F00_image011_5F00_thumb1_5F00_thumb_5F00_3502BE6D.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="clip_image011_thumb[1]_thumb" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/0654.clip_5F00_image011_5F00_thumb1_5F00_thumb_5F00_thumb_5F00_54B19835.png" alt="clip_image011_thumb[1]_thumb" width="610" height="418" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To work around the problem, you need to add &amp;ldquo;.&amp;rdquo; (current folder) to the list of project folders specified in global.json : "sources": [ "src", "." ], or move the project folder to the &amp;ldquo;src&amp;rdquo; folder manually.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.&amp;nbsp; With the new solution structure, you will run into some issues if you uncheck the &amp;lsquo;Create directory for solution&amp;rsquo; checkbox in the File &amp;gt; New Project dialog. Due to some quirks in the way this checkbox is handled internally, if you specify a custom location for your projects in the New Project dialog (e.g.: C:\Tests instead of using the default path provided by VS), you will find that projects in the src folder still get created in the default projects path rather than under the custom path that you provided.&lt;/p&gt;
&lt;p&gt;3. On Windows 8 RTM, pressing F5 in an ASP.NET vNext project does not work for the Core CLR framework. Ctrl + F5 works fine. Pressing F5 works fine for core CLR framework on Windows 8.1.&lt;/p&gt;
&lt;p&gt;4. Three Core CLR package versions were downgraded due to a restructure of the Core CLR packages.&amp;nbsp; If you installed VS &amp;ldquo;14&amp;rdquo; CTP4 on a machine that you&amp;rsquo;ve already used ASP.NET vNext on before, clear out %userprofile%\kpm\packages to ensure projects can successfully build and run. They are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System.Text.Encoding from 4.0.20.0 to 4.0.10.0&lt;/li&gt;
&lt;li&gt;System.IO.FileSystem from 4.0.10.0 to 4.0.0.0&lt;/li&gt;
&lt;li&gt;System.IO.FileSystem.Primitives from 4.0.10.0 to 4.0.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;d love to hear your feedback. For Visual Studio tooling related issues, please submit bugs through &lt;a href="https://connect.microsoft.com/visualstudio"&gt;Connect&lt;/a&gt;, send suggestions on &lt;a href="http://visualstudio.uservoice.com/forums/121579-visual-studio"&gt;UserVoice&lt;/a&gt; and quick thoughts via &lt;a href="http://msdn.microsoft.com/en-us/library/zzszcehe.aspx"&gt;Send-a-Smile&lt;/a&gt; in the Visual Studio IDE. For ASP.NET vNext, please provide feedback in &lt;a href="http://github.com/aspnet"&gt;GitHub&lt;/a&gt; or the &lt;a href="http://forums.asp.net/1255.aspx/1?ASP+NET+vNext"&gt;ASP.NET vNext forum&lt;/a&gt;. If you ask a question in Stack Overflow, use the &lt;a href="http://stackoverflow.com/questions/tagged/asp.net-vnext"&gt;asp.net-vnext&lt;/a&gt; tag.&amp;nbsp; Thanks for being with us in this exciting time!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10560779" width="1" height="1"&gt;</description><pubDate>Mon, 06 Oct 2014 17:05:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">18</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10560779</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/10/06/asp-net-vnext-in-visual-studio-14-ctp-4.aspx#comments</comments></item><item><guid isPermaLink="true">http://www.jeffreyfritz.com/2014/10/2014105aspnet-identity-oauth-and-loginaspx/</guid><link>http://www.jeffreyfritz.com/2014/10/2014105aspnet-identity-oauth-and-loginaspx/</link><category>CodeProject</category><title>Authentication, Authorization and OWIN – Who Moved My Cheese?</title><description>&lt;p&gt;With the introduction of OWIN-based security and Identity management in ASP.NET 4.5, the configuration of authentication and authorization have changed a bit for web forms developers. &amp;#160;In this article, I review where configuration has been turned off and where they have relocated to.&lt;/p&gt;</description><pubDate>Sun, 05 Oct 2014 16:31:53 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/10/2014105aspnet-identity-oauth-and-loginaspx/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/10/2014105aspnet-identity-oauth-and-loginaspx/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">http://madskristensen.net/post/fall-update-2014---my-year-in-review</guid><link>http://feedproxy.google.com/~r/netSlave/~3/gzW9exGjhG8/fall-update-2014---my-year-in-review</link><title>Fall update 2014 - my year in review</title><description>&lt;p&gt;Last October I wrote about &lt;a href="http://madskristensen.net/post/my-road-to-visual-studio-2013"&gt;my road to Visual Studio 2013&lt;/a&gt; which was one big diary entry for an entire year in my professional life. This is such an incredible time to be working on the Visual Studio Web Tools Team and I’m so proud to work with some of the smartest people in the industry. &lt;/p&gt;  &lt;p&gt;This time last year, we were almost ready to ship Visual Studio 2013, so here’s what has happened since then.&lt;/p&gt;  &lt;p&gt;A few months before shipping Visual Studio 2013 we already started the work on Update 2. We decided not to be part of the first update to VS2013 because we had some rather large features that we knew wouldn’t be ready before Update 2. &lt;/p&gt;  &lt;p&gt;&lt;img title="sass" style="margin: 0px 3px 0px 0px; border: 0px currentcolor; border-image: none; float: left; display: inline; background-image: none;" border="0" alt="sass" src="http://madskristensen.net/posts/files/7c343267-f7b0-4e05-9201-8edeb4b2e0dc.png" width="200" align="left" height="150" /&gt;One of those features was the &lt;a href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; editor because we had received a lot of feature requests for it. It was the most requested feature on the &lt;a href="http://webessentials.uservoice.com/"&gt;Web Essentials UserVoice&lt;/a&gt; page in fact.&lt;/p&gt;  &lt;p&gt;In Visual Studio 2012 Update 2 we released the &lt;a href="http://lesscss.org/"&gt;LESS&lt;/a&gt; editor so we had plenty of experience with this type of CSS based language. Peter could reuse a lot of the code from the LESS editor (which he also implemented), so the iterations went pretty fast. Sass has a lot more features than LESS, so there was still a lot of new code and concepts to implement. &lt;/p&gt;  &lt;p&gt;The funny thing about both LESS and Sass is that they evolve very rapidly. It’s not like web standards from the W3C which can be years in the making. These two languages introduce new features and concepts many times a year, so it is a bigger challenge to keep the editors up-to-date. We’re still working on updating both implementations for VS14 in order to keep up with the changes and we will continue to do so going forward.&lt;/p&gt;  &lt;p&gt;We had one additional editor to implement for Update 2 and that was for JSON. Visual Studio never had a JSON editing experience before and we felt it was important to have one. Alex had been working on the support for &lt;a href="http://madskristensen.net/post/the-story-behind-_referencesjs"&gt;auto-updating the _references.js&lt;/a&gt; file up until Christmas 2013, so the work on the JSON editor didn’t start until December 28. &lt;/p&gt;  &lt;p&gt;We were very ambitious with the JSON editor, because we wanted more than just syntax highlighting. We also wanted schema based Intellisense, validation, formatting and more. A full language service was needed. We broke it down into several pieces:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Basic language service&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Syntax highlighting&lt;/li&gt;      &lt;li&gt;Formatting&lt;/li&gt;      &lt;li&gt;Syntax validation&lt;/li&gt;      &lt;li&gt;Brace completion/matching&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;JSON Schema Intellisense&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Draft v3 and v4 support&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;JSON Schema validation&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Enables more accurate Intellisense&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;We knew we couldn’t do all of that for Update 2, so both &lt;a href="https://twitter.com/mlorbetske"&gt;Mike&lt;/a&gt; and Todd helped out with the JSON Schema support while Alex was implementing the language service and Anh was testing it all. We refer to the Update 2 JSON editor as version 1.0. In Update 3 we added better formatting and other important tweaks and in Update 4 we’re adding the validator. This will be version 2.0.&lt;/p&gt;  &lt;p&gt;&lt;img title="image" style="border: 0px currentcolor; border-image: none; float: left; display: inline; background-image: none;" border="0" alt="image" src="http://madskristensen.net/posts/files/fb9c192c-a82c-429a-9b46-14581ecc90ea.png" width="244" align="left" height="84" /&gt;I sent a pull request to the official &lt;a href="http://json-schema.org/implementations.html"&gt;JSON Schema website&lt;/a&gt; that added Visual Studio as the only editor that supports JSON Schema. To this day it’s still the only one. We’re not done yet and will continue to improve the editor in VS14 and beyond.&lt;/p&gt;  &lt;p&gt;Our team is now responsible for 7 separate editors. The highest number by any Visual Studio team. The editors are:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;CSS&lt;/li&gt;    &lt;li&gt;LESS&lt;/li&gt;    &lt;li&gt;Sass&lt;/li&gt;    &lt;li&gt;CoffeeScript&lt;/li&gt;    &lt;li&gt;Web Forms&lt;/li&gt;    &lt;li&gt;HTML&lt;/li&gt;    &lt;li&gt;JSON&lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;It’s quite the task to keep them all up-to-date with every release of Visual Studio and its quarterly updates. It’s sometimes a little overwhelming. &lt;/p&gt;  &lt;p&gt;&lt;img title="image" style="border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" border="0" alt="image" src="http://madskristensen.net/posts/files/55f4a5b6-62f6-4bac-9434-f660b4dee3fa.png" width="456" align="right" height="192" /&gt;To make the experience with JSON Schemas even better, I started working on a website for storing various JSON Schema files. It’s called &lt;a href="http://schemastore.org"&gt;SchemaStore.org&lt;/a&gt; and is completely open source. Web Essentials will automatically download the schema files stored on SchemaStore.org and bind them to known JSON files such as package.json, bower.json etc. In VS14 we’ll build this feature in and open it up for custom schema catalogs as well. We’re even working on a &lt;a href="https://github.com/shirhatti/SchemaValidator"&gt;SublimeText plugin&lt;/a&gt; that will do the same. &lt;/p&gt;  &lt;p&gt;SchemaStore.org used to be hosted on my personal Azure server, but we’ve now moved it over the the ASP.NET team’s Azure subscription so we can scale it out for the load it will get in the near future. I feel very proud about that since it is just one of my side projects, not controlled by Microsoft, 100% open source and now being incorporated into Visual Studio. It’s not the old Microsoft anymore!&lt;/p&gt;  &lt;h2&gt;Project Aurora&lt;/h2&gt;  &lt;p&gt;Early in 2014 we started a new effort spanning both the ASP.NET and the Visual Studio Web Tools teams. The mission is to bring modern web development concepts to Visual Studio and ASP.NET in a way that makes them easy to use. An effort that looks at the entire end-to-end experience. The effort is called Project Aurora.&lt;/p&gt;  &lt;p&gt;Modern web development concepts include tools like Grunt, Gulp, Bower and npm and frameworks such as AngularJS and Bootstrap. On top of that, it also includes LESS/Sass/TypeScript/CoffeeScript compilation, bundling and minification, image optimization, spriting etc. The individual pieces are simple enough when you first get to know them, but to orchestrate a coherent story that integrates all of them into Visual Studio is a tougher challenge. &lt;/p&gt;  &lt;p&gt;One of the main challenges is to write tooling on top of Grunt/Gulp and surface it elegantly inside Visual Studio without compromising the power and flexibility of those tools. And at the same time make them much easier to use for existing Visual Studio users.&lt;/p&gt;  &lt;p&gt;Project Aurora is a key element on the road to VS14 and ASP.NET vNext in that it pushes requirements to the various feature crews in our team to ensure the coherent story comes to live. &lt;/p&gt;  &lt;h2&gt;The “S” word&lt;/h2&gt;  &lt;p&gt;Instead of writing long specifications (the “S” word) for all of this, we started releasing prototypes to get feedback much earlier than we normally would. This includes contributing to existing Visual Studio extensions. &lt;a href="http://visualstudiogallery.msdn.microsoft.com/dcbc5325-79ef-4b72-960e-0a51ee33a0ff"&gt;Grunt Launcher&lt;/a&gt; was one of those extensions that we contributed to. &lt;/p&gt;  &lt;p&gt;We also released the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/65748cdb-4087-497e-a394-2e3449c8e61e"&gt;Package Intellisense&lt;/a&gt; that would give live Intellisense for npm and Bower packages directly in the new JSON editor. Notice how these things all come together to form a better end-to-end story. &lt;/p&gt;  &lt;p&gt;&lt;img title="bower" style="margin: 0px 10px 0px 0px; border: 0px currentcolor; border-image: none; float: left; display: inline; background-image: none;" border="0" alt="bower" src="http://madskristensen.net/posts/files/311d4e34-b0b2-4fea-890f-0cbb23ca6190.png" width="143" align="left" height="143" /&gt;The Package Intellisense extension is right now being implemented in Visual Studio 14 with all the feedback that we got early on from it. This is a much better way of writing software.&lt;/p&gt;  &lt;p&gt;We also released the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/8e1b4368-4afb-467a-bc13-9650572db708"&gt;Task Runner Explorer&lt;/a&gt; extension to get early feedback on our Grunt/Gulp support in VS. Read &lt;a href="http://www.hanselman.com/blog/IntroducingGulpGruntBowerAndNpmSupportForVisualStudio.aspx"&gt;Hanselman’s blog post&lt;/a&gt; about these three extensions.&lt;/p&gt;  &lt;p&gt;We’re also rolling in other features that were first introduced in side projects such as &lt;a href="http://vswebessentials.com/"&gt;Web Essentials&lt;/a&gt; and &lt;a href="http://sidewaffle.com"&gt;SideWaffle&lt;/a&gt;. Templates and snippets for Angular are coming from SideWaffle (thanks to &lt;a href="http://www.johnpapa.net/"&gt;John Papa&lt;/a&gt;). Angular and Bootstrap Intellisense icons are coming from Web Essentials. &lt;/p&gt;  &lt;p&gt;The pace of which we’re able to introduce new features and react to feedback is astonishing and so much faster then just a few years ago. Early prototypes have proven to be key, so expect a lot more of those going forward.&lt;/p&gt;  &lt;h2&gt;Coding&lt;/h2&gt;  &lt;p&gt;As a program manager I don’t get to write any production code. That’s probably a good thing. The only code I’m allowed to write for Visual Studio is the XML schema files that make up HTML and CSS Intellisense and validation. I update these files several times per month with the latest and greatest from the W3C and the browser vendors. &lt;/p&gt;  &lt;p&gt;Just a few months ago, I coded up a feature for the new JSON editor that would give Intellisense for the &lt;strong&gt;$schema&lt;/strong&gt; property. This was done in C#. After writing the feature I submitted it to code review and crossed my fingers hoping the developers would take the code. They did! It was a great personal achievement even though it was a very small feature. &lt;/p&gt;  &lt;p&gt;So coding is not what I do most while at work, but I’ve been a developer my entire adult life, so I just can’t stop coding. I need coding projects. In the past year I’ve released a few websites, worked on some Visual Studio extensions and a number of open source contributions.&lt;/p&gt;  &lt;p&gt;Web related:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://schemastore.org"&gt;SchemaStore.org&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&amp;#160;&lt;a href="http://visualstudioshortcuts.com/2013/"&gt;VisualStudioShortcuts.com&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://icouldntsayso.com/"&gt;ICouldntSaySo.com&lt;/a&gt; – a joke for my colleague &lt;a href="http://twitter.com/rustd"&gt;Pranav&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://ligershark.com"&gt;LigerShark.com&lt;/a&gt; – the home of the LigerShark GitHub org&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;It took 10x longer to optimize than to code&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;a href="http://madskristensen.net/post/optimizing-static-websites-on-iis"&gt;StaticWebHelper&lt;/a&gt; – a NuGet package for static websites&lt;/li&gt;    &lt;li&gt;&lt;a href="https://github.com/madskristensen/ReverseProxyCDN"&gt;Reverse Proxy CDN&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Visual Studio extensions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/65748cdb-4087-497e-a394-2e3449c8e61e"&gt;Package Intellisense&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/3ebde8fb-26d8-4374-a0eb-1e4e2665070c"&gt;File Nesting&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/a204e29b-1778-4dae-affd-209bea658a59"&gt;Trailing Whitespace Visualizer&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/3f820e99-6c0d-41db-aa74-a18d9623b1f3"&gt;Add Empty File&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/a85f155f-b519-44a8-b56b-07611cf78393"&gt;Error Watcher&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/6ce3b73c-2284-4b95-b61d-6de74aa8dfe6"&gt;Shortcut Exporter&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://vswebessentials.com/"&gt;Web Essentials&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/8e1b4368-4afb-467a-bc13-9650572db708"&gt;Task Runner Explorer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Open source contributions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/dcbc5325-79ef-4b72-960e-0a51ee33a0ff"&gt;Grunt Launcher&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Added support for Bower and npm&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/c8bccfe2-650c-4b42-bc5c-845e21f96328"&gt;EditorConfig&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Added syntax highlighting, Intellisense and validation&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/69112f14-62d0-40fb-9ccc-03e3534e7121"&gt;DartVS&lt;/a&gt; – a Dart editor for VS&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Added syntax highlighting&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;a href="https://github.com/Bartvds/grunt-tv4"&gt;Grunt-tv4 JSON Schema validator in node.js&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Added support for BOM (byte order mark)&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;GitHub for Windows&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Updates to the default .gitignore file&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Contributed JSON Schema files for:&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Swagger 2.0&lt;/li&gt;      &lt;li&gt;resume.json&lt;/li&gt;      &lt;li&gt;CoffeeLint&lt;/li&gt;      &lt;li&gt;JSHint&lt;/li&gt;      &lt;li&gt;JSON-LD&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;These things are all open source and combined they put me in the top 100 of the &lt;a href="https://gist.github.com/paulmillr/2657075/"&gt;most active GitHub users&lt;/a&gt; (#94). So even if I don’t get to code much at work, I make up for it in my spare time. See all the projects on my &lt;a href="https://github.com/madskristensen"&gt;GitHub profile&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;The road ahead&lt;/h2&gt;  &lt;p&gt;As various pieces are coming together to form the next generation of web tooling, a lot is still to be done. One thing that’s on the top of my to-do list is to port Web Essentials to VS14. The approach we’re taking with Web Essentials is to bring it back to the basic features of extending the editing experience. This means that a lot of features will be removed. &lt;/p&gt;  &lt;p&gt;We’re getting rid of all the node.js based tooling in Web Essentials, such as LESS/Sass/CoffeeScript compilers, minification, JSHint/JSCS integration etc. We are doing that because we’re taking a bet on Grunt/Gulp for those scenarios in VS14. One of the things we’ve learned by having those features in Web Essentials is that they are difficult to maintain, don’t have MSBuild/CI support, are not very flexible, are not cross-platform and error prone. &lt;/p&gt;  &lt;p&gt;The rest of the web industry has adopted Grunt/Gulp to handle all these features, and they add all the flexibility that Web Essentials can’t. Removing all this from Web Essentials gives a much higher stability to Visual Studio as well. It will also shrink the extension from around 13MB down to around 800Kb.&lt;/p&gt;  &lt;p&gt;Stability has been the top issue for Web Essentials 2013 and it’s my top priority to do something about it for the new version. Removing the node.js based features will address this issue. &lt;/p&gt;  &lt;p&gt;We’re also looking into improving the Angular and Bootstrap story significantly in Visual Studio, both supporting the current versions but also making sure that Angular 2.0 is fully supported with Intellisense etc. It’s a big task. In Visual Studio 2013 Update 4 we already made modifications to improve the Angular experience. The HTML editor no longer complains about custom elements and attributes and the &lt;strong&gt;{{}}&lt;/strong&gt; templating support has been reimplemented to be more flexible. &lt;/p&gt;  &lt;p&gt;Right now is the most exciting time for me at Microsoft as a web developer. The new version of ASP.NET as well as Visual Studio is now mature enough for us to take web development to new heights and break into the future with renewed confidence. &lt;/p&gt;  &lt;p&gt;I’m looking forward to Visual Studio 14 and I hope you’ll enjoy it too. It will be glorious.&lt;/p&gt;</description><pubDate>Sun, 05 Oct 2014 14:08:53 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/fall-update-2014---my-year-in-review</feedburner:origLink></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059988</guid><link>http://www.asp.net/identity/overview/features-api/best-practices-for-deploying-passwords-and-other-sensitive-data-to-aspnet-and-azure</link><title>Best practices for deploying passwords and other sensitive data to ASP.NET and Azure Websites</title><description> This tutorial shows how your code can securely access passwords and other secure information. The most important point is you should never store passwords or other sensitive data in source code, an...</description><pubDate>Thu, 02 Oct 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060013</guid><link>http://www.asp.net/web-forms/overview/security/create-a-secure-aspnet-web-forms-app-with-user-registration,-email-confirmation-and-password-reset</link><title>Create a secure ASP.NET Web Forms app with user registration, email confirmation and password reset</title><description> This tutorial shows you how to build an ASP.NET Web Forms app with user registration, email confirmation and password reset using the ASP.NET Identity membership system. This tutorial was based on...</description><pubDate>Thu, 02 Oct 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Security-Logging-and-Audit-Log-Collection-within-Azure</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Security-Logging-and-Audit-Log-Collection-within-Azure</link><category>Azure</category><category>logging</category><category>Security</category><title>Security Logging and Audit Log Collection within Azure</title><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; and Becky Ochs dig into what settings you need to enforce to make sure your Azure instances are collecting the correct Security and Audit logs. We'll learn about logging for Cloud Services, VMs and configuration for both.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;Azure Diagnostics Agent&lt;/li&gt;&lt;li&gt;&amp;nbsp;Auditing in Azure&lt;/li&gt;&lt;li&gt;&amp;nbsp;Windows Event Forwarding (WEF)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/cloud-services-how-to-monitor/"&gt;How to Monitor Cloud Services&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://support.microsoft.com/kb/2859054/en-us"&gt;Announcement of upcoming changes affecting all Guest OS families&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://msdn.microsoft.com/library/azure/ee460812.aspx"&gt;Collect Azure Operation Events&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://technet.microsoft.com/en-us/library/dn283934.aspx"&gt;Azure Active Directory - View your access and usage reports&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:1e3d2909d5cd4eb6954ca33e0180e75e"&gt;</description><pubDate>Thu, 02 Oct 2014 23:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog.mp4" type="video/mp4" length="16227577" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Security-Logging-and-Audit-Log-Collection-within-Azure</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott and Becky Ochs dig into what settings you need to enforce to make sure your Azure instances are collecting the correct Security and Audit logs. We'll learn about logging for Cloud Services, VMs and configuration for both. Areas covered in this video:  Azure Diagnostics Agent Auditing in Azure Windows Event Forwarding (WEF)Useful topics and links:  How to Monitor Cloud Services Announcement of upcoming changes affecting all Guest OS families Collect Azure Operation Events Azure Active Directory - View your access and usage reports</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">494</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog.mp3" expression="full" duration="494" fileSize="7916283" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog.mp4" expression="full" duration="494" fileSize="16227577" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog.webm" expression="full" duration="494" fileSize="50193009" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_high.mp4" expression="full" duration="494" fileSize="132267898" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/695b/6ee19d6f-0b98-4cde-9af5-35d3cae6695b/azureauditlog_mid.mp4" expression="full" duration="494" fileSize="77531328" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Security-Logging-and-Audit-Log-Collection-within-Azure/RSS</wfw:commentRss></item><item><guid isPermaLink="false">00000000-0000-0000-0000000060066</guid><link>http://www.asp.net/mvc/overview/getting-started/database-first-development/publish-to-azure</link><title>Publish MVC Database First site to Azure</title><description> Using MVC, Entity Framework, and ASP.NET Scaffolding, you can create a web application that provides an interface to an existing database. This tutorial series shows you how to automatically genera...</description><pubDate>Wed, 01 Oct 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="true">http://www.jeffreyfritz.com/2014/10/2014101gulping-my-aspnet-custom-controls/</guid><link>http://www.jeffreyfritz.com/2014/10/2014101gulping-my-aspnet-custom-controls/</link><category>CodeProject</category><title>How to Automate ASP.NET Custom Controls with the Gulp JavaScript Task Runner</title><description>&lt;p&gt;Are you building ASP.NET web applications? &amp;#160;Do you Gulp? &amp;#160;in this article, I introduce how to use Gulp with Visual Studio. &amp;#160;The sample walks through automating static file packaging for custom ASP.NET controls.&lt;/p&gt;</description><pubDate>Wed, 01 Oct 2014 21:51:39 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/10/2014101gulping-my-aspnet-custom-controls/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/10/2014101gulping-my-aspnet-custom-controls/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000045515</guid><link>http://www.asp.net/mvc/overview/getting-started/aspnet-mvc-facebook-birthday-app</link><title>ASP.NET MVC Facebook Birthday App</title><description> This tutorial will teach you how to build a Facebook app by using an MVC 5 NuGet package and Visual Studio 2013.</description><pubDate>Tue, 30 Sep 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10561470</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/09/30/the-ajax-control-toolkit-are-now-maintained-by-devexpress.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcement/">Announcement</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Ajax+Control+Toolkit/">Ajax Control Toolkit</category><title>The Ajax Control Toolkit are now maintained by DevExpress</title><description>&lt;p&gt;The open sourced &lt;a href="http://ajaxcontroltoolkit.codeplex.com/"&gt;Ajax Control Toolkit&lt;/a&gt; now has a new owner: DevExpress.&amp;#160; This project was created on codeplex in 2007 and our team has been sponsoring its development ever since.&amp;#160; It has been downloaded millions of times and played an important role in the field.&amp;#160; The ASP.NET team knows that many people use the ASP.NET Ajax Control Toolkit and that it continues to be updated to work with modern browsers. We are happy to announce that DevExpress has stepped up to be the project owner for the toolkit and is in the process of making sure it is easy to install, works with modern browsers and continues to get updates. We are thrilled to have them as&amp;#160; partner. Please see &lt;a href="https://community.devexpress.com/blogs/aspnet/archive/2014/09/22/ajax-control-toolkit-devexpress-offer.aspx"&gt;DevExpress’ announcement blog&lt;/a&gt; for more details.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10561470" width="1" height="1"&gt;</description><pubDate>Tue, 30 Sep 2014 18:16:04 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xinyang Qiu (MSFT)</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10561470</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/09/30/the-ajax-control-toolkit-are-now-maintained-by-devexpress.aspx#comments</comments></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059792</guid><link>http://www.asp.net/web-api/overview/security/authentication-filters</link><title>Authentication Filters in ASP.NET Web API 2</title><description> An authentication filter is a component that authenticates an HTTP request. Web API 2 and MVC 5 both support authentication filters, but they differ slightly, mostly in the naming conventions for t...</description><pubDate>Thu, 25 Sep 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="true">http://www.jeffreyfritz.com/2014/09/2014925connecting-the-dots-with-jquery-jsonp-and-webapi/</guid><link>http://www.jeffreyfritz.com/2014/09/2014925connecting-the-dots-with-jquery-jsonp-and-webapi/</link><category>CodeProject</category><title>Connecting the dots with jQuery, JSONP, and WebAPI</title><description>&lt;p&gt;I did some pair-programming with my friend Julie Lerman where we looked into what we thought was a simple jQuery AJAX request problem. &amp;#160;What we found was something a bit more interesting in the connection between jQuery and ASP.NET WebAPI.&lt;/p&gt;</description><pubDate>Thu, 25 Sep 2014 18:23:49 Z</pubDate><comments>http://www.jeffreyfritz.com/2014/09/2014925connecting-the-dots-with-jquery-jsonp-and-webapi/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.jeffreyfritz.com/2014/09/2014925connecting-the-dots-with-jquery-jsonp-and-webapi/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks</guid><link>http://weblogs.asp.net/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks</link><category>Azure</category><category>Community News</category><title>New D-Series of Azure VMs with 60% Faster CPUs, More Memory and Local SSD Disks</title><description>&lt;p&gt;Today I&amp;rsquo;m excited to announce that we &lt;a href="http://azure.microsoft.com/blog/2014/09/22/new-d-series-virtual-machine-sizes/" target="_blank"&gt;just released&lt;/a&gt; a new set of VM sizes for Microsoft Azure. These VM sizes are now available to be used immediately by every Azure customer.&lt;/p&gt;
&lt;p&gt;The new D-Series of VMs can be used with both Azure Virtual Machines and Azure Cloud Services.&amp;nbsp; In addition to offering &lt;strong&gt;faster vCPUs (approximately 60% faster than our A series)&lt;/strong&gt; and &lt;strong&gt;more memory&lt;/strong&gt; (up to 112 GB), &lt;strong&gt;the new VM sizes also all have a&lt;/strong&gt; &lt;strong&gt;local SSD disk (up to 800 GB)&lt;/strong&gt; to enable much faster IO reads and writes.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The new VM sizes available today include the following:&lt;/p&gt;
&lt;p style="box-sizing: border-box; white-space: normal; word-spacing: 0px; text-transform: none; color: #666666; font: 14px/1.6 'Segoe UI', 'Helvetica Neue', arial, sans-serif; margin: 0px; letter-spacing: normal; background-color: #ffffff; text-indent: 0px; text-rendering: optimizelegibility; -webkit-text-stroke-width: 0px; padding: 0px;"&gt;&lt;strong&gt;General Purpose D-Series VMs&lt;/strong&gt;&lt;/p&gt;
&lt;table style="box-sizing: border-box; background: #ffffff; white-space: normal; word-spacing: 0px; border-collapse: collapse; text-transform: none; color: #666666; font: 14px/14px 'Segoe UI', 'Helvetica Neue', arial, sans-serif; border-spacing: 0px; letter-spacing: normal; text-indent: 0px; -webkit-text-stroke-width: 0px; border: #dddddd 1px solid;" cellspacing="0" cellpadding="2" width="438" border="0"&gt;
&lt;tbody style="box-sizing: border-box;"&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;vCores&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;Memory (GB)&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="136"&gt;&lt;strong&gt;Local SSD Disk (GB)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box; background: #f9f9f9;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D1&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;1&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;3.5&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="136"&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D2&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;2&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;7&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="136"&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box; background: #f9f9f9;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D3&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;4&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;14&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="136"&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D4&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;8&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;28&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="136"&gt;400&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style="box-sizing: border-box; white-space: normal; word-spacing: 0px; text-transform: none; color: #666666; font: 14px/1.6 'Segoe UI', 'Helvetica Neue', arial, sans-serif; margin: 0px; letter-spacing: normal; background-color: #ffffff; text-indent: 0px; text-rendering: optimizelegibility; -webkit-text-stroke-width: 0px; padding: 0px;"&gt;&lt;strong style="box-sizing: border-box; font-weight: bold;"&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="box-sizing: border-box; white-space: normal; word-spacing: 0px; text-transform: none; color: #666666; font: 14px/1.6 'Segoe UI', 'Helvetica Neue', arial, sans-serif; margin: 0px; letter-spacing: normal; background-color: #ffffff; text-indent: 0px; text-rendering: optimizelegibility; -webkit-text-stroke-width: 0px; padding: 0px;"&gt;&lt;strong style="box-sizing: border-box; font-weight: bold;"&gt;High Memory D-Series VMs&lt;/strong&gt;&lt;/p&gt;
&lt;table style="box-sizing: border-box; background: #ffffff; white-space: normal; word-spacing: 0px; border-collapse: collapse; text-transform: none; color: #666666; font: 14px/14px 'Segoe UI', 'Helvetica Neue', arial, sans-serif; border-spacing: 0px; letter-spacing: normal; text-indent: 0px; -webkit-text-stroke-width: 0px; border: #dddddd 1px solid;" cellspacing="0" cellpadding="2" width="439" border="0"&gt;
&lt;tbody style="box-sizing: border-box;"&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;vCores&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;&lt;strong&gt;Memory (GB)&lt;/strong&gt;&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="137"&gt;&lt;strong&gt;Local SSD Disk (GB)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box; background: #f9f9f9;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D11&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;2&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;14&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="137"&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D12&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;4&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;28&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="137"&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box; background: #f9f9f9;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D13&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;8&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;56&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="137"&gt;400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="box-sizing: border-box;"&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;Standard_D14&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;16&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="100"&gt;112&lt;/td&gt;
&lt;td style="box-sizing: border-box; color: #222222; padding-top: 0px; padding-left: 0px; margin: 0px; display: table-cell; padding-right: 0px;" valign="top" width="137"&gt;800&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For pricing information, please see &lt;a href="http://azure.microsoft.com/en-us/pricing/details/virtual-machines/"&gt;Virtual Machine Pricing Details&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Local SSD Disk and SQL Server Buffer Pool Extensions&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;A temporary drive on the VMs (D:\ on Windows, /mnt or /mnt/resource on Linux) is mapped to the local SSDs exposed on the D-Service VMs, and provides a really good option for replicated storage workloads, like MongoDB, or for significantly increasing the performance of SQL Server 2014 by enabling its unique &lt;a href="http://msdn.microsoft.com/en-us/library/dn133176.aspx"&gt;Buffer Pool Extensions &lt;/a&gt;(BPE) feature.&lt;/p&gt;
&lt;p&gt;SQL Server 2014&amp;rsquo;s Buffer Pool Extensions allows you to extend the SQL Engine Buffer Pool with the memory of local SSD disks to significantly improve the performance of SQL workloads. The Buffer Pool is a global memory resource used to cache data pages for much faster read operations.&amp;nbsp; Without any code changes in your application, you can enable the buffer pool support with the SSDs of the D-Series VMs using a simple T-SQL query with just four lines:&lt;/p&gt;
&lt;pre&gt;ALTER SERVER CONFIGURATION
SET BUFFER POOL EXTENSION ON
SIZE = &amp;lt;size&amp;gt; [ KB | MB | GB ]
FILENAME = 'D:\SSDCACHE\EXAMPLE.BPE'
&lt;/pre&gt;
&lt;p&gt;No code changes are required in your application, and all write operations will continue to be durably persisted in VM drives persisted in Azure Storage. More details on configuring and using BPE can be found &lt;a href="http://msdn.microsoft.com/en-us/library/ee210585.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Start Using the D-Series VMs Today&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;You can start using the new D-Series VM sizes immediately.&amp;nbsp; They can be easily created and used via both the current Azure Management Portal as well as Preview Portal, as well as from the Azure management command-line/scripts/APIs.&lt;/p&gt;
&lt;p&gt;To learn more about the D-Series please &lt;a href="http://azure.microsoft.com/blog/2014/09/22/new-d-series-virtual-machine-sizes/" target="_blank"&gt;read this post&lt;/a&gt; which has even more details about them, as well as check out the &lt;a href="http://azure.microsoft.com/" target="_blank"&gt;Azure documentation center&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks&amp;g=https%3A//weblogs.asp.net/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20New+D-Series+of+Azure+VMs+with+60%25+Faster+CPUs%2c+More+Memory+and+Local+SSD+Disks&amp;v3=ScottGu%27s%20Blog%20-%20New+D-Series+of+Azure+VMs+with+60%25+Faster+CPUs%2c+More+Memory+and+Local+SSD+Disks&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/new-d-series-of-azure-vms-with-60-faster-cpus-more-memory-and-local-ssd-disks&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Mon, 22 Sep 2014 18:19:00 Z</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10559050</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/09/18/ef6-1-2-beta-1-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/ADO-NET/">ADO.NET</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>EF6.1.2 Beta 1 Available</title><description>&lt;p&gt;Today we are making Beta 1 of the EF6.1.2 release available. This patch release contains bug fixes and some contributions from our community. &lt;/p&gt;  &lt;p&gt;&amp;#160; &lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;EF6.1.2 is mostly about bug fixes, you can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.1.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of the fixes included in EF6.1.2 on our CodePlex site&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;We also accepted a couple of noteworthy changes from members of the community:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Query cache parameters can be configured from the app/web.configuration file&lt;/strong&gt;       &lt;pre&gt;&amp;lt;entityFramework&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;#160; &amp;lt;queryCache size='1000' cleaningIntervalInSeconds='-1'/&amp;gt;&amp;#160;&amp;#160; &lt;br /&gt;&amp;lt;/entityFramework&amp;gt;&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SqlFile and SqlResource methods on DbMigration&lt;/strong&gt; allow you to run a SQL script stored as a file or embedded resource. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Where do I get the beta?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.2-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=44234"&gt;available on the Microsoft Download Center&lt;/a&gt;. The tooling will also be included in the next preview of Visual Studio “14”.&lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Support&lt;/h2&gt;

&lt;p&gt;This is a preview of changes that will be available in the final release of EF6.1.2 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;

&lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the &lt;strong&gt;entity-framework&lt;/strong&gt; tag. &lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Thank you to our contributors&lt;/h2&gt;

&lt;p&gt;We’d like to say thank you to folks from the community who have contributed to the 6.1.2 release so far: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;BrandonDahler &lt;/li&gt;

  &lt;li&gt;ErikEJ&lt;/li&gt;

  &lt;li&gt;Honza Široký &lt;/li&gt;

  &lt;li&gt;martincostello &lt;/li&gt;

  &lt;li&gt;UnaiZorrilla &lt;/li&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10559050" width="1" height="1"&gt;</description><pubDate>Thu, 18 Sep 2014 19:35:17 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">14</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10559050</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/09/18/ef6-1-2-beta-1-available.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Jt5SCNC87d4</guid><link>https://www.youtube.com/watch?v=Jt5SCNC87d4&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>JSON Schema introduction in Visual Studio</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Jt5SCNC87d4&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Jt5SCNC87d4/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Jt5SCNC87d4&amp;amp;feature=youtube_gdata"&gt;JSON Schema introduction in Visual Studio&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Resources: 
http://schemastore.org
http://json-schema.org&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1012&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;13
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;04:26&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 17 Sep 2014 03:22:32 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Jt5SCNC87d4" /><a10:updated>2015-01-14T12:08:42Z</a10:updated></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059688</guid><link>http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/odata-v4/complex-type-inheritance-in-odata-v4</link><title>Complex Type Inheritance in OData v4 with ASP.NET Web API</title><description> According to the OData v4 specification , a complex type can inherit from another complex type. (A complex type is a structured type without a key.) Web API OData 5.3 supports complex type inherita...</description><pubDate>Tue, 16 Sep 2014 00:33:25 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059683</guid><link>http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-odata-53</link><title>What's New in ASP.NET Web API OData 5.3</title><description> This topic describes what's new for ASP.NET Web API OData 5.3. Download Documentation OData Core Libraries New Features Known Issues and Breaking Changes Bug Fixes ASP.NET Web API OData 5.3.1 Downl...</description><pubDate>Tue, 16 Sep 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059686</guid><link>http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/odata-v4/use-open-types-in-odata-v4</link><title>Open Types in OData v4 with ASP.NET Web API</title><description> In OData v4, an open type is a stuctured type that contains dynamic properties, in addition to any properties that are declared in the type definition. Open types let you add flexibility to your da...</description><pubDate>Mon, 15 Sep 2014 15:48:18 -0500</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10557795</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/09/12/announcing-the-0-6-0-beta-preview-of-microsoft-azure-webjobs-sdk.aspx</link><title>Announcing the 0.6.0-beta preview of Microsoft Azure WebJobs SDK</title><description>&lt;p&gt;We are releasing another preview of the Microsoft Azure WebJobs SDK, which was &lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx"&gt;introduced by Scott Hanselman&lt;/a&gt;. To read more about the previous preview, read this &lt;a href="http://azure.microsoft.com/blog/2014/09/06/announcing-the-0-5-0-beta-preview-of-microsoft-azure-webjobs-sdk/"&gt;announcement post&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;This release has the same general feature set as 0.5.0-beta as well as a few new exciting ones.&lt;/p&gt;  &lt;h2&gt;&lt;strong&gt;Download this release&lt;/strong&gt;&lt;/h2&gt;  &lt;p&gt;You can download the WebJobs SDK from the NuGet gallery. You can install or update these packages from the NuGet gallery using the NuGet Package Manager Console, like this:&lt;/p&gt;  &lt;pre&gt;Install-Package Microsoft.Azure.WebJobs –Pre&lt;/pre&gt;

&lt;p&gt;If you want to use Microsoft Azure Service Bus triggers, install the following package: 
  &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;Install-Package Microsoft.Azure.WebJobs.ServiceBus -Pre&lt;/pre&gt;

&lt;h4&gt;&lt;/h4&gt;

&lt;h2&gt;&lt;strong&gt;What is the WebJobs SDK?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/"&gt;WebJobs&lt;/a&gt; feature of Microsoft Azure Web Sites provides an easy way for you to run programs such as services or background tasks in a Web Site. You can upload and run an executable file such as an &lt;i&gt;.exe&lt;/i&gt;, &lt;i&gt;.cmd&lt;/i&gt;, or &lt;i&gt;.bat&lt;/i&gt; file to your web site while running these as triggered or continuous WebJobs. Without the WebJobs SDK, connecting and running background task requires a lot of complex programming. The SDK provides a framework that lets you write a minimum amount of code to get common tasks done.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;WebJobs SDK&lt;/strong&gt; has a binding and trigger system which works with Microsoft Azure Storage Blobs, Queues and Tables as well as Service Bus. The binding system makes it easy to write code that reads or writes Microsoft Azure Storage objects. The trigger system calls a function in your code whenever any new data is received in a queue or blob.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Updates in this preview&lt;/strong&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;Table Ingress.&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;One of the offerings in the SDK is to bind to Azure Storage Tables. In this release the SDK allows you to Ingress data into Azure Tables. Ingress is a common scenario when you are parsing files stored in blobs and storing the values in Tables such as CSV readers. In these cases the Ingress function could be writing lots of rows (&lt;em&gt;million in some cases&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The WebJobs SDK makes it possible to implement this functionality easily and allows add real time monitoring capabilities such as number of rows written in the table so you can monitor the progress of the Ingress function.&lt;/p&gt;

&lt;p&gt;The following function show how you can write 100,000 rows into Azure Table storage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:c91401f1-709a-44de-a508-9070f9708eed" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px"&gt;Code Snippet&lt;/div&gt;
&lt;div style="background: #ddd; max-height: 300px; overflow: auto"&gt;
&lt;ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; host = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;host.Call(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;typeof&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;).GetMethod(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Ingress&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;));&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;NoAutomaticTrigger&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Ingress([&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Table&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Ingress&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)] &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;ICollector&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt; tableBinding)&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// Loop to simulate Ingressing lots of rows. &lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// You would replace this with your own logic&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// of reading from blob storage and write to Azure Tables.&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; i = 0; i &amp;lt; 100000; i++)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;tableBinding.Add(&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;() &lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;{ PartitionKey = &lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Foo&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, RowKey = i.ToString(), Name = &lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; PartitionKey { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; RowKey { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Name { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;When you run this function and view the function in the dashboard, you will the following snapshot. The dashboard will show in real time how many rows are written in the table called “Ingress”. Since this is a long running function the dashboard shows an “Abort Host” button which allows you to cancel a long running function.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5226.IngressInProcess_5F00_6E22F6F7.png"&gt;&lt;img title="IngressInProcess" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="IngressInProcess" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/3162.IngressInProcess_5F00_thumb_5F00_0DD1D0C0.png" width="701" height="355" /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;When the Ingress function completes successfully, then the dashboard displays a success message as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/6305.IngressComplete_5F00_3FC9714A.png"&gt;&lt;img title="IngressComplete" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="IngressComplete" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-63-56-metablogapi/5810.IngressComplete_5F00_thumb_5F00_349FE700.png" width="707" height="443" /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In the above example, the Ingress function was invoked through host.Call(). You can use this pattern to call this Ingress program on a schedule. You can also call the Ingress function when a new blob is uploaded in a container. For eg. if you have a background processing program which parses files stored in blob storage and writes the data into tables then you can do something like below:&lt;/p&gt;

&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:a5c83e60-e65d-4795-8394-17173542b74d" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px"&gt;Code Snippet&lt;/div&gt;
&lt;div style="background: #ddd; max-height: 300px; overflow: auto"&gt;
&lt;ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; host = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;host.RunAndBlock();&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; CSVParsing(&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;BlobTrigger&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;@&amp;quot;table-uploads&amp;#92;{name}&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)] &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;TextReader&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; input,&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Table&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Ingress&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)] &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;ICollector&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt; tableBinding)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// This is psuedo code showing how you can parse your CSV files&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// and store them into Azure Tables&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;IEnumerable&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt; rows = ParseUsingMyCSVParser&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt;(inputStream);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;foreach&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; row &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;in&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; rows)&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;        &lt;span style="background:#ffffff;color:#000000"&gt;tableBinding.Add(row);&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Person&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; PartitionKey { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; RowKey { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Name { &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;get&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;set&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;; }&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As a developer now you implement Ingress scenarios fairly easily and also get real time monitoring on the dashboard without having to write any diagnostics code yourself.&lt;/p&gt;

&lt;p&gt;Apart from Ingress scenarios, you can also do the following with Azure Tables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read a single entity. &lt;/li&gt;

  &lt;li&gt;Enumerate a partition. &lt;/li&gt;

  &lt;li&gt;Bind to IQueryable/ IEnumerable to get a list of entities. &lt;/li&gt;

  &lt;li&gt;Create, Update and Delete entities. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please see the following sample for more information: &lt;a title="https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/TableOperations" href="https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/TableOperations"&gt;https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/TableOperations&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Sending multiple messages on a queue.&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Starting with this version, you can use &lt;em&gt;ICollector.Add() &lt;/em&gt;to send multiple messages to a queue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;In the previous version of the SDK you were using ICollection, which is removed. Please use &lt;em&gt;&lt;strong&gt;ICollector &lt;/strong&gt;&lt;/em&gt;going forward.&lt;/p&gt;

&lt;p&gt;Another behavior change is now as soon as you do Add(), the SDK will write the message on a queue. In the previous version the SDK would wait until the function completed before it wrote all the messages to a queue.&lt;/p&gt;

&lt;p&gt;The following code shows how you can send multiple messages to a queue.&lt;/p&gt;

&lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:c45bebf8-af56-4f3c-8a3a-8ba199cfa7ca" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px"&gt;Code Snippet&lt;/div&gt;
&lt;div style="background: #ddd; max-height: 300px; overflow: auto"&gt;
&lt;ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main()&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; host = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;JobHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;host.RunAndBlock();&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; WriteMultipleQueueMessages(&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;QueueTrigger&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;queue&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)] &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; message,&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Queue&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;outputqueue&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)]&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;ICollector&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt; output)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// Process queue message and write multiple messages to the outputqueue&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;output.Add(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;message1&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;    &lt;span style="background:#ffffff;color:#000000"&gt;output.Add(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;message2&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li style="background: #f3f3f3"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;&amp;#160;&lt;/h3&gt;

&lt;h2&gt;&lt;strong&gt;Samples&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Samples for WebJobs SDK can be found at &lt;a href="https://github.com/Azure/azure-webjobs-sdk-samples"&gt;https://github.com/Azure/azure-webjobs-sdk-samples&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;ul&gt;
    &lt;li&gt;You can find samples on how to use triggers and bindings for blobs, tables, queues and Service Bus. &lt;/li&gt;

    &lt;li&gt;There is a sample called PhluffyShuffy which is an Image processing Website where a customer can upload pictures which will trigger a function to process those pictures from blob storage. &lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs"&gt;Tutorial: Getting Started with the Windows Azure WebJobs SDK&lt;/a&gt; &lt;/li&gt;

    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK"&gt;Channel 9 video on Making Your Jobs Easier With Windows Azure WebJobs SDK&lt;/a&gt; &lt;/li&gt;

    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx"&gt;Introduction to WebJobs and SDK by Scott Hanselman&lt;/a&gt; &lt;/li&gt;

    &lt;li&gt;&lt;a href="http://www.bradygaster.com/post/rebuilding-the-sitemonitr-using-windows-azure-webjobs"&gt;A web site monitor built using WebJobs and ASP.NET&lt;/a&gt; by &lt;a href="https://twitter.com/bradygaster"&gt;Brady Gaster&lt;/a&gt; &lt;/li&gt;

    &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources"&gt;Azure WebJobs – Recommended Resources&lt;/a&gt; &lt;/li&gt;

    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Tags/azurefridaywebjobs"&gt;WebJobs video series on Azure Friday&lt;/a&gt; &lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;strong&gt;Deploying WebJobs with SDK to Azure Websites&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Visual Studio 2013 Update 3 with Azure SDK 2.4 added Visual Studio Tooling support to publish WebJobs to Azure Websites. For more information, see &lt;a name="how-to-deploy-azure-webjobs-to-azure-websites"&gt;&lt;/a&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/websites-dotnet-deploy-webjobs/"&gt;How to Deploy Azure WebJobs to Azure Websites&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;strong&gt;Known Issues when migrating from 0.5.0-beta to 0.6.0-beta&lt;/strong&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;ICollector instead of ICollection&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;In the previous version of the SDK you were using ICollection, which is removed. Please use &lt;em&gt;&lt;strong&gt;ICollector &lt;/strong&gt;&lt;/em&gt;going forward starting this release.&lt;/p&gt;

&lt;p&gt;Another behavior change is now as soon as you do Add() in this case, the SDK will write the message on a queue. In the previous version the SDK would wait until the function completed before it wrote all the messages to a queue.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Give feedback and get help&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/"&gt;WebJobs&lt;/a&gt; feature of Microsoft Azure Web Sites and the Microsoft Azure WebJobs SDK are in preview. Any feedback to improve this experience is always welcome.&lt;/p&gt;

&lt;p&gt;If you have questions that are not directly related to the tutorial, you can post them to the &lt;a href="http://azure.microsoft.com/en-us/support/forums/"&gt;Azure forum&lt;/a&gt;, the &lt;a href="http://forums.asp.net/1247.aspx"&gt;ASP.NET forum&lt;/a&gt;, or &lt;a href="http://stackoverflow.com/"&gt;StackOverflow.com&lt;/a&gt;. Use &lt;a href="https://twitter.com/search?q=AzureWebJobs"&gt;#AzureWebJobs&lt;/a&gt; SDK for Twitter and the tag Azure-WebJobsSDK for StackOverflow.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10557795" width="1" height="1"&gt;</description><pubDate>Sat, 13 Sep 2014 02:26:47 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pranav rastogi</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10557795</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/09/12/announcing-the-0-6-0-beta-preview-of-microsoft-azure-webjobs-sdk.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more</link><category>Azure</category><category>Community News</category><category>.NET</category><category>Visual Studio</category><category>SQL Server</category><title>Azure: SQL Databases, API Management, Media Services, Websites, Role Based Access Control and More</title><description>&lt;p&gt;This week we released a major set of updates to Microsoft Azure. This week’s updates include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;SQL Databases&lt;/strong&gt;: General Availability of Azure SQL Database Service Tiers  &lt;li&gt;&lt;strong&gt;API Management&lt;/strong&gt;: General Availability of our API Management Service  &lt;li&gt;&lt;strong&gt;Media Services&lt;/strong&gt;: Live Streaming, Content Protection, Faster and Cost Effective Encoding, and Media Indexer  &lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: Virtual Network integration, new scalable CMS with WordPress and updates to Web Site Backup in the Preview Portal  &lt;li&gt;&lt;strong&gt;Role-based Access Control&lt;/strong&gt;: Preview release of role-based access control for Azure Management operations  &lt;li&gt;&lt;strong&gt;Alerting&lt;/strong&gt;: General Availability of Azure Alerting and new alerts on events &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&amp;nbsp;&amp;nbsp; &lt;h2&gt;&lt;u&gt;SQL Databases: General Availability of Azure SQL Database Service Tiers &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m happy to announce the General Availability of our new Azure SQL Database service tiers - Basic, Standard, and Premium.&amp;nbsp; The SQL Database service within Azure provides a compelling database-as-a-service offering that enables you to quickly innovate &amp;amp; stand up and run SQL databases without having to manage or operate VMs or infrastructure.  &lt;p&gt;Today’s SQL Database Service Tiers all come with a &lt;strong&gt;99.99% SLA, &lt;/strong&gt;and databases can now grow up to 500GB in size.  &lt;p&gt;Each SQL Database tier now &lt;strong&gt;guarantees a consistent performance level&lt;/strong&gt; that you can depend on within your applications – avoiding the need to worry about “noisy neighbors” who might impact your performance from time to time.  &lt;p&gt;Built-in &lt;strong&gt;point-in-time restore support&lt;/strong&gt; now provides you with the ability to automatically re-create databases at a certain point of time (giving you much more backup flexibility and allowing you to restore to exactly the point before you accidentally did something bad to your data).  &lt;p&gt;Built-in &lt;strong&gt;auditing support&lt;/strong&gt; enables you to gain insight into events and changes that occur with the databases you host.  &lt;p&gt;Built-in &lt;strong&gt;active geo-replication&lt;/strong&gt; support, available with the premium tier, enables you to create up to 4 readable, secondary, databases in any Azure region.&amp;nbsp; When active geo-replication is enabled, we will ensure that all transactions committed to the database in your primary region are continuously replicated to the databases in the other regions as well:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_161995EF.png"&gt;&lt;img title="image" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_278F1829.png" width="800" height="450"&gt;&lt;/a&gt;  &lt;p&gt;One of the primary benefits of &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741339.aspx"&gt;active geo-replication&lt;/a&gt; is that it provides application control over disaster recovery at a database level.&amp;nbsp; Having cross-region redundancy enables your applications to recover in the event of a disaster (e.g. a natural disaster, etc).&amp;nbsp; The new active geo-replication support enables you to initiate/control any failovers – allowing you to shift the primary database to any of your secondary regions:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_4BB70369.png"&gt;&lt;img title="image" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_2242C229.png" width="800" height="450"&gt;&lt;/a&gt;  &lt;p&gt;This provides a robust business continuity offering, and enables you to run mission critical solutions in the cloud with confidence.&amp;nbsp; &lt;h3&gt;&lt;em&gt;More Flexible Pricing&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;SQL Databases are now &lt;strong&gt;billed on a per-hour basis&lt;/strong&gt; – allowing you to quickly create and tear down databases, and dynamically scale up or down databases even more cost effectively.  &lt;p&gt;&lt;strong&gt;Basic Tier&lt;/strong&gt; databases support databases up to 2GB in size and cost $4.99 for a full month of use.&amp;nbsp; &lt;strong&gt;Standard Tier&lt;/strong&gt; databases support 250GB databases and now start at $15/month (there are also higher performance standard tiers at $30/month and $75/month). &lt;strong&gt;Premium Tier&lt;/strong&gt; databases support 500GB databases as well as the active geo-replication feature and now start at $465/month.  &lt;p&gt;The below table provides a quick look at the different tiers and functionality:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_32.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_15.png" width="632" height="636"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/dn741336.aspx" target="_blank"&gt;This page&lt;/a&gt; provides more details on how to think about DTU performance with each of the above tiers, and provides benchmark details on the number of transactions supported by each of the above service tiers and performance levels.&lt;/p&gt; &lt;p&gt;During the preview, we’ve heard from some ISVs, which have a large number of databases with variable performance demands, that they need the flexibility to share DTU performance resources across multiple databases as opposed to managing tiers for databases individually.&amp;nbsp; For example, some SaaS ISVs may have a separate SQL database for each customer and as the activity of each database varies, they want to manage a pool of resources with a defined budget across these customer databases.&amp;nbsp; We are working to enable this scenario within the new service tiers in a future service update. If you are an ISV with a similar scenario, please click &lt;a href="http://technet.microsoft.com/en-us/evalcenter/dn800591"&gt;here&lt;/a&gt; to sign up to learn more.  &lt;p&gt;Learn more about SQL Databases on Azure &lt;a href="http://azure.microsoft.com/en-us/services/sql-database/" target="_blank"&gt;here&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;API Management Service: General Availability Release&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the General Availability of the &lt;a href="http://azure.microsoft.com/en-us/services/api-management/" target="_blank"&gt;Azure API Management Service&lt;/a&gt;.  &lt;p&gt;In my &lt;a href="http://weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more"&gt;last post&lt;/a&gt; I discussed how API Management enables customers to securely publish APIs to developers and accelerate partner adoption.&amp;nbsp; These APIs can be used from mobile and client applications (on any device) as well as other cloud and service based applications.  &lt;p&gt;The API management service supports the ability to take any APIs you already have (either in the cloud or on-premises) and publish them for others to use.&amp;nbsp; The API Management service enables you to:  &lt;ul&gt; &lt;li&gt;Throttle, rate limit and quota your APIs  &lt;li&gt;Gain analytic insights on how your APIs are being used and by whom  &lt;li&gt;Secure your APIs using OAuth or key-based access  &lt;li&gt;Track the health of your APIs and quickly identify errors  &lt;li&gt;Easily expose a developer portal for your APIs that provides documentation and test experiences to developers who want to use your APIs&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Today’s General Availability provides a formal SLA for Standard tier services.&amp;nbsp; We also have a developer tier of the service that you can use, starting at just $49 per month.  &lt;h3&gt;&lt;em&gt;OAuth support in the Developer Portal&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The API Management service provides a developer console that enables a great on-boarding and interactive learning experience for developers who want to use your APIs.&amp;nbsp; The developer console enables you to easily expose documentation as well enable developers to try/test your APIs.  &lt;p&gt;With this week’s GA release we are also adding support that enables API publishers to register their OAuth Authorization Servers for use in the console, which in turn allows developers to sign in with their own login credentials when interacting with your API - a critical feature for any API that supports OAuth. All normative authorization grant types are supported plus scopes and default scopes.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb.png" width="624" height="472"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;For more details on how to enable OAuth 2 support with API Management and integration in the new developer portal, check out this &lt;a href="http://go.microsoft.com/fwlink/?LinkId=511375"&gt;tutorial&lt;/a&gt;.  &lt;p&gt;&lt;a href="http://azure.microsoft.com/en-us/services/api-management/" target="_blank"&gt;Click here&lt;/a&gt; to learn more about the API Management service and try it out for free.  &lt;h2&gt;&lt;u&gt;Media Services: Live Streaming, DRM, Faster Cost Effective Encoding, and Media Indexer&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;This week we are excited to announce the public preview of Live Streaming and Content Protection support with Azure Media Services.  &lt;p&gt;The same Internet scale streaming solution that leading international broadcasters used to live stream the 2014 Winter Olympic Games and 2014 FIFA World Cup to tens of millions of customers globally is now available in public preview to &lt;i&gt;all&lt;/i&gt; Azure customers. This means you can now stream live events of any size with the same level of scalability, uptime, and reliability that was available to the Olympics and World Cup.  &lt;h3&gt;&lt;em&gt;DRM Content Protection&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;This week Azure Media Services is also introducing a new Content Protection offering which features both static and dynamic encryption with first party PlayReady license delivery and an AES 128-bit key delivery service.&amp;nbsp; This makes it easy to DRM protect both your live and pre-recorded video assets – and have them be available for users to easily watch them on any device or platform (Windows, Mac, iOS, Android and more).  &lt;h3&gt;&lt;em&gt;Faster and More Cost Effective Media Encoding&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;This week, we are also introducing faster media encoding speeds and more cost-effective billing. Our enhanced Azure Media Encoder is designed for premium media encoding and is billed based on output GBs. Our previous encoder was billed on both input + output GBs, so the shift to output only billing will result in a substantial price reduction for all of our customers.  &lt;p&gt;To help you further optimize your encoding workflows, we’re introducing Basic, Standard, and Premium Encoding Reserved units, which give you more flexibility and allow you to tailor the encoding capability you pay for to the needs of your specific workflows.  &lt;h3&gt;&lt;em&gt;Media Indexer&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Additionally, I’m happy to announce the General Availability of Azure Media Indexer, a powerful, market differentiated content extraction service which can be used to enhance the searchability of audio and video files.&amp;nbsp; With Media Indexer you can automatically analyze your media files and index the audio and video content in them. You can learn more about it &lt;a href="http://azure.microsoft.com/blog/2014/09/10/introducing-azure-media-indexer/" target="_blank"&gt;here&lt;/a&gt;.  &lt;h3&gt;&lt;em&gt;More Media Partners&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;I’m also pleased to announce the addition this week of several media workflow partners and client players to our existing large set of media partners:  &lt;ul&gt; &lt;li&gt;Azure Media Services and &lt;a href="http://www.telestream.net/wirecast/overview.htm"&gt;Telestream’s Wirecast&lt;/a&gt; are now fully integrated, including a built-in destination that makes its quick and easy to send content from Wirecast’s live streaming production software to Azure. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;Similarly, &lt;a href="http://newtek.com/products/tricaster-8000.html"&gt;Newtek’s Tricaster&lt;/a&gt; has also been integrated into the Azure platform, enabling customers to combine the high production value of Tricaster with the scalability and reliability of Azure Media Services. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://www.cires21.com/en/"&gt;Cires21&lt;/a&gt; and Azure Media have paired up to help make monitoring the health of your live channels simple and easy, and the widely-used &lt;a href="http://www.jwplayer.com/"&gt;JW player&lt;/a&gt; is now fully integrated with Azure to enable you to quickly build video playback experiences across virtually all platforms.&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;&lt;em&gt;Learn More&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Visit the &lt;a href="http://azure.com/media"&gt;Azure Media Services&lt;/a&gt; site for more information and to get started for free.  &lt;h2&gt;&lt;u&gt;Websites: Virtual Network Integration, new Scalable CMS with WordPress&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;This week we’ve also released a number of great updates to our Azure Websites service.&lt;/p&gt; &lt;h3&gt;&lt;em&gt;Virtual Network Integration&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Starting this week you can now integrate your Azure Websites with Azure Virtual Networks. This support enables your Websites to access resources attached to your virtual networks.&amp;nbsp; For example: this means you can now have a Website directly connect to a database hosted in a non-public VM on a virtual network.&amp;nbsp; If your Virtual Network is connected to your on-premises network (using a Site-to-Site software VPN or ExpressRoute dedicated fiber VPN) you can also now have your Website connect to resources in your on-premises network as well.  &lt;p&gt;The new Virtual Network support enables both TCP and UDP protocols and will work with your VNET DNS. Hybrid Connections and Virtual Network are compatible such that you can also mix both in the same Website.&amp;nbsp; The new virtual network support for Web Sites is being released this week in preview.&amp;nbsp; Standard web hosting plans can have up to 5 virtual networks enabled. A website can only be connected to one virtual network at a time but there is no restriction on the number of websites that can be connected to a virtual network.  &lt;p&gt;You can configure a Website to use a Virtual Network using the new Preview Azure Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;).&amp;nbsp; Click the “Virtual Network” tile in your web-site to bring up a virtual network blade that you can use to either create a new virtual network or attach to an existing one you already have:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_1.png" width="897" height="363"&gt;&lt;/a&gt;  &lt;p&gt;Note that an Azure Website requires that your Virtual Network has a configured gateway and Point-to-Site enabled. It will remained grayed out in the UI above until you have enabled this.  &lt;h3&gt;&lt;em&gt;Scalable CMS with WordPress&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;This week we also released support for a Scalable CMS solution with WordPress running on Azure Websites.&amp;nbsp; Scalable CMS with WordPress provides the fastest way to build an optimized and hassle free WordPress Website. It is architected so that your WordPress site loads fast and can support millions of page views a month, and you can easily scale up or scale out as your traffic increases.  &lt;p&gt;It is pre-configured to use &lt;a href="http://wordpress.org/plugins/windows-azure-storage/"&gt;Azure Storage&lt;/a&gt;, which can be used to store your site’s media library content, and can be easily configured to use the Azure CDN.&amp;nbsp; Every Scalable CMS site comes with auto-scale, staged publishing, SSL, custom domains, Webjobs, and backup and restore features of Azure Websites enabled. Scalable WordPress also allows you to use &lt;a href="http://wordpress.org/plugins/jetpack/"&gt;Jetpack&lt;/a&gt; to supercharge your WordPress site with powerful features available to WordPress.com users.  &lt;p&gt;You can now easily deploy Scalable CMS with WordPress solutions on Azure via the Azure Gallery integrated within the new Azure Preview Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;).&amp;nbsp; When you select it within the portal it will walk you through automatically setting up and deploying a complete solution on Azure:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_2.png" width="874" height="587"&gt;&lt;/a&gt;  &lt;p&gt;Scalable WordPress is ideal for Web developers, creative agencies, businesses and enterprises wanting a turn-key solution that maximizes performance of running WordPress on Azure Websites.&amp;nbsp; It’s fast, simple and secure WordPress hosting on Azure Websites.  &lt;h3&gt;&lt;em&gt;Updates to Website Backup&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;This week we also updated our built-in Backup feature within Azure Websites with a number of nice enhancements.&amp;nbsp; Starting today, you can now:  &lt;ul&gt; &lt;li&gt;Choose the exact destination of your backups, including the specific Storage account and blob container you wish to store your backups within.  &lt;li&gt;Choose to backup SQL databases or MySQL databases that are declared in the connection strings of the website.  &lt;li&gt;On the restore side, you can now restore to both a new site, &lt;strong&gt;and to a deployment slot on a site. &lt;/strong&gt;This makes it possible to verify your backup before you make it live. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;These new capabilities make it easier than ever to have a full history of your website and its associated data.  &lt;h2&gt;&lt;u&gt;Security: Role Based Access Control for Management of Azure&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;As organizations move more and more of their workloads to Azure, one of the most requested features has been the ability to control which cloud resources different employees can access and what actions they can perform on those resources.  &lt;p&gt;Today, I’m excited to announce the preview release of Role Based Access Control (RBAC) support in the Azure platform. RBAC is now available in the &lt;a href="https://portal.azure.com/"&gt;Azure preview portal&lt;/a&gt; and can be used to control access in the portal or access to the Azure Resource Manager APIs. You can use this support to limit the access of users and groups by assigning them roles on Azure resources. Highlights include:  &lt;ul&gt; &lt;li&gt;A subscription is no longer the access management boundary in Azure. In April, we introduced &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/azure-preview-portal-using-resource-groups/"&gt;Resource Groups&lt;/a&gt;, a container to group resources that share lifecycle. Now, you can grant users access on a resource group as well as on individual resources like specific Websites or VMs. &lt;/li&gt;&lt;/ul&gt; &lt;ul&gt; &lt;li&gt;You can now grant access to both users groups. RBAC is based on Azure Active Directory, so if your organization already uses groups in Azure Active Directory or Windows Server Active Directory for access management, you will be able to manage access to Azure the same way.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Below are some more details on how this works and can be enabled.&lt;/p&gt; &lt;h3&gt;&lt;em&gt;Azure Active Directory&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Azure Active Directory is our directory service in the cloud.&amp;nbsp; You can create organizational tenants within Azure Active Directory and define users and groups within it – without having to have any existing Active Directory setup on-premises.  &lt;p&gt;Alternatively, you can also sync (or federate) users and groups from your existing on-premises Active Directory to Azure Active Directory, and have your existing users and groups automatically be available for use in the cloud with Azure, Office 365, as well as over 2000 other SaaS based applications:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_3.png" width="632" height="305"&gt;&lt;/a&gt;  &lt;p&gt;All users that access your Azure subscriptions, &lt;a href="http://blogs.technet.com/b/ad/archive/2014/08/15/prepping-for-new-management-features.aspx"&gt;are now present in the Azure Active Directory&lt;/a&gt;, to which the subscription is associated. This enables you to manage what they can do as well as revoke their access to all Azure subscriptions by disabling their account in the directory.  &lt;h3&gt;&lt;em&gt;Role Permissions&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;In this first preview we are pre-defining three built-in Azure roles that give you a choice of granting restricted access:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A &lt;strong&gt;Owner&lt;/strong&gt; can perform all management operations for a resource and its child resources including access management.  &lt;li&gt;A &lt;strong&gt;Contributor&lt;/strong&gt; can perform all management operations for a resource including create and delete resources. A contributor cannot grant access to others.  &lt;li&gt;A &lt;strong&gt;Reader&lt;/strong&gt; has read-only access to a resource and its child resources. A Reader cannot read secrets. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;In the RBAC model, users who have been configured to be the service administrator and co-administrators of an Azure subscription are mapped as belonging to the Owners role of the subscription. Their access to both the current and preview management portals remains unchanged.  &lt;p&gt;Additional users and groups that you then assign to the new RBAC roles will only have those permissions, and also will only be able to manage Azure resources using the new &lt;a href="https://portal.azure.com/"&gt;Azure preview portal&lt;/a&gt; and Azure Resource Manager APIs.&amp;nbsp; RBAC is not supported in the current &lt;a href="https://manage.windowsazure.com"&gt;Azure management portal&lt;/a&gt; or via older management APIs (since neither of these were built with the concept of role based security built-in). &lt;/p&gt; &lt;h3&gt;&lt;em&gt;Restricting Access based on Role Based Permissions&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Let’s assume that your team is using Azure for development, as well as to host the production instance of your application. When doing this you might want to separate the resources employed in development and testing from the production resources using &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/azure-preview-portal-using-resource-groups/"&gt;Resource Groups&lt;/a&gt;.  &lt;p&gt;You might want to allow everyone in your team to have a read-only view of all resources in your Azure subscription – including the ability to read and review production analytics data. You might then want to only allow certain users to have write/contributor access to the production resources.&amp;nbsp; Let’s look at how to set this up:  &lt;p&gt;&lt;u&gt;Step 1: Setting up Roles at the Subscription Level&lt;/u&gt;  &lt;p&gt;We’ll begin by mapping some users to roles at the subscription level.&amp;nbsp; These will then by default be inherited by all resources and resource groups within our Azure subscription.  &lt;p&gt;To set this up, open the &lt;strong&gt;Billing blade &lt;/strong&gt;within the Preview Azure Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;), and within the Billing blade select the Azure subscription that you wish to setup roles for&lt;strong&gt;:&lt;/strong&gt;&amp;nbsp; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_5.png" width="764" height="538"&gt;&lt;/a&gt;  &lt;p&gt;Then scroll down within the blade of subscription you opened, and locate the Roles tile within it:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_8.png" width="416" height="425"&gt;&lt;/a&gt;  &lt;p&gt;Clicking the Roles title will bring up a blade that lists the pre-defined roles we provide by default (Owner, Contributor, Reader).&amp;nbsp; You can click any of the roles to bring up a list of the users assigned to the role.&amp;nbsp; Clicking the &lt;strong&gt;Add&lt;/strong&gt; button will then allow you to search your Azure Active Directory and add either a user or group to that role.&amp;nbsp; &lt;p&gt;Below I’ve opened up the default Reader role and added David and Fred to it:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_30.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_14.png" width="726" height="515"&gt;&lt;/a&gt;  &lt;p&gt;Once we do this, David and Fred will be able to log into the Preview Azure Portal and will have read-only access to the resources contained within our subscription.&amp;nbsp; They will not be able to edit any changes, though, nor be able to see secrets (passwords, etc).  &lt;p&gt;Note that in addition to adding users and groups from within your directory, you can also use the &lt;strong&gt;Invite&lt;/strong&gt; button above to invite users who are not currently part of your directory, but who have a Microsoft Account (e.g. &lt;a href="mailto:scott@outlook.com"&gt;scott@outlook.com&lt;/a&gt;), to also be mapped into a role.  &lt;p&gt;&lt;u&gt;Step 2: Setting up Roles at the Resource Level&lt;/u&gt;  &lt;p&gt;Once you’ve defined the default role mappings at the subscription level, they will by default apply to all resources and resource groups contained within it.&amp;nbsp; &lt;p&gt;If you wish to scope permissions even further at just an individual resource (e.g. a VM or Website or Database) or at a resource group level (e.g. an entire application and all resources within it), you can also open up the individual resource/resource-group blade and use the Roles tile within it to further specify permissions.  &lt;p&gt;For example, earlier we granted David &lt;strong&gt;reader role&lt;/strong&gt; access to all resources within our Azure subscription.&amp;nbsp; Let’s now grant him &lt;strong&gt;contributor role&lt;/strong&gt; access to just an individual VM within the subscription.&amp;nbsp; Once we do this he’ll be able to stop/start the VM as well as make changes to it.  &lt;p&gt;To enable this, I’ve opened up the blade for the VM below.&amp;nbsp; I’ve then scrolled down the blade and found the Roles tile within the VM.&amp;nbsp; Clicking the contributor role within the Roles tile will then bring up a blade that allows me to configure which users will be contributors (meaning have read and modify permissions) for this particular VM.&amp;nbsp; Notice below how I’ve added David to this:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_28.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_13.png" width="844" height="561"&gt;&lt;/a&gt;  &lt;p&gt;Using this resource/resource-group level approach enables you to have really fine-grained access control permissions on your resources.  &lt;h3&gt;&lt;em&gt;Command Line and API Access for Azure Role Based Access Control&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The enforcement of the access policies that you configure using RBAC is done by the Azure Resource Manager APIs.&amp;nbsp; Both the Azure preview portal as well as the command line tools we ship use the Resource Manager APIs to execute management operations. This ensures that access is consistently enforced regardless of what tools are used to manage Azure resources.  &lt;p&gt;With this week’s release we’ve included a number of new Powershell APIs that enable you to automate setting up as well as controlling role based access.  &lt;h3&gt;&lt;em&gt;Learn More about Role Based Access&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;Today’s Role Based Access Control Preview provides a lot more flexibility in how you manage the security of your Azure resources.&amp;nbsp; It is easy to setup and configure.&amp;nbsp; And because it integrates with Azure Active Directory, you can easily sync/federate it to also integrate with the existing Active Directory configuration you might already have in your on-premises environment.  &lt;p&gt;Getting started with the new Azure Role Based Access Control support is as simple as assigning the appropriate users and groups to roles on your Azure subscription or individual resources. You can read more detailed information on the concepts and capabilities of RBAC &lt;a href="http://aka.ms/azurerbac"&gt;here&lt;/a&gt;. Your feedback on the preview features is critical for all improvements and new capabilities coming in this space, so please try out the new features and provide us your &lt;a href="http://aka.ms/azurerbacfeedback"&gt;feedback&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Alerts: General Availability of Azure Alerting and new Alerts on Events support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the release of Azure Alerting to General Availability. Azure alerts supports the ability to create alert thresholds on metrics that you are interested in, and then have Azure automatically send an email notification when that threshold is crossed. As part of the general availability release, we are removing the 10 alert rule cap per subscription.  &lt;p&gt;Alerts are available in the full azure portal by clicking &lt;b&gt;Management Services&lt;/b&gt; in the left navigation bar:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_6.png" width="790" height="558"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Also, alerting is available on most of the resources in the Azure preview portal:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_16.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/99feed2ae3fb_13462/image_thumb_7.png" width="869" height="428"&gt;&lt;/a&gt;  &lt;p&gt;You can create alerts on metrics from 8 different services today (and we are adding more all the time):  &lt;ul&gt; &lt;li&gt;Cloud Services  &lt;li&gt;Virtual Machines  &lt;li&gt;Websites  &lt;li&gt;Web hosting plans  &lt;li&gt;Storage accounts  &lt;li&gt;SQL databases  &lt;li&gt;Redis Cache  &lt;li&gt;DocumentDB accounts&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;In addition to general availability for alerts on metrics, we are also previewing the ability to &lt;b&gt;create alerts on &lt;i&gt;operational events.&lt;/i&gt;&lt;/b&gt; This means you can get an email if someone stops your website, if your virtual machines are deleted, or if your Azure Resource Manager template deployment failed. Like alerts on metrics, you can route these alerts to the service and co-administrators, or, to a custom email address you provide.&amp;nbsp; You can configure these events on a resource in the Azure Preview Portal.&amp;nbsp; We have enabled this within the Portal for Websites – we’ll be extending it to all resources in the future. &lt;/p&gt; &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="http://azure.microsoft.com/en-us/pricing/free-trial/" target="_blank"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://azure.microsoft.com/" target="_blank"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu" target="_blank"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+SQL+Databases%2c+API+Management%2c+Media+Services%2c+Websites%2c+Role+Based+Access+Control+and+More&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+SQL+Databases%2c+API+Management%2c+Media+Services%2c+Websites%2c+Role+Based+Access+Control+and+More&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-sql-databases-api-management-media-services-websites-role-based-access-control-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Fri, 12 Sep 2014 06:14:18 Z</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10557171</guid><link>http://blogs.msdn.com/b/webdev/archive/2014/09/11/announcing-the-release-of-web-api-odata-5-3.aspx</link><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET/">ASP.NET</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Web/">Web</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Announcements/">Announcements</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/MVC/">MVC</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+MVC+Framework/">ASP.NET MVC Framework</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/Web+Development/">Web Development</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/ASP-NET+Web+Api/">ASP.NET Web Api</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/webapi/">webapi</category><category domain="http://blogs.msdn.com/b/webdev/archive/tags/odata/">odata</category><title>Announcing the Release of Web API OData 5.3</title><description>&lt;p&gt;The NuGet packages for ASP.NET Web API OData 5.3 are now live on the NuGet gallery!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Download this release&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can install or update the NuGet packages for ASP.NET Web API OData 5.3 using the NuGet Package Manager Console, like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install-Package Microsoft.AspNet.OData -Version 5.3.0&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Install-Package Microsoft.AspNet.WebApi.OData -Version 5.3.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What&amp;rsquo;s in this release?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This release primarily includes great new features for Web API OData v4 as summarized below:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ASP.NET Web API OData 5.3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New&amp;nbsp;Features&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Uses OData Core Libraries 6.5.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/OData/v4/ODataQueryableSample/"&gt;Support $levels in $expand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/OData/v4/ODataOpenTypeSample/"&gt;Support open entity type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/OData/v4/ODataOpenTypeSample/"&gt;Support dynamic collection property in open type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/OData/v4/ODataDollarCountSample/"&gt;Support for $count in the ODataPathHandler&lt;/a&gt; &amp;nbsp;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/OData/v4/ODataComplexTypeInheritanceSample/"&gt;Support complex type inheritance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=Feature&amp;amp;priority=All&amp;amp;release=v5.3%20Beta&amp;amp;assignedTo=All&amp;amp;component=Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;Feature updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=Issue|Task&amp;amp;priority=All&amp;amp;release=v5.3%20Beta&amp;amp;assignedTo=All&amp;amp;component=Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;Bug fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tutorials and other information about Web API OData are available from the ASP.NET web site (&lt;a href="http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api"&gt;http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Questions and feedback&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can submit questions related to this release on the &lt;a href="http://forums.asp.net/1246.aspx/1?ASP+NET+Web+API" target="_blank"&gt;ASP.NET Web API&lt;/a&gt; forums. Please submit any issues you encounter and feature suggestions for future releases on our&amp;nbsp;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/list/basic"&gt;CodePlex site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks and enjoy!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10557171" width="1" height="1"&gt;</description><pubDate>Thu, 11 Sep 2014 09:27:16 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Zhou from Microsoft</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/webdev/rsscomments.aspx?WeblogPostID=10557171</wfw:commentRss><comments>http://blogs.msdn.com/b/webdev/archive/2014/09/11/announcing-the-release-of-web-api-odata-5-3.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/rZR6aQvYNSw/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</link><title>Two free video courses: Intro to ASP.NET MVC and Responsive UI with Bootstrap</title><description>&lt;p&gt;I'm really excited to announce that two of my latest courses on Microsoft Virtual Academy are now live! Both are recordings of live courses Christopher Harrison and I lead in the beautiful Channel 9 studios, and include downloads of all slides, code and live chat logs.&lt;/p&gt;

&lt;p&gt;These are live events with two instructors and an active chat, and we pushed the demo code to GitHub throughout the event so attendees could get their hands on it immediately. One really nice benefit of this format (compared to most other video training) is that we were able to watch for common questions and answer them live. It's also hugely motivating to hear from viewers around the world, many who are staying up late at night. Nothing starts the morning off like "Hello from Bangladesh! Hi from Brazil!" Hellos from Holland, Poland, Bulgaria... even New Jersey!&lt;/p&gt;

&lt;p class="alert alert-info"&gt;&lt;strong&gt;Hey!&lt;/strong&gt; These two courses are part of our new Web Wednesdays series on MVA. Be sure to join us for the next session: &lt;a href="http://aka.ms/AspNet-SignalR"&gt;Lighting Up Real-Time Web Communications with SignalR&lt;/a&gt; with Brady Gaster and me on September 24!&lt;/p&gt;

&lt;p&gt;&lt;img class="img-responsive" src="http://c2.staticflickr.com/6/5568/15179845646_c202c6b118_h.jpg"&gt;&lt;/p&gt;

&lt;p&gt;Quick links for the impatient:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;Introduction to ASP.NET MVC&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/building-responsive-ui-with-bootstrap"&gt;Building Responsive UI with Bootstrap&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: These courses are on Microsoft Virtual Academy, which requires you to log in with a (free) Microsoft Account. No cost or obligations, and the account bookmarks where you're at across multiple courses which is pretty helpful.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Introduction to ASP.NET MVC&lt;/h2&gt;

&lt;p&gt;Christopher and I put on &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt; last year, built from the ASP.NET MVC certification course materials. Since the course materials are usually covered in a week long class, we had to move pretty quick to cover everything. We've heard from a lot of happy viewers that really liked it (many of whom have written to tell us it was a big part of their successful certification test prep). You can read more about my thoughts on that course &lt;a href="http://weblogs.asp.net/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, we also were aware that it was a little fast for some developers who were completely new to the space, e.g. developers who were new to web development or front-end web developers who weren't familiar with C# or Visual Studio. And in the meantime, Christopher had joined Microsoft as a fulltime member of the MVA team (woo hoo!). When Christopher contacted me to strategize about some ideas for courses, we decided it was time for an&amp;nbsp; MVC course that spoke to absolute beginners.&lt;/p&gt;

&lt;p&gt;This course is broken into the following modules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basics of MVC and the Moving Parts &lt;/li&gt;

  &lt;li&gt;Creating and Configuring Models &lt;/li&gt;

  &lt;li&gt;The Power of Visual Studio &lt;/li&gt;

  &lt;li&gt;Deep Dive into Controllers &lt;/li&gt;

  &lt;li&gt;Deep Dive into Views &lt;/li&gt;

  &lt;li&gt;Introduction to Bootstrap &lt;/li&gt;

  &lt;li&gt;Introduction to Authentication in MVC​ &lt;/li&gt;

  &lt;li&gt;Supplement Your Knowledge &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;
&lt;/ul&gt;

&lt;p class="alert alert-info"&gt;View the course here: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;Introduction to ASP.NET MVC&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Building Responsive UI with Bootstrap&lt;/h2&gt;

&lt;p&gt;Boostrap is a front-end framework that makes it easy to build nice looking sites that respond well to different display sizes using CSS media queries. That means your sites automatically adapt to look nice on desktop, laptop, tablets and phones without any hacky code (on server or client) to try to guess if the user probably wants a "mobile" view of the site (what does that even mean now that we've got giant phones, tiny tablets, and convertibles like the Surface?). &lt;/p&gt;

&lt;p&gt;All the ASP.NET project in Visual Studio 2013 (Web Forms and MVC) are built with Bootstrap. It's automatically in every new ASP.NET application.&lt;/p&gt;

&lt;p&gt;That's a good start, but I felt like all of the presentations and training I'd seen using on Bootstrap with ASP.NET had been pretty simple: "Hey, check it out, we have Bootstrap now, responsive design is great, here's a new theme, yay! Done!" That's definitely about all I'd covered in my presentations. &lt;/p&gt;

&lt;p&gt;Sure, Bootstrap is neat, but there are some challenges: The grid system can be a little complex, especially if you want your content to lay out differently at different sizes. Do I really have to memorize all those Bootstrap class names (especially fun for complex components or layouts)? How do I keep my site from looking like every other Bootstrap site out there? And my personal pet peeve: how do I take advantage of Bootstrap without turning my HTML into a horrible mess of &amp;lt;div class="col-lg-6 col-md-4 col-sm-3"&amp;gt; Bootstrap classes that seem to want to take over?&lt;/p&gt;

&lt;p&gt;That's what this class is about. Christopher and I cover the basics pretty quickly, then go deep with things like responsive page design, making Visual Studio pick up some of the hard work, and taking advantage of Less to get the HTML under control. Here's the outline:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Introduction to Bootstrap &lt;/li&gt;

  &lt;li&gt;Bootstrap Components &lt;/li&gt;

  &lt;li&gt;Page Design &lt;/li&gt;

  &lt;li&gt;Visual Studio and ASP.NET Integration &lt;/li&gt;

  &lt;li&gt;JavaScript Functions &lt;/li&gt;

  &lt;li&gt;Using Bootstrap with LESS &lt;/li&gt;

  &lt;li&gt;Bootstrap in the Real World &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;/ul&gt;&lt;p class="alert alert-info"&gt;View the course here: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/building-responsive-ui-with-bootstrap"&gt;Building Responsive UI with Bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm really happy with this course - I think we really nailed it, and judging from the live response it sounds like they thought so, too. I'll do a follow-up blog post digging into the Bootstrap / Less stuff, it's pretty slick.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://c4.staticflickr.com/4/3913/15202400432_531097d0f8_b.jpg"&gt;&lt;/p&gt;

&lt;h2&gt;We'll Do It Live!&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, having two trainers gives us the opportunity to do a lot of things live. We both take turns participating in the attendee chat and giving answers to common questions as they come up. We also work against a live repository on GitHub (using the built-in Visual Studio support), pushing the demo code as soon as each session's completed. If you're able to catch a live event in the future, please do!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=rZR6aQvYNSw:oeyaoAbPWMs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/rZR6aQvYNSw" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 10 Sep 2014 23:22:32 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Enabling-Testing-in-Production-in-Azure-Websites</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Enabling-Testing-in-Production-in-Azure-Websites</link><category>Azure</category><category>PowerShell</category><category>websites</category><title>Enabling Testing in Production in Azure Websites</title><description>&lt;div class="entry-content"&gt;&lt;div id="entry-body"&gt;&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Galin Iliev from the Azure Websites team to check out the newly announced preview feature testing in production. Testing in Production enables scenarios for A/B Testing, canary releases and other continuous delivery strategies by extending the existing site slots functionality in Azure Websites. Currently Testing in Production can be enabled using the Azure PowerShell Cmdlets.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Windows-Azure-Web-Sites-Private-Site-Extensions#t=30m"&gt;Disabling the ARR Affinity Cookie (Web Camps TV)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2013/11/18/disabling-arrs-instance-affinity-in-windows-azure-web-sites/"&gt;Disabling the ARR Affinity Cookie (Websites Blog)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://feedback.azure.com/forums/169385-websites"&gt;Azure Websites feedback on UserVoice&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/azure-web-sites"&gt;Azure Websites on StackOverflow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:629356e7e62b4b5da43da3a10021bcc3"&gt;</description><pubDate>Tue, 09 Sep 2014 11:14:55 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites.mp4" type="video/mp4" length="40032029" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Enabling-Testing-in-Production-in-Azure-Websites</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Galin Iliev from the Azure Websites team to check out the newly announced preview feature testing in production. Testing in Production enables scenarios for A/B Testing, canary releases and other continuous delivery strategies by extending the existing site slots functionality in Azure Websites. Currently Testing in Production can be enabled using the Azure PowerShell Cmdlets. Show Links Disabling the ARR Affinity Cookie (Web Camps TV)Disabling the ARR Affinity Cookie (Websites Blog)Azure Websites feedback on UserVoiceAzure Websites on StackOverflow</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1195</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites.mp3" expression="full" duration="1195" fileSize="19127218" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites.mp4" expression="full" duration="1195" fileSize="40032029" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites.webm" expression="full" duration="1195" fileSize="115066301" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_high.mp4" expression="full" duration="1195" fileSize="278566666" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/eafd/4f2a4d99-05fe-4ebd-97c2-709957a5eafd/EnableTestingInProductionInAzureWebsites_mid.mp4" expression="full" duration="1195" fileSize="169579375" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Enabling-Testing-in-Production-in-Azure-Websites/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://madskristensen.net/post/optimizing-static-websites-on-iis</guid><link>http://feedproxy.google.com/~r/netSlave/~3/uBjh1A0n7Fk/optimizing-static-websites-on-iis</link><title>Optimizing static websites hosted on IIS</title><description>&lt;p&gt;So you are building a website using static .html files instead of any server side technologies such as ASP.NET. That’s cool for various reasons, but my favorite is that it allows any developer on any platform to easily contribute on GitHub. No server-side components needed. Great!&lt;/p&gt;  &lt;p&gt;You’re almost done and decide to run performance analytics tool such as &lt;a href="https://developers.google.com/speed/pagespeed/insights_extensions"&gt;Google Page Speed&lt;/a&gt; on your site. Now the problems begin. Here’s some of the items that you are told to optimize:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Minify HTML&lt;/li&gt;    &lt;li&gt;Set far-future expiration dates on static resources (JS, CSS, images etc.)&lt;/li&gt;    &lt;li&gt;Use cookieless domains for static files&lt;/li&gt;    &lt;li&gt;Use a CDN&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You could set up build processes using Grunt to do all of this work, but it is not that simple to do – especially after you already built your website. Most of these tools require you to setup your project in a specific way from the beginning.&lt;/p&gt;  &lt;p&gt;When you think about it, none of the above mentioned performance issues are relevant on a developer machine, they are only applicable to the live running production website. So if we could let the production server do some tricks for us to make all of this easier and without us having to modify our source code, that would be great.&lt;/p&gt;  &lt;h2&gt;StaticWebHelper&lt;/h2&gt;  &lt;p&gt;While building &lt;a href="http://schemastore.org"&gt;SchemaStore.org&lt;/a&gt; I encountered exactly these issues and decided to create a generic and reusable solution. My idea was to let IIS handle the issues while the website could still run statically without IIS at all on a development machine.&lt;/p&gt;  &lt;p&gt;The &lt;a href="http://www.nuget.org/packages/StaticWebHelper"&gt;StaticWebHelper&lt;/a&gt; NuGet package does exactly that. Here’s what it does:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Minifies any .html file at runtime and output caches&lt;/li&gt;    &lt;li&gt;Fingerprints references to static resources&lt;/li&gt;    &lt;li&gt;Creates a URL rewrite rule for handling the fingerprints&lt;/li&gt;    &lt;li&gt;Set’s far future expiration dates in the web.config&lt;/li&gt;    &lt;li&gt;Has support for CDNs using an appSetting&lt;/li&gt; &lt;/ol&gt;  &lt;blockquote&gt;   &lt;p&gt;Fingerprinting is a browser cache busting technique for changing the URL to references files, so the browsers will load any changes while still featuring far-future expiration dates. &lt;a href="http://madskristensen.net/post/cache-busting-in-aspnet"&gt;Read more about fingerprinting&lt;/a&gt;.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;strong&gt;#1&lt;/strong&gt; and &lt;strong&gt;#2&lt;/strong&gt; happens at runtime, but only once. &lt;/p&gt;  &lt;pre&gt; &amp;lt;handlers&amp;gt;
   &amp;lt;add name=&amp;quot;FingerPrint&amp;quot; verb=&amp;quot;GET&amp;quot; path=&amp;quot;*.html&amp;quot; type=&amp;quot;StaticWebHelper.FingerPrintHandler&amp;quot; /&amp;gt;
 &amp;lt;/handlers&amp;gt;&lt;/pre&gt;
It output caches the results so that no additional files are being created on disk and you get performance similar to static file serving. Any time a referenced JS, CSS or image file is updated on disk, it generates new fingerprints automatically. It also handles conditional GET requests (status 304). 

&lt;p&gt;&lt;strong&gt;#3&lt;/strong&gt;, &lt;strong&gt;#4&lt;/strong&gt; and &lt;strong&gt;#5&lt;/strong&gt; are all handled in the web.config. &lt;/p&gt;

&lt;pre&gt;&amp;lt;add key=&amp;quot;cdnPath&amp;quot; value=&amp;quot;http://schemastore.org.m82.be/&amp;quot; /&amp;gt;
&amp;lt;add key=&amp;quot;minify&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;I use a &lt;a href="https://github.com/madskristensen/ReverseProxyCDN"&gt;custom reverse proxy CDN&lt;/a&gt; with nodes in both Europe and North America for serving static files cookieless. If you don’t need a CDN, it is still a good idea to use a different subdomain to handle static resources such as &lt;strong&gt;s.mydomain.com&lt;/strong&gt;. StaticWebHelper supports both scenarios equally and it’s easy to setup in web.config.&lt;/p&gt;

&lt;p&gt;For fingerprinting to work, it adds a URL rewrite rule in web.config.&lt;/p&gt;

&lt;pre&gt;&amp;lt;rule name=&amp;quot;FingerPrint&amp;quot; stopProcessing=&amp;quot;true&amp;quot;&amp;gt;
  &amp;lt;match url=&amp;quot;(.+)(\.[0-9]{18})\.([a-z]{2,4})$&amp;quot; /&amp;gt;
  &amp;lt;action type=&amp;quot;Rewrite&amp;quot; url=&amp;quot;{R:1}.{R:3}&amp;quot; /&amp;gt;
&amp;lt;/rule&amp;gt;&lt;/pre&gt;

&lt;p&gt;To see this in action, check out the source code of &lt;a href="https://github.com/madskristensen/SchemaStore/tree/master/src"&gt;SchemaStore.org on GitHub&lt;/a&gt;. Especially, take a look in the web.config file.&lt;/p&gt;

&lt;h2&gt;Azure Site Extensions&lt;/h2&gt;

&lt;p&gt;If your website is hosted on Azure, then it’s really easy to let an automated Site Extension do further optimizations such as image optimization and JS/CSS minification. &lt;a href="http://blogs.msdn.com/b/waws/archive/2014/09/01/using-a-site-extension-on-azure-web-sites-to-automatically-bundle-and-minify-your-content.aspx"&gt;Read more about that here&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Sun, 07 Sep 2014 17:18:00 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/optimizing-static-websites-on-iis</feedburner:origLink></item><item><guid isPermaLink="false">http://madskristensen.net/post/new-handy-visual-studio-extensions</guid><link>http://feedproxy.google.com/~r/netSlave/~3/Cj2FV1i3htI/new-handy-visual-studio-extensions</link><title>New handy Visual Studio extensions</title><description>&lt;p&gt;I’m a huge fan of Visual Studio extensions – both consuming and creating them. Whenever I come across a missing feature in Visual Studio, my first instinct is to search for an extension that provides it. If it doesn’t exist, I create it. &lt;/p&gt;  &lt;p&gt;In the past couple of months, I’ve created 3 tiny extensions that each adds features I’ve been missing. Each of these are highly specialized and solves a single problem each.&lt;/p&gt;  &lt;h2&gt;Trailing Whitespace Visualizer&lt;/h2&gt;  &lt;p&gt;I like my code files clean and without unneeded trailing whitespace. &lt;strong&gt;Format Document&lt;/strong&gt; (ctrl+k, ctrl+d) takes care of removing the trailing whitespace, but I’d like to see it clearly in the editor while coding. Here’s what it&amp;#160; looks like:&lt;/p&gt;  &lt;p&gt;&lt;img title="whitespace" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="whitespace" src="http://madskristensen.net/posts/files/b8a852ce-c5d8-4a59-85a3-1c6bc6878863.png" width="462" height="53" /&gt;&lt;/p&gt;  &lt;p&gt;The color can be customized in case you don’t like red.&lt;/p&gt;  &lt;p&gt;&lt;img title="image" style="margin: 0px; border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="image" src="http://madskristensen.net/posts/files/7a061348-5883-422f-b265-111c7f249cce.png" width="336" height="231" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/a204e29b-1778-4dae-affd-209bea658a59"&gt;Download Trailing Whitespace Visualizer on the VS Gallery&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Error Watcher&lt;/h2&gt;  &lt;p&gt;I don’t normally have the &lt;strong&gt;Error List&lt;/strong&gt; visible in Visual Studio, so I often save files containing errors, just to find out that my project won’t build or work at runtime. That’s annoying. I wanted a more visual way to be informed about errors without looking at the details in the &lt;strong&gt;Error List&lt;/strong&gt;. My solution was to show the number of errors on the file containing them at the top of the editor window.&lt;/p&gt;  &lt;p&gt;&lt;img title="errorlist" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="errorlist" src="http://madskristensen.net/posts/files/454556f6-a0de-4ece-99ff-142603e3382e.png" width="172" height="176" /&gt;&lt;/p&gt;  &lt;p&gt;When no errors exist in the file, nothing will be shown in the editor. If you save the document with errors, a small red line will flash briefly to make you aware of it.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/a85f155f-b519-44a8-b56b-07611cf78393"&gt;Download Error Watcher on the VS Gallery&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Add empty file&lt;/h2&gt;  &lt;p&gt;Often times I just want to add an empty file to my project. It could be a .json or .js file for instance. In cases like that, I find that going into the &lt;strong&gt;Add New Item&lt;/strong&gt; dialog takes to long and I sometimes have to search for the file type I want. It would be easier if I could just enter the file name with the extension I want and have it created for me. Also, the &lt;strong&gt;Add New Item&lt;/strong&gt; dialog doesn’t allow me to create file names starting with a dot like in .gitignore.&lt;/p&gt;  &lt;p&gt;I added a button to the &lt;strong&gt;Add&lt;/strong&gt; flyout context menu:&lt;/p&gt;  &lt;p&gt;&lt;img title="menu" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="menu" src="http://madskristensen.net/posts/files/c100db61-d552-401a-be49-6756a71953c8.png" width="342" height="224" /&gt;&lt;/p&gt;  &lt;p&gt;This will prompt me for a file name:&lt;/p&gt;  &lt;p&gt;&lt;img title="prompt" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="prompt" src="http://madskristensen.net/posts/files/a2fc32fb-9793-4a8d-941e-1f6512ebe037.png" width="369" height="159" /&gt;&lt;/p&gt;  &lt;p&gt;Here I can type whatever file name I want and it will be created, added to my project and opened in the editor.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/3f820e99-6c0d-41db-aa74-a18d9623b1f3"&gt;Download Add Empty File on the VS Gallery&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Remember, unlike some browsers, Visual Studio doesn’t slow down when using multiple extensions. Most of them only load in specific circumstances and doesn’t do anything when not used. That’s true for these three extensions too. &lt;/p&gt;  &lt;p&gt;All three extensions are of course open source on &lt;a href="https://github.com/madskristensen"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Sat, 06 Sep 2014 11:55:37 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/new-handy-visual-studio-extensions</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV213</guid><link>http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV213</link><title>An Introduction to ASP.NET vNext</title><description>The next version of ASP.NET will be completely open source, modular, and feature a no-compile refresh-and-go development process while exploiting the full power of Roslyn and the .NET Framework. Developers will be able to deploy their own private version ASP.NET with their apps, guaranteeing compatibility with side-by-side flexibility. Join us as we learn all about ASP.NET vNext and what it means for web development today and tomorrow. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:e738622021c040839e19a39d00f3037e"&gt;</description><pubDate>Fri, 05 Sep 2014 21:44:47 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV213</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The next version of ASP.NET will be completely open source, modular, and feature a no-compile refresh-and-go development process while exploiting the full power of Roslyn and the .NET Framework. Developers will be able to deploy their own private version ASP.NET with their apps, guaranteeing compatibility with side-by-side flexibility. Join us as we learn all about ASP.NET vNext and what it means for web development today and tomorrow.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV305</guid><link>http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV305</link><title>What’s new in ASP.NET and Tools for VS 2013.2</title><description>ASP.NET and Web Tools for Visual Studio 2013.2 is has been released, and it brings with it updated scaffolders, better bootstrap, a JSON editor, improved CSS editor, SASS support, SSL Support under IISExpress, new Identity 2.0 with two factor auth and much, much more. Let’s dig into all these new ASP.NET improvements and empower you to get stuff done after this demo- and example-heavy session. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a591472267a742e3a64da39d00f301c9"&gt;</description><pubDate>Fri, 05 Sep 2014 21:44:45 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NewZealand/2014/DEV305</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET and Web Tools for Visual Studio 2013.2 is has been released, and it brings with it updated scaffolders, better bootstrap, a JSON editor, improved CSS editor, SASS support, SSL Support under IISExpress, new Identity 2.0 with two factor auth and much, much more. Let’s dig into all these new ASP.NET improvements and empower you to get stuff done after this demo- and example-heavy session.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3835</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Qq-Bu6h-1kY</guid><link>https://www.youtube.com/watch?v=Qq-Bu6h-1kY&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>IE dev tools and Visual Studio Browser Link</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Qq-Bu6h-1kY&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Qq-Bu6h-1kY/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Qq-Bu6h-1kY&amp;amp;feature=youtube_gdata"&gt;IE dev tools and Visual Studio Browser Link&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Demo of a new feature that lets Internet Explorer communicate with Visual Studio on DOM inpection&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
277&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;6
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:53&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 30 Aug 2014 21:28:43 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Qq-Bu6h-1kY" /><a10:updated>2014-10-31T20:45:17Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more</link><category>azure</category><category>SQL Server</category><category>.net</category><category>Community News</category><category>ASP.NET</category><title>Azure: New DocumentDB NoSQL Service, New Search Service, New SQL AlwaysOn VM Template, and more</title><description>&lt;p&gt;Today we released a major set of updates to Microsoft Azure. Today’s updates include:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;DocumentDB&lt;/strong&gt;: Preview of a New NoSQL Document Service for Azure  &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: Preview of a New Search-as-a-Service offering for Azure  &lt;li&gt;&lt;strong&gt;Virtual Machines&lt;/strong&gt;: Portal support for SQL Server AlwaysOn + community-driven VMs  &lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: Support for Web Jobs and Web Site processes in the Preview Portal  &lt;li&gt;&lt;strong&gt;Azure Insights&lt;/strong&gt;: General Availability of Microsoft Azure Monitoring Services Management Library  &lt;li&gt;&lt;strong&gt;API Management&lt;/strong&gt;: Support for API Management REST APIs&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h2&gt;&lt;u&gt;DocumentDB: Announcing a New NoSQL Document Service for Azure&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the preview of our new DocumentDB service - a NoSQL document database service designed for scalable and high performance modern applications.&amp;nbsp; DocumentDB is delivered as a fully managed service (meaning you don’t have to manage any infrastructure or VMs yourself) with an enterprise grade SLA.  &lt;p&gt;As a NoSQL store, DocumentDB is truly schema-free. It allows you to store and query any JSON document, regardless of schema. The service provides built-in automatic indexing support – which means you can write JSON documents to the store and immediately query them using a familiar document oriented SQL query grammar. You can optionally extend the query grammar to perform service side evaluation of user defined functions (UDFs) written in server-side JavaScript as well.&amp;nbsp; &lt;p&gt;DocumentDB is designed to linearly scale to meet the needs of your application. The DocumentDB service is purchased in capacity units, each offering a reservation of high performance storage and dedicated performance throughput. Capacity units can be easily added or removed via the Azure portal or REST based management API based on your scale needs. This allows you to elastically scale databases in fine grained increments with predictable performance and no application downtime simply by increasing or decreasing capacity units.  &lt;p&gt;Over the last year, we have used DocumentDB internally within Microsoft for several high-profile services.&amp;nbsp; We now have DocumentDB databases that are each 100s of TBs in size, each processing millions of complex DocumentDB queries per day, with predictable performance of low single digit ms latency.&amp;nbsp; DocumentDB provides a great way to scale applications and solutions like this to an incredible size.  &lt;p&gt;DocumentDB also enables you to tune performance further by customizing the index policies and consistency levels you want for a particular application or scenario, making it an incredibly flexible and powerful data service for your applications.&amp;nbsp;&amp;nbsp; For queries and read operations, DocumentDB offers four distinct consistency levels - Strong, Bounded Staleness, Session, and Eventual. These consistency levels allow you to make sound tradeoffs between consistency and performance. Each consistency level is backed by a predictable performance level ensuring you can achieve reliable results for your application.  &lt;p&gt;DocumentDB has made a significant bet on ubiquitous formats like JSON, HTTP and REST – which makes it easy to start taking advantage of from any Web or Mobile applications.&amp;nbsp; With today’s release we are also distributing .NET, Node.js, JavaScript and Python SDKs.&amp;nbsp; The service can also be accessed through RESTful HTTP interfaces and is simple to manage through the Azure preview portal.  &lt;h3&gt;&lt;u&gt;Provisioning a DocumentDB account&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;To get started with DocumentDB you provision a new database account. To do this, use the new Azure Preview Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;), click the Azure gallery and select the &lt;b&gt;Data, storage, cache + backup&lt;/b&gt; category, and locate the &lt;b&gt;DocumentDB &lt;/b&gt;gallery item.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb.png" width="850" height="503"&gt;&lt;/a&gt;  &lt;p&gt;Once you select the DocumentDB item, choose the Create command to bring up the Create blade for it.&lt;/p&gt; &lt;p&gt;In the create blade, specify the name of the service you wish to create, the amount of capacity you wish to scale your DocumentDB instance to, and the location around the world that you want to deploy it (e.g. the West US Azure region):  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_4.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_1.png" width="170" height="401"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Once provisioning is complete, you can start to manage your DocumentDB account by clicking the new instance icon on your Azure portal dashboard.&amp;nbsp; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_2.png" width="275" height="181"&gt;&lt;/a&gt;  &lt;p&gt;The keys tile can be used to retrieve the security keys to use to access the DocumentDB service programmatically.  &lt;h3&gt;&lt;u&gt;Developing with DocumentDB&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;DocumentDB provides a number of different ways to program against it. You can use the REST API directly over HTTPS, or you can choose from either the .NET, Node.js, JavaScript or Python client SDKs.  &lt;p&gt;The JSON data I am going to use for this example are two families:  &lt;p&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;// AndersonFamily.json file&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;?xml:namespace prefix = "o" /&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"id"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"AndersenFamily"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"lastName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Andersen"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"parents"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"firstName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Thomas"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"firstName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Mary Kay"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"children"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"firstName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"John"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"gender"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"male"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"grade"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: 7 }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"pets"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Fluffy"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"address"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: { &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"country"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"USA"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"state"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"WA"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"city"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Seattle"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;and&lt;/p&gt; &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;// WakefieldFamily.json file&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"id"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"WakefieldFamily"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"parents"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"familyName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Wakefield"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Robin"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"familyName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Miller"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Ben"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"children"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"familyName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Wakefield"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Jesse"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"gender"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"female"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"grade"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: 1&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;},&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"familyName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Miller"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Lisa"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"gender"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"female"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"grade"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: 8&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"pets"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Goofy"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"givenName"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Shadow"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"address"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: { &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"country"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"USA"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"state"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"NY"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"county"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Manhattan"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2e75b6; mso-highlight: white"&gt;"city"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;: &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"NY"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Using the NuGet package manager in Visual Studio, I can search for and install the DocumentDB .NET package into any .NET application. With the URI and Authentication Keys for the DocumentDB service that I retrieved earlier from the Azure Management portal, I can then connect to the DocumentDB service I just provisioned, create a Database, create a Collection, Insert some JSON documents and immediately start querying for them:  &lt;p&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;using&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (client = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; DocumentClient(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; Uri(endpoint), authKey))&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; database = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; Database { Id = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"ScottsDemoDB"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; };&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;database = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.CreateDatabaseAsync(database);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; collection = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; DocumentCollection { Id = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Families"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; };&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;collection = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.CreateDocumentCollectionAsync(database.SelfLink, collection);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//DocumentDB supports strongly typed POCO objects and also dynamic objects&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;dynamic&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; andersonFamily =&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp; &lt;/span&gt;JsonConvert.DeserializeObject(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;File&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.ReadAllText(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;@".\Data\AndersonFamily.json"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;));&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;dynamic&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; wakefieldFamily = JsonConvert.DeserializeObject(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;File&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.ReadAllText(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;@".\Data\WakefieldFamily.json"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;));&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//persist the documents in DocumentDB&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.CreateDocumentAsync(collection.SelfLink, andersonFamily);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.CreateDocumentAsync(collection.SelfLink, wakefieldFamily);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//very simple query returning the full JSON document matching a simple WHERE clause &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; query = client.CreateDocumentQuery(collection.SelfLink, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"SELECT * FROM Families f WHERE f.id = 'AndersenFamily'"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; family = query.AsEnumerable().FirstOrDefault();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.WriteLine(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"The Anderson family have the following pets:"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;foreach&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; pet &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;in&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; family.pets)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.WriteLine(pet.givenName);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//select JUST the child record out of the Family record where the child's gender is male&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;query = client.CreateDocumentQuery(collection.DocumentsLink, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"SELECT * FROM c IN Families.children WHERE c.gender='male'"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; child = query.AsEnumerable().FirstOrDefault();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.WriteLine(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"The Andersons have a son named {0} in grade {1} "&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, child.firstName, child.grade);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//cleanup test database&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.DeleteDatabaseAsync(database.SelfLink);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; line-height: 107%; mso-highlight: white"&gt;}&lt;/span&gt;&lt;/p&gt; &lt;p&gt;As you can see above – the .NET API for DocumentDB fully supports the .NET async pattern, which makes it ideal for use with applications you want to scale well.&amp;nbsp; &lt;/p&gt; &lt;h3&gt;&lt;u&gt;Server-side JavaScript Stored Procedures&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;If I wanted to perform some updates affecting multiple documents within a transaction, I can define a stored procedure using JavaScript that swapped pets between families. In this scenario it would be important to ensure that one family didn’t end up with all the pets and another ended up with none due to something unexpected happening. Therefore if an error occurred during the swap process, it would be crucial that the database rollback the transaction and leave things in a consistent state.&amp;nbsp; I can do this with the following stored procedure that I run within the DocumentDB service:  &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;function&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; SwapPets(family1Id, family2Id) {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; context = getContext();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; collection = context.getCollection();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; response = context.getResponse();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;collection.queryDocuments(collection.getSelfLink(), &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;'SELECT * FROM Families f where f.id&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp; &lt;/span&gt;= "'&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; + family1Id + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;'"'&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, {},&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;function&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (err, documents, responseOptions) {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; family1 = documents[0];&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;collection.queryDocuments(collection.getSelfLink(), &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;'SELECT * FROM Families f where f.id = "'&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; + family2Id + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;'"'&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, {},&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;function&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (err2, documents2, responseOptions2) {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; family2 = documents2[0];&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; itemSave = family1.pets;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;family1.pets = family2.pets;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;family2.pets = itemSave;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;collection.replaceDocument(family1._self, family1,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;function&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (err, docReplaced) { &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;collection.replaceDocument(family2._self, family2, {});&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;});&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;response.setBody(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;true&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;});&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;});&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/p&gt; &lt;p&gt;If an exception is thrown in the JavaScript function due to for instance a concurrency violation when updating a record, the transaction is reversed and system is returned to the state it was in before the function began.  &lt;p&gt;It’s easy to register the stored procedure in code like below (for example: in a deployment script or app startup code):  &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//register a stored procedure&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;StoredProcedure storedProcedure = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; StoredProcedure&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Id = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"SwapPets"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Body = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;File&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.ReadAllText(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;@".\JS\SwapPets.js"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;};&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; line-height: 107%; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;storedProcedure = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; line-height: 107%; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; line-height: 107%; mso-highlight: white"&gt; client.CreateStoredProcedureAsync(collection.SelfLink, storedProcedure);&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; line-height: 107%; mso-highlight: white"&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;And just as easy to execute the stored procedure from within your application:  &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white"&gt;//execute stored procedure passing in the two family documents involved in the pet swap&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;dynamic&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; result = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;await&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client.ExecuteStoredProcedureAsync&amp;lt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;dynamic&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&amp;gt;(storedProcedure.SelfLink, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"AndersenFamily"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"WakefieldFamily"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;/span&gt;&lt;/p&gt; &lt;p&gt;If we checked the pets now linked to the Anderson Family we’d see they have been swapped.  &lt;h3&gt;&lt;u&gt;Learning More&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;It’s really easy to get started with DocumentDB and create a simple working application in a couple of minutes.&amp;nbsp; The above was but one simple example of how to start using it.&amp;nbsp; Because DocumentDB is schema-less you can use it with literally any JSON document.&amp;nbsp; Because it performs automatic indexing on every JSON document stored within it, you get screaming performance when querying those JSON documents later. Because it scales linearly with consistent performance, it is ideal for applications you think might get large.  &lt;p&gt;You can learn more about DocumentDB from the new DocumentDB development center &lt;a href="http://azure.microsoft.com/en-us/services/documentdb/" target="_blank"&gt;here&lt;/a&gt;.  &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Search: Announcing preview of new Search as a Service for Azure&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;I’m excited to announce the preview of our new Azure Search service.&amp;nbsp; Azure Search makes it easy for developers to add great search experiences to any web or mobile application.&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;p&gt;Azure Search provides developers with all of the features needed to build out their search experience without having to deal with the typical complexities that come with managing, tuning and scaling a real-world search service.&amp;nbsp; It is delivered as a fully managed service with an enterprise grade SLA.&amp;nbsp; We also are releasing a Free tier of the service today that enables you to use it with small-scale solutions on Azure at no cost.  &lt;h3&gt;&lt;u&gt;Provisioning a Search Service&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;To get started, let’s create a new search service.&amp;nbsp; In the Azure Preview Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;), navigate to the Azure Gallery, and choose the &lt;b&gt;Data storage, cache + backup&lt;/b&gt; category, and locate the Azure Search gallery item.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_42.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_20.png" width="824" height="647"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Locate the “Search” service icon and select &lt;b&gt;Create&lt;/b&gt; to create an instance of the service:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_20.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_9.png" width="624" height="403"&gt;&lt;/a&gt;  &lt;p&gt;You can choose from two Pricing Tier options: &lt;b&gt;Standard&lt;/b&gt; which provides dedicated capacity for your search service, and a &lt;b&gt;Free&lt;/b&gt; option that allows every Azure subscription to get a free small search service in a shared environment.  &lt;p&gt;The standard tier can be easily scaled up or down and provides dedicated capacity guarantees to ensure that search performance is predictable for your application.&amp;nbsp; It also supports the ability to index 10s of millions of documents with lots of indexes.  &lt;p&gt;The free tier is limited to 10,000 documents, up to 3 indexes and has no dedicated capacity guarantees. However it is also totally free, and also provides a great way to learn and experiment with all of the features of Azure Search.  &lt;h3&gt;&lt;u&gt;Managing your Azure Search service&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;After provisioning your Search service, you will land in the Search blade within the portal - which allows you to manage the service, view usage data and tune the performance of the service:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_22.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_10.png" width="444" height="584"&gt;&lt;/a&gt;  &lt;p&gt;I can click on the &lt;b&gt;Scale&lt;/b&gt; tile above to bring up the details of the number of resources allocated to my search service. If I had created a Standard search service, I could use this to increase the number of replicas allocated to my service to support more searches per second (or to provide higher availability) and the number of partitions to give me support for higher numbers of documents within my search service.  &lt;h3&gt;&lt;u&gt;Creating a Search Index&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Now that the search service is created, I need to create a search index that will hold the documents (data) that will be searched. To get started, I need two pieces of information from the Azure Portal, the service URL to access my Azure Search service (accessed via the &lt;strong&gt;Properties &lt;/strong&gt;tile) and the Admin Key to authenticate against the service (accessed via the &lt;strong&gt;Keys &lt;/strong&gt;title).  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_24.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_11.png" width="624" height="260"&gt;&lt;/a&gt;  &lt;p&gt;&lt;/p&gt; &lt;p&gt;Using this search service URL and admin key, I can start using the search service APIs to create an index and later upload data and issue search requests. I will be sending HTTP requests against the API using that key, so I’ll setup a .NET HttpClient object to do this as follows:  &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;HttpClient&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; client = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;HttpClient&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;client.DefaultRequestHeaders.Add(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"api-key"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"19F1BACDCD154F4D3918504CBF24CA1F"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;);&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;I’ll start by creating the search index. In this case I want an index I can use to search for contacts in my dataset, so I want searchable fields for their names and tags; I also want to track the last contact date (so I can filter or sort on that later on) and their address as a lat/long location so I can use it in filters as well. To make things easy I will be using JSON.NET (to do this, add the NuGet package to your VS project) to serialize objects to JSON.  &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; index = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"contacts"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fields = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;[] &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; { name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"id"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Edm.String"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, key = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;true&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; { name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"fullname"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Edm.String"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, key = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;false&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; { name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"tags"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Collection(Edm.String)"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, key = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;false&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; { name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"lastcontacted"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Edm.DateTimeOffset"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, key = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;false&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; { name = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"worklocation"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Edm.GeographyPoint"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, key = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;false&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt;};&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-ansi-language: es-ar"&gt;var&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt; response = client.PostAsync(&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-ansi-language: es-ar"&gt;"https://scottgu-dev.search.windows.net/indexes/?api-version=2014-07-31-Preview"&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;StringContent&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;JsonConvert&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.SerializeObject(index), &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Encoding&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.UTF8, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"application/json"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;)).Result;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;response.EnsureSuccessStatusCode();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;You can run this code as part of your deployment code or as part of application initialization.  &lt;h3&gt;&lt;u&gt;Populating a Search Index&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Azure Search uses a push API for indexing data. You can call this API with batches of up to 1000 documents to be indexed at a time. Since it’s your code that pushes data into the index, the original data may be anywhere: in a SQL Database in Azure, DocumentDb database, blob/table storage, etc.&amp;nbsp; You can even populate it with data stored on-premises or in a non-Azure cloud provider.  &lt;p&gt;Note that indexing is rarely a one-time operation. You will probably have an initial set of data to load from your data source, but then you will want to push new documents as well as update and delete existing ones. If you use Azure Websites, this is a natural scenario for &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/"&gt;Webjobs&lt;/a&gt; that can run your indexing code regularly in the background.  &lt;p&gt;Regardless of where you host it, the code to index data needs to pull data from the source and push it into Azure Search. In the example below I’m just making up data, but you can see how I could be using the result of a SQL or LINQ query or anything that produces a set of objects that match the index fields we identified above.  &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; batch = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;value = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;[] &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;id = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"221"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fullname = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Jay Adams"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;tags = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;string&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;[] { &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"work"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;lastcontacted = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;DateTimeOffset&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.UtcNow,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;worklocation = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Point"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;coordinates = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; [] { -122.131577, 47.678581 }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;},&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{ &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;id = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"714"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;fullname = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Catherine Abel"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;tags = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;string&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;[] { &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"work"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"personal"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;lastcontacted = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;DateTimeOffset&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.UtcNow,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;worklocation = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;type = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"Point"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;coordinates = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; [] { -121.825579, 47.1419814}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;};&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; response = client.PostAsync(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"https://scottgu-dev.search.windows.net/indexes/contacts/docs/index?api-version=2014-07-31-Preview"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;StringContent&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;JsonConvert&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.SerializeObject(batch), &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Encoding&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.UTF8, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"application/json"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;)).Result;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;response.EnsureSuccessStatusCode();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;h3&gt;&lt;u&gt;Searching an Index&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;After creating an index and populating it with data, I can now issue search requests against the index. Searches are simple HTTP GET requests against the index, and responses contain the data we originally uploaded as well as accompanying scoring information.  &lt;p&gt;I can do a simple search by executing the code below, where searchText is a string containing the user input, something like &lt;i&gt;abel work&lt;/i&gt; for example:  &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-ansi-language: es-ar"&gt;var&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt; response = client.GetAsync(&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-ansi-language: es-ar"&gt;"https://scottgu-dev.search.windows.net/indexes/contacts/docs?api-version=2014-07-31-Preview&amp;amp;search="&lt;/span&gt;&lt;span lang="ES-AR" style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-ansi-language: es-ar"&gt; + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;Uri&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.EscapeDataString(searchText)).Result;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;response.EnsureSuccessStatusCode();&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;dynamic&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; results = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white"&gt;JsonConvert&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;.DeserializeObject(response.Content.ReadAsStringAsync().Result);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;foreach&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; result &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;in&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt; results.value)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Console.WriteLine(&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"FullName:&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;" + &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;result.fullname + &lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;" &lt;/span&gt;score:&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"&lt;/span&gt; + (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white"&gt;double&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;)result[&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white"&gt;"@search.score"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;]);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;h3&gt;&lt;u&gt;Learning More&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;The above is just a simple scenario of what you can do.&amp;nbsp; There are a lot of other things we could do with searches. For example, I can use query string options to filter, sort, project and page over the results. I can use hit-highlighting and faceting to create a richer way to navigate results and suggestions to implement auto-complete within my web or mobile UI.  &lt;p&gt;In this example, I used the default ranking model, which uses statistics of the indexed text and search string to compute scores. You can also author your own scoring profiles that model scores in ways that match the needs of your application.  &lt;p&gt;Check out the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=397746&amp;amp;clcid=0x409"&gt;Azure Search documentation&lt;/a&gt; for more details on how to get started, and some of the more advanced use-cases you can take advantage of.&amp;nbsp; With the free tier now available at no cost to every Azure subscriber, there is no longer any reason not to have Search fully integrated within your applications.  &lt;h2&gt;&lt;u&gt;Virtual Machines: Support for SQL Server AlwaysOn, VM Depot images&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Last month we added support for managing VMs within the Azure Preview Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;).&amp;nbsp; We also released built-in portal support that enables you to easily create multi-VM SharePoint Server Farms as well as a slew of additional Azure Certified VM images.&amp;nbsp; You can learn more about these updates in &lt;a href="http://weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements" target="_blank"&gt;my last blog post&lt;/a&gt;.  &lt;p&gt;Today, I’m excited to announce new support for automatically deploying SQL Server VMs with AlwaysOn configured, as well as integrated portal support for community supported VM Depot images.  &lt;h3&gt;&lt;u&gt;SQL Server AlwaysOn Template&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;AlwaysOn Availability Groups&lt;a href="http://technet.microsoft.com/en-us/library/hh510230.aspx"&gt;&lt;/a&gt;, released in SQL Server 2012 and enhanced in SQL Server 2014, guarantee high availability for mission-critical workloads. Last year we started supporting &lt;a href="http://weblogs.asp.net/scottgu/windows-azure-general-availability-of-sql-server-always-on-support-and-notification-hubs-autoscale-improvements-more"&gt;SQL Availability Groups on Azure Infrastructure Services&lt;/a&gt;. In such a configuration, two SQL replicas (primary and secondary), each in its own Azure VM, are configured for automatic failover, and a &lt;a href="http://msdn.microsoft.com/en-us/library/hh213417.aspx"&gt;listener&lt;/a&gt; (DNS name) is configured for client connectivity. Other components required are a file share witness to guarantee quorum in the configuration to avoid “split brain” scenarios, and a domain controller to join all VMs to the same domain. The SQL as well as the domain controller replicas are each deployed to an availability set to ensure they are in different Azure failure and upgrade domains.  &lt;p&gt;Prior to today’s release, setting up the &lt;a href="http://msdn.microsoft.com/en-us/library/dn249504.aspx"&gt;Availability Group configuration&lt;/a&gt; could be tedious and time consuming. We have dramatically simplified this experience through a new SQL Server AlwaysOn template in the Azure Gallery. This template fully automates the configuration of a highly available SQL Server deployment on Azure Infrastructure Services using an Availability Group.  &lt;p&gt;You can find the template by navigating to the Azure Gallery within the Azure Preview Portal (&lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;), selecting the Virtual Machine category on the left and selecting the &lt;b&gt;SQL Server 2014 AlwaysOn&lt;/b&gt; gallery item. In the gallery details page, select &lt;b&gt;Create&lt;/b&gt;. All you need is to provide some basic configuration information such as the administrator credentials for the VMs and the rest of the settings are defaulted for you. You may consider changing the defaults for &lt;i&gt;Listener &lt;/i&gt;name as this is what your applications will use to connect to SQL Server.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_36.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_17.png" width="624" height="745"&gt;&lt;/a&gt;  &lt;p&gt;Upon creation, 5 VMs are created in the resource group: 2 VMs for the SQL Server replicas, 2 VMs for the Domain Controller replicas, and 1 VM for the file share witness.  &lt;p&gt;Once created, you can RDP to one of the SQL Server VMs to see the Availability Group configuration as depicted below:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_38.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_18.png" width="624" height="285"&gt;&lt;/a&gt;  &lt;p&gt;Try out the SQL Server AlwaysOn template in the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt; today and give us your feedback!  &lt;h3&gt;&lt;u&gt;VM Depot in Azure Gallery&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Community-driven VM Depot images have been supported on the Azure platform for a couple of years now. But prior to today’s release they weren’t fully integrated into the mainline user experience.  &lt;p&gt;Today, I’m excited to announce that we have integrated community VMs&amp;nbsp; into the Azure Preview Portal and the Azure gallery. With this release, you will find close to 300 pre-configured Virtual Machine images for Microsoft Azure.  &lt;p&gt;Using these images, fully functional Virtual Machines can be deployed in the Preview Portal in minutes and customized for specific use cases. Starting from base operating system distributions (such as Debian, Ubuntu, CentOS, Suse and FreeBSD) through developer stacks (such as LAMP, Ruby on Rails, Node and Django), to complete applications (such as Wordpress, Drupal and Apache Solr), there is something for everyone in VM Depot.  &lt;p&gt;Try out the VM Depot images in the Azure gallery from within the Virtual Machine category.  &lt;h2&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_40.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_19.png" width="882" height="816"&gt;&lt;/a&gt; &lt;/h2&gt; &lt;h2&gt;&lt;u&gt;Web Sites: WebJobs and Process Management in the Preview Portal&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Starting with today’s Azure release, Web Site WebJobs are now supported in the &lt;a href="https://portal.azure.com/"&gt;Azure Preview Portal.&lt;/a&gt;&amp;nbsp; You can also now drill into your Web Sites and monitor the health of any processes running within them (both to host your web code as well as your web jobs).  &lt;h3&gt;&lt;u&gt;Web Site WebJobs&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Using WebJobs, you can now now run any code within your Azure Web Sites – and do so in a way that is readily parallelizable, globally scalable, and complete with remote debugging, full VS support and an optional SDK to facilitate authoring. For more information about the power of WebJobs, visit &lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources"&gt;Azure WebJobs recommended resources.&lt;/a&gt;  &lt;p&gt;With today’s Azure release, we now support two types of Webjobs: on Demand and Continuous.&amp;nbsp; To use WebJobs in the preview portal, navigate to your web site and select the WebJobs tile within the Web Site blade. Notice that the part also now shows the count of WebJobs available.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_30.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_14.png" width="685" height="386"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;By drilling into the title, you can view existing WebJobs as well as create new OnDemand or Continuous WebJobs. Scheduled WebJobs are not yet supported in the preview portal, but expect to see this in the near future.  &lt;h3&gt;&lt;u&gt;Web Site Processes&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;I’m excited to announce a new feature in the Azure Web Sites experience in the Preview Portal - &lt;b&gt;Websites Processes&lt;/b&gt;. Using &lt;b&gt;Websites Process &lt;/b&gt;you can enumerate the different instances of your site, browse through the different processes on each instance, and even drill down to the handles and modules associated with each process. You can then check for detailed information like version, language and more.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_32.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_15.png" width="700" height="393"&gt;&lt;/a&gt;  &lt;p&gt;In addition, you also get rich monitoring for CPU, Working Set and Thread count at the process level.&amp;nbsp; Just like with Task Manager for Windows, data collection begins when you open the &lt;b&gt;Websites Processes &lt;/b&gt;blade, and stops when you close it.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_34.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_16.png" width="699" height="393"&gt;&lt;/a&gt;  &lt;p&gt;This feature is especially useful when your site has been scaled out and is misbehaving in some specific instances but not in others. You can quickly identify runaway processes, find open file handles, and even kill a specific process instance.  &lt;h2&gt;&lt;u&gt;Monitoring and Management SDK: Programmatic Access to Monitoring Data &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;The Azure Management Portal provides built-in monitoring and management support that makes it easy for you to track the health of your applications and solutions deployed within Azure.  &lt;p&gt;If you want to programmatically access monitoring and management features in Azure, you can also now use our &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Monitoring"&gt;.NET SDK from Nuget&lt;/a&gt;. We are releasing this SDK to general availability today, so you can now use it for your production services!  &lt;p&gt;For example, if you want to build your own custom dashboard that shows metric data from across your services, you can get that metric data via the SDK:  &lt;blockquote&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Create the metrics client by obtain the certificate with the specified thumbprint.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricsClient&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; metricsClient = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricsClient&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;new&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;CertificateCloudCredentials&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;(SubscriptionId, GetStoreCertificate(Thumbprint)));&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Build the resource ID string.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;string&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; resourceId = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;ResourceIdBuilder&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.BuildWebSiteResourceId(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;"webtest-group-WestUSwebspace"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;"webtests-site"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Get the metric definitions.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricDefinitionCollection&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; metricDefinitions = metricsClient.MetricDefinitions.List(resourceId, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;null&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;, &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;null&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;).MetricDefinitionCollection;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Display the available metric definitions.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.WriteLine(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;"Choose metrics (comma separated) to list:"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;int&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; count = 0;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;foreach&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricDefinition&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; metricDefinition &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;in&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; metricDefinitions.Value)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.WriteLine(count + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;":"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; + metricDefinition.DisplayName);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;count++;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Ask the user which metrics they are interested in.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;var&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; desiredMetrics = &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.ReadLine().Split(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;','&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;).Select(x =&amp;gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp; &lt;/span&gt;metricDefinitions.Value.ToArray()[&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Convert&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.ToInt32(x.Trim())]);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Get the metric values for the last 20 minutes.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricValueSetCollection&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; values = metricsClient.MetricValues.List(&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;resourceId,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;desiredMetrics.Select(x =&amp;gt; x.Name).ToList(),&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;""&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;desiredMetrics.First().MetricAvailabilities.Select(x =&amp;gt; x.TimeGrain).Min(),&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;DateTime&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.UtcNow - &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;TimeSpan&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.FromMinutes(20),&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;DateTime&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.UtcNow&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;).MetricValueSetCollection;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: green; mso-highlight: white; mso-no-proof: yes"&gt;// Display the metric values to the user.&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;foreach&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricValueSet&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; valueSet &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;in&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; values.Value )&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.WriteLine(valueSet.DisplayName + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;" for the past 20 minutes:"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;foreach&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; (&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;MetricValue&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; metricValue &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: blue; mso-highlight: white; mso-no-proof: yes"&gt;in&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; valueSet.MetricValues)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.WriteLine(metricValue.Timestamp + &lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;"\t"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt; + metricValue.Average);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;span style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal; text-autospace: ; mso-layout-grid-align: none"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;.Write(&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #a31515; mso-highlight: white; mso-no-proof: yes"&gt;"Press any key to continue:"&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; mso-highlight: white; mso-no-proof: yes"&gt;);&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class="MsoNormal"&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: #2b91af; line-height: 107%; mso-highlight: white; mso-no-proof: yes"&gt;Console&lt;/span&gt;&lt;span style="font-size: 9.5pt; font-family: consolas; background: white; color: black; line-height: 107%; mso-highlight: white; mso-no-proof: yes"&gt;.ReadKey();&lt;/span&gt;&lt;span style="mso-no-proof: yes"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;We support metrics for a variety of services with the monitoring SDK:&lt;/p&gt; &lt;table cellspacing="0" cellpadding="0" border="1"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Service&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Typical metrics&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Frequencies&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Cloud services&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;CPU, Network, Disk&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;5 min, 1 hr, 12 hrs&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Virtual machines&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;CPU, Network, Disk&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;5 min, 1 hr, 12 hrs&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Websites&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;Requests, Errors, Memory, Response time, Data out&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;1 min, 1 hr&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Mobile Services&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;API Calls, Data Out, SQL performance&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;1 hr&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;Requests, Success rate, End2End latency&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;1 min, 1 hr&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;Service Bus&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;Messages, Errors, Queue length, Requests&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;5 min&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;&lt;b&gt;HDInsight&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;Containers, Apps running&lt;/p&gt;&lt;/td&gt; &lt;td valign="top" width="312"&gt; &lt;p&gt;15 min&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;If you’d like to manage advanced autoscale settings that aren’t possible to do in the Portal, you can also do that via the SDK. For example, you can construct autoscale based on custom metrics – you can autoscale by anything that is returned from MetricDefinitions.  &lt;p&gt;All of the documentation on the SDK is available on &lt;a href="http://go.microsoft.com/fwlink/?LinkID=331678&amp;amp;clcid=0x409"&gt;MSDN&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;API Management: Support for Services REST API&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;We launched the Azure API Management service into preview in May of this year.&amp;nbsp; The API Management service enables&amp;nbsp; customers to quickly and securely publish APIs to partners, the public development community, and even internal developers.  &lt;p&gt;Today, I’m excited to announce the availability of the API Management REST API which opens up a large number of new scenarios. It can be used to manage APIs, products, subscriptions, users and groups in addition to accessing your API analytics. In fact, virtually any management operation available in the Management API Portal is now accessible programmatically - opening up a host of integration and automation scenarios, including directly monetizing an API with your commerce provider of choice, taking over user or subscription management, automating API deployments and more.  &lt;p&gt;We've even provided an additional SAS (Shared Access Signature) security option. An integrated experience in the publisher portal allows you to generate SAS tokens - so securely calling your API service couldn’t be easier. In just three easy steps:  &lt;ol&gt; &lt;li&gt;Enable the API on the System Settings page on the Publisher Portal  &lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=507409"&gt;Acquire&lt;/a&gt; a time-limited access token either manually or programmatically  &lt;li&gt;Start sending requests to the API, providing the token with every request&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_26.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_12.png" width="764" height="493"&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;See the REST API &lt;a href="http://go.microsoft.com/fwlink/?LinkId=507408"&gt;reference&lt;/a&gt; for full details.  &lt;h3&gt;&lt;u&gt;Delegation of user registration and product subscription&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;The new API Management REST API makes it easy to automate and integrate other processes with API management. Many customers integrating in this way already have a user account system and would prefer to use this existing resource, instead of the built-in functionality provided by the Developer Portal. This feature, called Delegation, enables your existing website or backend to own the user data, manage subscriptions and seamlessly integrate with API Management's dynamically generated API documentation.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_28.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/60d1c2bcce5c_1085A/image_thumb_13.png" width="766" height="364"&gt;&lt;/a&gt;  &lt;p&gt;It's easy to enable Delegation: in the Publisher Portal navigate to the Delegation section and enable Delegated Sign-in and Sign up, provide the endpoint URL and validation key and you're good to go. For more details, check out the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=507648"&gt;how-to guide&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.  &lt;p&gt;If you don’t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://www.windowsazure.com/"&gt;Microsoft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.  &lt;p&gt;Hope this helps,  &lt;p&gt;Scott  &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at:&lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+New+DocumentDB+NoSQL+Service%2c+New+Search+Service%2c+New+SQL+AlwaysOn+VM+Template%2c+and+more&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+New+DocumentDB+NoSQL+Service%2c+New+Search+Service%2c+New+SQL+AlwaysOn+VM+Template%2c+and+more&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-new-documentdb-nosql-service-new-search-service-new-sql-alwayson-vm-template-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Thu, 21 Aug 2014 20:39:51 Z</pubDate></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059288</guid><link>http://www.asp.net/mvc/overview/security/aspnet-mvc-5-app-with-sms-and-email-two-factor-authentication</link><title> ASP.NET MVC 5 app with SMS and email Two-Factor Authentication</title><description> This tutorial shows you how to build an ASP.NET MVC 5 web app with Two-Factor Authentication. You should complete Create a secure ASP.NET MVC 5 web app with log in, email confirmation and password...</description><pubDate>Tue, 19 Aug 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="false">72ffb066-0204-45d7-8de2-b5e12a38f665</guid><link>http://davidfowl.com/asp-net-vnext-alpha3/</link><title>ASP.NET vNext - Alpha3</title><description>&lt;p&gt;Today we released ASP.NET vNext alpha3, you can read more about it &lt;a href='http://blogs.msdn.com/b/webdev/archive/2014/08/18/asp-net-vnext-in-visual-studio-14-ctp-3.aspx' &gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I want to point out some of the big changes in the KRuntime that weren't mentioned in the blog post.&lt;/p&gt;

&lt;h4 id="nomoresourcefilesinthekprojfile"&gt;NO MORE SOURCE FILES IN THE KPROJ FILE&lt;/h4&gt;

&lt;p&gt;Ok this, &lt;em&gt;was&lt;/em&gt; mentioned in the above blog post but I had to mention it again. I'm looking foward to never having another project file merge conflict ever again... (yea right)&lt;/p&gt;

&lt;h4 id="supportforconfigurations"&gt;Support for configurations&lt;/h4&gt;

&lt;p&gt;We added support for adding custom configurations. Configurations are a bunch of names that allow you to specify compilation options. Debug and Release are configured by default with the most common compiler settings. See more here &lt;br /&gt;
&lt;a href='https://github.com/aspnet/KRuntime/issues/73' &gt;https://github.com/aspnet/KRuntime/issues/73&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="globalnugetrepositorynotthegac"&gt;Global NuGet repository (Not the GAC)&lt;/h4&gt;

&lt;p&gt;One of the biggest changes that was made this release was moving the solution local packages folder to &lt;code&gt;%userprofile%\.kpm&lt;/code&gt; or &lt;code&gt;$HOME\.kpm&lt;/code&gt; (on *nix). When you create a new project in Visual Stdudio 14 CTP3, take a look at your project folder. You'll notice that there is no more packages folder locally in the solution. With this change, there's only ever one copy of the package on your hard drive (that's been a source of pain in the past for some people).&lt;/p&gt;

&lt;p&gt;Since we were moving the packages folder, we also decided to tidy it up. We changed the folder layout from &lt;code&gt;{name}.{version}&lt;/code&gt; to &lt;code&gt;{name}/{version}&lt;/code&gt;. This made queries like "find all versions of a package" more efficient. It also cleans up the packages folder alot!&lt;/p&gt;

&lt;p&gt;Of course, if you want to change the packages location, you can specify that in the global.json file. You can read more about how this feature works &lt;a href='https://github.com/aspnet/KRuntime/issues/436' &gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="pluggableprojectcompilation"&gt;Pluggable project compilation&lt;/h4&gt;

&lt;p&gt;If you've been reading &lt;a href='http://alxandr.me/' &gt;Aleksander Heintz's&lt;/a&gt; blog posts about vNext (and I recommened them), you'll see he's added F# support to ASP.NET vNext using the new extensibility. He also has a great post about how he bootstrapped the F# compiler extensibility in F# &lt;a href='http://alxandr.me/2014/08/18/language-support-in-the-language-your-supporting-or-eating-your-own-dogfood/' &gt;http://alxandr.me/2014/08/18/language-support-in-the-language-your-supporting-or-eating-your-own-dogfood/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dylan Borg also added support for his custom .NET language &lt;a href='http://launchpad.net/dylandotnet' &gt;dylan dot net&lt;/a&gt; to ASP.NET vNext.&lt;/p&gt;

&lt;h4 id="buildrestoreevents"&gt;Build/Restore events&lt;/h4&gt;

&lt;p&gt;We added support for project.json to declare scripts that run at different times (for the full list, see &lt;a href='https://github.com/aspnet/Home/wiki/Project.json-file' #scripts'&gt;https://github.com/aspnet/Home/wiki/Project.json-file#scripts&lt;/a&gt;). This allows you to  write generic logic (bash/cmd files/run exes) that runs at specific points.&lt;/p&gt;

&lt;h4 id="specifyingthelanguageversion"&gt;Specifying the Language Version&lt;/h4&gt;

&lt;p&gt;Today the C# language version used by ASP.NET vNext projects is C# 6. If you want to use the &lt;code&gt;new&lt;/code&gt; Roslyn features in C# 6 you can set the following in project.json:&lt;/p&gt;

&lt;pre&gt;&lt;code class="JSON"&gt;{
  "compilationOptions": {
    "languageVersion": "experimental"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will let you use the slew of new features in the Roslyn compiler which you can find &lt;a href='https://roslyn.codeplex.com/wikipage?title=Language%20Feature%20Status&amp;amp;referringTitle=Documentation' &gt;here&lt;/a&gt;. (This  will be the default language version in the next alpha)&lt;/p&gt;

&lt;p&gt;There's tons of things that were listed in the &lt;a href='https://github.com/aspnet/Home/releases/tag/v1.0.0-alpha3' &gt;release notes&lt;/a&gt; that weren't mentioned in this post.  &lt;/p&gt;

&lt;p&gt;Looking forward, there are many other exciting features to come in the next alpha in the KRuntime. If you're interested in what we're working on, you can take a look at the issues here:&lt;/p&gt;

&lt;p&gt;&lt;a href='https://github.com/aspnet/KRuntime/milestones/1.0.0-alpha4' &gt;https://github.com/aspnet/KRuntime/milestones/1.0.0-alpha4&lt;/a&gt;&lt;/p&gt;</description><pubDate>Tue, 19 Aug 2014 05:15:24 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10550859</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/08/18/visual-studio-14-ctp-3-and-entity-framework.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>Visual Studio “14” CTP 3 and Entity Framework</title><description>&lt;p&gt;Today we’re providing a third CTP of the next version of Visual Studio, to gather your early feedback. For more information on this release, see &lt;a href="http://go.microsoft.com/fwlink/?LinkId=400850"&gt;Visual Studio “14” CTPs&lt;/a&gt; and the &lt;a href="http://blogs.msdn.com/b/visualstudio/archive/2014/08/18/visual-studio-14-ctp-3-released.aspx"&gt;Visual Studio Blog&lt;/a&gt;. This post covers the places that Entity Framework is included in the release and some limitations to be aware of when using it. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6.x Tools&lt;/h2&gt;  &lt;p&gt;There is a bug in the version of the designer included in this CTP that will cause the following error to appear when trying to use the EF Tools. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Method not found: 'Void Microsoft.VisualStudio.PlatformUI.DpiHelper.LogicalToDeviceUnits(System.Windows.Forms.ImageList ByRef, Microsoft.VisualStudio.PlatformUI.ImageScalingModel)'.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;To resolve this issue, you will need to install an &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=44008"&gt;updated version of the Entity Framework 6.1.1 tools for Visual Studio “14” CTP3&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6.x Runtime&lt;/h2&gt;  &lt;p&gt;The Entity Framework 6.1.1 runtime is included in a number of places in Visual Studio “14” CTP.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The runtime will be installed if you create a new model using the Entity Framework Tools in a project that does not already have the EF runtime installed.&lt;/li&gt;    &lt;li&gt;The runtime is pre-installed in new ASP.NET projects, depending on the project template you select. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 7&lt;/h2&gt;  &lt;p&gt;We recently blogged about our &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;plans for Entity Framework 7&lt;/a&gt;. Visual Studio “14” CTP 3 includes an early preview of ASP.NET vNext, which in turn includes a very early build of EF7. The EF7 runtime is installed in new ASP vNext projects that are created.&lt;/p&gt;  &lt;p&gt;As with previous CTPs of Visual Studio “14”, this build of EF7 implements basic functionality and there are a number of limitations with the features that are implemented. Please bear in mind that this preview is designed to give you an idea of what the experience will be like and you will quickly hit limitations if you deviate from the code from the default project template.&lt;/p&gt;  &lt;p&gt;For more information on what’s included in this build of EF7, see the &lt;a href="https://github.com/aspnet/EntityFramework/releases/tag/7.0.0-alpha3"&gt;release notes page on our GitHub project&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;We’re making good progress on the EF7 code base, but it is still in the early stages of development. If you want to experiment with a build we would recommend visiting our &lt;a href="https://github.com/aspnet/EntityFramework/wiki"&gt;GitHub wiki for information on using nightly builds&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10550859" width="1" height="1"&gt;</description><pubDate>Mon, 18 Aug 2014 17:01:04 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10550859</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/08/18/visual-studio-14-ctp-3-and-entity-framework.aspx#comments</comments></item><item><guid isPermaLink="false">http://madskristensen.net/post/prepare-webconfig-for-html5-and-css3</guid><link>http://feedproxy.google.com/~r/netSlave/~3/LJVomYliYsA/prepare-webconfig-for-html5-and-css3</link><title>Prepare web.config for HTML5 and CSS3</title><description>&lt;p&gt;HTML5 and CSS3 introduces some new file types that enables us to create even better websites. We are now able to embed video, audio and custom fonts natively to any web page. Some of these file types are relatively new and not supported by the IIS web server by default. It’s file types like .m4v, .webm and .woff.&lt;/p&gt;  &lt;p&gt;When a request is made to the IIS for these unsupported file types, we are met with the following error message:&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;HTTP Error 404.3 - Not Found&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The page you are requesting cannot be served because of the extension configuration. If the page is a script, add a handler. If the file should be downloaded, add a MIME map.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;The problem is that the IIS doesn’t know how to serve these new files unless we tell it how. This can be easily done in the web.config’s &amp;lt;system.webServer&amp;gt; section by adding the following snippet:&lt;/p&gt;  &lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;staticContent&lt;/span&gt;&lt;span class="kwrd"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.mp4&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;video/mp4&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.m4v&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;video/m4v&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.ogg&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;video/ogg&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.ogv&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;video/ogg&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.webm&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;video/webm&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.oga&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;audio/ogg&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.spx&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;audio/ogg&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.svg&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;image/svg+xml&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.svgz&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;image/svg+xml&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;remove&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.eot&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.eot&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;application/vnd.ms-fontobject&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.otf&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;font/otf&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;mimeMap&lt;/span&gt; &lt;span class="attr"&gt;fileExtension&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;.woff&amp;quot;&lt;/span&gt; &lt;span class="attr"&gt;mimeType&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;font/x-woff&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="kwrd"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="html"&gt;staticContent&lt;/span&gt;&lt;span class="kwrd"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;style type="text/css"&gt;.csharpcode, .csharpcode pre { font-size: small; color: black; font-family: consolas, "Courier New", courier, monospace; background-color: #ffffff; /*white-space: pre;*/ } .csharpcode pre { margin: 0em; } .csharpcode .rem { color: #008000; } .csharpcode .kwrd { color: #0000ff; } .csharpcode .str { color: #006080; } .csharpcode .op { color: #0000c0; } .csharpcode .preproc { color: #cc6633; } .csharpcode .asp { background-color: #ffff00; } .csharpcode .html { color: #800000; } .csharpcode .attr { color: #ff0000; } .csharpcode .alt { background-color: #f4f4f4; width: 100%; margin: 0em; } .csharpcode .lnum { color: #606060; }&lt;/style&gt;

&lt;p&gt;The above snippet includes support for most video, audio and font file types used by HTML5 and CSS3. &lt;/p&gt;</description><pubDate>Mon, 18 Aug 2014 09:23:32 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mads kristensen</dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/prepare-webconfig-for-html5-and-css3</feedburner:origLink></item><item><guid isPermaLink="false">00000000-0000-0000-0000000059124</guid><link>http://www.asp.net/mvc/overview/security/create-an-aspnet-mvc-5-web-app-with-email-confirmation-and-password-reset</link><title>Create a secure ASP.NET MVC 5 web app with log in, email confirmation and password reset</title><description> This tutorial shows you how to build an ASP.NET MVC 5 web app with email confirmation and password reset using the ASP.NET Identity membership system. You can download the completed application her...</description><pubDate>Fri, 15 Aug 2014 00:00:00 -0500</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/ASP-NET-vNext-with-Chris-Ross</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/ASP-NET-vNext-with-Chris-Ross</link><category>.NET</category><category>ASP.NET</category><title>ASP.NET vNext with Chris Ross</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Chris Ross from the ASP.NET team to talk about the vNext bits of ASP.NET. The next version of ASP.NET (&amp;quot;ASP.NET vNext&amp;quot;) has been redesigned from the ground up. The goal is to create a lean and composable .NET stack for building modern cloud-based apps. &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://asp.net/vnext"&gt;ASP.NET vNext&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/aspnet/home"&gt;ASP.NET on Github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/06/03/asp-net-vnext-in-visual-studio-14-ctp.aspx"&gt;ASP.NET vNext in Visual Studio &amp;quot;14&amp;quot; CTP&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385"&gt;INTRODUCING: The Future of .NET on the&amp;nbsp;Server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411"&gt;DEEP DIVE: The Future of .NET on the&amp;nbsp;Server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://vimeo.com/97501412"&gt;The Future of ASP.NET Part I&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://vimeo.com/97505678"&gt;The Future of ASP.NET Part II&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-mvc-music-store"&gt;MVC Music Store&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:e8633f03904849b7815aa37a012bf4d5"&gt;</description><pubDate>Wed, 13 Aug 2014 23:20:19 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss.mp4" type="video/mp4" length="59444157" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/ASP-NET-vNext-with-Chris-Ross</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Chris Ross from the ASP.NET team to talk about the vNext bits of ASP.NET. The next version of ASP.NET (&amp;quot;ASP.NET vNext&amp;quot;) has been redesigned from the ground up. The goal is to create a lean and composable .NET stack for building modern cloud-based apps.  Show Links ASP.NET vNextASP.NET on GithubASP.NET vNext in Visual Studio &amp;quot;14&amp;quot; CTPINTRODUCING: The Future of .NET on the ServerDEEP DIVE: The Future of .NET on the ServerThe Future of ASP.NET Part IThe Future of ASP.NET Part IIMVC Music Store</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2311</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss.mp3" expression="full" duration="2311" fileSize="36986562" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss.mp4" expression="full" duration="2311" fileSize="59444157" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss.webm" expression="full" duration="2311" fileSize="161578296" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_high.mp4" expression="full" duration="2311" fileSize="357740308" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0945/31789132-364e-4818-a7a3-4247b3c10945/ASPNETVNextChrisRoss_mid.mp4" expression="full" duration="2311" fileSize="225707755" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/ASP-NET-vNext-with-Chris-Ross/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://madskristensen.net/post/effects-of-gzipping-vs-minifying-html-files</guid><link>http://feedproxy.google.com/~r/netSlave/~3/dr4kNh-oUKA/effects-of-gzipping-vs-minifying-html-files</link><title>Effects of GZipping vs. minifying HTML files</title><description>&lt;p&gt;Last time we took a look at the performance impact of using &lt;a href="/post/performance-of-tabs-vs-spaces-in-html-files"&gt;tabs vs. spaces in HTML files&lt;/a&gt;. One question that arose was whether or not it’s worthwhile to minify HTML when also using GZip. Let’s run the experiment.&lt;/p&gt;  &lt;p&gt;I’ve collected a few real-world HTML files and done some minification and GZipping on them. Here’s the result:&lt;/p&gt;  &lt;table style="color: rgb(51, 51, 51);"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;th width="200"&gt;Website&lt;/th&gt;        &lt;th&gt;File size&lt;/th&gt;        &lt;th&gt;Minified&lt;/th&gt;        &lt;th&gt;Gzip&lt;/th&gt;        &lt;th&gt;GZip &amp;amp; minified&lt;/th&gt;        &lt;th&gt;Savings&lt;/th&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td&gt;amazon.com&lt;/td&gt;        &lt;td&gt;218,642&lt;/td&gt;        &lt;td&gt;197,032&lt;/td&gt;        &lt;td&gt;53,793&lt;/td&gt;        &lt;td&gt;49,008&lt;/td&gt;        &lt;td&gt;9%&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td&gt;cnn.com&lt;/td&gt;        &lt;td&gt;130,014&lt;/td&gt;        &lt;td&gt;121,534&lt;/td&gt;        &lt;td&gt;27,114&lt;/td&gt;        &lt;td&gt;25,392&lt;/td&gt;        &lt;td&gt;6%&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td&gt;twitter.com&lt;/td&gt;        &lt;td&gt;53,465&lt;/td&gt;        &lt;td&gt;46,608&lt;/td&gt;        &lt;td&gt;12,262&lt;/td&gt;        &lt;td&gt;11,416&lt;/td&gt;        &lt;td&gt;7%&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td&gt;xbox.com&lt;/td&gt;        &lt;td&gt;38,888&lt;/td&gt;        &lt;td&gt;24,139&lt;/td&gt;        &lt;td&gt;8,075&lt;/td&gt;        &lt;td&gt;6,795&lt;/td&gt;        &lt;td&gt;16%&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;These pages already do minification on various sections, but none of them minifies the whole document. If none of them used any minification, the savings would have been higher than the table shows.&lt;/p&gt;  &lt;p&gt;So, according to the results, minification will provide an additional 6-16% lower file size with GZip enabled. &lt;/p&gt;  &lt;p&gt;16% is a rather large saving on top of regular GZip, so the data suggests that we must use both GZip AND minification.&lt;/p&gt;  &lt;p&gt;Remember, this is a rather small experiment with only 4 real-world websites. It would be interesting to expand the experiment for more accurate statistics.&lt;/p&gt;  &lt;p&gt;For HTML minification in ASP.NET, I like to use &lt;a href="http://www.nuget.org/packages/WebMarkupMin.Core"&gt;WebMarkupMin&lt;/a&gt; or &lt;a href="http://www.nuget.org/packages/Meleze.Web"&gt;Meleze.Web&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Tue, 12 Aug 2014 08:19:57 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/effects-of-gzipping-vs-minifying-html-files</feedburner:origLink></item><item><guid isPermaLink="false">http://madskristensen.net/post/performance-of-tabs-vs-spaces-in-html-files</guid><link>http://feedproxy.google.com/~r/netSlave/~3/tRwS7pzWWZ4/performance-of-tabs-vs-spaces-in-html-files</link><title>Effect of tabs vs. spaces in HTML files</title><description>&lt;p&gt;Are you using tabs or spaces to indent your markup? Does it matter for performance which one you chose? Let’s run an experiment.&lt;/p&gt;  &lt;p&gt;Consider a page that generates a list of 50 items:&lt;/p&gt;  &lt;pre title="A sample list generated by Razor"&gt;&amp;lt;ul&amp;gt;
    @for (int i = 0; i &amp;lt; 50; i++)
    {
        &amp;lt;li&amp;gt;The count is @i&amp;lt;/li&amp;gt;
    }
&amp;lt;/ul&amp;gt;&lt;/pre&gt;

&lt;p&gt;The code generates a long list of &amp;lt;li&amp;gt; elements and keep their indentation using the editor’s settings for tabs, spaces and tab size. Default in many editors is spaces and a tab size of 4. &lt;/p&gt;

&lt;p&gt;With spaces it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img title="image" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="image" src="http://madskristensen.net/posts/files/c9f32569-897d-44f2-952e-01c98c639d56.png" width="249" height="148" /&gt;&lt;/p&gt;

&lt;p&gt;and with tabs it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img title="image" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" border="0" alt="image" src="http://madskristensen.net/posts/files/37b5bfff-35a6-404f-b6e9-c2ad54d71600.png" width="248" height="144" /&gt;&lt;/p&gt;

&lt;p&gt;It’s clear to see that the indentation takes up 4 characters when spaces are used and only a single character when using tabs. If we then compare the total file size of the two variations, here’s what we get:&lt;/p&gt;

&lt;table style="color: rgb(51, 51, 51);"&gt;&lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;

      &lt;th&gt;Tabs&lt;/th&gt;

      &lt;th&gt;Spaces&lt;/th&gt;

      &lt;th&gt;Saving&lt;/th&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td valign="top" width="153"&gt;Raw file size&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1403 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1703 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;300 bytes/18%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;Using tabs saves close to 18% of the file size over spaces.&lt;/p&gt;

&lt;p&gt;This is, however, not a true picture of a web page. All modern web servers use compression in form of GZip or Deflate before serving HTML to the browser. So let’s look at the numbers after GZip:&lt;/p&gt;

&lt;table style="color: rgb(51, 51, 51);"&gt;&lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;

      &lt;th&gt;Tabs&lt;/th&gt;

      &lt;th&gt;Spaces&lt;/th&gt;

      &lt;th&gt;Saving&lt;/th&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td valign="top" width="153"&gt;Raw file size&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1403 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1703 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;300 bytes/18%&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td valign="top" width="153"&gt;Raw file GZipped&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160;&amp;#160; 327 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160;&amp;#160; 332 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 5 bytes/1.5%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;When using GZipping, the saving from using tabs over spaces is just 1.5%. It’s still a saving and it counts. &lt;/p&gt;

&lt;p&gt;Yet again, this is not the complete story because some web developers make sure to minify the HTML by removing redundant whitespace, unneeded quotation marks etc. Normally this is done as a build step or at runtime.&lt;/p&gt;

&lt;p&gt;So let’s minify the HTML and see what results it produces:&lt;/p&gt;

&lt;table style="color: rgb(51, 51, 51);"&gt;&lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;

      &lt;th&gt;Tabs&lt;/th&gt;

      &lt;th&gt;Spaces&lt;/th&gt;

      &lt;th&gt;Saving&lt;/th&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td valign="top" width="183"&gt;Raw file size&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1403 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;1703 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;300 bytes/18%&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td valign="top" width="173"&gt;Raw file GZipped&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160; 327 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160; 332 bytes&lt;/td&gt;

      &lt;td valign="top" width="133"&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 5 bytes/1.5%&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;Raw file minified&lt;/td&gt;

      &lt;td&gt; 1199 bytes&lt;/td&gt;

      &lt;td&gt;1199 bytes&lt;/td&gt;

      &lt;td&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 0 bytes/0%&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;Minified &amp;amp; GZipped&lt;/td&gt;

      &lt;td&gt;&amp;#160; 312 bytes&lt;/td&gt;

      &lt;td&gt;&amp;#160; 312 bytes&lt;/td&gt;

      &lt;td&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 0 bytes/0%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;When minified, it doesn’t matter if tabs or spaces are used, since they are all stripped away. &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Depending on the capabilities of your server, build setup, runtime etc., here’s a little chart of what to do based on the above findings:&lt;/p&gt;

&lt;table style="color: rgb(51, 51, 51);"&gt;&lt;tbody&gt;
    &lt;tr&gt;
      &lt;th width="250"&gt;&lt;/th&gt;

      &lt;th&gt;Use tabs or spaces&lt;/th&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;I can minify&lt;/td&gt;

      &lt;td&gt;Doesn't matter at all&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;I can GZip but not minify&lt;/td&gt;

      &lt;td&gt;Doesn’t matter much (tabs gives small benefit)&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;I can neither GZip nor minify&lt;/td&gt;

      &lt;td&gt;Tabs&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;Keep in mind that this is a controlled experiment, so your mileage will vary. &lt;/p&gt;

&lt;p&gt;If you want to enforce your entire team to use either tabs or spaces, then take a look at &lt;a href="http://editorconfig.org/"&gt;.editorconfig&lt;/a&gt;. There’s a plugin available for practically all editors.&lt;/p&gt;

&lt;p&gt;In the next segment, we look at the &lt;a href="/post/effects-of-gzipping-vs-minifying-html-files"&gt;effects of GZipping vs. minifying HTML files&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 11 Aug 2014 20:48:33 -0700</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/performance-of-tabs-vs-spaces-in-html-files</feedburner:origLink></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,a71cf8b5-84bb-4294-bed9-f67865ecd866.aspx</guid><link>http://sedodream.com/2014/08/11/SlowCheetahIsGoingIntoMaintenanceMode.aspx</link><category>MSBuild</category><category>SlowCheetah</category><category>Visual Studio</category><title>SlowCheetah is going into maintenance mode</title><description>&lt;p&gt;
&lt;strong&gt;For the latest info here and for discussion please visit &lt;/strong&gt;&lt;a title="https://github.com/sayedihashimi/slow-cheetah/issues/158" href="https://github.com/sayedihashimi/slow-cheetah/issues/158"&gt;&lt;strong&gt;https://github.com/sayedihashimi/slow-cheetah/issues/158&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
I first developed SlowCheetah around VS2010 SP2 with the idea that I could at some
point transition this to the appropriate team(s) at Microsoft. Unfortunately I haven't
been able to do that, and the existence of this extension has actually worked against
that goal.
&lt;/p&gt;
&lt;p&gt;
I'm really happy that SlowCheetah has gotten the attention and success that it has,
but now it's time for me to move on. 
&lt;h5&gt;No support for SlowCheetah in VS "14"
&lt;/h5&gt;
&lt;p&gt;
I am not planning to update SlowCheetah for Visual Studio "14". If you would like
to see support for transforms in VS "14" I suggest you vote, &lt;strong&gt;&lt;em&gt;and comment&lt;/em&gt;&lt;/strong&gt;,
on the uesrvoice item at &lt;a href="http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/2043217-support-web-config-style-transforms-on-any-file-in"&gt;http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/2043217-support-web-config-style-transforms-on-any-file-in&lt;/a&gt;. 
&lt;h5&gt;No new features
&lt;/h5&gt;
&lt;p&gt;
I will not be adding any features to SlowCheetah myself. If anyone want's to add any
features I will try and help guide anyone who is interested. 
&lt;h5&gt;No fixes for regressions
&lt;/h5&gt;
&lt;p&gt;
If there are any scenarios that work in VS2013 RTM that do not work in future version
of Visual Studio then I will not be fixing them. 
&lt;p&gt;
I hope you all understand my situation here. I have spent countless hours working
on SlowCheetah and there is very little ROI for me so, I need to move on to focus
on other OSS projects that I'm involved in. 
&lt;p&gt;
Thanks for all the love. I still love SlowCheetah too and I'm sad to see there won't
be support for transform in VS "14" 
&lt;p&gt;
&amp;nbsp; 
&lt;p&gt;
Thanks, 
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Mon, 11 Aug 2014 17:44:36 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=a71cf8b5-84bb-4294-bed9-f67865ecd866</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,a71cf8b5-84bb-4294-bed9-f67865ecd866.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
          <strong>For the latest info here and for discussion please visit </strong>
          <a title="https://github.com/sayedihashimi/slow-cheetah/issues/158" href="https://github.com/sayedihashimi/slow-cheetah/issues/158">
            <strong>https://github.com/sayedihashimi/slow-cheetah/issues/158</strong>
          </a>
          <strong>.</strong>
        </p>
        <p>
 
</p>
        <p>
I first developed SlowCheetah around VS2010 SP2 with the idea that I could at some
point transition this to the appropriate team(s) at Microsoft. Unfortunately I haven't
been able to do that, and the existence of this extension has actually worked against
that goal.
</p>
        <p>
I'm really happy that SlowCheetah has gotten the attention and success that it has,
but now it's time for me to move on. 
</p>
        <h5>No support for SlowCheetah in VS "14"
</h5>
        <p>
I am not planning to update SlowCheetah for Visual Studio "14". If you would like
to see support for transforms in VS "14" I suggest you vote, <strong><em>and comment</em></strong>,
on the uesrvoice item at <a href="http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/2043217-support-web-config-style-transforms-on-any-file-in">http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/2043217-support-web-config-style-transforms-on-any-file-in</a>. 
</p>
        <h5>No new features
</h5>
        <p>
I will not be adding any features to SlowCheetah myself. If anyone want's to add any
features I will try and help guide anyone who is interested. 
</p>
        <h5>No fixes for regressions
</h5>
        <p>
If there are any scenarios that work in VS2013 RTM that do not work in future version
of Visual Studio then I will not be fixing them. 
</p>
        <p>
I hope you all understand my situation here. I have spent countless hours working
on SlowCheetah and there is very little ROI for me so, I need to move on to focus
on other OSS projects that I'm involved in. 
</p>
        <p>
Thanks for all the love. I still love SlowCheetah too and I'm sad to see there won't
be support for transform in VS "14" 
</p>
        <p>
  
</p>
        <p>
Thanks, 
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/IE-Double-Take-Status-and-DevChannel-on-Modern-ie</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/IE-Double-Take-Status-and-DevChannel-on-Modern-ie</link><category>HTML5</category><category>Internet Explorer</category><category>JavaScript</category><category>ecmascript</category><category>TypeScript</category><title>IE Double Take - Status and DevChannel on Modern.ie</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by &lt;a href="http://blogs.msdn.com/b/eternalcoding/"&gt;David Catuhe&lt;/a&gt; to talk about the &lt;a href="http://devchannel.modern.ie/"&gt;Internet Explorer DevChannel&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The Developer Channel provides a version of the browser for you to explore and test upcoming features and web standards support under development. Download this Channel to try out our new features before they are broadly available, and &lt;a href="https://connect.microsoft.com/IE/Feedback" target="_blank"&gt;share your feedback&lt;/a&gt; with us to improve the product and let us know the features you need.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://handjs.codeplex.com"&gt;HandJS&lt;/a&gt; - Provides support for &lt;a href="http://www.w3.org/TR/pointerevents/"&gt;Pointer Events&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.babylonjs.com"&gt;BabylonJS&lt;/a&gt; - WebGL Framework for building 3D experiences on the Web&lt;/li&gt;&lt;li&gt;&lt;a href="http://modern.ie"&gt;Modern.ie&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://status.modern.ie"&gt;Internet Explorer Status&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:83aff6675c1d47a49971a37a015d2cc1"&gt;</description><pubDate>Mon, 11 Aug 2014 19:23:42 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe.mp4" type="video/mp4" length="42762566" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/IE-Double-Take-Status-and-DevChannel-on-Modern-ie</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by David Catuhe to talk about the Internet Explorer DevChannel. The Developer Channel provides a version of the browser for you to explore and test upcoming features and web standards support under development. Download this Channel to try out our new features before they are broadly available, and share your feedback with us to improve the product and let us know the features you need. Show Links HandJS - Provides support for Pointer EventsBabylonJS - WebGL Framework for building 3D experiences on the WebModern.ieInternet Explorer Status</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1059</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe.mp3" expression="full" duration="1059" fileSize="16946365" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe.mp4" expression="full" duration="1059" fileSize="42762566" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe.webm" expression="full" duration="1059" fileSize="120651960" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_high.mp4" expression="full" duration="1059" fileSize="288596585" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4e96/59d1bcdf-4adc-48fb-8157-1d6c8ed24e96/IEDoubleTakeWithDavidCatuhe_mid.mp4" expression="full" duration="1059" fileSize="179008401" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/IE-Double-Take-Status-and-DevChannel-on-Modern-ie/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements</guid><link>http://weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements</link><category>azure</category><category>.net</category><category>SQL Server</category><category>Community News</category><category>Visual Studio</category><title>Azure: Virtual Machine, Machine Learning, IoT Event Ingestion, Mobile, SQL, Redis, SDK Improvements</title><description>&lt;p&gt;This past month we’ve released a number of great enhancements to Microsoft Azure.&amp;nbsp; These include:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Virtual Machines:&lt;/strong&gt; Preview Portal Support as well as SharePoint Farm Creation  &lt;li&gt;&lt;strong&gt;Machine Learning:&lt;/strong&gt; Public preview of the new Azure Machine Learning service  &lt;li&gt;&lt;strong&gt;Event Hub:&lt;/strong&gt; Public preview of new Azure Event Ingestion Service   &lt;li&gt;&lt;strong&gt;Mobile Services&lt;/strong&gt;: General Availability of .NET support, SignalR support &lt;li&gt;&lt;strong&gt;Notification Hubs:&lt;/strong&gt; Price Reductions and New Features &lt;li&gt;&lt;strong&gt;SQL Database:&lt;/strong&gt; New Geo-Restore, Geo-Replication and Auditing support &lt;li&gt;&lt;strong&gt;Redis Cache:&lt;/strong&gt; Larger Cache Sizes &lt;li&gt;&lt;strong&gt;Storage:&lt;/strong&gt; Support for Zone Redundant Storage &lt;li&gt;&lt;strong&gt;SDK:&lt;/strong&gt; Tons of great VS and SDK improvements&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:  &lt;h1&gt;&lt;u&gt;Virtual Machines: Support in the new Azure Preview portal&lt;/u&gt;&lt;/h1&gt; &lt;p&gt;We previewed the new Azure Preview Portal at the //Build conference earlier this year.&amp;nbsp; It brings together all of your Azure resources in a single management portal, and makes it easy to build cloud applications on the Azure platform using our new Azure Resource Manager (which enables you to manage multiple Azure resources as a single application).&amp;nbsp; The initial preview of the portal supported Web Sites, SQL Databases, Storage, and Visual Studio Online resources.  &lt;p&gt;This past month we’ve extended the preview portal to also now support Virtual Machines.&amp;nbsp; You can create standalone VMs using the portal, or group multiple VMs (and PaaS services) together into a Resource Group and manage them as a single logical entity. You can use the preview portal to get deep insights into billing and monitoring of these resources, and customize the portal to view the data however you want.&amp;nbsp; If you are an existing Azure customer you can start using the new portal today: &lt;a href="http://portal.azure.com"&gt;http://portal.azure.com&lt;/a&gt;.  &lt;p&gt;Below is a screen-shot of the new portal in action.&amp;nbsp; The service dashboard showing service/region health can be seen in the top-left of the portal, along with billing data about my subscriptions – both make it really easy for you to see the health and usage of your services in Azure.&amp;nbsp; In the screen-shot below I have a single VM running named “scottguvstest” – and clicking the tile for it displays a “blade” of additional details about it to the right – including integrated performance monitoring usage data:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_6.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_2.png" width="856" height="560"&gt;&lt;/a&gt;  &lt;p&gt;The initial “blade” for a VM provides a summary view of common metrics about it.&amp;nbsp; You can click any of the titles to get even more detailed information as well.&amp;nbsp; &lt;p&gt;For example, below I’ve clicked the CPU monitoring title in my VM, which brought up a Metric blade with even more details about CPU utilization over the last few days.&amp;nbsp; I’ve then clicked the “Add Alert” command within it to setup an automatic alert that will trigger (and send an email to me) any time the CPU of the VM goes above 95%:&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_14.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_6.png" width="900" height="620"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;In the screen-shot below, I’ve clicked the “Usage” tile within the VM blade, which displays details about the different VM sizes available – and what each VM size provides in terms of CPU, memory, disk IOPS and other capabilities.&amp;nbsp; Changing the size of the VM being used is as simple as clicking another of the pricing tiles within the portal – no redeployment of the VM required:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_12.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_5.png" width="900" height="634"&gt;&lt;/a&gt; &lt;/p&gt; &lt;h3&gt;&lt;u&gt;SharePoint Farm support via the Azure Gallery&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Built-into the Azure Preview Portal is a new “Azure Gallery” that provides an easy way to deploy a wide variety of VM images and online services.&amp;nbsp; VM images in the Azure Gallery include Windows Server, SQL Server, SharePoint Server, Ubuntu, Oracle, Baracuda images.&amp;nbsp; &lt;/p&gt; &lt;p&gt;Last month, we also enabled a new “SharePoint Server Farm” gallery item.&amp;nbsp; It enables you to easily configure and deploy a highly-available SharePoint Server Farm consisting of multiple VM images (databases, web servers, domain controllers, etc) in only minutes.&amp;nbsp; It provides the easiest way to create and configure SharePoint farms anywhere:&lt;/p&gt; &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_18.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_8.png" width="899" height="673"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;Over the next few months you’ll see even more items show up in the gallery – enabling a variety of additional new scenarios.&amp;nbsp; Try out the ones in the gallery today by visiting the new Azure portal: &lt;a href="http://portal.azure.com/"&gt;http://portal.azure.com/&lt;/a&gt; &lt;/p&gt; &lt;h2&gt;&lt;u&gt;Machine Learning: Preview of new Machine Learning Service for Azure&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Last month we delivered the public preview of our new &lt;a href="http://azure.microsoft.com/en-us/campaigns/machine-learning/?WT.mc_id=Blog_MachLearn_General_DI"&gt;Microsoft Azure Machine Learning&lt;/a&gt; service, a game changing service that enables your applications and systems to significantly improve your organization’s understanding across vast amounts of data. Azure Machine Learning (Azure ML) is a fully managed cloud service with no software to install, no hardware to manage, and no OS versions or development environments to grapple with. Armed with nothing but a browser, data scientists can log into Azure and start developing Machine Learning models from any location, and from any device. &lt;/p&gt; &lt;p&gt;ML Studio, an integrated development environment for Machine Learning, lets you set up experiments as simple data flow graphs, with an easy to use drag, drop and connect paradigm. Data scientists can use it to avoid programming a large number of common tasks, allowing them to focus on experiment design and iteration. A collection of best of breed algorithms developed by Microsoft Research comes built-in, as is support for custom &lt;a href="http://www.r-project.org/?WT.mc_id=Blog_MachLearn_General_DI"&gt;R code&lt;/a&gt; – and over 350 open source R packages can be used securely within Azure ML today.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_3.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb.png" width="624" height="352"&gt;&lt;/a&gt;  &lt;p&gt;Azure ML also makes it simple to create production deployments at scale in the cloud. Pre-trained Machine Learning models can be incorporated into a scoring workflow and, with a few clicks, a new cloud-hosted &lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer?WT.mc_id=Blog_MachLearn_General_DI"&gt;REST API&lt;/a&gt; can be created.  &lt;p&gt;Azure ML makes the incredible potential of Machine Learning accessible both to startups and large enterprises. Startups are now able to immediately apply machine learning to their applications. Larger enterprises are able to unleash the latent value in their big data to generate significantly more revenue and efficiencies. Above all, the speed of iteration and experimentation that is now possible will allow for rapid innovation and pave the way for intelligence in cloud-connected devices all around us.  &lt;h3&gt;&lt;u&gt;Getting Started&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Getting started with the Azure Machine Learning Service is easy.&amp;nbsp; Within the current Azure Portal simply choose New-&amp;gt;Data Services-&amp;gt;Machine Learning to create your first ML service today:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_7.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_1.png" width="624" height="470"&gt;&lt;/a&gt;  &lt;p&gt;Subscribe to the &lt;a href="http://blogs.technet.com/b/machinelearning/" target="_blank"&gt;Machine Learning Team Blog&lt;/a&gt; to learn more about the Azure Machine Learning service.&amp;nbsp; And visit our &lt;a href="http://azure.microsoft.com/en-us/documentation/services/machine-learning/" target="_blank"&gt;Azure Machine Learning documentation center&lt;/a&gt; to watch videos and explore tutorials on how to get started immediately.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Event Hub: Preview of new Azure Event Ingestion Service &lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Today’s connected world is defined by big data.&amp;nbsp; Big data may originate from connected cars and thermostats that produce telemetry data every few minutes, application performance counters that generate events every second or mobile apps that capture telemetry for every user’s individual action. The rapid proliferation of connected devices raises challenges due to the variety of platforms and protocols involved.&amp;nbsp; Connecting these disparate data sources while handling the scale of the aggregate stream is a significant challenge.&amp;nbsp; &lt;p&gt;I’m happy to announce the public preview of a significant new Azure service: Event Hub. &lt;strong&gt;Event Hub is a highly scalable pub-sub ingestor capable of elastic scale to handle millions of events per second from millions of connected devices so that you can process and analyze the massive amounts of data produced by your connected devices and applications&lt;/strong&gt;. With this new service, we now provide an easy way for you to provision capacity for ingesting events from a variety of sources, and over a variety of protocols in a secure manner. Event Hub supports a variety of partitioning modes to enable parallelism and scale in your downstream processing tier while preserving the order of events on a per device basis.  &lt;h3&gt;&lt;u&gt;Creating an Event Hub&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;You can easily create a new instance of Event Hub from the Azure Management Portal by clicking &lt;b&gt;New-&amp;gt;App Services-&amp;gt;Service Bus-&amp;gt;Event Hub&lt;/b&gt;. During the Preview, Event Hub service is available in a limited number of regions (East US 2, West Europe, Southeast Asia) and requires that you first create a new Service Bus Namespace:  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_3.png" width="640" height="292"&gt;&lt;/a&gt;  &lt;h3&gt;&lt;u&gt;Learn More&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;Try out the new Event Hub service and give us your feedback! For more information, visit the links below:  &lt;ul&gt; &lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=403957"&gt;Event Hub introduction&lt;/a&gt;  &lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=402829"&gt;Event Hub pricing details&lt;/a&gt;  &lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=402449"&gt;Event Hub code sample&lt;/a&gt;  &lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=403959"&gt;Service Bus Introduction&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;&lt;u&gt;Mobile Services: General Availability of .NET Support, SignalR and Offline Sync&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;A few months ago I announced a &lt;a href="http://weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more" target="_blank"&gt;preview of Mobile Services with .NET backend support&lt;/a&gt;. Today I am excited to announce the general availability of the Mobile Services .NET offering, which makes it an incredibly attractive choice for developers building mobile facing backend APIs using .NET.&amp;nbsp; Using Mobile Services you can now:  &lt;ul&gt; &lt;li&gt;Quickly add a fully featured backend to your &lt;strong&gt;iOS, Android, Windows, Windows Phone, HTML&lt;/strong&gt; or cross-platform &lt;strong&gt;Xamarin, Sencha, &lt;/strong&gt;or &lt;strong&gt;PhoneGap&lt;/strong&gt; app, leveraging ASP.NET Web API, Mobile Services, and corresponding Mobile Services client SDKs.  &lt;li&gt;Publish any existing &lt;strong&gt;ASP.NET Web API&lt;/strong&gt; to Azure and have Mobile Services monitor and manage your Web API controllers for you.  &lt;li&gt;Take advantage of built-in mobile capabilities like &lt;strong&gt;push notifications&lt;/strong&gt;&lt;b&gt;, &lt;strong&gt;real-time notifications with SignalR&lt;/strong&gt;&lt;/b&gt;, &lt;strong&gt;enterprise sign-on with Azure Active Directory&lt;/strong&gt;,&lt;strong&gt; social auth, offline data sync for occasionally connected scenarios&lt;em&gt;.&amp;nbsp; &lt;/em&gt;&lt;/strong&gt;You can also take full advantage of Web API features like&lt;strong&gt; OData controllers&lt;/strong&gt;, and 3rd party Web API-based frameworks like &lt;strong&gt;Breeze&lt;/strong&gt;&lt;em&gt;.&lt;/em&gt;  &lt;li&gt;Have your mobile app’s users login via &lt;strong&gt;Azure&lt;/strong&gt; &lt;strong&gt;Active Directory&lt;/strong&gt; and securely access enterprise assets such as &lt;strong&gt;SharePoint&lt;/strong&gt; and &lt;strong&gt;Office 365&lt;/strong&gt;. In addition, we've also enabled seamless &lt;strong&gt;connectivity to on-premises assets&lt;/strong&gt;, so you can reach databases and web services that are not exposed to the Internet and behind your company’s firewall.  &lt;li&gt;Build, test, and debug your Mobile Services .NET backend using &lt;strong&gt;Visual Studio&lt;/strong&gt; running locally on your machine or remotely in Azure.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can learn more about Mobile Services .NET from this &lt;a href="http://azure.microsoft.com/blog/topics/mobile/"&gt;blog post&lt;/a&gt;, and the Mobile Services &lt;a href="http://azure.microsoft.com/en-us/develop/mobile/"&gt;documentation center&lt;/a&gt;.  &lt;h3&gt;&lt;u&gt;Real-time Push with Mobile Services and SignalR&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;We recently released an update to our &lt;a href="http://azure.microsoft.com/mobile/"&gt;Mobile Services .NET backend&lt;/a&gt; support which enables you to use &lt;a href="http://www.asp.net/signalr"&gt;ASP.NET SignalR&lt;/a&gt; for real-time, bi-directional communications with your mobile applications. &lt;a href="http://www.asp.net/signalr"&gt;SignalR&lt;/a&gt; will use &lt;a href="http://en.wikipedia.org/wiki/Websockets"&gt;WebSockets&lt;/a&gt; under the covers when it's available, and fallback to other “techniques” (i.e. HTTP hacks) when it isn't. Regardless of the mode, your application code stays the same.  &lt;p&gt;The SignalR integration with &lt;a href="http://azure.microsoft.com/mobile"&gt;Azure Mobile Services&lt;/a&gt; includes:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Turnkey Web API Integration&lt;/strong&gt;&lt;em&gt;:&lt;/em&gt; Send messages to your connected SignalR applications from any Web API controller or scheduled job – we automatically give you access to SignalR Hubs from the &lt;strong&gt;ApiServices&lt;/strong&gt; context.  &lt;li&gt;&lt;strong&gt;Unified Authentication&lt;/strong&gt;: Protect your SignalR Hubs the same way you protect any of your Mobile Service Web API controllers using a simple &lt;strong&gt;AuthorizeLevel&lt;/strong&gt; attribute.  &lt;li&gt;&lt;strong&gt;Automatic Scale-out&lt;/strong&gt;&lt;em&gt;:&lt;/em&gt; When scaling out your Azure Mobile Service using multiple front-ends, we automatically &lt;a href="http://www.asp.net/signalr/overview/signalr-20/performance-and-scaling/scaleout-in-signalr"&gt;scale out SignalR using Azure Service Bus&lt;/a&gt; as the backplane for sync’ing between the front-ends. You don’t need to do anything to scale your SignalR Hubs.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Learn more about the SignalR capability in Mobile Services from Henrik’s &lt;a href="http://blogs.msdn.com/b/azuremobile/archive/2014/05/30/realtime-with-signalr-and-azure-mobile-net-backend.aspx?wa=wsignin1.0"&gt;blog&lt;/a&gt;.  &lt;h3&gt;&lt;u&gt;Mobile Services Offline Sync support for Xamarin and native iOS apps&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;I've &lt;a href="http://weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more"&gt;blogged&lt;/a&gt; earlier about the new &lt;b&gt;Offline Sync&lt;/b&gt; feature in Mobile Services, which provides a lightweight, cross-platform way for applications to work with data even when they are offline / disconnected from the network. At that time we released &lt;b&gt;Offline Sync&lt;/b&gt; support for &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/mobile-services-windows-phone-get-started-offline-data/"&gt;Windows Phone&lt;/a&gt; and &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data/"&gt;Windows Store&lt;/a&gt; apps.  &lt;p&gt;Today we are also introducing a preview of Mobile Services &lt;b&gt;Offline Sync&lt;/b&gt; for &lt;a href="http://aka.ms/offlineios"&gt;native iOS apps&lt;/a&gt;, as well as &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-ios-get-started-offline-data/"&gt;Xamarin.iOS&lt;/a&gt;, and &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-android-get-started-offline-data/"&gt;Xamarin.Android&lt;/a&gt;.  &lt;h3&gt;&lt;u&gt;Mobile Services Accelerators&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;I’m pleased to also introduce our new Mobile Services Accelerators, which are feature complete sample apps that demonstrate how to leverage the new enterprise features of the Mobile Services platform in an end-to-end scenario. We will have two accelerator apps for you today, available as a source code, as well as published in the app store.  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Field Engineer App&lt;/strong&gt; (&lt;a href="http://aka.ms/mobilefesource"&gt;Windows app source&lt;/a&gt;, &lt;a href="http://aka.ms/mobilefexamarin"&gt;Xamarin iOS app source&lt;/a&gt;, &lt;a href="http://aka.ms/mobilefieldengineer"&gt;Windows app in the store&lt;/a&gt;), an app for mobile workers needing to visit customer sites to fix an issue.  &lt;li&gt;&lt;strong&gt;Sales Assistant App&lt;/strong&gt; (&lt;a href="http://aka.ms/mobileSASource"&gt;Windows app source&lt;/a&gt;, &lt;a href="http://aka.ms/MobileSalesAssistant"&gt;Windows app in the store&lt;/a&gt;), an app for store managers and sales assistants that facilitates typical operations on the store floor, as well as reporting.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;These apps leverage the Mobile Services .NET backend support to handle authenticating employees with Azure Active Directory, store data securely, working with data offline, as well as get reminders via push notifications. We hope you will find these apps useful for your teams as a reference material. Stay tuned, as more accelerators are coming!  &lt;h2&gt;&lt;u&gt;Notification Hubs: Price reductions and new features&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;The Azure Notification Hubs service enables large scale cross platform push notifications from any server backend running on-premise or in the cloud.&amp;nbsp; It supports a variety of mobile devices including iOS, Android, Windows, Kindle Fire, and Nokia X. I am excited to announce several great updates to Azure Notification Hubs today:  &lt;ul&gt; &lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/pricing/details/notification-hubs/"&gt;&lt;strong&gt;Price reduction&lt;/strong&gt;&lt;/a&gt;. We are reducing the Notification Hubs price by up to 40x to accommodate a wider range of customer scenarios. With the new price (effective September 1st), &lt;u&gt;customers can send 1 million mobile push notifications per month for free&lt;/u&gt;, and pay $1 per additional million pushes using our new Basic tier. Visit the &lt;a href="http://azure.microsoft.com/en-us/pricing/details/notification-hubs/"&gt;Notification Hubs pricing page&lt;/a&gt; for more details.  &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn790626.aspx"&gt;&lt;strong&gt;Scheduled Push&lt;/strong&gt;&lt;/a&gt;. You can now use Notification Hubs to schedule individual and broadcast push notifications at certain times of the day. For example, you can use this feature to schedule announcements to be delivered in the morning to your customers.&amp;nbsp; We include support to enable this no matter which time zone your customers are in.  &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn790624.aspx"&gt;&lt;strong&gt;Bulk Registration management&lt;/strong&gt;&lt;/a&gt;. You can now send bulk jobs to create, update or export millions of mobile device registrations at a time with a single API call. This is useful if you are moving from an old push notification system to Notification Hubs, or to import user segments from a 3rd party analytics system.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can learn more about Azure Notification Hubs at the &lt;a href="http://azure.microsoft.com/en-us/documentation/services/notification-hubs/"&gt;developer center&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;SQL Databases: New Geo-Restore, Geo-Replication and Auditing support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;In April 2014, we first previewed our new SQL Database &lt;a href="http://azure.microsoft.com/blog/2014/04/24/azure-sql-database-introduces-new-service-tiers/"&gt;service tiers&lt;/a&gt;: Basic, Standard, and Premium. Today, I’m excited to announce the addition of more features to the preview:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Geo-restore:&lt;/b&gt; Designed for emergency data recovery when you need it most, geo-restore allows you to recover a database to any Azure region. Geo-restore uses geo-redundant Azure blob storage for automatic database backups and is available for Basic, Standard, and Premium databases in the &lt;a href="https://manage.windowsazure.com/"&gt;Windows Azure Management Portal&lt;/a&gt; and REST APIs.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Geo-replication:&lt;/b&gt; You can now configure your SQL Databases to use our built-in geo-replication support that enables you to setup an asynchronously replicated secondary SQL Database that can be failed over to in the event of disaster.&amp;nbsp; Geo-replication is available for Standard and Premium databases, and can be configured via the &lt;a href="https://manage.windowsazure.com/"&gt;Windows Azure Management portal&lt;/a&gt; and REST APIs. You can get more information about Azure SQL Database Business Continuity and geo-replication &lt;a href="http://msdn.microsoft.com/en-us/library/azure/hh852669.aspx"&gt;here&lt;/a&gt; and &lt;a href="http://azure.microsoft.com/blog/2014/07/12/spotlight-on-sql-database-active-geo-replication/"&gt;here&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Auditing:&lt;/b&gt; Our new auditing capability tracks and logs events that occur in your database and provides dashboard views and reports that enables you to get insights into these events. You can use auditing to streamline compliance-related activities, gain knowledge about what is happening in your database, and to identify trends, discrepancies and anomalies. Audit events are also written to an audit log which is stored in a user-designated Azure storage account.&amp;nbsp; Auditing is now available for all Basic, Standard, and Premium databases.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can learn even more about these new features &lt;a href="http://azure.microsoft.com/blog/2014/07/31/sql-database-introduces-geo-replication-enhancements-auditing-preview/" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Redis Cache: Large Cache Sizes, Six New Regions, Redis MaxMemory Policy Support&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;This past May, we launched the public preview of the new Azure Redis Cache service. This cache service gives you the ability to use a secure, dedicated &lt;a href="http://redis.io/"&gt;Redis cache&lt;/a&gt;, managed as a service by Microsoft. Using the new Cache service, you get to leverage the rich feature set and ecosystem provided by Redis, and reliable hosting and monitoring from Microsoft.  &lt;p&gt;Last month we updated the service with the following features:  &lt;ul&gt; &lt;li&gt;Support for larger cache sizes. We now support the following sizes: 250 MB, 1 GB, 2.5 GB, 6 GB, 13 GB and 26 GB.&amp;nbsp; &lt;li&gt;Support for six new Azure Regions. The full list of supported regions can be found in the &lt;a href="https://azure.microsoft.com/en-us/regions/#services"&gt;Azure Regions&lt;/a&gt; page.  &lt;li&gt;Support for configuring Redis MaxMemory policy &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;For more information on the Azure Redis Cache, check out this blog post: &lt;a href="http://azure.microsoft.com/blog/2014/06/04/lap-around-azure-redis-cache-preview/"&gt;Lap around Azure Redis Cache&lt;/a&gt;.  &lt;h2&gt;&lt;u&gt;Storage: Support for Zone Redundant Storage&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;We are happy to introduce a new Azure Storage account offering: Zone Redundant Storage (ZRS). &lt;p&gt;ZRS replicates your data across 2 to 3 facilities either within a single Azure region or across two Azure regions. If your storage account has ZRS enabled, then your data is durable even in the case where one of the datacenter facilities hosting your data suffers a catastrophic issue. ZRS is also more cost efficient than the existing Global Redundant Storage (GRS) offering we have today.  &lt;p&gt;You can create a ZRS storage account by simply choosing the ZRS option under the replication dropdown in the Azure Management Portal.  &lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_16.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/WindowsLiveWriter/5e946e0da6f2_12209/image_thumb_4.png" width="624" height="286"&gt;&lt;/a&gt;  &lt;p&gt;You can find more information on pricing for ZRS at &lt;a href="http://azure.microsoft.com/en-us/pricing/details/storage/"&gt;http://azure.microsoft.com/en-us/pricing/details/storage/&lt;/a&gt;. &lt;h2&gt;&lt;u&gt;Azure SDK: WebSites, Mobile, Virtual Machines, Storage and Cloud Service Enhancements&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;Earlier today we released the Update 3 release of Visual Studio 2013 as well as the new Azure SDK 2.4 release.&amp;nbsp; These updates contain a ton of great new features that make it even easier to build solutions in the cloud using Azure.&amp;nbsp; Today’s updates include:&lt;/p&gt; &lt;p&gt;&lt;u&gt;Visual Studio Update 3&lt;/u&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Websites&lt;/strong&gt;: Publish WebJobs from Console or Web projects.  &lt;li&gt;&lt;strong&gt;Mobile Services&lt;/strong&gt;: Create a Dev/Test environment in the cloud when creating Mobile Services projects. Use the Push Notification Wizard with .NET Mobile Services.  &lt;li&gt;&lt;strong&gt;Notification Hubs&lt;/strong&gt;: View and manage device registrations.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;u&gt;Azure SDK 2.4&lt;/u&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Virtual Machines&lt;/strong&gt;: Remote debug 32-bit Virtual Machines. Configure Virtual Machines, including installation &amp;amp; configuration of dynamic extensions (e.g. anti-malware, Puppet, Chef and custom script). Create Virtual Machine snapshots of the disk state. &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: View Storage activity logs for diagnostics. Provision Read-Access Geo-redundant Storage from Visual Studio.  &lt;li&gt;&lt;strong&gt;Cloud Services&lt;/strong&gt;: Emulator Express is the default option for new projects (Full Emulator is deprecated). Configure new networking capabilities in the service model.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;You can learn all about the updates from the Azure team’s &lt;a href="http://azure.microsoft.com/blog/2014/08/04/announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4/" target="_blank"&gt;SDK announcement blog post&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h2&gt; &lt;p&gt;This most recent release of Azure includes a bunch of great features that enable you to build even better cloud solutions.&amp;nbsp; If you don’t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://www.windowsazure.com/en-us/documentation/"&gt;Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it. &lt;p&gt;Hope this helps, &lt;p&gt;Scott &lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements&amp;g=https%3A//weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+Virtual+Machine%2c+Machine+Learning%2c+IoT+Event+Ingestion%2c+Mobile%2c+SQL%2c+Redis%2c+SDK+Improvements&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+Virtual+Machine%2c+Machine+Learning%2c+IoT+Event+Ingestion%2c+Mobile%2c+SQL%2c+Redis%2c+SDK+Improvements&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-virtual-machine-machine-learning-iot-event-ingestion-mobile-sql-redis-sdk-improvements&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Tue, 05 Aug 2014 06:28:56 Z</pubDate></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10547207</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/08/04/vs2013-update-3-and-entity-framework.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>VS2013 Update 3 and Entity Framework</title><description>&lt;p&gt;Today we are releasing Visual Studio 2013 Update 3. You can read the release announcements by &lt;a href="http://blogs.msdn.com/b/somasegar/archive/2014/07/18/visual-studio-2013-update-3.aspx"&gt;Soma&lt;/a&gt; and &lt;a href="http://blogs.msdn.com/b/bharry/archive/2014/08/04/vs-tfs-2013-3-update-3-released.aspx"&gt;Brian Harry&lt;/a&gt;. This update includes the Entity Framework 6.1.1 (EF6.1.1) runtime and tooling.&lt;/p&gt;  &lt;p&gt;EF6.1.1 was &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/06/20/ef-6-1-1-rtm-available.aspx"&gt;previously released out-of-band about 6 weeks ago&lt;/a&gt;, so you may have already installed the update to Entity Framework. If not, it will be automatically installed when you install Visual Studio 2013 Update 3.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;How do I get Update 3?&lt;/h2&gt;  &lt;p&gt;You can &lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=390465"&gt;download Visual Studio 2013 Update 3&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;Note that installing the update will not affect the version of the Entity Framework runtime included in existing projects. We recommend using NuGet to update to the latest version of the runtime. For detailed information on how to upgrade, see &lt;a href="http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog#Updating_a_Package"&gt;Updating a Package&lt;/a&gt; in the NuGet documentation. &lt;/p&gt;    &lt;div style="border-top: gray 4px solid; border-right: gray 4px solid; width: 550px; border-bottom: gray 4px solid; color: white; padding-bottom: 10px; padding-top: 10px; padding-left: 15px; border-left: gray 4px solid; background-color: black"&gt;PM&amp;gt; Update-Package EntityFramework&lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in EF6.1.1?&lt;/h2&gt;  &lt;p&gt;You can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=All&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%2b6.1.1&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;reasonClosed=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0"&gt;list of the fixes/changes included in EF6.1.1 on our CodePlex site&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following two fixes to issues that a number of people have encountered:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1653"&gt;Designer: Error opening EF5 edmx with decimal precision in EF6 designer&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2246"&gt;Default instance detection logic for LocalDB doesn't work with SQL Server 2014&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10547207" width="1" height="1"&gt;</description><pubDate>Mon, 04 Aug 2014 14:55:54 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10547207</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/08/04/vs2013-update-3-and-entity-framework.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure</guid><link>http://weblogs.asp.net/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure</link><category>Azure</category><category>.NET</category><category>ASP.NET</category><category>Talks</category><title>Free ebook: Building Cloud Apps with Microsoft Azure</title><description>&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-17-44-metablogapi/3617.9780735695658f_5F00_58F7BB03.jpg"&gt;&lt;img title="9780735695658f" style="margin: 0px 0px 0px 15px; display: inline" border="0" alt="9780735695658f" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-17-44-metablogapi/6862.9780735695658f_5F00_thumb_5F00_658A8981.jpg" width="263" align="right" height="320"&gt;&lt;/a&gt;  &lt;div&gt;Last week MS Press published a free ebook based on the Building Real-World Apps using Azure talks I gave at the NDC and TechEd conferences.&amp;nbsp; The talks + book walks through a patterns-based approach to building real world cloud solutions, and help make it easier to understand how to be successful with cloud development. &lt;/div&gt; &lt;h3&gt;&lt;u&gt;Videos of the Talks&lt;/u&gt;&lt;/h3&gt; &lt;div&gt;You can watch a video recording of the talks I gave here:&lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="http://mvapublicstorage.microsoft.com/college/MVA-0A-arrow-icon.png" width="10" height="10"&gt;&amp;nbsp;&lt;a href="http://channel9.msdn.com/Events/TechEd/Australia/2013/AZR324" target="_blank"&gt;Part 1: Building Real World Cloud Apps with Azure&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;img src="http://mvapublicstorage.microsoft.com/college/MVA-0A-arrow-icon.png" width="10" height="10"&gt;&amp;nbsp;&lt;a href="http://channel9.msdn.com/Events/TechEd/Australia/2013/AZR325" target="_blank"&gt;Part 2: Building Real World Cloud Apps with Azure&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;u&gt;eBook Downloads&lt;/u&gt;&lt;/h3&gt; &lt;p&gt;You can now download a &lt;strong&gt;completely free&lt;/strong&gt; PDF, Mobi or ePub version of the ebook based on the talks using the links below:&lt;/p&gt; &lt;p&gt;&lt;img src="http://mvapublicstorage.microsoft.com/college/MVA-0A-arrow-icon.png" width="10" height="10"&gt; &lt;b&gt;&lt;a href="http://aka.ms/CloudApps_PDF"&gt;Download the PDF&lt;/a&gt; (6.35 MB)&amp;nbsp;&amp;nbsp; &lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="http://mvapublicstorage.microsoft.com/college/MVA-0A-arrow-icon.png" width="10" height="10"&gt; &lt;b&gt;&lt;a href="http://aka.ms/CloudApps_EPUB"&gt;Download the EPUB file&lt;/a&gt; (12.3 MB)&amp;nbsp;&amp;nbsp; &lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="http://mvapublicstorage.microsoft.com/college/MVA-0A-arrow-icon.png" width="10" height="10"&gt; &lt;b&gt;&lt;a href="http://aka.ms/CloudApps_MOBI"&gt;Download the Mobi for Kindle file&lt;/a&gt; (22.7 MB) &lt;/b&gt;&lt;/p&gt; &lt;p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;Hope this helps,&lt;/p&gt; &lt;p&gt;Scott&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure&amp;g=https%3A//weblogs.asp.net/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Free+ebook%3a+Building+Cloud+Apps+with+Microsoft+Azure&amp;v3=ScottGu%27s%20Blog%20-%20Free+ebook%3a+Building+Cloud+Apps+with+Microsoft+Azure&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/free-ebook-building-cloud-apps-with-microsoft-azure&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Sun, 03 Aug 2014 02:20:19 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/A-Quick-Look-at-WinJS</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/A-Quick-Look-at-WinJS</link><category>HTML</category><category>JavaScript</category><category>MSBuild</category><category>TypeScript</category><title>A Quick Look at WinJS</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by&amp;nbsp;&lt;a href="http://blogs.msdn.com/b/obloch/"&gt;Olivier Bloch&lt;/a&gt; from MS Open Tech and&amp;nbsp;&lt;a href="https://github.com/spankyj"&gt;Josh Williams&lt;/a&gt; from the WinJS team to introduce us to WinJS. WinJS is a JavaScript library which provides a common set of controls, binding logic and other goodies for cross-platform, cross-device HTML based mobile or web applications.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://try.buildwinjs.com"&gt;Try WinJS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://github.com/codemonkeychris/angular-winjs"&gt;Angular-WinJS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014?sort=sequential&amp;amp;direction=desc&amp;amp;term=&amp;amp;tag=winjs#theSessions"&gt;WinJS Talks at Build2014&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/events/build/2014/2-540"&gt;Building a Converged Phone and PC App using HTML and JavaScript&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/winjs/winjs/pull/107"&gt;Should we use Typescript for Win.JS?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/borisyankov/DefinitelyTyped/tree/master/winjs"&gt;DefinitelyTyped Typescript Definition files for WinJS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://twitter.com/frothieststeak"&gt;Follow Josh Williams on Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/obloch"&gt;Follow Olivier Bloch on Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/syntaxc4"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:5d6124e297fb480c85e4a37001423e30"&gt;</description><pubDate>Mon, 28 Jul 2014 08:45:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch.mp4" type="video/mp4" length="111361510" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/A-Quick-Look-at-WinJS</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Olivier Bloch from MS Open Tech and Josh Williams from the WinJS team to introduce us to WinJS. WinJS is a JavaScript library which provides a common set of controls, binding logic and other goodies for cross-platform, cross-device HTML based mobile or web applications. Show Links Try WinJSAngular-WinJSWinJS Talks at Build2014Building a Converged Phone and PC App using HTML and JavaScriptTypescriptShould we use Typescript for Win.JS?DefinitelyTyped Typescript Definition files for WinJSFollow Josh Williams on TwitterFollow Olivier Bloch on TwitterFollow Cory Fowler on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1910</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch.mp3" expression="full" duration="1910" fileSize="30568594" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch.mp4" expression="full" duration="1910" fileSize="111361510" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch.webm" expression="full" duration="1910" fileSize="250988375" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5e96/01e08a28-a5ed-467a-8f5d-90b8e35c5e96/AQuickLookAtWinJSWithJoshWilliamsAndOlivierBloch_mid.mp4" expression="full" duration="1910" fileSize="420829721" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Bloch, Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Olivier Bloch, Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/A-Quick-Look-at-WinJS/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,25959653-16c0-4047-96d6-73984346624b.aspx</guid><link>http://sedodream.com/2014/07/22/StopCheckinginBinariesInsteadCreateSelfbootstrappingScripts.aspx</link><category>MSBuild</category><category>powershell</category><category>scripting</category><title>Stop checking-in binaries, instead create self-bootstrapping scripts</title><description>&lt;p&gt;
A few weeks ago &lt;a href="http://madskristensen.net/"&gt;Mads Kristensen&lt;/a&gt; and I created
a few site extensions for Azure Web Sites which the &lt;a href="http://www.siteextensions.net/packages/AzureImageOptimizer/"&gt;Azure
Image Optimizer&lt;/a&gt; and &lt;a href="http://www.siteextensions.net/packages/AzureMinifier/"&gt;Azure
Minifier&lt;/a&gt;. These extensions can be used to automatically optimize all images on
a site, and minify all .js/.css files respectively. These are shipped as nuget packages
in &lt;a href="http://nuget.org/"&gt;nuget.org&lt;/a&gt; as well as site extensions in &lt;a href="http://siteextensions.net"&gt;siteextensions.net&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After creating those utilities we also update the image optimizer to support being
called in on the command line via a .exe. We have not yet had a chance to update the
minifier to be callable directly but we have an &lt;a href="https://github.com/ligershark/AzureJobs/issues/26"&gt;open
issue on it&lt;/a&gt;. If you can help that would be great.
&lt;/p&gt;
&lt;p&gt;
The exe for the image optimizer that can be used from the command line can be found
in &lt;a href="https://www.nuget.org/packages/AzureImageOptimizer/"&gt;the nuget package&lt;/a&gt; as
well. You can also download it from &lt;a href="https://dl.dropboxusercontent.com/u/40134810/azurejobs/AzureImageOptimizer.0.0.11-beta-cmdline.zip"&gt;here&lt;/a&gt;,
but to get the latest version you nuget.org is the way to go.
&lt;/p&gt;
&lt;p&gt;
After releasing that exe I wanted an easy way to use it on a variety of machines,
and to make it simple for others to try it out. What I ended up with is what I’m calling
a “self-bootstrapping script” which you can find at &lt;a href="https://github.com/ligershark/AzureJobs/blob/master/ImageCompressor.Job/optimize-images.ps1"&gt;optimize-images.ps1&lt;/a&gt;.
Below you’ll see the entire contents of the script.
&lt;/p&gt;
&lt;pre class="brush: powershell;"&gt;[cmdletbinding()]
param(
    $folderToOptimize = ($pwd),

    $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),

    $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
)

&amp;lt;#
.SYNOPSIS
    If nuget is in the tools
    folder then it will be downloaded there.
#&amp;gt;
function Get-Nuget(){
    [cmdletbinding()]
    param(
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),

        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{
        $nugetDestPath = Join-Path -Path $toolsDir -ChildPath nuget.exe
        
        if(!(Test-Path $nugetDestPath)){
            'Downloading nuget.exe' | Write-Verbose
            (New-Object System.Net.WebClient).DownloadFile($nugetDownloadUrl, $nugetDestPath)

            # double check that is was written to disk
            if(!(Test-Path $nugetDestPath)){
                throw 'unable to download nuget'
            }
        }

        # return the path of the file
        $nugetDestPath
    }
}

&amp;lt;#
.SYNOPSIS
    If the image optimizer in the .ools
    folder then it will be downloaded there.
#&amp;gt;
function GetImageOptimizer(){
    [cmdletbinding()]
    param(
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),
        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{
        
        if(!(Test-Path $toolsDir)){
            New-Item $toolsDir -ItemType Directory | Out-Null
        }

        $imgOptimizer = (Get-ChildItem -Path $toolsDir -Include 'ImageCompressor.Job.exe' -Recurse)

        if(!$imgOptimizer){
            'Downloading image optimizer to the .tools folder' | Write-Verbose
            # nuget install AzureImageOptimizer -Prerelease -OutputDirectory C:\temp\nuget\out\
            $cmdArgs = @('install','AzureImageOptimizer','-Prerelease','-OutputDirectory',(Resolve-Path $toolsDir).ToString())

            'Calling nuget to install image optimzer with the following args. [{0}]' -f ($cmdArgs -join ' ') | Write-Verbose
            &amp;amp;(Get-Nuget -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl) $cmdArgs | Out-Null
        }

        $imgOptimizer = Get-ChildItem -Path $toolsDir -Include 'ImageCompressor.Job.exe' -Recurse | select -first 1
        if(!$imgOptimizer){ throw 'Image optimizer not found' }       

        $imgOptimizer
    }
}

function OptimizeImages(){
    [cmdletbinding()]
    param(
        [Parameter(Mandatory=$true,Position=0)]
        $folder,
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),
        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{        
        [string]$imgOptExe = (GetImageOptimizer -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl)

        [string]$folderToOptimize = (Resolve-path $folder)

        'Starting image optimizer on folder [{0}]' -f $folder | Write-Host
        # .\.tools\AzureImageOptimizer.0.0.10-beta\tools\ImageCompressor.Job.exe --folder M:\temp\images\opt\to-optimize
        $cmdArgs = @('--folder', $folderToOptimize)

        'Calling img optimizer with the following args [{0} {1}]' -f $imgOptExe, ($cmdArgs -join ' ') | Write-Host
        &amp;amp;$imgOptExe $cmdArgs

        'Images optimized' | Write-Host
    }
}

OptimizeImages -folder $folderToOptimize -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl
&lt;/pre&gt;
&lt;p&gt;
The script is setup to where you call functions like &lt;font size="3" face="Consolas"&gt;Get-NuGet&lt;/font&gt; and &lt;font size="3" face="con"&gt;GetImageOptimzer&lt;/font&gt; to
get the path to the .exe to call. If the .exe is not in the expected location, under
%localappdata% by default, it will be downloaded and then the path will be returned.
In the case of this script I use nuget.org as my primary distribution mechanism for
this so the script will first download nuget.exe and then use that to get the actual
binaries. WIth this approach, you can avoid checking in binaries and have scripts
which are still pretty concise.
&lt;/p&gt;
&lt;p&gt;
After creating optimize-images.ps1 I thought it would be really useful to have a similar
script to execute XDT transforms on xml files. So I created &lt;a href="https://gist.github.com/sayedihashimi/f1fdc4bfba74d398ec5b"&gt;transform-xml.ps1&lt;/a&gt;.
That script first downloads nuget.exe and then uses that to download the nuget packages
which are required to invoke XDT transforms. 
&lt;/p&gt;
&lt;p&gt;
A self-bootstrapping script doesn’t need to be a PowerShell script, you can apply
the same techniques to any scripting language. I’ve recently created an MSBuild script,
inspired by Get-Nuget above, which can be used in a similar way. You can find that
script in a &lt;a href="https://gist.github.com/sayedihashimi/64736331b273162a1e76"&gt;gist
here&lt;/a&gt;. It’s below as well. 
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetNuget"&amp;gt;

  &amp;lt;!--
  This is an MSBuild snippet that can be used to download nuget to the path
  in the property NuGetExePath property.
  
  Usage:
   1. Import this file or copy and paste this into your build script
   2. Call the GetNuGet target before you use nuget.exe from $(NuGetExePath)
  --&amp;gt;
  
  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;NuGetExePath Condition=" '$(NuGetExePath)'=='' "&amp;gt;$(localappdata)\LigerShark\AzureJobs\tools\nuget.exe&amp;lt;/NuGetExePath&amp;gt;
    &amp;lt;NuGetDownloadUrl Condition=" '$(NuGetDownloadUrl)'=='' "&amp;gt;http://nuget.org/nuget.exe&amp;lt;/NuGetDownloadUrl&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;
  
  &amp;lt;Target Name="GetNuget" Condition="!Exists('$(NuGetExePath)')"&amp;gt;
    &amp;lt;Message Text="Downloading nuget from [$(NuGetDownloadUrl)] to [$(NuGetExePath)]" Importance="high"/&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
      &amp;lt;_nugetexeitem Include="$(NuGetExePath)" /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
    &amp;lt;MakeDir Directories="@(_nugetexeitem-&amp;gt;'%(RootDir)%(Directory)')"/&amp;gt;
    &amp;lt;DownloadFile
        Address="$(NuGetDownloadUrl)"
        FileName="$(NuGetExePath)" /&amp;gt;    
  &amp;lt;/Target&amp;gt;

  &amp;lt;PropertyGroup Condition=" '$(ls-msbuildtasks-path)'=='' "&amp;gt;
    &amp;lt;ls-msbuildtasks-path&amp;gt;$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll&amp;lt;/ls-msbuildtasks-path&amp;gt;
    &amp;lt;ls-msbuildtasks-path Condition=" !Exists('$(ls-msbuildtasks-path)')"&amp;gt;$(MSBuildFrameworkToolsPath)\Microsoft.Build.Tasks.v4.0.dll&amp;lt;/ls-msbuildtasks-path&amp;gt;
    &amp;lt;ls-msbuildtasks-path Condition=" !Exists('$(ls-msbuildtasks-path)')"&amp;gt;$(windir)\Microsoft.NET\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll&amp;lt;/ls-msbuildtasks-path&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;
  
  &amp;lt;UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(ls-msbuildtasks-path)"&amp;gt;
    &amp;lt;!-- http://stackoverflow.com/a/12739168/105999 --&amp;gt;
    &amp;lt;ParameterGroup&amp;gt;
      &amp;lt;Address ParameterType="System.String" Required="true"/&amp;gt;
      &amp;lt;FileName ParameterType="System.String" Required="true" /&amp;gt;
    &amp;lt;/ParameterGroup&amp;gt;
    &amp;lt;Task&amp;gt;
      &amp;lt;Reference Include="System" /&amp;gt;
      &amp;lt;Code Type="Fragment" Language="cs"&amp;gt;
        &amp;lt;![CDATA[
            new System.Net.WebClient().DownloadFile(Address, FileName);
        ]]&amp;gt;
      &amp;lt;/Code&amp;gt;
    &amp;lt;/Task&amp;gt;
  &amp;lt;/UsingTask&amp;gt;
  
&amp;lt;/Project&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
This script has a single target, &lt;font size="3" face="Consolas"&gt;GetNuGet&lt;/font&gt;, which
you can call to download nuget.exe to the expected location. After that you can use
the path to nuget.exe from the NuGetExePath property. I’ve already removed nuget.ext
from &lt;a href="https://github.com/ligershark/side-waffle"&gt;SideWaffle&lt;/a&gt; and &lt;a href="https://github.com/ligershark/AzureJobs"&gt;AzureJobs&lt;/a&gt; repository
using this technique. It’s a great way to avoid checking in nuget.exe.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Tue, 22 Jul 2014 06:36:11 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=25959653-16c0-4047-96d6-73984346624b</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,25959653-16c0-4047-96d6-73984346624b.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
A few weeks ago <a href="http://madskristensen.net/">Mads Kristensen</a> and I created
a few site extensions for Azure Web Sites which the <a href="http://www.siteextensions.net/packages/AzureImageOptimizer/">Azure
Image Optimizer</a> and <a href="http://www.siteextensions.net/packages/AzureMinifier/">Azure
Minifier</a>. These extensions can be used to automatically optimize all images on
a site, and minify all .js/.css files respectively. These are shipped as nuget packages
in <a href="http://nuget.org/">nuget.org</a> as well as site extensions in <a href="http://siteextensions.net">siteextensions.net</a>.
</p>
        <p>
After creating those utilities we also update the image optimizer to support being
called in on the command line via a .exe. We have not yet had a chance to update the
minifier to be callable directly but we have an <a href="https://github.com/ligershark/AzureJobs/issues/26">open
issue on it</a>. If you can help that would be great.
</p>
        <p>
The exe for the image optimizer that can be used from the command line can be found
in <a href="https://www.nuget.org/packages/AzureImageOptimizer/">the nuget package</a> as
well. You can also download it from <a href="https://dl.dropboxusercontent.com/u/40134810/azurejobs/AzureImageOptimizer.0.0.11-beta-cmdline.zip">here</a>,
but to get the latest version you nuget.org is the way to go.
</p>
        <p>
After releasing that exe I wanted an easy way to use it on a variety of machines,
and to make it simple for others to try it out. What I ended up with is what I’m calling
a “self-bootstrapping script” which you can find at <a href="https://github.com/ligershark/AzureJobs/blob/master/ImageCompressor.Job/optimize-images.ps1">optimize-images.ps1</a>.
Below you’ll see the entire contents of the script.
</p>
        <pre class="brush: powershell;">[cmdletbinding()]
param(
    $folderToOptimize = ($pwd),

    $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),

    $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
)

&lt;#
.SYNOPSIS
    If nuget is in the tools
    folder then it will be downloaded there.
#&gt;
function Get-Nuget(){
    [cmdletbinding()]
    param(
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),

        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{
        $nugetDestPath = Join-Path -Path $toolsDir -ChildPath nuget.exe
        
        if(!(Test-Path $nugetDestPath)){
            'Downloading nuget.exe' | Write-Verbose
            (New-Object System.Net.WebClient).DownloadFile($nugetDownloadUrl, $nugetDestPath)

            # double check that is was written to disk
            if(!(Test-Path $nugetDestPath)){
                throw 'unable to download nuget'
            }
        }

        # return the path of the file
        $nugetDestPath
    }
}

&lt;#
.SYNOPSIS
    If the image optimizer in the .ools
    folder then it will be downloaded there.
#&gt;
function GetImageOptimizer(){
    [cmdletbinding()]
    param(
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),
        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{
        
        if(!(Test-Path $toolsDir)){
            New-Item $toolsDir -ItemType Directory | Out-Null
        }

        $imgOptimizer = (Get-ChildItem -Path $toolsDir -Include 'ImageCompressor.Job.exe' -Recurse)

        if(!$imgOptimizer){
            'Downloading image optimizer to the .tools folder' | Write-Verbose
            # nuget install AzureImageOptimizer -Prerelease -OutputDirectory C:\temp\nuget\out\
            $cmdArgs = @('install','AzureImageOptimizer','-Prerelease','-OutputDirectory',(Resolve-Path $toolsDir).ToString())

            'Calling nuget to install image optimzer with the following args. [{0}]' -f ($cmdArgs -join ' ') | Write-Verbose
            &amp;(Get-Nuget -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl) $cmdArgs | Out-Null
        }

        $imgOptimizer = Get-ChildItem -Path $toolsDir -Include 'ImageCompressor.Job.exe' -Recurse | select -first 1
        if(!$imgOptimizer){ throw 'Image optimizer not found' }       

        $imgOptimizer
    }
}

function OptimizeImages(){
    [cmdletbinding()]
    param(
        [Parameter(Mandatory=$true,Position=0)]
        $folder,
        $toolsDir = ("$env:LOCALAPPDATA\LigerShark\tools\"),
        $nugetDownloadUrl = 'http://nuget.org/nuget.exe'
    )
    process{        
        [string]$imgOptExe = (GetImageOptimizer -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl)

        [string]$folderToOptimize = (Resolve-path $folder)

        'Starting image optimizer on folder [{0}]' -f $folder | Write-Host
        # .\.tools\AzureImageOptimizer.0.0.10-beta\tools\ImageCompressor.Job.exe --folder M:\temp\images\opt\to-optimize
        $cmdArgs = @('--folder', $folderToOptimize)

        'Calling img optimizer with the following args [{0} {1}]' -f $imgOptExe, ($cmdArgs -join ' ') | Write-Host
        &amp;$imgOptExe $cmdArgs

        'Images optimized' | Write-Host
    }
}

OptimizeImages -folder $folderToOptimize -toolsDir $toolsDir -nugetDownloadUrl $nugetDownloadUrl
</pre>
        <p>
The script is setup to where you call functions like <font size="3" face="Consolas">Get-NuGet</font> and <font size="3" face="con">GetImageOptimzer</font> to
get the path to the .exe to call. If the .exe is not in the expected location, under
%localappdata% by default, it will be downloaded and then the path will be returned.
In the case of this script I use nuget.org as my primary distribution mechanism for
this so the script will first download nuget.exe and then use that to get the actual
binaries. WIth this approach, you can avoid checking in binaries and have scripts
which are still pretty concise.
</p>
        <p>
After creating optimize-images.ps1 I thought it would be really useful to have a similar
script to execute XDT transforms on xml files. So I created <a href="https://gist.github.com/sayedihashimi/f1fdc4bfba74d398ec5b">transform-xml.ps1</a>.
That script first downloads nuget.exe and then uses that to download the nuget packages
which are required to invoke XDT transforms. 
</p>
        <p>
A self-bootstrapping script doesn’t need to be a PowerShell script, you can apply
the same techniques to any scripting language. I’ve recently created an MSBuild script,
inspired by Get-Nuget above, which can be used in a similar way. You can find that
script in a <a href="https://gist.github.com/sayedihashimi/64736331b273162a1e76">gist
here</a>. It’s below as well. 
</p>
        <pre class="brush: xml;">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetNuget"&gt;

  &lt;!--
  This is an MSBuild snippet that can be used to download nuget to the path
  in the property NuGetExePath property.
  
  Usage:
   1. Import this file or copy and paste this into your build script
   2. Call the GetNuGet target before you use nuget.exe from $(NuGetExePath)
  --&gt;
  
  &lt;PropertyGroup&gt;
    &lt;NuGetExePath Condition=" '$(NuGetExePath)'=='' "&gt;$(localappdata)\LigerShark\AzureJobs\tools\nuget.exe&lt;/NuGetExePath&gt;
    &lt;NuGetDownloadUrl Condition=" '$(NuGetDownloadUrl)'=='' "&gt;http://nuget.org/nuget.exe&lt;/NuGetDownloadUrl&gt;
  &lt;/PropertyGroup&gt;
  
  &lt;Target Name="GetNuget" Condition="!Exists('$(NuGetExePath)')"&gt;
    &lt;Message Text="Downloading nuget from [$(NuGetDownloadUrl)] to [$(NuGetExePath)]" Importance="high"/&gt;
    &lt;ItemGroup&gt;
      &lt;_nugetexeitem Include="$(NuGetExePath)" /&gt;
    &lt;/ItemGroup&gt;
    &lt;MakeDir Directories="@(_nugetexeitem-&gt;'%(RootDir)%(Directory)')"/&gt;
    &lt;DownloadFile
        Address="$(NuGetDownloadUrl)"
        FileName="$(NuGetExePath)" /&gt;    
  &lt;/Target&gt;

  &lt;PropertyGroup Condition=" '$(ls-msbuildtasks-path)'=='' "&gt;
    &lt;ls-msbuildtasks-path&gt;$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll&lt;/ls-msbuildtasks-path&gt;
    &lt;ls-msbuildtasks-path Condition=" !Exists('$(ls-msbuildtasks-path)')"&gt;$(MSBuildFrameworkToolsPath)\Microsoft.Build.Tasks.v4.0.dll&lt;/ls-msbuildtasks-path&gt;
    &lt;ls-msbuildtasks-path Condition=" !Exists('$(ls-msbuildtasks-path)')"&gt;$(windir)\Microsoft.NET\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll&lt;/ls-msbuildtasks-path&gt;
  &lt;/PropertyGroup&gt;
  
  &lt;UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(ls-msbuildtasks-path)"&gt;
    &lt;!-- http://stackoverflow.com/a/12739168/105999 --&gt;
    &lt;ParameterGroup&gt;
      &lt;Address ParameterType="System.String" Required="true"/&gt;
      &lt;FileName ParameterType="System.String" Required="true" /&gt;
    &lt;/ParameterGroup&gt;
    &lt;Task&gt;
      &lt;Reference Include="System" /&gt;
      &lt;Code Type="Fragment" Language="cs"&gt;
        &lt;![CDATA[
            new System.Net.WebClient().DownloadFile(Address, FileName);
        ]]&gt;
      &lt;/Code&gt;
    &lt;/Task&gt;
  &lt;/UsingTask&gt;
  
&lt;/Project&gt;
</pre>
        <p>
This script has a single target, <font size="3" face="Consolas">GetNuGet</font>, which
you can call to download nuget.exe to the expected location. After that you can use
the path to nuget.exe from the NuGetExePath property. I’ve already removed nuget.ext
from <a href="https://github.com/ligershark/side-waffle">SideWaffle</a> and <a href="https://github.com/ligershark/AzureJobs">AzureJobs</a> repository
using this technique. It’s a great way to avoid checking in nuget.exe.
</p>
        <p>
 
</p>
        <p>
Thanks,<br></br>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/DhWYmnQ1EYw</guid><link>https://www.youtube.com/watch?v=DhWYmnQ1EYw&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio - NPM Intellisense</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=DhWYmnQ1EYw&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/DhWYmnQ1EYw/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=DhWYmnQ1EYw&amp;amp;feature=youtube_gdata"&gt;Visual Studio - NPM Intellisense&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;I&amp;#39;m working on a new Visual Studio extension that gives JSON editor support for NPM packages auto-completion.

Source code: https://github.com/madskristensen/JSON-Intellisense/&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
600&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;3
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;00:05&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 22 Jul 2014 06:10:21 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/DhWYmnQ1EYw" /><a10:updated>2014-08-20T03:45:28Z</a10:updated></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,545b31fa-3ef8-4c51-8347-7df101960b14.aspx</guid><link>http://sedodream.com/2014/07/19/IntroducingPSBuildAnImprovedInterfaceForMsbuildexeInPowerShell.aspx</link><category>MSBuild</category><category>psbuild</category><title>Introducing PSBuild – an improved interface for msbuild.exe in PowerShell</title><description>&lt;p&gt;
For the past few months I’ve been working on a project I’m calling &lt;a href="https://github.com/ligershark/psbuild"&gt;PSBuild&lt;/a&gt;.
It’s an open source project on GitHub which makes the experience of calling MSBuild
from PowerShell better. Getting started with PSBuild is really easy. You can install
it in one line.
&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;(new-object Net.WebClient).DownloadString("https://raw.github.com/ligershark/psbuild/master/src/GetPSBuild.ps1") | iex
&lt;/pre&gt;
&lt;p&gt;
You can find this info on the &lt;a href="https://github.com/ligershark/psbuild"&gt;project
home page&lt;/a&gt; as well. 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
When you install PSBuild one of the functions that you get is &lt;font face="Consolas"&gt;Invoke-MSBuild&lt;/font&gt;.
When you call &lt;font face="Consolas"&gt;Invoke-MSBuild&lt;/font&gt; it will end up calling msbuild.exe.
Some advantages of using Invoke-MSBuild are.
&lt;/p&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;li&gt;
&lt;p&gt;
It uses the latest version of msbuild.exe installed by default
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mult-core builds by default
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Writes a detailed and diagnostic log to %localappdata% by default. It’s easy to get
to those logs as well
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Good defaults for logging, including console logger
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You can pass more than one file to build
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Support for “Default Properties”
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Calling Invoke-MSBuild
&lt;/h3&gt;
&lt;p&gt;
A most basic usage of Invoke-MSBuild.
&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;Invoke-MSBuild .\App.csproj
&lt;/pre&gt;
&lt;p&gt;
This will build the project using the default targets. The call to msbuild.exe on
my computer is below.
&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;C:\Program Files (x86)\MSBuild\12.0\bin\amd64\msbuild.exe 
    .\App.csproj 
    /m 
    /clp:v=m
    /flp1:v=d;logfile=C:\Users\Sayed\AppData\Local\PSBuild\logs\App.csproj-log\msbuild.detailed.log 
    /flp2:v=diag;logfile=C:\Users\Sayed\AppData\Local\PSBuild\logs\App.csproj-log\msbuild.diagnostic.log&lt;/pre&gt;
&lt;p&gt;
From the call to msbuild.exe you can see that the /m is passed as well as a couple
file loggers in %localappdata%. We will get to the logs later. More on Invoke-MSBuild,
&lt;/p&gt;
&lt;p&gt;
To get a sense for how you can use Invoke-MSBuild take a look at the examples below.
&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;
# VisualStudioVersion and Configuration MSBuild properties have easy to use parameters
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -configuration Release

# How to pass properties
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -properties @{'DeployOnBuild'='true';'PublishProfile'='toazure';'Password'='mypwd-really'}

# How to build a single target
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -targets Clean

# How to bulid multiple targets
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -targets @('Clean','Build')
&lt;/pre&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;h3&gt;Getting log files
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;
When you call Invoke-MSBuild on a project or solution the output will look something
like the following.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_4.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_thumb_1.png" width="1124" height="102"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
Notice that line at the end. You can access your last log using the command.
&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;Open-PSBuildLog
&lt;/pre&gt;
&lt;p&gt;
This will open the detailed log of the previous build in the program that’s associated
with the .log extension. You can also use the &lt;strong&gt;&lt;font size="3" face="Consolas"&gt;Get-PSBuildLastLogs&lt;/font&gt;&lt;/strong&gt; function
to view the path for both log files written. If you want to view the folder where
the log files are written to you can execute &lt;strong&gt;&lt;font size="3" face="conso"&gt;start
(Get-PSBuildLogDirectory)&lt;/font&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;h3&gt;Helper functions
&lt;/h3&gt;
&lt;p&gt;
There are a couple of things that I’m constantly having to look up when I’m authoring
MSBuild files; Reserved property names and escape characters. PSBuild has a helper
function for each of these &lt;strong&gt;&lt;font size="3" face="Consolas"&gt;Get-MSBuildEscapeCharacters&lt;/font&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;font size="3" face="cons"&gt;Get-MSBuildReservedProperties&lt;/font&gt;&lt;/strong&gt;.
In the screenshot below you’ll see the result of executing each of these.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_6.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_thumb_2.png" width="1124" height="619"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;h3&gt;Default Properties
&lt;/h3&gt;
&lt;p&gt;
The Invoke-MSBuild cmdlet has a property &lt;strong&gt;&lt;font size="3" face="Consolas"&gt;–defaultProperties&lt;/font&gt;&lt;/strong&gt;.
You can pass in a hashtable just like the &lt;strong&gt;&lt;font size="3" face="Consolas"&gt;–properties&lt;/font&gt;&lt;/strong&gt; parameter.
These properties are applied as environment variables before the call to msbuild.exe
and then reverted afterwards. The effect here is that you can have a property value
which will be used if no other value for that property is specified in MSBuild.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
There is so much more to PSBuild. This is just the tip of the iceberg. Keep an eye
on the project page for more info. I’d love your help on this project. Please consider
contributing to the project &lt;a title="https://github.com/ligershark/psbuild" href="https://github.com/ligershark/psbuild"&gt;https://github.com/ligershark/psbuild&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com/"&gt;http://msbuildbook.com/&lt;/a&gt; |
@SayedIHashimi
&lt;/p&gt;</description><pubDate>Sat, 19 Jul 2014 05:20:43 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=545b31fa-3ef8-4c51-8347-7df101960b14</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,545b31fa-3ef8-4c51-8347-7df101960b14.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
For the past few months I’ve been working on a project I’m calling <a href="https://github.com/ligershark/psbuild">PSBuild</a>.
It’s an open source project on GitHub which makes the experience of calling MSBuild
from PowerShell better. Getting started with PSBuild is really easy. You can install
it in one line.
</p>
        <pre class="brush: bash;">(new-object Net.WebClient).DownloadString("https://raw.github.com/ligershark/psbuild/master/src/GetPSBuild.ps1") | iex
</pre>
        <p>
You can find this info on the <a href="https://github.com/ligershark/psbuild">project
home page</a> as well. 
</p>
        <p>
 
</p>
        <p>
When you install PSBuild one of the functions that you get is <font face="Consolas">Invoke-MSBuild</font>.
When you call <font face="Consolas">Invoke-MSBuild</font> it will end up calling msbuild.exe.
Some advantages of using Invoke-MSBuild are.
</p>
        <ul>
          <ul>
          </ul>
          <li>
            <p>
It uses the latest version of msbuild.exe installed by default
</p>
          </li>
          <li>
            <p>
Mult-core builds by default
</p>
          </li>
          <li>
            <p>
Writes a detailed and diagnostic log to %localappdata% by default. It’s easy to get
to those logs as well
</p>
          </li>
          <li>
            <p>
Good defaults for logging, including console logger
</p>
          </li>
          <li>
            <p>
You can pass more than one file to build
</p>
          </li>
          <li>
            <p>
Support for “Default Properties”
</p>
          </li>
        </ul>
        <h3>Calling Invoke-MSBuild
</h3>
        <p>
A most basic usage of Invoke-MSBuild.
</p>
        <pre class="brush: bash;">Invoke-MSBuild .\App.csproj
</pre>
        <p>
This will build the project using the default targets. The call to msbuild.exe on
my computer is below.
</p>
        <pre class="brush: bash;">C:\Program Files (x86)\MSBuild\12.0\bin\amd64\msbuild.exe 
    .\App.csproj 
    /m 
    /clp:v=m
    /flp1:v=d;logfile=C:\Users\Sayed\AppData\Local\PSBuild\logs\App.csproj-log\msbuild.detailed.log 
    /flp2:v=diag;logfile=C:\Users\Sayed\AppData\Local\PSBuild\logs\App.csproj-log\msbuild.diagnostic.log</pre>
        <p>
From the call to msbuild.exe you can see that the /m is passed as well as a couple
file loggers in %localappdata%. We will get to the logs later. More on Invoke-MSBuild,
</p>
        <p>
To get a sense for how you can use Invoke-MSBuild take a look at the examples below.
</p>
        <pre class="brush: bash;">
# VisualStudioVersion and Configuration MSBuild properties have easy to use parameters
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -configuration Release

# How to pass properties
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -properties @{'DeployOnBuild'='true';'PublishProfile'='toazure';'Password'='mypwd-really'}

# How to build a single target
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -targets Clean

# How to bulid multiple targets
Invoke-MSBuild .\App.csproj -visualStudioVersion 12.0 -targets @('Clean','Build')
</pre>
        <p>
 
</p>
        <h3>Getting log files
</h3>
        <p>
        </p>
        <p>
When you call Invoke-MSBuild on a project or solution the output will look something
like the following.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_4.png">
            <img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_thumb_1.png" width="1124" height="102"></img>
          </a>
        </p>
        <p>
Notice that line at the end. You can access your last log using the command.
</p>
        <pre class="brush: bash;">Open-PSBuildLog
</pre>
        <p>
This will open the detailed log of the previous build in the program that’s associated
with the .log extension. You can also use the <strong><font size="3" face="Consolas">Get-PSBuildLastLogs</font></strong> function
to view the path for both log files written. If you want to view the folder where
the log files are written to you can execute <strong><font size="3" face="conso">start
(Get-PSBuildLogDirectory)</font></strong>.
</p>
        <h3>Helper functions
</h3>
        <p>
There are a couple of things that I’m constantly having to look up when I’m authoring
MSBuild files; Reserved property names and escape characters. PSBuild has a helper
function for each of these <strong><font size="3" face="Consolas">Get-MSBuildEscapeCharacters</font></strong> and <strong><font size="3" face="cons">Get-MSBuildReservedProperties</font></strong>.
In the screenshot below you’ll see the result of executing each of these.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_6.png">
            <img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/IntroducingPSBuild_12DAC/image_thumb_2.png" width="1124" height="619"></img>
          </a>
        </p>
        <p>
 
</p>
        <h3>Default Properties
</h3>
        <p>
The Invoke-MSBuild cmdlet has a property <strong><font size="3" face="Consolas">–defaultProperties</font></strong>.
You can pass in a hashtable just like the <strong><font size="3" face="Consolas">–properties</font></strong> parameter.
These properties are applied as environment variables before the call to msbuild.exe
and then reverted afterwards. The effect here is that you can have a property value
which will be used if no other value for that property is specified in MSBuild.
</p>
        <p>
 
</p>
        <p>
There is so much more to PSBuild. This is just the tip of the iceberg. Keep an eye
on the project page for more info. I’d love your help on this project. Please consider
contributing to the project <a title="https://github.com/ligershark/psbuild" href="https://github.com/ligershark/psbuild">https://github.com/ligershark/psbuild</a>.
</p>
        <p>
 
</p>
        <p>
Thanks,<br></br>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com/">http://msbuildbook.com/</a> |
@SayedIHashimi
</p>
      </body></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-WebJobs-Tooling-for-Visual-Studio-with-Brady-Gaster</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-WebJobs-Tooling-for-Visual-Studio-with-Brady-Gaster</link><category>Azure</category><title>Introducing WebJobs Tooling for Visual Studio with Brady Gaster</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week &lt;a title="Brady's Blog" href="http://www.bradygaster.com/" target="_blank"&gt;Brady&lt;/a&gt;&amp;nbsp;&lt;a title="Brady on Twitter" href="https://twitter.com/bradygaster" target="_blank"&gt;Gaster&lt;/a&gt; rejoins WebCampsTV as a guest to show off the new tooling he's been working on with his team. The WebJobs tooling provides a rich experience for Web Site developers who want to leverage WebJobs in Azure Websites. Brady also introduces us to Swagger, a great API metadata format, and shows how easy it is to output Swagger JSON using the Swashbuckle NuGet package.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show&amp;nbsp;Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK"&gt;Making your jobs easier with the Azure WebJobs SDK&lt;/a&gt; (with Pranav Rastogi &amp;amp; Mike Stall)&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs"&gt;WebJobs SDK tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/ligershark/psbuild"&gt;PSBuild&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md" target="_blank"&gt;Swagger 1.2 spec&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Swashbuckle NuGet Packages (&lt;a href="https://www.nuget.org/packages/Swashbuckle/" target="_blank"&gt;Web API&lt;/a&gt; &amp;amp; &lt;a href="https://www.nuget.org/packages/Swashbuckle.Core/" target="_blank"&gt;Self-hosted Web API&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href="http://schemastore.org/" target="_blank"&gt;SchemaStore.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Surfacing-your-HTTP-APIs-with-API-Management"&gt;Surfacing your HTTP APIs with API Management&lt;/a&gt; (with Josh Twist)&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/events/dotnetConf/2014/Azure-Websites"&gt;Taking Your ASP.NET Apps to the Cloud with Microsoft Azure Websites&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/bradygaster"&gt;&lt;br&gt;Follow Brady Gaster on Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.twitter.com/SyntaxC4"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:29610cce6790427094f0a36b01191fab"&gt;</description><pubDate>Fri, 18 Jul 2014 20:11:13 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster.mp4" type="video/mp4" length="71412041" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-WebJobs-Tooling-for-Visual-Studio-with-Brady-Gaster</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Brady Gaster rejoins WebCampsTV as a guest to show off the new tooling he's been working on with his team. The WebJobs tooling provides a rich experience for Web Site developers who want to leverage WebJobs in Azure Websites. Brady also introduces us to Swagger, a great API metadata format, and shows how easy it is to output Swagger JSON using the Swashbuckle NuGet package. Show Links Making your jobs easier with the Azure WebJobs SDK (with Pranav Rastogi &amp;amp; Mike Stall)WebJobs SDK tutorialPSBuildSwagger 1.2 specSwashbuckle NuGet Packages (Web API &amp;amp; Self-hosted Web API)SchemaStore.orgSurfacing your HTTP APIs with API Management (with Josh Twist)Taking Your ASP.NET Apps to the Cloud with Microsoft Azure WebsitesFollow Brady Gaster on TwitterFollow Cory Fowler on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2561</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster.mp3" expression="full" duration="2561" fileSize="40986645" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster.mp4" expression="full" duration="2561" fileSize="71412041" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster.webm" expression="full" duration="2561" fileSize="194170631" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_high.mp4" expression="full" duration="2561" fileSize="409975867" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0253/7b2f0d93-b617-49b4-a98a-d9d3dbac0253/WebJobToolsWithBradyGaster_mid.mp4" expression="full" duration="2561" fileSize="267594323" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Brady Gaster</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Brady Gaster</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-WebJobs-Tooling-for-Visual-Studio-with-Brady-Gaster/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Surfacing-your-HTTP-APIs-with-API-Management</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Surfacing-your-HTTP-APIs-with-API-Management</link><category>API</category><category>Azure</category><title>Surfacing your HTTP APIs with API Management</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week we are joined by Josh Twist to talk about a relatively new service which is currently in Preview called API Management. API Management enables you to publish APIs to developers, partners and employees securely and at scale. As long as your API speaks HTTP, API Management can provide a rich feature set of services to help scale your&amp;nbsp;API no matter if you host&amp;nbsp;it on Azure, on-premises or another host.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/services/api-management/"&gt;API Management&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/services/api-management/"&gt;API Management Tutorials and Guides&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Wrapping-Up-the-Web-API-Tour-with-Yao-Huang-Lin"&gt;ASP.NET Web API Help Page&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://feedback.azure.com/forums/248703-api-management"&gt;API Management UserVoice&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/joshtwist"&gt;Follow Josh Twist on Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.twitter.com/AzureApiMgmt"&gt;Follow API Management on Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.twitter.com/SyntaxC4"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:eb8938a5fdab4d0382c1a363016a76d5"&gt;</description><pubDate>Thu, 10 Jul 2014 00:41:12 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist.mp4" type="video/mp4" length="73932702" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Surfacing-your-HTTP-APIs-with-API-Management</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week we are joined by Josh Twist to talk about a relatively new service which is currently in Preview called API Management. API Management enables you to publish APIs to developers, partners and employees securely and at scale. As long as your API speaks HTTP, API Management can provide a rich feature set of services to help scale your API no matter if you host it on Azure, on-premises or another host.  Show Links API ManagementAPI Management Tutorials and GuidesASP.NET Web API Help PageAPI Management UserVoiceFollow Josh Twist on TwitterFollow API Management on TwitterFollow Cory Fowler on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2104</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist.mp3" expression="full" duration="2104" fileSize="33681554" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist.mp4" expression="full" duration="2104" fileSize="73932702" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist.webm" expression="full" duration="2104" fileSize="180433950" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_high.mp4" expression="full" duration="2104" fileSize="423014557" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/fa8b/806a428d-3402-4f5c-b779-4220ea27fa8b/APIManagementWithJoshTwist_mid.mp4" expression="full" duration="2104" fileSize="277556074" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Josh Twist</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Josh Twist</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Surfacing-your-HTTP-APIs-with-API-Management/RSS</wfw:commentRss></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10540457</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/07/08/visual-studio-14-ctp-2-and-entity-framework.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/announcement/">announcement</category><title>Visual Studio “14” CTP 2 and Entity Framework</title><description>&lt;p&gt;Today we’re providing a second CTP of the next version of Visual Studio, to gather your early feedback. For more information on this release, see &lt;a href="http://go.microsoft.com/fwlink/?LinkId=400850"&gt;Visual Studio “14” CTPs&lt;/a&gt;. This post covers the places that Entity Framework is included in the release and some limitations to be aware of when using it. &lt;/p&gt;  &lt;p&gt;The EF related information for CTP 2 is very similar to what we provided for the first CTP of Visual Studio “14”. In the next preview of Visual Studio “14” we will be updating the EF6.x components to the latest version. The builds of EF7 will also become more usable in future previews as we round out the implementation of the core pieces of the EF7 code base.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework Tools&lt;/h2&gt;  &lt;p&gt;As with past versions of Visual Studio, the Entity Framework Tools are included in-the-box. These tools are capable of working with models created with all versions of Entity Framework up to and including EF6.x.&lt;/p&gt;  &lt;p&gt;Visual Studio “14” CTP includes an older build of the EF6 tooling which does not include the bug fixes and improvements from the 6.1.0 and 6.1.1 releases. The next preview of Visual Studio “14” will be updated to version 6.1.1 of the tooling. &lt;/p&gt;  &lt;p&gt;At this stage, there isn’t a version of the 6.1.0 or 6.1.1 tooling that can be installed on Visual Studio “14”.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6 Runtime&lt;/h2&gt;  &lt;p&gt;An older build of the EF6 runtime is included in a number of places in Visual Studio “14” CTP. This build does not include the bug fixes and improvements from the 6.1.0 and 6.1.1 releases.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The runtime will be installed if you create a new model using the Entity Framework Tools in a project that does not already have the EF runtime installed. &lt;/li&gt;    &lt;li&gt;The runtime is pre-installed in new ASP.NET projects, depending on the project template you select. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;We recommend using NuGet to update to the latest version of the runtime. At the time of writing &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/06/20/ef-6-1-1-rtm-available.aspx"&gt;6.1.1&lt;/a&gt; was the latest stable release. For detailed information on how to upgrade, see &lt;a href="http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog#Updating_a_Package"&gt;Updating a Package&lt;/a&gt; in the NuGet documentation.&lt;/p&gt;  &lt;div style="border-top: gray 4px solid; border-right: gray 4px solid; width: 550px; border-bottom: gray 4px solid; color: white; padding-bottom: 10px; padding-top: 10px; padding-left: 15px; border-left: gray 4px solid; background-color: black"&gt;PM&amp;gt; Update-Package EntityFramework&lt;/div&gt;  &lt;p&gt;The next preview of Visual Studio “14” will be updated to version 6.1.1 of the runtime. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 7&lt;/h2&gt;  &lt;p&gt;We recently blogged about our &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;plans for Entity Framework 7&lt;/a&gt;. Visual Studio “14” CTP 2 includes an early preview of ASP.NET vNext, which in turn includes a very early build of EF7. The EF7 runtime is installed in new ASP vNext projects that are created.&lt;/p&gt;  &lt;p&gt;As with the first CTP of Visual Studio “14”, this build of EF7 only implements very basic functionality and there are a number of limitations with the features that are implemented. Please bear in mind that this preview is designed to give you an idea of what the experience will be like and you will quickly hit limitations if you deviate from the code from the default project template.&lt;/p&gt;  &lt;p&gt;For more information on what’s included in this build of EF7, see the &lt;a href="https://github.com/aspnet/EntityFramework/releases/tag/7.0.0-alpha2"&gt;release notes page on our GitHub project&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;We’re making good progress on the EF7 code base, but it is still in the early stages of development. If you want to experiment with a build we would recommend visiting our &lt;a href="https://github.com/aspnet/EntityFramework/wiki"&gt;GitHub wiki for information on using nightly builds&lt;/a&gt;. &lt;strong&gt;Just remember that there are lots of things that don’t work… seriously… we warned you :)!&lt;/strong&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10540457" width="1" height="1"&gt;</description><pubDate>Tue, 08 Jul 2014 15:09:47 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10540457</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/07/08/visual-studio-14-ctp-2-and-entity-framework.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/tMj6Yrl1vbA</guid><link>https://www.youtube.com/watch?v=tMj6Yrl1vbA&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>html5up.net integration into Visual Studio</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=tMj6Yrl1vbA&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/tMj6Yrl1vbA/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=tMj6Yrl1vbA&amp;amp;feature=youtube_gdata"&gt;html5up.net integration into Visual Studio&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;html5up.net integration into Visual Studio&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
302&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;3
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:26&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Thu, 03 Jul 2014 00:18:49 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/tMj6Yrl1vbA" /><a10:updated>2014-08-18T13:58:56Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/web-camp-in-los-angeles-with-scott-hunter-july-9</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/huxqyEddi0I/web-camp-in-los-angeles-with-scott-hunter-july-9</link><title>Web Camp in Los Angeles with Scott Hunter - July 9</title><description>&lt;p&gt;&lt;img style="width: 100%;" src="https://mseventsww.microsoft.com/BannerImages/127c7dbf-2a1d-4f06-a024-661e0cb31138.jpg"&gt;&lt;/p&gt;&lt;p&gt;Web devs in southern California, we've got a great Web Camp event coming up next week in Los Angeles on July 9. We're wrapping up the Summer Web Camps tour I &lt;a href="https://weblogs.asp.net/jongalloway/upcoming-web-camps-summer-2014"&gt;announced a bit ago&lt;/a&gt; with a blowout! This is a free, one day event and we've got space available in the fancy new Microsoft Playa Vista office.&lt;/p&gt;&lt;p&gt;&lt;a class="btn btn-success" href="https://msevents.microsoft.com/cui/EventDetail.aspx?culture=en-US&amp;amp;EventID=1032590304"&gt;Register here &lt;span class="glyphicon glyphicon-circle-arrow-right"&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We're privileged to have &lt;/strong&gt;&lt;a href="https://twitter.com/coolcsh"&gt;&lt;strong&gt;Scott Hunter&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; as one of the speakers for this event. Scott's a group program manager at Microsoft for Azure and Tools, including ASP.NET , MVC, Web API, Web Pages, SignalR, Entity Framework, Web Tooling, NuGet and Azure Cache/SDK's.&lt;/strong&gt; You may have seen Scott's presentations with Scott Hanselman at TechEd and Build over the years. He's got a great perspective for the challenges web developers are solving today in ASP.NET as well as where ASP.NET is going in the future.&lt;/p&gt;

&lt;p&gt;We've also got presentations from local heroes &lt;a href="https://twitter.com/danielegan"&gt;Daniel Egan&lt;/a&gt; and &lt;a href="https://twitter.com/adamTuliper"&gt;Adam Tuliper&lt;/a&gt;!&lt;/p&gt;&lt;p&gt;If you're an ASP.NET developer in southern California, you don't want to miss this &lt;strong&gt;free&lt;/strong&gt; event. In addition to a full day of solid web dev content, this is a great chance to ask questions directly to the head of the ASP.NET PM team.&lt;/p&gt;&lt;p&gt;Here's the agenda for what we'll be covering:&lt;/p&gt;


&lt;table class="table table-striped table-bordered table-hover"&gt;
   &lt;tbody&gt;
      &lt;tr&gt;
         &lt;th&gt;
            Session
         &lt;/th&gt;
         &lt;th&gt;
            Speaker
         &lt;/th&gt;
         &lt;th&gt;
            Start
         &lt;/th&gt;
         &lt;th&gt;
            End
         &lt;/th&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Keynote
         &lt;/td&gt;
         &lt;td&gt;
            Scott Hunter
         &lt;/td&gt;
         &lt;td&gt;
            8:30
         &lt;/td&gt;
         &lt;td&gt;
            9:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Introduction to ASP.NET and Visual Studio 2013 Web Tooling
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            9:30
         &lt;/td&gt;
         &lt;td&gt;
            10:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Building Web Applications using the latest ASP.NET technologies
         &lt;/td&gt;
         &lt;td&gt;Adam Tuliper&lt;/td&gt;
         &lt;td&gt;
            10:15
         &lt;/td&gt;
         &lt;td&gt;
            11:00
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Break
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            11:00
         &lt;/td&gt;
         &lt;td&gt;
            11:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Building web front ends for both desktop and mobile using the latest web standards
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            11:15
         &lt;/td&gt;
         &lt;td&gt;
            12:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Lunch
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            12:15
         &lt;/td&gt;
         &lt;td&gt;
            1:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            API Services for both web and devices
         &lt;/td&gt;
         &lt;td&gt;
            Daniel Egan
         &lt;/td&gt;
         &lt;td&gt;
            1:15
         &lt;/td&gt;
         &lt;td&gt;
            2:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Running, improving and maintaining a site in the real world
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            2:15
         &lt;/td&gt;
         &lt;td&gt;
            3:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Break
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            3:15
         &lt;/td&gt;
         &lt;td&gt;
            3:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Real-time Communications with SignalR
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            3:30
         &lt;/td&gt;
         &lt;td&gt;
            4:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Wrap Up
         &lt;/td&gt;
         &lt;td&gt;
            Scott Hunter
         &lt;/td&gt;
         &lt;td&gt;
            4:30
         &lt;/td&gt;
         &lt;td&gt;
            5:00
         &lt;/td&gt;
      &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=huxqyEddi0I:PkYvef5Lo_8:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/huxqyEddi0I" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 01 Jul 2014 20:30:22 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/web-camp-in-los-angeles-with-scott-hunter-july-9</feedburner:origLink></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Z4TUlIbNVsU</guid><link>https://www.youtube.com/watch?v=Z4TUlIbNVsU&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Polymer/Web Components support in VS2013</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Z4TUlIbNVsU&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Z4TUlIbNVsU/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Z4TUlIbNVsU&amp;amp;feature=youtube_gdata"&gt;Polymer/Web Components support in VS2013&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
409&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;5
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;00:22&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 28 Jun 2014 21:24:54 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Z4TUlIbNVsU" /><a10:updated>2014-12-01T09:03:18Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Virtual-Private-Networks-in-Depth</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Virtual-Private-Networks-in-Depth</link><category>Azure</category><category>Networking</category><title>Virtual Private Networks in Depth</title><description>&lt;p&gt;Going beyond the basics, &lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; hears from Ashwin Palekar about how to lock down an Azure installation with multiple layers of firewalls and many layers of defense.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;Layers of Firewalls – Defense in depth&lt;/li&gt;&lt;li&gt;&amp;nbsp;Cloud Access Layer – Input Endpoints, Inbound IP ACLs&lt;/li&gt;&lt;li&gt;&amp;nbsp;Guest OS Firewall – Inbound/Outbound IP ACLs&lt;/li&gt;&lt;li&gt;&amp;nbsp;3&lt;sup&gt;rd&lt;/sup&gt; party Proxy Firewall Appliance – Inbound/Outbound IP ACLs (and more)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/best-practices-security/"&gt;Azure Security Guidance&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://azure.microsoft.com/blog/2014/01/07/new-windows-azure-network-security-whitepaper/"&gt;Azure Network Security Whitepaper&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://blogs.msdn.com/b/msftashwin/archive/2014/01/28/how-to-setup-and-protect-an-azure-application-with-a-barracuda-firewall-v3.aspx"&gt;How to Setup and Protect an Azure Application with a Barracuda Firewall&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://channel9.msdn.com/Shows/Azure-Friday/Setting-up-Virtual-Private-Networks-in-Azure"&gt;Setting up Virtual Private Networks in Azure&lt;/a&gt; (video)&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://channel9.msdn.com/Shows/Azure-Friday/Virtual-Private-Networks-and-Virtual-Machines"&gt;Virtual Private Networks and Virtual Machines&lt;/a&gt; (video)&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:75dd77b390d44d10bf3ea33e017f4098"&gt;</description><pubDate>Fri, 27 Jun 2014 00:50:03 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive.mp4" type="video/mp4" length="17384265" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Virtual-Private-Networks-in-Depth</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Going beyond the basics, Scott hears from Ashwin Palekar about how to lock down an Azure installation with multiple layers of firewalls and many layers of defense. Areas covered in this video:  Layers of Firewalls – Defense in depth Cloud Access Layer – Input Endpoints, Inbound IP ACLs Guest OS Firewall – Inbound/Outbound IP ACLs 3rd party Proxy Firewall Appliance – Inbound/Outbound IP ACLs (and more)Useful topics and links:  Azure Security Guidance Azure Network Security Whitepaper How to Setup and Protect an Azure Application with a Barracuda Firewall Setting up Virtual Private Networks in Azure (video) Virtual Private Networks and Virtual Machines (video)</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">486</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive.mp3" expression="full" duration="486" fileSize="7778744" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive.mp4" expression="full" duration="486" fileSize="17384265" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive.webm" expression="full" duration="486" fileSize="50831841" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_high.mp4" expression="full" duration="486" fileSize="144676728" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6c54/848b18c8-2901-4089-ba7d-24446ec46c54/azurevnetsdeepdive_mid.mp4" expression="full" duration="486" fileSize="84311711" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Virtual-Private-Networks-in-Depth/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/MVC-6</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/MVC-6</link><title>ASP.NET MVC 6 (now with integrated Web API!)</title><description>&lt;p&gt;ASP.NET MVC and ASP.NET Web API in ASP.NET vNext are becoming one singular framework: ASP.NET MVC 6. Join Daniel Roth as he shows how to create great ASP.NET web apps that serve both pages and services. First we'll see how to build OData v4 compliant services using ASP.NET Web API 2.2 and the new attribute routing features available in ASP.NET MVC 5.2. Then we'll take a look at how ASP.NET MVC and Web API are being combined into a single framework, ASP.NET MVC 6, for handling all of your Web UI and services. We'll learn how to use ASP.NET MVC and Web APIs in ASP.NET vNext to support connected applications for browsers, Windows Phone, Windows Store and more!&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:1768d9fa3eed48fbac19a345015d5085"&gt;</description><pubDate>Wed, 25 Jun 2014 18:27:27 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/MVC-6</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET MVC and ASP.NET Web API in ASP.NET vNext are becoming one singular framework: ASP.NET MVC 6. Join Daniel Roth as he shows how to create great ASP.NET web apps that serve both pages and services. First we'll see how to build OData v4 compliant services using ASP.NET Web API 2.2 and the new attribute routing features available in ASP.NET MVC 5.2. Then we'll take a look at how ASP.NET MVC and Web API are being combined into a single framework, ASP.NET MVC 6, for handling all of your Web UI and services. We'll learn how to use ASP.NET MVC and Web APIs in ASP.NET vNext to support connected applications for browsers, Windows Phone, Windows Store and more!   </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3521</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/SignalR</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/SignalR</link><title>SignalR</title><description>&lt;p&gt;&amp;nbsp;SignalR is one of the latest additions to the ASP.NET web stack. It provides real-time HTTP support for your web applications, but the good news is that SignalR is useful outside of a web browser, too. With a client API that's virtually identical in both the JavaScript and native .NET client implementations, developers only need to learn the SignalR abstraction itself to be able to write cross-platform real-time applications. This session will walk through the process of adding real-time functionality to your Windows 8 and Windows Phone 8 apps. We'll also take a look at the scale-out providers and OWIN hosting capabilities available in the latest release of SignalR.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:b254c82c6ec84ac0aa4ca345015fb6b0"&gt;</description><pubDate>Tue, 24 Jun 2014 18:23:10 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/SignalR</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> SignalR is one of the latest additions to the ASP.NET web stack. It provides real-time HTTP support for your web applications, but the good news is that SignalR is useful outside of a web browser, too. With a client API that's virtually identical in both the JavaScript and native .NET client implementations, developers only need to learn the SignalR abstraction itself to be able to write cross-platform real-time applications. This session will walk through the process of adding real-time functionality to your Windows 8 and Windows Phone 8 apps. We'll also take a look at the scale-out providers and OWIN hosting capabilities available in the latest release of SignalR. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1806</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/ASP-NET-vNext-101</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/ASP-NET-vNext-101</link><title>ASP.NET vNext 101</title><description>&lt;p&gt;&amp;nbsp;ASP.NET vNext is a lean and composable framework for building web and cloud applications. ASP.NET vNext is fully open source and available on GitHub. ASP.NET vNext is currently in preview, and in this talk Fowler and Edwards will put it all into Context. vNext apps can use a cloud-optimized subset of the .NET framework. This subset of the framework is about 11 megabytes in size compared to 200 megabytes for the full framework, and is composed of a collection of NuGet packages. What does that mean for compatibility? When would you choose vNext and when would you not? You don't have to use Visual Studio to develop ASP.NET vNext applications. You can develop and run vNext on platforms that Visual Studio doesn't run on. But Visual Studio provides the best development experience, and we'll cover ASP.NET vNext both inside and outside the IDE.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:31d2d09c035f48329b1ca34501600637"&gt;</description><pubDate>Tue, 24 Jun 2014 18:22:35 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/ASP-NET-vNext-101</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> ASP.NET vNext is a lean and composable framework for building web and cloud applications. ASP.NET vNext is fully open source and available on GitHub. ASP.NET vNext is currently in preview, and in this talk Fowler and Edwards will put it all into Context. vNext apps can use a cloud-optimized subset of the .NET framework. This subset of the framework is about 11 megabytes in size compared to 200 megabytes for the full framework, and is composed of a collection of NuGet packages. What does that mean for compatibility? When would you choose vNext and when would you not? You don't have to use Visual Studio to develop ASP.NET vNext applications. You can develop and run vNext on platforms that Visual Studio doesn't run on. But Visual Studio provides the best development experience, and we'll cover ASP.NET vNext both inside and outside the IDE. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1716</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, David Fowler</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/Web-Forms</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/Web-Forms</link><title>ASP.NET Web Forms</title><description>&lt;p&gt;Do you want to learn techniques to enhance your Web Forms development experience. See how you can improve your code's maintainability and testability and your site's performance. Leverage new features in ASP.NET Web Forms 4.5 to reduce the amount of UI &amp;quot;yuck&amp;quot; code and focus on your application's logic. We will look at some of the improvements to Web Forms such as support for EF 6, new Scaffolders and more features which you might not have heard of. We will see how to leverage all of the latest tools in Visual Studio like Browser Link and Web Essentials to make their coding experience simpler, shorter, and more enjoyable.&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:211dfad7f17a45e3a28ca345015ced38"&gt;</description><pubDate>Tue, 24 Jun 2014 18:29:09 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/Web-Forms</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Do you want to learn techniques to enhance your Web Forms development experience. See how you can improve your code's maintainability and testability and your site's performance. Leverage new features in ASP.NET Web Forms 4.5 to reduce the amount of UI &amp;quot;yuck&amp;quot; code and focus on your application's logic. We will look at some of the improvements to Web Forms such as support for EF 6, new Scaffolders and more features which you might not have heard of. We will see how to leverage all of the latest tools in Visual Studio like Browser Link and Web Essentials to make their coding experience simpler, shorter, and more enjoyable.   </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1658</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/Deployment</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/Deployment</link><title>ASP.NET Publishing Explained</title><description>&lt;p&gt;&amp;nbsp;The Visual Studio publishing experience for ASP.NET projects has been refined over the past few years. In this talk we will go into detail covering all the different techniques to publish your asp.net apps. We will start in Visual Studio, and quickly move to the command line and continuous integration servers. Sayed will you how you can improve your publish process to target multiple environments and how to automate publishing from a CI server. We will also take a look at some of the unique publish workflows that Azure Web Sites supports.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:0cc5b95409c44734bae6a345015ea769"&gt;</description><pubDate>Tue, 24 Jun 2014 18:24:42 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/Deployment</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> The Visual Studio publishing experience for ASP.NET projects has been refined over the past few years. In this talk we will go into detail covering all the different techniques to publish your asp.net apps. We will start in Visual Studio, and quickly move to the command line and continuous integration servers. Sayed will you how you can improve your publish process to target multiple environments and how to automate publishing from a CI server. We will also take a look at some of the unique publish workflows that Azure Web Sites supports. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3521</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/dotnetConf/2014/State-of-ASP-NET</guid><link>http://channel9.msdn.com/Events/dotnetConf/2014/State-of-ASP-NET</link><title>ASP.NET Today and Tomorrow (Keynote)</title><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;It's been an amazing decade for ASP.NET. Today in 2014, most all of ASP.NET is open source, developed in the open, and accepting community contributions. One ASP.NET and VS 2013 added some amazing new tooling enhancements for HTML5, CSS3 and JavaScript. VS2013.3 is coming soon with even more innovations as we march towards ASP.NET vNext. Join Scott Hunter as he shows you how it works together. What's available on ASP.NET today, and where is ASP.NET headed tomorrow, and what do you need to know to best support the code you've written and the code you will write. We'll also talk about the rise of the cloud and how it changes the way we write large systems. All this, plus a lot of open source, and deploying to Azure.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:4378a0a961994f779160a345015c957f"&gt;</description><pubDate>Tue, 24 Jun 2014 18:32:44 Z</pubDate><comments>http://channel9.msdn.com/Events/dotnetConf/2014/State-of-ASP-NET</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">  It's been an amazing decade for ASP.NET. Today in 2014, most all of ASP.NET is open source, developed in the open, and accepting community contributions. One ASP.NET and VS 2013 added some amazing new tooling enhancements for HTML5, CSS3 and JavaScript. VS2013.3 is coming soon with even more innovations as we march towards ASP.NET vNext. Join Scott Hunter as he shows you how it works together. What's available on ASP.NET today, and where is ASP.NET headed tomorrow, and what do you need to know to best support the code you've written and the code you will write. We'll also talk about the rise of the cloud and how it changes the way we write large systems. All this, plus a lot of open source, and deploying to Azure. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1858</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="false">http://madskristensen.net/post/important-update-to-web-essentials-2013</guid><link>http://feedproxy.google.com/~r/netSlave/~3/Fccq4k4lYgo/important-update-to-web-essentials-2013</link><title>Important update to Web Essentials 2013</title><description>&lt;h2&gt;tl;dr&lt;/h2&gt;  &lt;p&gt;You need to update Web Essentials 2013 to version 2.2. If not, Visual Studio will crash. &lt;a href="http://vswebessentials.com/webessentials2013.vsix"&gt;Download now&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;Before Visual Studio 2013 Update 3&lt;/h2&gt;  &lt;p&gt;The upcoming release of Visual Studio Update 3 has API changes in some of the components that Web Essentials is extending. Those changes are not compatible with the current version of Web Essentials and will cause VS to crash after upgrading to Update 3. To be fair, those APIs were never public to begin with, so I was taking a chance when I was using them in Web Essentials. &lt;/p&gt;  &lt;p&gt;If you are currently using Web Essentials 2.1 for Visual Studio Update 2, you should see this dialog show up the next time you open Visual Studio. &lt;/p&gt;  &lt;p&gt;&lt;img title="Web Essentials update notification" style="margin-right: auto; margin-left: auto; display: block;" alt="Web Essentials update notification" src="http://madskristensen.net/posts/files/ae620188-94d8-4e97-a39b-3cbffd8aab1d.png" width="468" height="172" /&gt;&lt;/p&gt;  &lt;p&gt;This is the first time this notification feature has been used after introducing it in Web Essentials 2.1. Good thing we did.&lt;/p&gt;  &lt;p&gt;It’s important that you install this update immediately. You don’t have to restart Visual Studio – it’s enough that you just install the update. If not, you might forget to do it before you install Visual Studio Update 3. So go do it now.&lt;/p&gt;  &lt;p&gt;It turns out to be good timing, since we have added some cool new features in version 2.2. Here’s a list of a few of them:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://pbs.twimg.com/media/Bo_1yFyCQAAfypP.jpg"&gt;Peek Definition&lt;/a&gt; (alt+F12) for classes and IDs&lt;/li&gt;    &lt;li&gt;&lt;a href="http://css-tricks.com/autoprefixer/"&gt;AutoPrefixer&lt;/a&gt; for LESS/Sass&lt;/li&gt;    &lt;li&gt;Integration to the &lt;a href="http://schemastore.org"&gt;JSON schema store&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://youtu.be/RlRmatn69xw"&gt;Browser Link powered CSS media query Intellisense&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;This is unfortunately the price we have to pay to be on the cutting edge. Lesson learned and we’ll do our best to make sure this doesn’t happen again. It’s not a guarantee since Web Essentials will continue to use APIs that are unsupported by Microsoft. That’s the only way we can add all those cutting edge features.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://vswebessentials.com/webessentials2013.vsix"&gt;Download Web Essentials 2.2&lt;/a&gt;&lt;/p&gt;</description><pubDate>Sat, 21 Jun 2014 06:55:31 -0700</pubDate><enclosure url="http://vswebessentials.com/webessentials2013.vsix" type="application/octed-stream" length="9243273" /><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/"></dc:creator><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://madskristensen.net/post/important-update-to-web-essentials-2013</feedburner:origLink></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10536126</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/06/20/ef-6-1-1-rtm-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF 6.1.1 RTM Available</title><description>&lt;p&gt;Today we are pleased to announce the availability of EF6.1.1. This patch release includes a number of high priority bug fixes and some contributions from our community.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;What&amp;rsquo;s in EF6.1.1?&lt;/h2&gt;
&lt;p&gt;You can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=All&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%2b6.1.1&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;reasonClosed=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0"&gt;list of the fixes/changes included in EF6.1.1 on our CodePlex site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In particular, we&amp;rsquo;d like to call out the following two fixes to issues that a number of people have encountered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1653"&gt;Designer: Error opening EF5 edmx with decimal precision in EF6 designer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2246"&gt;Default instance detection logic for LocalDB doesn't work with SQL Server 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Where do I get EF6.1.1?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest version of Entity Framework runtime.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and Visual Studio 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=40762"&gt;available on the Microsoft Download Center&lt;/a&gt;. You only need to install the tooling if you want to create models using the EF Designer, or generate a Code First model from an existing database.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Thank you to our contributors&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/BrandonDahler"&gt;BrandonDahler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/ErikSchierboom"&gt;ErikSchierboom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/Halo_Four"&gt;Halo_Four&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael Adelson&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/nikmd23"&gt;nikmd23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/UnaiZorrilla"&gt;UnaiZorrilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/zgabi"&gt;zgabi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt;
&lt;h2&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;p&gt;In addition to working on the next major version of EF (Entity Framework 7), we&amp;rsquo;re also working on another update to EF6. This update to EF6 is tentatively slated to be another patch release (EF6.1.2) and we are working a series of bug fixes and accepting pull requests.&lt;/p&gt;
&lt;p&gt;If you want to learn more about our plans for EF7, see our recent &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;EF7 - New Platforms, New Data Stores&lt;/a&gt; post.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10536126" width="1" height="1"&gt;</description><pubDate>Fri, 20 Jun 2014 18:52:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">22</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10536126</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/06/20/ef-6-1-1-rtm-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Setting-up-Virtual-Private-Networks-in-Azure</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Setting-up-Virtual-Private-Networks-in-Azure</link><category>Azure</category><category>Networking</category><category>Virtual Machines</category><title>Setting up Virtual Private Networks in Azure</title><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; learns how to setup a Virtual Private Network within Azure to keep Virtual Machines off the public network completely.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Keeping data, network, and infrastructure separate&lt;/li&gt;&lt;li&gt;Isolating Virtual Private Networks&lt;/li&gt;&lt;li&gt;Cloud Access Layer&lt;/li&gt;&lt;li&gt;Running intranet applications in a secure way&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/01/07/new-windows-azure-network-security-whitepaper/"&gt;New Windows Azure Network Security Whitepaper&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/best-practices-security/"&gt;Azure Security Guidance&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:1a46a82897d54002a6d7a33e017eb390"&gt;</description><pubDate>Fri, 20 Jun 2014 01:44:53 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets.mp4" type="video/mp4" length="18536522" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Setting-up-Virtual-Private-Networks-in-Azure</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott learns how to setup a Virtual Private Network within Azure to keep Virtual Machines off the public network completely. Areas covered in this video: Keeping data, network, and infrastructure separateIsolating Virtual Private NetworksCloud Access LayerRunning intranet applications in a secure wayUseful topics and links: New Windows Azure Network Security Whitepaper Azure Security Guidance</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">537</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets.mp3" expression="full" duration="537" fileSize="8604653" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets.mp4" expression="full" duration="537" fileSize="18536522" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets.webm" expression="full" duration="537" fileSize="55467604" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_high.mp4" expression="full" duration="537" fileSize="154389548" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/4409/27ca5610-9eb9-4e24-9953-9e7390e34409/azurevnets_mid.mp4" expression="full" duration="537" fileSize="89707695" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Setting-up-Virtual-Private-Networks-in-Azure/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/x57-DPMVUno</guid><link>https://www.youtube.com/watch?v=x57-DPMVUno&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Image Optimizer Site Extension</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=x57-DPMVUno&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/x57-DPMVUno/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=x57-DPMVUno&amp;amp;feature=youtube_gdata"&gt;Image Optimizer Site Extension&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;How to optimize images on any Azure Website without any code changes.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
271&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;5
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:12&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Fri, 20 Jun 2014 00:30:57 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/x57-DPMVUno" /><a10:updated>2014-08-22T19:02:33Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/scripting-net-project-migration-to-automatic-nuget-package-restore</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/cJak-fSGGlU/scripting-net-project-migration-to-automatic-nuget-package-restore</link><category>NuGet</category><title>Scripting .NET project migration to Automatic NuGet Package Restore</title><description>&lt;h2&gt;Background on NuGet Package Restore and Automatic Package Restore&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages"&gt;NuGet Package Restore&lt;/a&gt; allows you to reference NuGet packages in your project without shipping them with your source code or committing them to source control. The general idea is that the packages are restored - that is, downloaded and installed - into your project when it is build. This offers a number of benefits, including better interaction with source control and smaller code distributions.&lt;/p&gt;
&lt;p&gt;NuGet Package Restore was originally implemented using an MSBuild task, so whenever you ran a build in Visual Studio the build step would handle the package restore before continuing with the next steps in the build process. This worked, but had a few downsides. For one, it required MSBuild to work, which conflicts with cross-platform development, build servers, etc. Another issue is that it required a separate .nuget directory be added to your Visual Studio solution, including a copy of NuGet.exe and a targets file.&lt;/p&gt;&lt;p&gt;&lt;a title="NuGet MSBuild directory" href="http://www.flickr.com/photos/36836555@N00/14275675599/"&gt;&lt;img alt="NuGet MSBuild directory" src="http://farm4.static.flickr.com/3881/14275675599_1cc70a79a0_b.jpg" border="0"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Migrating Automatic Package Restore&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://docs.nuget.org/docs/reference/package-restore#Automatic_Package_Restore_in_Visual_Studio"&gt;NuGet 2.7 (and later) added support for Automatic NuGet Package Restore without requiring MSBuild&lt;/a&gt;. For new projects, this all just automatically works. However, if you had an older project for which you'd manually configured NuGet Package Restore, there is &lt;a href="http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore#If_you_are_not_using_TFS"&gt;a manual process to be followed&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;ol&gt;
&lt;li&gt;Remove the .nuget folder from your solution. Make sure the folder itself is also removed from the solution workspace. 
&lt;li&gt;Edit each project file (e.g., .csproj, .vbproj) in the solution and remove any references to the NuGet.targets file. To do so, search for Nuget.targets and remove the entire &amp;lt;Import Project&amp;gt; line where it is referenced. &lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;p&gt;This is really easy - it just takes seconds to do on one project. However, if you've got a lot of projects, it's painful busywork. I was making some updates on the &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=36393"&gt;Web Camps Training Kit&lt;/a&gt; which has a lot of projects (several demos and hands on labs, each with begin and end state solutions). I wanted a recursive script that dug through all the subfolders and fixed up my projects for me automatically. I asked around on Twitter and heard about &lt;a href="http://geekswithblogs.net/terje/archive/2014/06/11/converting-projects-to-use-automatic-nuget-restore.aspx"&gt;IFix, from Terje Sandstrom&lt;/a&gt;. It's a nice solution that handles this problem, but I wanted a recursive script, and if I was going to automate IFix with a recursive script I might as well just write a script that handled everything.&lt;/p&gt;
&lt;h2&gt;Enough Talk, Show Me The Script&lt;/h2&gt;
&lt;p class="alert alert-warning"&gt;&lt;strong&gt;Warning!&lt;/strong&gt; This script edits all projects and deletes all .nuget and packages directories recursively for the specified path. That means if you ran it from C:\ it would modify every project on your C drive. Obviously, be careful about the current directory and make sure your affected projects are under source control.&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jongalloway/969ca4d2c351c5a37949.js"&gt;&lt;/script&gt;&lt;/p&gt;&lt;noscript&gt;&lt;pre class="brush: ps; auto-links: false;"&gt;#this automates the steps found here: http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore
#yes, you could code golf this to about 6 characters if you wanted to

$find= @'
&amp;lt;Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" /&amp;gt;
'@

foreach ($f in Get-ChildItem -Recurse -Path ".\" -Filter *.csproj | sort-object)
{
    $text = Get-Content $f.FullName -Raw
    $text.Replace($find, "") | set-content $f.FullName
}

Get-ChildItem .\ -include .nuget,packages -Recurse | foreach ($_) { remove-item $_.fullname -Force -Recurse }&lt;/pre&gt;&lt;/noscript&gt;
&lt;p&gt;Here's what it does:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recursively search for .csproj files in a path 
&lt;li&gt;Remove the MSBuild target for NuGet package restore 
&lt;li&gt;Recurse through the directory structure, removing .nuget and packages directories &lt;/li&gt;&lt;/ol&gt;
&lt;h2&gt;A few admissions / excuses&lt;/h2&gt;
&lt;p&gt;Yes, it could be more terse. Get-ChildItem could be gci, Set-Content could be sc, all the switches could use the single letter equivalents. I used to be embarrassed posting verbose PowerShell, but I've decided that this is a lot easier to read and there's no real point to minifying PowerShell.&lt;/p&gt;
&lt;p&gt;Yes, this is just doing a simple string replace. I looked at doing things the XML way (XPath or DOM manipulations) or using regular expressions, but decided that I want this to be completely explicit. I don't want to match any lines unless they're exactly matching what was written by Visual Studio when I enabled package restore. Because of that, I only want an exact string match. I think that this is a little faster since it's just a string replace, but I didn't test that and don't really care if it isn't.&lt;/p&gt;
&lt;p&gt;Yes, this leaves a blank line in the .csproj file. That makes no difference in the way Visual Studio handles it and it was easier than worrying about it.&lt;/p&gt;
&lt;p&gt;Yes, that $find declaration is weird. The string I'm searching for (&amp;lt;Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" /&amp;gt;) contains a lot of characters that need to be escaped in PowerShell, and even more if doing a Regex replace in PowerShell (which I tested a bit). So instead I used a &lt;a href="http://technet.microsoft.com/en-us/library/ee692792.aspx"&gt;here-string&lt;/a&gt;, which is kind of like a &lt;a href="http://msdn.microsoft.com/en-us/library/aa691090.aspx"&gt;C# verbatim string literal&lt;/a&gt; (e.g. @&lt;a href="file://\\server\share\file.txt"&gt;\\server\share\file.txt&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For more information on why you should migrate away from MSBuild based Automatic Package Restore, see these posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.xavierdecoster.com/migrate-away-from-msbuild-based-nuget-package-restore"&gt;Migrate away from MSBuild-based NuGet package restore&lt;/a&gt; (Xavier Decoster)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.davidebbo.com/2014/01/the-right-way-to-restore-nuget-packages.html"&gt;The right way to restore NuGet packages&lt;/a&gt; (David Ebbo)&lt;/li&gt;&lt;/ul&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=cJak-fSGGlU:2QWaSYjnIdM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/cJak-fSGGlU" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 19 Jun 2014 23:53:40 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/scripting-net-project-migration-to-automatic-nuget-package-restore</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/mva-introduction-to-asp-net-mvc-free-live-training-june-23</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/ngdDAH-s8Js/mva-introduction-to-asp-net-mvc-free-live-training-june-23</link><title>MVA: Introduction to ASP.NET MVC - Free Live Training - June 23</title><description>&lt;p class="well well-lg"&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; The course (including videos, slides, and links to the code) are published here: &lt;a title="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc" href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc&lt;/a&gt;&lt;/p&gt;
&lt;p class="well well-lg"&gt;&lt;a href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt;Join Christopher Harrison and me for a fun, free online training event at Microsoft Virtual Academy on June 23, 2014!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you a &lt;strong&gt;front-end coder who wants to learn&lt;/strong&gt; how to &lt;strong&gt;build data-driven, server-side web applications&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;Maybe you know some &lt;strong&gt;Web Forms&lt;/strong&gt; and want to &lt;strong&gt;make the jump to ASP.NET MVC&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;This exciting new course &lt;strong&gt;focuses on the basics&lt;/strong&gt; of this popular framework for building scalable, standards-based web applications using well-established design patterns, so you can &lt;strong&gt;ramp up quickly&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="hidden-xs" style="height: 300px; display: block;"&gt;
&lt;div&gt;&lt;a href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt; &lt;img alt="Introduction to ASP.NET MVC" src="http://mvapublicstorage.microsoft.com/banners/MVA-ASP-intro-1hero.jpg" /&gt; &lt;/a&gt;&lt;/div&gt;
&lt;div id="splash-text" style="width: 340px; color: white; padding-left: 15px; margin-top: -135px;"&gt;
&lt;div style="text-align: left; line-height: 25px; font-size: 20px;"&gt;Introduction to ASP.NET MVC&lt;/div&gt;
&lt;div style="top: 0px; width: 320px; font-size: 14px; margin-top: 10px; position: relative;"&gt;Live event on June 23, 2014&lt;/div&gt;
&lt;div style="top: 20px; width: 320px; font-size: 14px; margin-top: 0px; position: relative;"&gt;&lt;a style="color: white;" href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt; &lt;strong&gt;Register Now!&lt;/strong&gt; &lt;img style="top: 3px; position: relative;" alt="" src="http://mvastorage.microsoft.com/public/css/images/cta-button.png" /&gt; &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Free! Live! Learn ASP.NET MVC!&lt;/h2&gt;
&lt;p&gt;Chr&lt;a href="https://twitter.com/geektrainer"&gt;Christopher Harrison&lt;/a&gt; and I had tons of fun doing a previous MVA event last September: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;. That one's available online, and I'm told it's one of the most popular courses on Microsoft Virtual Academy.&lt;/p&gt;
&lt;p&gt;We based the previous MVC Jump Start on the the official Microsoft &lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;Exam 70-486&lt;/a&gt;, which is part of the &lt;a href="http://www.microsoft.com/learning/en-us/mcsd-web-apps-certification.aspx"&gt;MCSD: Web Applications&lt;/a&gt; certification. We did what we could to make it approachable for beginners, but cramming an entire week long course in ASP.NET MVC into a single day meant it moved pretty quickly.&lt;/p&gt;
&lt;p&gt;So Christopher and I both agreed that it's be great to have a more introductory level class that moves a little slower and is easier for beginners to follow. Here's what we'll be covering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basics of MVC and the Moving Parts&lt;/li&gt;
&lt;li&gt;Creating and Configuring Models&lt;/li&gt;
&lt;li&gt;The Power of Visual Studio&lt;/li&gt;
&lt;li&gt;Deep Dive into Controllers&lt;/li&gt;
&lt;li&gt;Deep Dive into Views&lt;/li&gt;
&lt;li&gt;Introduction to Bootstrap&lt;/li&gt;
&lt;li&gt;Introduction to Authentication in MVC​&lt;/li&gt;
&lt;li&gt;Supplement Your Knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll be taking live questions, and there will be online chat support as well. If you've been wanting to learn ASP.NET MVC, this is a great opportunity!&lt;/p&gt;
&lt;p&gt;And don't let your boss tell you that you can't miss a day of work for this. Remind them that this is free, and you'll be saving them tons of money with your new web dev super powers.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=ngdDAH-s8Js:GbDiFuRKnjk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/ngdDAH-s8Js" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 13 Jun 2014 20:23:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/mva-introduction-to-asp-net-mvc-free-live-training-june-23</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/new-book-pro-windows-8-1-development-with-xaml-and-c</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/am-0StLpmCE/new-book-pro-windows-8-1-development-with-xaml-and-c</link><category>Book</category><category>XAML</category><title>New Book: Pro Windows 8.1 Development with XAML and C#</title><description>&lt;a href="http://www.apress.com/9781430240471"&gt;&lt;img style="float: right;" src="http://www.apress.com/media/catalog/product/cache/9/image/9df78eab33525d08d6e5fb8d27136e95/A/9/A9781430240471-3d_1.png"&gt;&lt;/a&gt; 
&lt;p&gt;Between releases of my other book (&lt;a href="http://www.wrox.com/WileyCDA/WroxTitle/Professional-ASP-NET-MVC-5.productCd-1118794753.html"&gt;Professional ASP.NET MVC&lt;/a&gt;, next release due out soon!) &lt;a href="http://jesseliberty.com/2014/06/03/pro-windows-8-1-development-wxaml-and-c/"&gt;Jesse Liberty&lt;/a&gt; somehow talked me into collaborating with him on writing a book on Windows 8.1 development. Actually, it wasn't a hard sell, because I've &lt;a href="http://www.bing.com/search?q=xaml+site%3Aweblogs.asp.net%2Fjongalloway"&gt;done a good amount of XAML dev&lt;/a&gt;, love C#, and Windows 8 / 8.1 development is a lot of fun. We co-wrote the table of contents, I wrote code samples and very rough drafts (sometimes just bullet points), and Jesse turned it into prose. That worked pretty well, but was a little too slow - especially once my work on Professional ASP.NET MVC 5 ramped up. Fortunately, &lt;a href="https://twitter.com/skimedic"&gt;Phil Japiske&lt;/a&gt; agreed to join us and finish the book off. Phil really nailed it - he polished off the remaining chapters, reviewed and greatly improved the existing chapters, and made sure everything was up to date for Windows 8.1.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apress.com/9781430240471"&gt;Pro Windows 8.1 Development with XAML and C#&lt;/a&gt; is focused on teaching you how to use your C# skills to build Windows Store applications. It teaches you the necessary XAML skills, the controls, the application model, and takes you from File / New to publishing an application to the Windows Store.&lt;/p&gt;
&lt;p&gt;Here's the table of contents:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Getting Started 
&lt;li&gt;Building Your First Windows 8 App 
&lt;li&gt;Themes, Panels, and Controls 
&lt;li&gt;Binding 
&lt;li&gt;Views 
&lt;li&gt;Local Data 
&lt;li&gt;Remote Data and Services 
&lt;li&gt;Search and Share Contracts 
&lt;li&gt;Notifications 
&lt;li&gt;Application Life Cycle 
&lt;li&gt;Making Money 
&lt;li&gt;Publishing Your App &lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;I'm especially happy with my contributions to the local and remote data chapters. Any non-trivial application needs to tackle these concerns, and it's important to get right. I went through a few iterations on the pattern for data access and settled on a Task based repository pattern that worked pretty well. For the remote data, I showed how to set up Web API services both as JSON/XML endpoints and leveraging OData.&lt;/p&gt;
&lt;p&gt;I also wrote a lot of the Notifications chapter, since the primary example demonstrates using Azure Mobile Services to send client notifications.&lt;/p&gt;&lt;p&gt;The book is a little over 300 pages, so it hopefully strikes a pretty good balance on the thorough vs. longwinded scale. I hope you like it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Today (Friday June 13, 2014) there's a 40% discount code on the Apress site: FRDY13.&lt;/strong&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=am-0StLpmCE:wnZIWbBXUpc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/am-0StLpmCE" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 13 Jun 2014 16:06:36 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/new-book-pro-windows-8-1-development-with-xaml-and-c</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Red-vs-Blue-Internal-security-penetration-testing-of-Microsoft-Azure</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Red-vs-Blue-Internal-security-penetration-testing-of-Microsoft-Azure</link><category>Azure</category><category>Security</category><title>Red vs. Blue - Internal security penetration testing of Microsoft Azure</title><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; hears from John Walton all about the full time security testers that attack Azure and find (and plug!) security holes, keeping our sites safe.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Methods of improving Azure security&lt;/li&gt;&lt;li&gt;How Azure security operates&lt;/li&gt;&lt;li&gt;Understanding emerging threats&lt;/li&gt;&lt;li&gt;Red team and blue team roles&lt;/li&gt;&lt;li&gt;Model real-world attacks, identify gaps, and demonstrate impact&lt;/li&gt;&lt;li&gt;Detect and respond, enhance awareness, and measure readiness and impact&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/support/trust-center/"&gt;Microsoft Azure Trust Center&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/best-practices-security/"&gt;Azure Security Guidance&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:b7d9a067400c44f3a0ffa33e017e0067"&gt;</description><pubDate>Fri, 13 Jun 2014 00:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue.mp4" type="video/mp4" length="19451328" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Red-vs-Blue-Internal-security-penetration-testing-of-Microsoft-Azure</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott hears from John Walton all about the full time security testers that attack Azure and find (and plug!) security holes, keeping our sites safe. Areas covered in this video: Methods of improving Azure securityHow Azure security operatesUnderstanding emerging threatsRed team and blue team rolesModel real-world attacks, identify gaps, and demonstrate impactDetect and respond, enhance awareness, and measure readiness and impactUseful topics and links: Microsoft Azure Trust CenterAzure Security Guidance</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">525</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue.mp3" expression="full" duration="525" fileSize="8417032" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue.mp4" expression="full" duration="525" fileSize="19451328" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue.webm" expression="full" duration="525" fileSize="56205096" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_high.mp4" expression="full" duration="525" fileSize="163135889" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6ed1/0d7f91ae-5b2b-4303-871b-4fe96bb86ed1/azureredblue_mid.mp4" expression="full" duration="525" fileSize="95534040" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Red-vs-Blue-Internal-security-penetration-testing-of-Microsoft-Azure/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Security-101-Whose-responsibility-is-that-</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Security-101-Whose-responsibility-is-that-</link><category>Azure</category><category>Security</category><title>Azure Security 101 - Whose responsibility is that?</title><description>&lt;p&gt;Ben Ridgway schools &lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; about Azure Security 101. What are the best practices when designing for a cloud platform? What is Azure's responsibility and what is mine?&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Application architecture helps define the security measures offered and needed&lt;/li&gt;&lt;li&gt;The scope of security is different based on IaaS, PaaS, and SaaS&lt;/li&gt;&lt;li&gt;Hybrid deployments adds different vectors to security&lt;/li&gt;&lt;li&gt;Understand the division between your security responsibility and the platform capability&lt;/li&gt;&lt;li&gt;Security key thoughts that you should follow&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/support/trust-center/"&gt;Microsoft Azure Trust Center&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://download.microsoft.com/download/7/8/A/78AB795A-8A5B-48B0-9422-FDDEEE8F70C1/SecurityBestPracticesForWindowsAzureSolutionsFeb2014.docx"&gt;Security Best Practices for Developing Azure Solutions (DOC)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:217c5c76181b41f0a0c6a33e017e596f"&gt;</description><pubDate>Fri, 13 Jun 2014 00:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101.mp4" type="video/mp4" length="25755791" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Azure-Security-101-Whose-responsibility-is-that-</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Ben Ridgway schools Scott about Azure Security 101. What are the best practices when designing for a cloud platform? What is Azure's responsibility and what is mine? Areas covered in this video: Application architecture helps define the security measures offered and neededThe scope of security is different based on IaaS, PaaS, and SaaSHybrid deployments adds different vectors to securityUnderstand the division between your security responsibility and the platform capabilitySecurity key thoughts that you should followUseful topics and links: Microsoft Azure Trust CenterSecurity Best Practices for Developing Azure Solutions (DOC)</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">715</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101.mp3" expression="full" duration="715" fileSize="11443014" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101.mp4" expression="full" duration="715" fileSize="25755791" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101.webm" expression="full" duration="715" fileSize="75984851" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_high.mp4" expression="full" duration="715" fileSize="235349362" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/7b83/c4e3aa87-02c3-44e8-b289-3e330b827b83/azuresecurity101_mid.mp4" expression="full" duration="715" fileSize="133822165" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Azure-Security-101-Whose-responsibility-is-that-/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant</link><category>ASP.NET</category><category>Azure</category><category>Cache</category><title>A look around the Redis Cache Preview with Saurabh Pant</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Saurabh Pant from the Azure Cache team to talk about the new Redis Cache Service. Saurabh gives a quick preview of Redis locally before firing up a Cache instance in Azure to demo an ASP.NET Caching Provider his team has built.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Notes&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://redis.io"&gt;Redis&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://msopentech.com/blog/2013/05/09/redis-on-windows-new-version-and-nuget-packages"&gt;Redis on Windows&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/pricing/details/cache"&gt;Redis Cache pricing details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.nuget.org/packages/Microsoft.Web.RedisSessionStateProvider/0.1.0.375-Pre"&gt;Microsoft.Web.RedisSessionStateProvider&lt;/a&gt;&amp;nbsp;(don't forget the -pre)&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.nuget.org/packages/StackExchange.Redis/"&gt;StackExchange.Redis&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/blog/2014/06/04/lap-around-azure-redis-cache-preview/"&gt;A lap around the Redis Cache Preview&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/05/12/announcing-asp-net-session-state-provider-for-redis-preview-release.aspx"&gt;Announcing ASP.NET Session State Provider for Redis Preview Release&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:16e6101614c14d42b15ba348014d99b7"&gt;</description><pubDate>Fri, 13 Jun 2014 06:07:40 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview.mp4" type="video/mp4" length="89571801" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Saurabh Pant from the Azure Cache team to talk about the new Redis Cache Service. Saurabh gives a quick preview of Redis locally before firing up a Cache instance in Azure to demo an ASP.NET Caching Provider his team has built. Show Notes RedisRedis on WindowsRedis Cache pricing detailsMicrosoft.Web.RedisSessionStateProvider (don't forget the -pre)StackExchange.RedisA lap around the Redis Cache PreviewAnnouncing ASP.NET Session State Provider for Redis Preview Release</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3489</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview.mp3" expression="full" duration="3489" fileSize="55834073" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview.mp4" expression="full" duration="3489" fileSize="89571801" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview.webm" expression="full" duration="3489" fileSize="236038457" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_high.mp4" expression="full" duration="3489" fileSize="440037384" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/772f/fefc48fa-1f22-48e6-aaa8-18f64f98772f/ALookAroundRedisCachePreview_mid.mp4" expression="full" duration="3489" fileSize="295144146" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/NMLkuBaMPsY/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</link><title>weblogs.asp.net Now Running On Orchard and Azure Web Sites</title><description>&lt;p&gt;I'm incredibly happy to announce that my blog - and all 750 other blogs running under weblogs.asp.net - are now powered by Orchard and Azure Web Sites! That's 750 blogs, all hosted in 4 Azure Web Sites all running on only one large virtual machine.&lt;/p&gt; &lt;h2&gt;A bit of nostalgia&lt;/h2&gt; &lt;p style="float: right; padding-left: 10px"&gt;&lt;a title="Olde Tyme Blogge" href="https://web.archive.org/web/20031018232745///weblogs.asp.net/jgalloway/posts/7498.aspx"&gt;&lt;img border="0" alt="Olde Tyme Blogge" src="//farm6.static.flickr.com/5077/14205986930_ed4cc80451.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I've been blogging on weblogs.asp.net since May 2003 - over eleven years. Back then it was called &lt;a href="https://web.archive.org/web/20030208002715///dotnetweblogs.com/"&gt;dotnetweblogs&lt;/a&gt; and ran on an open source blogging platform called .Text. Over the years, it got moved through varivous versions of Community Server, and had been stuck on an old, customized version of Community Server for almost seven years. It was hard to take myself seriously when blogging about web standards when my blog was being forced to quirks mode in IE due to an ancient HTML header.&lt;/p&gt; &lt;p&gt;I'd exported my BlogML several times and thought about moving, but I really didn't want to. I'd been part of the weblogs.asp.net community for a long time - for a while I subscribed to every single RSS feed and read each of them daily - and I'm a pretty big ASP.NET fan, too. I resorted to cramming a bunch of JavaScript into the "News and Announcements" HTML field on the left. It pulled in jQuery from a CDN and did all kinds of terrible things to insert widgets and hide elements I didn't want and make the page jump around for a few seconds while loading. Kind of like most news websites these days, so maybe I was ahead of my time.&lt;/p&gt; &lt;p&gt;I'd campaigned internally a few times to get the blog platform updated, but understood it was a big job to update several hundred weblogs - with history, and without downtime. Fortunately &lt;a href="//weblogs.asp.net/scottgu"&gt;there's another very high profile blogger on the weblogs.asp.net platform&lt;/a&gt;; that may have had something to do with getting the update to happen. :-)&lt;/p&gt; &lt;p&gt;So I was extremely happy to hear that there was finally an effort underway to make the move!&lt;/p&gt; &lt;p&gt;&lt;em&gt;Disclaimer: I did not do any of the dev work for this migration. In fact, I was one of the top whiny customers - my blog was one of the test cases for the migration, and I gave &lt;a href="https://twitter.com/sebastienros"&gt;Sebastien Ros&lt;/a&gt; and the Neudesic dev team (&lt;a href="https://www.linkedin.com/in/pfuerte"&gt;Peter Fuerte&lt;/a&gt;, Samir Patel, &lt;/em&gt;&lt;em&gt;&lt;a href="https://www.linkedin.com/in/zachall"&gt;Zac Hall&lt;/a&gt;, &lt;/em&gt;&lt;em&gt;and &lt;a href="https://twitter.com/terrimorton"&gt;Terri Morton&lt;/a&gt;)&lt;/em&gt;&lt;em&gt; tons of feedback and piles of feature requests.&lt;/em&gt; &lt;h2&gt;Hosting Details&lt;/h2&gt; &lt;p&gt;Orchard is hosted as &lt;b&gt;Azure Websites&lt;/b&gt; on a single basic large instance using using 4 websites on a single instance to scale out the memory limit on 32 bits.&lt;/p&gt; &lt;p&gt;We use &lt;strong&gt;4 Azure SQL Database&lt;/strong&gt; instances, Business edition set to 10GB. Each azure website points to a SQL Azure database, and each database contains around 200 blog using table prefixes.&lt;/p&gt; &lt;p&gt;Each website points to an &lt;b&gt;Azure Cache Service&lt;/b&gt; for output caching&lt;/p&gt; &lt;p&gt;All blogs point to the same &lt;b&gt;blob storage &lt;/b&gt;account&lt;/p&gt; &lt;p&gt;An A&lt;b&gt;zure Queue&lt;/b&gt; is used to synchronize the main portal and the blogs&lt;/p&gt; &lt;p&gt;One ARR proxy in an &lt;b&gt;Azure VM&lt;/b&gt; is used to route the requests to the Azure websites. We set it up this way because we already had this VM set up to do the proxy work for the rest of *.asp.net.&lt;/p&gt; &lt;p&gt;Here's a general diagram (stolen with permission from Sebastien's talk at the Orchard Harvest conference this week):&lt;/p&gt; &lt;p&gt;&lt;a title="weblogs.asp.net infrastructure" href="//www.flickr.com/photos/36836555@N00/14393514942/"&gt;&lt;img border="0" alt="weblogs.asp.net infrastructure" src="//farm4.static.flickr.com/3903/14393514942_95c546e130_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Performance Statistics&lt;/h2&gt; &lt;p&gt;Here are our monthly estimated statistics for weblogs.asp.net:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bandwidth out – 17 terrabytes  &lt;li&gt;Page Views – 1.3 million  &lt;li&gt;Unique Visitors – 750,000  &lt;li&gt;Visits – 1.1 million &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Here's the thing: Azure Web Sites is fast and efficient. I was already convinced of that, having run a lot of sites on it over the past few years. But &lt;strong&gt;Orchard is crazy efficient&lt;/strong&gt;, too. I did not know that. I recently saw Sebastien give a presentation on Orchard, and it blew my mind. If you had heard or read that Orchard is slow, bloated or inefficient, you owe it to yourself to look again. I've been shocked by how fast and efficient the current release of Orchard is.&lt;/p&gt; &lt;p&gt;The Orchard output cache module includes pretty moderate caching but delivers pretty extreme CPU performance benefits, as shown in the CPU charts from the production site below. Notice we're hovering around 20% CPU most of the time:&lt;/p&gt; &lt;p&gt;&lt;a title="weblogs.asp.net output caching" href="//www.flickr.com/photos/36836555@N00/14415042433/"&gt;&lt;img border="0" alt="weblogs.asp.net output caching" src="//farm4.static.flickr.com/3911/14415042433_bf8ff11349_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Hosting Cost Summary&lt;/h2&gt; &lt;p&gt;It's incredibly cheap to host all 750 weblogs on Azure Web Sites, SQL Database, Storage and Cache. Here's a per-month cost estimate (keep the above stats in mind when you read these):&lt;/p&gt; &lt;table class="table table-striped table-condensed table-hover"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Item &lt;/td&gt; &lt;td&gt;Usage to Date &lt;/td&gt; &lt;td&gt;Cost to Date &lt;/td&gt; &lt;td&gt;Estimated Cost Per Month &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer OUT (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1428.41 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;170.81&lt;/p&gt;&lt;/td&gt; &lt;td&gt;196.43 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer IN (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1.21 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.00&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.00 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Database Units (in 10s) - Business Edition&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.54 DB Units (10s)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;53.88&lt;/p&gt;&lt;/td&gt; &lt;td&gt;61.96 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Storage Transactions (in 10,000s) - Data Management&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;323.84 (10,000s)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.16&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.18 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Basic (128 MB) - Cache&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;2.52 (128 MB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;31.52&lt;/p&gt;&lt;/td&gt; &lt;td&gt;50.00 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.08 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.01&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.01 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Standard IO - Block Blob (GB) - Geo Redundant&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1.92 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.09&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.10 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Large Basic Web Sites Hours - Web Sites&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;609.00 (hours)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;187.20&lt;/p&gt;&lt;/td&gt; &lt;td&gt;215.28 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Grand Total &lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;p&gt;443.67&lt;/p&gt;&lt;/td&gt; &lt;td&gt;523.47 &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;This works out to under about 70 cents per blog per month, which is pretty impressive.&lt;/p&gt; &lt;h2&gt;What was changed in Orchard to support multi-blog&lt;/h2&gt; &lt;p&gt;Nothing!&lt;/p&gt; &lt;p&gt;&lt;a href="//docs.orchardproject.net/Documentation/Setting-up-a-multi-tenant-orchard-site"&gt;Multi-tenancy is a native capability of Orchard CMS&lt;/a&gt;. It is the primary reason we chose Orchard as the platform. So that's neat.&lt;/p&gt; &lt;p&gt;We're using 4 websites on a single Azure instance to scale out the memory limit on 32 bits, and any optimizations that were made to Orchard itself for this project were rolled back into the core platform (for v.1.8.1.0 and later).&lt;/p&gt; &lt;h2&gt;Migrating 750 weblogs (with more than 75k posts and 250k comments)&lt;/h2&gt; &lt;p&gt;weblogs.asp.net supported &lt;a href="//en.wikipedia.org/wiki/BlogML"&gt;BlogML&lt;/a&gt; export and import. BlogML is an open format for Blog content, and it includes everything you'd need to migrate eleven years of blogging - including posts, comments and tags. It's not a slam dunk, though. Years ago, I tried to export my blog and the requests kept timing out because the export (including comment spam) was something like 5 or 6 MB. A year ago I was sick with a flu so I decided to do some blog spam analysis; &lt;a href="https://twitter.com/terrimorton"&gt;Terri&lt;/a&gt; and team incorporated the results into their spam filters which cut the spam levels quite significantly. Still, lots of data.&lt;/p&gt; &lt;p&gt;On the Orchard side, they took advantage of &lt;a href="//docs.orchardproject.net/Documentation/Making-a-Web-Site-Recipe"&gt;custom Orchard recipes&lt;/a&gt; to handle the import. Recipes are great - they include everything you'd need to initialize a new site, including blogs, users, etc. And they can be based off a template, so you can create multiple (say, 750) recipes from one template. Slick.&lt;/p&gt; &lt;p&gt;At a high level (because I didn't write the code), Sebastien and friends tackled the problem like this:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Export all sites to BlogML  &lt;li&gt;Convert the BlogML to custom Orchard recipes to create the new blogs including:  &lt;ul&gt; &lt;li&gt;Posts  &lt;li&gt;Comments  &lt;li&gt;Users  &lt;li&gt;New passwords &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Generate custom commands to automate the recipe processing &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Automation was important, because they reran this migration several times.&lt;/p&gt; &lt;p&gt;One other neat thing about the import: they used the VM Berserker technique (my name, I hope it sticks). You may have read about this approach before on Troy Hunt's post titled &lt;a href="//www.troyhunt.com/2013/12/working-with-154-million-records-on.html"&gt;Working with 154 million records on Azure Table Storage – the story of “Have I been pwned?”&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The VM Berserker technique takes advantages of one of the most unappreciated values of cloud computing: the ability to develop cheaply, scale way up for a short time, and then turn off. This lets you do big things for less than the cost of a cup of coffee. Scaling up is nice. Scaling up and then back down is even nicer. So for this migration, they tested things out on a VM, then scaled it up to handle the migration, then turned it off (to stop paying). Done. Oh, and by running in an Azure VM they were running the processing in the same datacenter as the data, so it was really fast.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;This is the kind of thing that tells me that cloud computing is the future. Sure, it's great to spin up sites and VM's and worker roles and stuff in the cloud. It's great that I can amp them up when I want. But often lost in the discussion is the power of being able to scale hard for an hour or two, then shut down. The cost-per-awesome on that transaction hasn't sunk in with most developers yet.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sebastien announced at the Orchard Harvest conference this week that the tools that were written to migrate the content from the old system to Orchard (running Orchard recipes against BlogML export files) will be released publicly very soon.&lt;/p&gt; &lt;h2&gt;New Blog Goodness&lt;/h2&gt; &lt;p&gt;So much good stuff!!!&lt;/p&gt; &lt;h3&gt;New Bootstrap blog theme&lt;/h3&gt; &lt;p&gt;This is probably my favorite.&amp;nbsp; In the past I'd written a few custom or inline styles, but now the system's running on a great framework. Bootstrap's tons of fun. There are individual styles and components that make things look better, so I can throw in a Bootstrap table style or grid whenever it's useful.&lt;/p&gt; &lt;p&gt;&lt;button class="btn btn-default"&gt;&lt;span class="glyphicon glyphicon-star"&gt;&lt;/span&gt;This is a button with a star on it.&lt;/button&gt;&lt;/p&gt; &lt;p&gt;Plus, it's easy to drop in a new theme from time to time. I &lt;a href="//bootswatch.com/"&gt;grabbed one off Bootswatch&lt;/a&gt; to get started, but am looking forward to tinkering with it.&lt;/p&gt; &lt;h3&gt;Mobile friendly display&lt;/h3&gt; &lt;p&gt;Since Bootstrap 3 is a mobile first framework, it always looks good on smaller displays. Posts automatically scale down for mobile devices using media queries.&lt;/p&gt; &lt;h3&gt;More Authoring Options&lt;/h3&gt; &lt;p&gt;I've always been a fan of Live Writer, and that's still supported. And there's HTML support, which is good. But Orchard also introduces Markdown editing support, which I'm told will cause my pants to shrink and my beard to grow out. So that's something.&lt;/p&gt; &lt;h3&gt;Widgets!&lt;/h3&gt; &lt;p style="float: right; padding-bottom: 10px; padding-top: 10px; padding-left: 10px; padding-right: 10px"&gt;&lt;a title="Orchard Widget Zones" href="//www.flickr.com/photos/36836555@N00/14371595856/"&gt;&lt;img border="0" alt="Orchard Widget Zones" src="//farm4.static.flickr.com/3856/14371595856_2f32e0f822.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I'd been sneakily creating widgets for years by injecting HTML and JavaScript, but now there's real support. Orchard has some nice widgets, and you can drop them into 19 different zones, as shown on the right.&lt;/p&gt; &lt;p&gt;As I was beta testing, I asked Sebastien if we could move the comments from the content to an after content module so I could insert custom HTML widgets above the comments, and he set that up.&amp;nbsp; So far, the widgets have been incredibly flexible. No complaints at all there.&lt;/p&gt; &lt;h3&gt;Spam Control&lt;/h3&gt; &lt;p&gt;As I mentioned earlier, the spam was a bit out of hand before. Orchard adds &lt;a href="//en.wikipedia.org/wiki/ReCAPTCHA"&gt;ReCAPTCHA&lt;/a&gt; support. No messing around now, I can barely pass it.&lt;/p&gt; &lt;h3&gt;Social Media Tag support&lt;/h3&gt; &lt;p&gt;Orchard automatically includes support for all the fancy og:tags that are so hot these days. &lt;a href="//www.sebastienros.com/adding-social-meta-tags-in-orchard"&gt;Sebastien wrote a post with more information&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Custom Script Support&lt;/h3&gt; &lt;p&gt;I have already admitted to jamming script tags in HTML areas on the previous site. The new site includes the ability to add custom scripts for analytics, syntax highlighting, etc. It's supported, and I can include them in the header or footer as appropriate.&lt;/p&gt; &lt;p&gt;Site Nav Integration&lt;/p&gt; &lt;p&gt;Now new pages can be integrated into the site navigation. Cool.&lt;/p&gt; &lt;h2&gt;More Goodness!&lt;/h2&gt; &lt;p&gt;There's a lot more! If you're running a blog that's hosted on weblogs.asp.net, see the updated support &lt;a href="//www.asp.net/community/support/weblogs"&gt;here&lt;/a&gt;. If you'd like to learn more about Orchard - or contribute, as it's an open source project - check out the &lt;a href="//orchardproject.net/"&gt;Orchard Project&lt;/a&gt;. I'll be posting more about some things I've learned in customizing my blog a bit, including the code formatting. &lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=NMLkuBaMPsY:DbHr2GoUOL8:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/NMLkuBaMPsY" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 11 Jun 2014 01:21:58 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Adding-Analytics-to-Azure-Web-Sites</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Adding-Analytics-to-Azure-Web-Sites</link><category>Azure</category><category>websites</category><category>analytics</category><title>Adding Analytics to Azure Web Sites</title><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt;&amp;nbsp;and Chandrika add the new Analytics JavaScript to one of Scott's production sites running within Azure and then explore the resulting data within the new Azure Portal.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;Analytics on the Azure Portal&lt;/li&gt;&lt;li&gt;&amp;nbsp;Add JavaScript to set up analytics&lt;/li&gt;&lt;li&gt;&amp;nbsp;View analytics from Scott's web site&lt;/li&gt;&lt;li&gt;&amp;nbsp;Drill down into specific issues exposed by analytics&lt;/li&gt;&lt;li&gt;&amp;nbsp;Monitoring verses analytics&lt;/li&gt;&lt;li&gt;&amp;nbsp;Alert rules&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/insights-usage-analytics/"&gt;Analytics for Web sites&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:4828b82c22eb4ef789e6a33e017b6dee"&gt;</description><pubDate>Fri, 06 Jun 2014 00:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics.mp4" type="video/mp4" length="13161100" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Adding-Analytics-to-Azure-Web-Sites</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott and Chandrika add the new Analytics JavaScript to one of Scott's production sites running within Azure and then explore the resulting data within the new Azure Portal. Areas covered in this video:  Analytics on the Azure Portal Add JavaScript to set up analytics View analytics from Scott's web site Drill down into specific issues exposed by analytics Monitoring verses analytics Alert rulesUseful topics and links:  Analytics for Web sites</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">532</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics.mp3" expression="full" duration="532" fileSize="8523560" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics.mp4" expression="full" duration="532" fileSize="13161100" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics.webm" expression="full" duration="532" fileSize="33742664" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_high.mp4" expression="full" duration="532" fileSize="51875106" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/936d/cda8f312-4598-46f2-91fe-ea6870a2936d/azureanalytics_mid.mp4" expression="full" duration="532" fileSize="35462181" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Adding-Analytics-to-Azure-Web-Sites/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Adding-Web-Tests-to-an-Azure-Web-Site</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Adding-Web-Tests-to-an-Azure-Web-Site</link><category>Azure</category><category>Testing</category><title>Adding Web Tests to an Azure Web Site</title><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/Glucose"&gt;Scott&lt;/a&gt; and Chandrika adds a Web Test to one of Scott's existing production websites. Web Tests enable regular monitoring of your sites' uptime, and you can even pin the web tests within the new Azure Portal.&lt;/p&gt;&lt;p&gt;Areas covered in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Web Tests – Explore issues, occurrences, and errors.&lt;/li&gt;&lt;li&gt;Create tests, add success criteria, and enable alerts.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Useful topics and links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://azure.microsoft.com/en-us/documentation/articles/insights-create-web-tests/"&gt;Web Tests&lt;/a&gt; topic - Tests your website at regular intervals by configuring a Web test.&lt;/li&gt;&lt;li&gt;&lt;a href="http://portal.azure.com/"&gt;The Azure Preview Portal&lt;/a&gt; – Tour and learn more about the Azure portal.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:f3980015eb19488faf61a33e017cd1d7"&gt;</description><pubDate>Fri, 06 Jun 2014 00:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests.mp4" type="video/mp4" length="8418713" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Adding-Web-Tests-to-an-Azure-Web-Site</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott and Chandrika adds a Web Test to one of Scott's existing production websites. Web Tests enable regular monitoring of your sites' uptime, and you can even pin the web tests within the new Azure Portal. Areas covered in this video: Web Tests – Explore issues, occurrences, and errors.Create tests, add success criteria, and enable alerts.Useful topics and links: Web Tests topic - Tests your website at regular intervals by configuring a Web test.The Azure Preview Portal – Tour and learn more about the Azure portal.  </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">371</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests.mp3" expression="full" duration="371" fileSize="5953512" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests.mp4" expression="full" duration="371" fileSize="8418713" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests.webm" expression="full" duration="371" fileSize="20972611" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_high.mp4" expression="full" duration="371" fileSize="29584954" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8ec9/c4d83d0f-2b8a-4299-8610-d93afe378ec9/azurewebtests_mid.mp4" expression="full" duration="371" fileSize="21325714" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Adding-Web-Tests-to-an-Azure-Web-Site/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Tztt0mY7ytQ</guid><link>https://www.youtube.com/watch?v=Tztt0mY7ytQ&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Azure Image Optimizer</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Tztt0mY7ytQ&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Tztt0mY7ytQ/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Tztt0mY7ytQ&amp;amp;feature=youtube_gdata"&gt;Azure Image Optimizer&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Use the power of NuGet and Azure Websites to optimize both static and dynamically added images&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
948&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;3
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:44&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Thu, 05 Jun 2014 00:58:20 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Tztt0mY7ytQ" /><a10:updated>2014-06-09T04:50:41Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10530671</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/06/03/visual-studio-14-ctp-and-entity-framework.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>Visual Studio 14 CTP and Entity Framework</title><description>&lt;p&gt;Visual Studio 14 CTP was made available today, see the &lt;a href="http://blogs.msdn.com/b/visualstudio/archive/2014/06/03/visual-studio-14-ctp-now-available.aspx"&gt;announcement post on the Visual Studio blog&lt;/a&gt;&lt;font style="background-color: #ffffff"&gt;&lt;/font&gt; for more details. This post covers the places that Entity Framework is included in the release and some limitations to be aware of when using it.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework Tools&lt;/h2&gt;  &lt;p&gt;As with past versions of Visual Studio, the Entity Framework Tools are included in-the-box. These tools are capable of working with models created with all versions of Entity Framework up to and including EF6.x.&lt;/p&gt;  &lt;p&gt;Visual Studio 14 CTP includes an older build of the EF6 tooling which does not include the bug fixes and improvements from the 6.1.0 and 6.1.1 releases. Future previews of Visual Studio 14 will be updated to the latest version of the tooling. &lt;/p&gt;  &lt;p&gt;At this stage, there isn’t a version of the 6.1.0 or 6.1.1 tooling that can be installed on Visual Studio 14.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6 Runtime&lt;/h2&gt;  &lt;p&gt;An older build of the EF6 runtime is included in a number of places in Visual Studio 14 CTP. This build does not include the bug fixes and improvements from the 6.1.0 and 6.1.1 releases.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The runtime will be installed if you create a new model using the Entity Framework Tools in a project that does not already have the EF runtime installed. &lt;/li&gt;    &lt;li&gt;The runtime is pre-installed in new ASP.NET projects, depending on the project template you select. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;We recommend using NuGet to update to the latest version of the runtime. At the time of writing &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/03/17/ef6-1-0-rtm-available.aspx"&gt;6.1.0&lt;/a&gt; was the latest stable release and &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/20/ef-6-1-1-beta-1-available.aspx"&gt;6.1.1-beta1&lt;/a&gt; was available. For detailed information on how to upgrade, see &lt;a href="http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog#Updating_a_Package"&gt;Updating a Package&lt;/a&gt; in the NuGet documentation.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Entity Framework 7&lt;/h2&gt;  &lt;p&gt;We recently blogged about our &lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx"&gt;plans for Entity Framework 7&lt;/a&gt;. Visual Studio 14 CTP includes an &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/06/03/announcing-web-features-in-visual-studio-14-ctp.aspx"&gt;early preview of ASP.NET vNext&lt;/a&gt;, which in turn includes a very early build of EF7. The EF7 runtime is installed in new ASP vNext projects that are created.&lt;/p&gt;  &lt;p&gt;This build of EF7 only implements very basic functionality and there are a number of limitations with the features that are implemented. Please bear in mind that this preview is designed to give you an idea of what the experience will be like and you will quickly hit limitations if you deviate from the code from the default project template.&lt;/p&gt;  &lt;p&gt;The EF7 code base is still in the very early stages of development, but if you want to experiment with a build we would recommend visiting our &lt;a href="https://github.com/aspnet/EntityFramework/wiki"&gt;GitHub wiki for information on using nightly builds&lt;/a&gt;. &lt;strong&gt;Just remember that there are lots of things that don’t work… seriously… we warned you :)!&lt;/strong&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10530671" width="1" height="1"&gt;</description><pubDate>Tue, 03 Jun 2014 20:43:28 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10530671</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/06/03/visual-studio-14-ctp-and-entity-framework.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/From-the-ground-up-on-the-Microsoft-Azure-Preview-Portal</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/From-the-ground-up-on-the-Microsoft-Azure-Preview-Portal</link><category>Azure</category><category>HTML5</category><category>JavaScript</category><title>From the ground up: Building the Microsoft Azure Preview Portal</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by&amp;nbsp;&lt;a href="http://www.twitter.com/VishalRJoshi"&gt;Vishal Joshi&lt;/a&gt; and &lt;a href="http://www.twitter.com/brado_23"&gt;Brad Olenick&lt;/a&gt;&amp;nbsp;from the new&amp;nbsp;&lt;a href="http://portal.azure.com"&gt;Microsoft Azure Preview Portal&lt;/a&gt; team. During this show we dig into the reasoning behind the new portal, what it is build with under the covers and the design decisions made along the way. This is a must watch video as it contains some &lt;strong&gt;exclusive content&lt;/strong&gt; viewable only in this show.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Technologies Used&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.asp.net/web-api"&gt;ASP.NET Web API&lt;/a&gt;&lt;/li&gt;&lt;li&gt;HTML&lt;/li&gt;&lt;li&gt;&lt;a href="http://lesscss.org/"&gt;LESS&lt;/a&gt;&amp;nbsp;(CSS pre-processor)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&amp;nbsp;(JavaScript superset)&lt;/li&gt;&lt;li&gt;&lt;a href="http://knockoutjs.com/"&gt;Knockout&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://d3js.org/"&gt;D3.js&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.requirejs.org/"&gt;RequireJS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:4de63dc6c32c40ed92fda33a00050196"&gt;</description><pubDate>Thu, 29 May 2014 02:30:42 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal.mp4" type="video/mp4" length="86414425" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/From-the-ground-up-on-the-Microsoft-Azure-Preview-Portal</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Vishal Joshi and Brad Olenick from the new Microsoft Azure Preview Portal team. During this show we dig into the reasoning behind the new portal, what it is build with under the covers and the design decisions made along the way. This is a must watch video as it contains some exclusive content viewable only in this show. Technologies Used ASP.NET Web APIHTMLLESS (CSS pre-processor) TypeScript (JavaScript superset)KnockoutD3.jsRequireJS</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2162</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal.mp3" expression="full" duration="2162" fileSize="34600512" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal.mp4" expression="full" duration="2162" fileSize="86414425" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal.webm" expression="full" duration="2162" fileSize="221821503" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_high.mp4" expression="full" duration="2162" fileSize="504562783" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e532/7e2cf0af-bee6-4a95-b61a-595298e3e532/HowWeBuildTheAzureManagementPortal_mid.mp4" expression="full" duration="2162" fileSize="319397873" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/From-the-ground-up-on-the-Microsoft-Azure-Preview-Portal/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/RlRmatn69xw</guid><link>https://www.youtube.com/watch?v=RlRmatn69xw&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Media Query Intellisense with Browser Link</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=RlRmatn69xw&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/RlRmatn69xw/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=RlRmatn69xw&amp;amp;feature=youtube_gdata"&gt;Media Query Intellisense with Browser Link&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;A demo of how Web Essentials uses the Browser Link API to provide live Intellisense for CSS media queries&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2150&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;26
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:41&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 28 May 2014 00:26:49 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/RlRmatn69xw" /><a10:updated>2014-10-31T20:54:55Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10527112</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/05/20/ef-6-1-1-beta-1-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF 6.1.1 Beta 1 Available</title><description>&lt;p&gt;Today we are pleased to announce the availability of EF6.1.1 Beta 1. This patch release includes a number of high priority bug fixes and some contributions from our community.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;You can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=All&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%2b6.1.1&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;reasonClosed=All&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0"&gt;list of the fixes/changes included in EF6.1.1 on our CodePlex site&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following two fixes to issues that a number of people have encountered:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1653"&gt;Designer: Error opening EF5 edmx with decimal precision in EF6 designer&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/workitem/2246"&gt;Default instance detection logic for LocalDB doesn't work with SQL Server 2014&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where do I get the beta?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.1-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42950"&gt;available on the Microsoft Download Center&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of changes that will be available in the final release of EF6.1.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the &lt;strong&gt;entity-framework&lt;/strong&gt; tag.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Thank you to our contributors&lt;/h2&gt;  &lt;p&gt;We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/BrandonDahler"&gt;BrandonDahler&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/ErikSchierboom"&gt;ErikSchierboom&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/Halo_Four"&gt;Halo_Four&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;Michael Adelson&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/nikmd23"&gt;nikmd23&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/UnaiZorrilla"&gt;UnaiZorrilla&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/zgabi"&gt;zgabi&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;All the changes we plan to include in the final release of EF6.1.1 are included in this Beta. If additional high priority bugs are reported on the Beta we will consider fixing them prior to the final release. Depending on the bug reports we get, we may provide another preview before the final release.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10527112" width="1" height="1"&gt;</description><pubDate>Tue, 20 May 2014 18:49:04 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">18</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10527112</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/05/20/ef-6-1-1-beta-1-available.aspx#comments</comments></item><item><guid isPermaLink="false">04d9a393-3177-4cec-be35-323bd2383480</guid><link>http://davidfowl.com/assembly-neutral-interfaces-implementation/</link><title>Assembly Neutral Types Implementation</title><description>&lt;p&gt;&lt;a href='http://davidfowl.com/assembly-neutral-interfaces/' &gt;Last time&lt;/a&gt; we spoke about assembly neutral interfaces and what they were. This post will describe how we implemented it in the ASP.NET vNext stack.&lt;/p&gt;

&lt;p&gt;Today, types in the CLR must have an assembly name. That's an intrinsic piece of metadata that cannot be removed without CLR changes. While brainstorming on what could be done with the tools we had today, my manager &lt;a href='https://twitter.com/mmontwil' &gt;@mmontwil&lt;/a&gt; had a genius idea. Using Roslyn, we could discover all types with an assembly neutral attribute, generate an assembly for each of those types, then stash that definition away somewhere to be loaded later at runtime (&lt;a href='https://twitter.com/loudej' &gt;@loudej&lt;/a&gt; then decided that we should store them as embedded resources).&lt;/p&gt;

&lt;p&gt;Using the power of Roslyn, this is what we implemented:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Discover all assembly neutral types via an attribute [AssemblyNeutral].  &lt;/li&gt;
&lt;li&gt;Compile each of those types (in the right order of course) into assembies of their own.  &lt;/li&gt;
&lt;li&gt;Remove those types from the original assembly.  &lt;/li&gt;
&lt;li&gt;Stash the compiled assemblies as embedded resources in the original assembly.  &lt;/li&gt;
&lt;li&gt;At runtime, when an assembly is loaded, unpack the embedded assemblies and load them into the app domain. We only load the first one for a given assembly name. This is important because like we said in the &lt;a href='http://davidfowl.com/assembly-neutral-interfaces/' &gt;previous post&lt;/a&gt;, the definition cannot differ for a given name.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Roslyn API allows you to navigate the symbols of a compilation. Not the syntax tree, but the symbols. This means with a reflection-like API we can easily find all of the types with a specific attribute:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;public void FindTypeCompilations(INamespaceOrTypeSymbol symbol)  
{
    if (symbol.IsNamespace)
    {
        foreach (var member in (symbol as INamespaceSymbol).GetMembers())
        {
            FindTypeCompilations(member);
        }
    }
    else
    {
        var typeSymbol = symbol as ITypeSymbol;
        foreach (var attribute in typeSymbol.GetAttributes())
        {
            if (attribute.AttributeClass.Name == "AssemblyNeutralAttribute")
            {
                _typeCompilationContexts.Add(new TypeCompilationContext(this, typeSymbol));
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given this list of types, we need to compile them in order. Order is significant because these types can depend on each other. Here's an example:&lt;/p&gt;

&lt;p&gt;Assembly - Logger.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;namespace Logging  
{
  public class ConsoleLoggerFactory : ILoggerFactory
  {
      public ILogger Create(string category)
      {
          return new ConsoleLogger(category);
      }
  }

  public class ConsoleLogger : ILogger
  {
      private readonly string _category;
      public ConsoleLogger(string category)
      {
          _category = category;
      }

      public void Log(LogType logType, string message)
      {
          Console.WriteLine("[{0}]: {1} {2}", _category, logType, message);
      }
  }

  [AssemblyNeutral]
  public interface ILoggerFactory
  {
      ILogger Create(string category);
  }

  [AssemblyNeutral]
  public interface ILogger
  {
      void Log(LogType logType, string message);
  }

  [AssemblyNeutral]
  public enum LogType
  {
      Verbose,
      Information,
      Error
  }

  [AssemblyNeutral]
  public class AssemblyNeutralAttribute : Attribute {   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see in the above example, we would create 5 assemblies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Logging.AssemblyNeutralAttrbute.dll&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging.LogType.dll -&gt; Logging.AssemblyNeutralAttrbute.dll&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging.ILoggerFactory.dll -&gt; Logging.ILogger.dll, Logging.AssemblyNeutralAttrbute.dll&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging.ILogger.dll -&gt; Logging.LogType.dll, Logging.AssemblyNeutralAttrbute.dll&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging.dll -&gt; Logging.ILogger.dll, Logging.ILoggerFactor.dll, Logging.LogType.dll, Logging.AssemblyNeutralAttrbute.dll&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notice the AssemblyNeutralAttribute is also AssemblyNeutral.&lt;/p&gt;

&lt;p&gt;Order is important because we need to produce the assemblies with the least dependencies before we can produce the ones with the most, a standard &lt;a href='http://en.wikipedia.org/wiki/Topological_sorting' &gt;topological sort&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But what about this case:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;using System;  
using System.Threading.Tasks;

namespace HttpStuff  
{
  [AssemblyNeutral]
  public interface IHttpContext
  {
    IHttpRequest Request { get; }
    IHttpResponse Response { get; }
  }

  [AssemblyNeutral]
  public interface IHttpResponse
  {
    IHttpContext Context { get; } 
    Task Write(byte[] data);
  }

  [AssemblyNeutral]
  public interface IHttpRequest
  {
    string Url { get; }
    IHttpContext Context { get; }
  }

  [AssemblyNeutral]
  public class AssemblyNeutralAttribute : Attribute { }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we have a circular reference, the IHttpContext points to both the IHttpRequest and IHttpContext and the IHttpResponse and IHttpRequest point to the IHttpContext. What's the right order to create these assemblies? This is something you can't do today using Visual Studio but you can do it with the Roslyn APIs. (yes CLR metadata allows circular references)&lt;/p&gt;

&lt;p&gt;Let's say we wanted to achieve this today, what could you do? A two-phase compilation would work since all we need is enough metadata to pass to the compiler as a reference. Doing this manually, we need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Compile IHttpRequest and IHttpResponse with empty bodies  &lt;/li&gt;
&lt;li&gt;Compile IHttpContext against the 2 generated stub dlls for IHttpRequest and IHttpResponse  &lt;/li&gt;
&lt;li&gt;Re-compile IHttpRequest and IHttpResponse with IHttpContext as a reference.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A manual process looks like this:&lt;/p&gt;

&lt;p&gt;IHttpRequest.cs&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;namespace HttpStuff  
{ 
    public interface IHttpRequest
    {
#if REAL
        string Url { get; }
        IHttpContext Context { get; }
#endif
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IHttpResponse.cs&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;namespace HttpStuff  
{
    public interface IHttpResponse
    {
#if REAL
        IHttpContext Context { get; } 
        Task Write(byte[] data);
#endif
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IHttpContext.cs&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;namespace HttpStuff  
{
    public interface IHttpContext
    {
        IHttpRequest Request { get; }
        IHttpResponse Response { get; }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate IHttpContext.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;csc /target:library IHttpRequest.cs  
csc /target:library IHttpResponse.cs  
csc /target:library /r:IHttpRequest.dll /r:IHttpResponse.dll IHttpContext.cs  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the real IHttpRequest and IHttpResponse&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;csc /target:library /r:IHttpContext.dll IHttpRequest.cs /define:REAL

csc /target:library /r:IHttpContext.dll IHttpResponse.cs /define:REAL  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is what we do behind the scenes.&lt;/p&gt;

&lt;h3 id="dedupingotherassemblyneutralreferences"&gt;De-duping other assembly neutral references&lt;/h3&gt;

&lt;p&gt;Since we allow you to re-declare assembly neutral types in your own assembly, you can run into situations where types declared in multiple assemblies need to be seen as the same type:&lt;/p&gt;

&lt;p&gt;ConsoleLogger.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;using System;

namespace Logging  
{
    public class ConsoleLogger : ILogger
    {
        public void Log(string message)
        {
            Console.WriteLine(message);
        }
    }

    [AssemblyNeutral]
    public interface ILogger
    {
        void Log(string message);
    }

    [AssemblyNeutral]
    public class AssemblyNeutralAttribute : Attribute
    {
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TraceLogger.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;using System;  
using System.Diagnostics;

namespace Logging  
{
    public class TraceLogger : ILogger
    {
        public void Log(string message)
        {
            Trace.TraceInformation(message);
        }
    }

    [AssemblyNeutral]
    public interface ILogger
    {
        void Log(string message);
    }

    [AssemblyNeutral]
    public class AssemblyNeutralAttribute : Attribute
    { 
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;LoggerFactory.dll depends on both ConsoleLogger.dll and TraceLogger.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;using System;

namespace Logging  
{
    public static class LoggerFactory
    {
        public static ILogger Create(int type)
        {
            if (type == 0)
            {
                return new ConsoleLogger();
            }

            return new TraceLogger();
        }
    }

    [AssemblyNeutral]
    public interface ILogger
    {
        void Log(string message);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should all compile and work just fine. Even though all 3 assemblies redefined the ILogger interface, they are all seen as equivalent.&lt;/p&gt;

&lt;h3 id="whattheassemblymetadatalookslike"&gt;What the assembly metadata looks like&lt;/h3&gt;

&lt;p&gt;Lets look at what this process does to the assembly metadata. Using &lt;a href='http://msdn.microsoft.com/en-us/library/f7dy01k1' (v=vs.110).aspx"&gt;ILDASM&lt;/a&gt;, lets look at a normal type definition:&lt;/p&gt;

&lt;p&gt;MyCompany.MyLogger.dll&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;namespace Logging  
{
    public interface ILogger
    {
        void Log(string message);
    }

    public class Logger : ILogger
    {
        public void Log(string message)
        {
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at the metadata table for the 2 types we see that they are both type definitions in this assembly, nothing special:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TypeDef #1 (02000002)  
-------------------------------------------------------
    TypDefName: MyCompany.MyLogger.ILogger  (02000002)
    Flags     : [Public] [AutoLayout] [Interface] [Abstract] [AnsiClass]  (000000a1)
    Extends   : 01000000 [TypeRef] 
    Method #1 (06000001) 
    -------------------------------------------------------
        MethodName: Log (06000001)
        Flags     : [Public] [Virtual] [HideBySig] [NewSlot] [Abstract]  (000005c6)
        RVA       : 0x00000000
        ImplFlags : [IL] [Managed]  (00000000)
        CallCnvntn: [DEFAULT]
        hasThis 
        ReturnType: Void
        1 Arguments
            Argument #1:  String
        1 Parameters
            (1) ParamToken : (08000001) Name : message flags: [none] (00000000)


TypeDef #2 (02000003)  
-------------------------------------------------------
    TypDefName: MyCompany.MyLogger.Logger  (02000003)
    Flags     : [Public] [AutoLayout] [Class] [AnsiClass] [BeforeFieldInit]  (00100001)
    Extends   : 01000006 [TypeRef] System.Object
    Method #1 (06000002) 
    -------------------------------------------------------
        MethodName: Log (06000002)
        Flags     : [Public] [Final] [Virtual] [HideBySig] [NewSlot]  (000001e6)
        RVA       : 0x00002050
        ImplFlags : [IL] [Managed]  (00000000)
        CallCnvntn: [DEFAULT]
        hasThis 
        ReturnType: Void
        1 Arguments
            Argument #1:  String
        1 Parameters
            (1) ParamToken : (08000002) Name : message flags: [none] (00000000)

    Method #2 (06000003) 
    -------------------------------------------------------
        MethodName: .ctor (06000003)
        Flags     : [Public] [HideBySig] [ReuseSlot] [SpecialName] [RTSpecialName] [.ctor]  (00001886)
        RVA       : 0x00002053
        ImplFlags : [IL] [Managed]  (00000000)
        CallCnvntn: [DEFAULT]
        hasThis 
        ReturnType: Void
        No arguments.

    InterfaceImpl #1 (09000001)
    -------------------------------------------------------
        Class     : MyCompany.MyLogger.Logger
        Token     : 02000002 [TypeDef] MyCompany.MyLogger.ILogger
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let's make the ILogger interface [AssemblyNeutral]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TypeDef #1 (02000002)  
-------------------------------------------------------
    TypDefName: MyCompany.MyLogger.Logger  (02000002)
    Flags     : [Public] [AutoLayout] [Class] [AnsiClass] [BeforeFieldInit]  (00100001)
    Extends   : 01000006 [TypeRef] System.Object
    Method #1 (06000001) 
    -------------------------------------------------------
        MethodName: Log (06000001)
        Flags     : [Public] [Final] [Virtual] [HideBySig] [NewSlot]  (000001e6)
        RVA       : 0x00002050
        ImplFlags : [IL] [Managed]  (00000000)
        CallCnvntn: [DEFAULT]
        hasThis 
        ReturnType: Void
        1 Arguments
            Argument #1:  String
        1 Parameters
            (1) ParamToken : (08000001) Name : message flags: [none] (00000000)

    Method #2 (06000002) 
    -------------------------------------------------------
        MethodName: .ctor (06000002)
        Flags     : [Public] [HideBySig] [ReuseSlot] [SpecialName] [RTSpecialName] [.ctor]  (00001886)
        RVA       : 0x00002053
        ImplFlags : [IL] [Managed]  (00000000)
        CallCnvntn: [DEFAULT]
        hasThis 
        ReturnType: Void
        No arguments.

    InterfaceImpl #1 (09000001)
    -------------------------------------------------------
        Class     : MyCompany.MyLogger.Logger
        Token     : 01000007 [TypeRef] MyCompany.MyLogger.ILogger
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the &lt;strong&gt;InterfaceImpl&lt;/strong&gt; section has change from a TypeDef to a TypeRef. That's because we told the compiler this type is now coming from an external assembly instead of a type defined in the assembly itself. Roslyn automatically fixes this up for us when we remove the types from the assembly's compilation and replace them with assembly references. This is what makes Roslyn hold a special place in my heart, it's just magical :).&lt;/p&gt;

&lt;h3 id="rulesoftheroad"&gt;Rules of the road&lt;/h3&gt;

&lt;p&gt;Assembly neutral types need to follow these rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They must not reference anything in the original assembly (unless those types are assembly neutral). You can't have an assembly neutral type that references another type in the assembly where it's defined.&lt;/li&gt;
&lt;li&gt;They can reference other assembly neutral types and types in reference assemblies. This means that the assembly neutral type can access anything the containing assembly is referencing.&lt;/li&gt;
&lt;li&gt;The types must match exactly! We load the first type with a matching name, if they don't match expect chaos.&lt;/li&gt;
&lt;li&gt;You can embed any type, not just interfaces but it's best to stay away from anything that contains IL (like method bodies). Stick with interfaces, enums, classes with fields only, not properties.&lt;/li&gt;
&lt;li&gt;Assembly neutral types can be re-declared in source. This means you don't have to have an assembly reference to use the contract.&lt;/li&gt;
&lt;li&gt;You may reference a carrier assembly full of assembly neutral types. The compiler will explode them and only embed the ones you use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's what it looks like in reflector:&lt;/p&gt;

&lt;p&gt;&lt;img src='http://davidfowl.com/content/images/2014/May/ANI.png'  alt="Assembly Neutral Carrier Assembly" /&gt;&lt;/p&gt;

&lt;p&gt;If you're interested in the implementation &lt;a href='https://github.com/aspnet/KRuntime/blob/8403aa0540ca57504462086ee1c824a19ef82baa/src/Microsoft.Framework.Runtime.Roslyn/AssemblyNeutral/AssemblyNeutralWorker.cs' &gt;check it out on github&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 19 May 2014 09:02:35 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10526781</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF7 - New Platforms, New Data Stores</title><description>&lt;p&gt;At TechEd North America we were excited to announce our plans for EF7, and even demo some very early features. This post will cover the announcements we made during the session. You can also watch the recorded session from TechEd (the EF7 content starts at &lt;font style="background-color: #ffffff"&gt;&lt;strong&gt;46:40&lt;/strong&gt;&lt;/font&gt;). When watching the demos please bear in mind that this is a very early preview - not all the features shown are even submitted into the main code base yet.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B417"&gt;&lt;img title="VideoLink" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="VideoLink" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/1222.VideoLink_5F00_3D8E2ECE.png" width="309" height="175" /&gt;&lt;/a&gt;     &lt;br /&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B417"&gt;Entity Framework Session @ TechEd North America 2014&lt;/a&gt;     &lt;br /&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;EF7 Enables New Platforms&lt;/h2&gt;  &lt;p&gt;Entity Framework is a popular data access choice for traditional client and server applications that target the full .NET Framework. This includes applications built with technologies such as WPF, WinForms and ASP.NET. As we look to the future, we believe there is value in providing the same programming model for data access on the remaining platforms where .NET development is common. This includes Windows Store, Windows Phone and the &lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385"&gt;Cloud Optimized .NET that was announced at TechEd&lt;/a&gt;&lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;. EF7 will work on all of these platforms as well as Mono, on both Mac and Linux.&lt;/p&gt;  &lt;p&gt;For Windows Phone and Windows store, the initial goal is to provide local data access using EF. SQLite is the most common database of choice on devices, and will be our primary story for local data with EF7. The full provider model will be available though, so other data stores can be supported also.&lt;/p&gt;  &lt;p&gt;In the &lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B417"&gt;TechEd session&lt;/a&gt; you can see a demo of EF7 being used in a Universal App (targeting Windows and Windows Phone) starting at &lt;strong&gt;1:04:00&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;EF7 Enables New Data Stores&lt;/h2&gt;  &lt;p&gt;While parts of Entity Framework are clearly tied to relational data stores, much of the functionality that EF provides is applicable to many non-relational data stores too. Examples of such functionality include change tracking, LINQ, and unit of work. In EF7 we will be enabling providers that target non-relational data stores, such as Azure Table Storage.&lt;/p&gt;  &lt;p&gt;We are explicitly not trying to build an abstraction layer that hides the type of data store you are targeting. The common patterns/components that apply to most data stores will be handled by the core framework. Things that are specific to particular types of data stores will be available as extensions that are included as part of the provider. For example, the concept of a model builder that allows you to configure your model will be part of the core framework. However, the ability to configure things such as cascade delete on a foreign key constraint will be included as extensions in the relational database provider. &lt;/p&gt;  &lt;p&gt;In the &lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B417"&gt;TechEd session&lt;/a&gt; you can see a demo of EF7 being used to access Azure Table Storage starting at &lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;&lt;strong&gt;56:45&lt;/strong&gt;&lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Challenges&lt;/h2&gt;  &lt;p&gt;As we look at what we want to achieve in EF7 we’ve had to take a realistic look at our current code base. While it has served us well and allowed us to release some solid versions of EF in recent times, it is not really setup to achieve what we want to in EF7.&lt;/p&gt;  &lt;p&gt;The EF code base has a long history, going back to the WinFS days, with parts of the code base being 10+ years old. The current code base makes extensive use of older APIs and design patterns. Many of the APIs that EF uses heavily are not available on the new platforms we want to target. In addition, the code base is monolithic in nature which makes it difficult to implement new features and increasingly harder to change things without breaking existing functionality.&lt;/p&gt;  &lt;p&gt;When Entity Framework began life, it’s charter was more to do with the Entity Data Model vision rather than being a best-of-breed O/RM. As a result, there are many seldom used features and capabilities in the code base that hamper performance and complicate development, but are not feasible to remove due to the monolithic nature of the implementation. We also have a number of unintuitive behaviors that are engrained into the framework and hard to change or remove for the same reasons.&lt;/p&gt;  &lt;p&gt;While using less resources is desirable on all platforms it becomes more prominent on devices as they typically have fewer resources than desktop and server machines. These concerns were not a driving factor when EF was designed and implemented. The current resource usage of EF hinders its ability to be a good data access offering on devices. We’ve done some investigation on lowering resource usage and found it to require architectural changes that require a very large amount of work. As we move toward cloud computing, low resource usage is also desirable as it allows greater density of applications on servers – and is often directly tied to billing.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;EF7 is Lightweight and Extensible&lt;/h2&gt;  &lt;p&gt;EF7 will be a lightweight and extensible version of Entity Framework that just pulls forward the commonly used features. In addition, we’ll be able to include some commonly requested features that would have been difficult to implement in the existing code base, but can be included from the start in EF7.&lt;/p&gt;  &lt;p&gt;We’ll be keeping the same patterns and concepts that you are used to in Entity Framework, except where there is a compelling reason to change them. You’ll see the same DbContext/DbSet based API but it will be built over building block components that are easy to replace or extend as needed – the same pattern we’ve used for some of the isolated components we’ve added in recent EF releases.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What About My EF6 Apps&lt;/h2&gt;  &lt;p&gt;We will still continue to invest in EF6 while we work to make EF7 have better feature parity with EF6. In fact, we implemented the EF6.1 and EF6.1.1 releases while working on the EF7 code base.&lt;/p&gt;  &lt;p&gt;Upgrade from EF6 to EF7 is a key scenario for us, both in terms of existing code and existing knowledge. We’ll be keeping the same concepts and patterns wherever it makes sense. The upgrade to EF7 will require some changes to your code. Our aim is that code that uses the core functionality of the DbContext API will upgrade easily, code that makes use of the lower level APIs in EF may require more complicated changes.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Get Involved&lt;/h2&gt;  &lt;p&gt;It’s early days, but we are underway with the EF7 implementation. We’re developing in the &lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;&lt;a href="https://github.com/aspnet/EntityFramework"&gt;EntityFramework GitHub repository&lt;/a&gt; &lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;and have nightly builds available. We aren’t able to accept contributions just yet, but we will in the near future.&lt;/p&gt;  &lt;p&gt;If you want to try out the nightly builds, just bear in mind that this is pre-alpha code and there is a lot of functionality that is partially implemented or still to be added. Visit our &lt;font style="background-color: #ffff00"&gt;&lt;/font&gt;&lt;a href="https://github.com/aspnet/EntityFramework/wiki"&gt;documentation on GitHub&lt;/a&gt;&lt;font style="background-color: #ffff00"&gt;&lt;/font&gt; for more information on getting started with nightly builds.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;We’ll keep you updated with more details on EF7 and the features we are implementing over the coming months.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10526781" width="1" height="1"&gt;</description><pubDate>Mon, 19 May 2014 18:46:26 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">126</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10526781</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/05/19/ef7-new-platforms-new-data-stores.aspx#comments</comments></item><item><guid isPermaLink="false">0ca2ab30-0f9b-4ee7-ba84-12b0fe63fb67</guid><link>http://davidfowl.com/assembly-neutral-interfaces/</link><title>Assembly Neutral Interfaces</title><description>&lt;p&gt;If you look around the ASP.NET vNext code base, you'll see the &lt;code&gt;[AssemblyNeutral]&lt;/code&gt; attribute on certain types. People have asked me what they were on Twitter and JabbR so I thought I'd write a blog post about it.&lt;/p&gt;

&lt;p&gt;Loose coupling is something we strive for when developing software. We develop systems that are properly layered and well thought out until one day, we need to take a dependency on something that wasn't factored into the big picture.&lt;/p&gt;

&lt;p&gt;Today, .NET framework has a &lt;a href='http://blogs.msdn.com/b/kirillosenkov/archive/2013/11/23/circular-assembly-references-in-the-net-framework.aspx' &gt;messy dependency graph&lt;/a&gt; because everytime something new comes along (for e.g. Task) that needs to be "core" it has to be pushed to into a lower assembly. This is why mscorlib has everything and the kitchen sink.&lt;/p&gt;

&lt;p&gt;There's been tons of discussions on how techniques like duck typing can help solve these types of layering problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://haacked.com/archive/2007/08/19/why-duck-typing-matters-to-c-developers.aspx/' &gt;http://haacked.com/archive/2007/08/19/why-duck-typing-matters-to-c-developers.aspx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='http://ericlippert.com/2014/01/02/what-is-duck-typing/' &gt;http://ericlippert.com/2014/01/02/what-is-duck-typing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='http://kirillosenkov.blogspot.com/2007/09/c-30-collection-initializers-duck.html' &gt;http://kirillosenkov.blogspot.com/2007/09/c-30-collection-initializers-duck.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other languages solve these problems in different ways. Go for example, &lt;a href='http://talks.golang.org/2012/splash.article' #TOC_15"&gt;favors composition over inheritance&lt;/a&gt; which I think is a good thing. Their interfaces match based on structural equivalence and this allows a library to re-declare a dependency as long as the required members match. In fact, some places in the golang standard library duplicate tiny interfaces rather than take a dependency on another package.&lt;/p&gt;

&lt;p&gt;C# even has some duck typing today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The compiler will support foreach on your type if you implement a GetEnumerator method&lt;/li&gt;
&lt;li&gt;The compiler let you use collection initializer syntax on your type if you have a method called Add.&lt;/li&gt;
&lt;li&gt;&lt;a href='http://msmvps.com/blogs/jon_skeet/archive/2011/05/13/eduasync-part-3-the-shape-of-the-async-method-awaitable-boundary.aspx' &gt;You can make anything awaitable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what is an assembly neutral interface? Let's talk about the problem we have today in .NET with an example. Let's say the EntityFramework has a dependency on a logger interface:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;public namespace EntityFramework  
{
    public interface ILogger
    {
       void Log(string value);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, a customer that wants to use EF with log4Net:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-csharp"&gt;public namespace EntityFramework.Log4Net  
{
    public class Log4NetLogger : ILogger
    {
        public void Log(string value)
        {
            // Do log4net specific stuff
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;They define this class and put it in a package called EntityFramework.Log4Net.&lt;/p&gt;

&lt;p&gt;Another customer wants to use nLog, and the same thing happens.&lt;/p&gt;

&lt;p&gt;Wouldn't it be great if everyone agreed on the same logging abstraction? Let's say we lived in a world where they did, what assembly/package would that interface live in? Where would the source live? What would it be called? Who owns it? How does it version? How do you convince each of those library authors to take a dependency on this logger abstraction. &lt;/p&gt;

&lt;p&gt;There are examples of this in .NET, the most popular one being the &lt;a href='https://commonservicelocator.codeplex.com/' &gt;Common Service Locator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now as the author of log4net/nLog/name your logger abstraction, you need to maintain packages for every framework you want to integrate with.&lt;/p&gt;

&lt;p&gt;What if everyone agreed on an interface definition (the full definition!) and what if it was just a contract. Once agreed upon, this contract can live anywhere as long as the namespace and name match. That's an assembly neutral interface; the full type name of the type is the namespace name plus the type name, there is no assembly name (hence neutral). What this means is the type can be re-declared in source or it could be brought in via a nuget package (just for intellisense, as it's not a deployment artifact).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reflection works so you can inspect types and see if they implement an interface without bizzare logic.&lt;/li&gt;
&lt;li&gt;Dependency injection works because the type is the exact same type, not a generated proxy.&lt;/li&gt;
&lt;li&gt;Types can be used as dictionary keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next time, I'll dig into how we implemented it using Roslyn and assembly load magic and how we're using it throughout the stack.&lt;/p&gt;</description><pubDate>Fri, 16 May 2014 16:58:29 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">0346bdef-3126-4953-b565-c2fc5f9cfda9</guid><link>http://davidfowl.com/asp-net-vnext-architecture/</link><title>ASP.NET vNext Overview</title><description>&lt;p&gt;In the last post I gave a brief introduction to ASP.NET vNext and the goals of the framework. This post will dive into more details on the overall architecture. &lt;/p&gt;

&lt;p&gt;This diagram shows the dependencies between the github repositories:&lt;/p&gt;

&lt;p&gt;&lt;img src='http://davidfowl.com/content/images/2014/May/vNext_graph2.png'  alt="ASP.NET vNext github repository dependency graph" /&gt;&lt;/p&gt;

&lt;p&gt;These aren't all of the dependencies but it's enough to get an idea of the design. The big categories are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/KRuntime' &gt;KRuntime&lt;/a&gt;&lt;/strong&gt; - This contains the SDK and the runtime (kvm, kpm, and the kre). This includes all of the logic to boot the CoreCLR, full CLR and mono. It also contains a piece of code that Visual Studio communicates with to drive including intellisense, compilation errors in the IDE etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cross cutting concerns&lt;/strong&gt; - These include &lt;strong&gt;&lt;a href='https://github.com/aspnet/Logging' &gt;Logging&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href='https://github.com/aspnet/DependencyInjection' &gt;DependencyInjection&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href='https://github.com/aspnet/FileSystem' &gt;FileSystem&lt;/a&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;a href='https://github.com/aspnet/Configuration' &gt;Configuration&lt;/a&gt;&lt;/strong&gt;. Most of the projects depend on these in some form (directly or indirectly). Hopefully those are self explanatory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/HttpAbstractions' &gt;HttpAbstractions&lt;/a&gt;&lt;/strong&gt; - This repository contains the new http abstractions, including but not limited to - HttpContext, HttpRequest and HttpResponse and the new IBuilder to wire up middleware. It also contains the &lt;a href='http://owin.org/' &gt;OWIN&lt;/a&gt; support.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/Hosting' &gt;Hosting&lt;/a&gt;&lt;/strong&gt; - This repository has the project that understands how to boot web applications. All of the logic to find the Startup class and call into the Configure entry point lives here. It also contains the interfaces required to write up an http server. I'll show how easy this is in a later post by building an ASP.NET vNext layer on top of an unmodified &lt;a href='https://github.com/Bobris/Nowin' &gt;Nowin&lt;/a&gt; webserver.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/Razor' &gt;Razor&lt;/a&gt;&lt;/strong&gt; - Razor needs no introduction. The new razor has a new code generation model that isn't dependent on code dom and that we intend to make simpler to extend. We're going to make sure that the new Razor tooling works well for other frameworks that have razor support (Nancy, ServiceStack, SimpleWeb).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/Mvc' &gt;Mvc&lt;/a&gt;&lt;/strong&gt; - This is the new MVC/WebAPI/WebPages combined framework. We don't have the WebPages in there yet so don't go looking for it :). Some things to call out about the new Mvc:
&lt;ul&gt;&lt;li&gt;There are no more statics&lt;/li&gt;
&lt;li&gt;There's alot more extensibility points&lt;/li&gt;
&lt;li&gt;It can be self hosted&lt;/li&gt;
&lt;li&gt;Controllers don't require a base class.&lt;/li&gt;
&lt;li&gt;RazorViewEngine is Roslyn based&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*Everything*&lt;/strong&gt; is async&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href='https://github.com/aspnet/SignalR-Server' &gt;SignalR-Server&lt;/a&gt;&lt;/strong&gt; - Near and dear to my heart is SignalR vNext. This version is pretty identical to &lt;a href='https://github.com/SignalR/SignalR' &gt;https://github.com/SignalR/SignalR&lt;/a&gt; but built on top of the new http stack and cross cutting concerns. Stay tuned, we have lots of new features planned!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's still early days, so don't expect to be deploying this to production, but this post should give you a good starting place if you're interested in any of the particular areas of the code.&lt;/p&gt;

&lt;h3 id="bonus"&gt;Bonus&lt;/h3&gt;

&lt;p&gt;If you're bored and want to read some code, here are some interesting things to look at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/KRuntime/blob/dev/src/Microsoft.Framework.Runtime.Roslyn/RoslynCompiler.cs' &gt;The Roslyn compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/KRuntime/blob/dev/src/Microsoft.Framework.Runtime.Roslyn/AssemblyNeutral/AssemblyNeutralWorker.cs' &gt;Assembly Neutral Interfaces&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/KRuntime/blob/dev/src/Microsoft.Framework.DesignTimeHost/ApplicationContext.cs' &gt;The Design Time Host VS integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.PipelineCore/DefaultHttpContext.cs' &gt;The DefaultHttpContext implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/Routing/blob/dev/src/Microsoft.AspNet.Routing/RouteCollection.cs' &gt;The new RouteCollection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/DataProtection/tree/dev/src/Microsoft.AspNet.Security.DataProtection' &gt;The crazy DataProtection code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/Razor/tree/dev/src/Microsoft.AspNet.Razor/Generator' &gt;The new Razor CodeGenerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/KRuntime/blob/dev/src/klr.net45/KatanaManager.h' &gt;Code that can boot the full CLR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNet.Mvc.Core/ReflectedActionInvoker.cs' &gt;The MVC ActionInvoker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Fri, 16 May 2014 05:57:05 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/a-30-minute-look-at-asp-net-vnext</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/KbIHkhY--4I/a-30-minute-look-at-asp-net-vnext</link><title>A 30 Minute Look At ASP.NET vNext</title><description>&lt;p&gt;This week at TechEd, the ASP.NET team announced some pretty exciting updates on the way for ASP.NET.&lt;/p&gt;  &lt;h2&gt;Top Links&lt;/h2&gt;  &lt;h3&gt;Blog Posts&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/05/13/asp-net-vnext-the-future-of-net-on-the-server.aspx"&gt;ASP.NET vNext: the future of .NET on the Server&lt;/a&gt; (.NET Web Development and Tools Blog) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx"&gt;Introducing ASP.NET vNext&lt;/a&gt; (Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://davidfowl.com/asp-net-vnext/"&gt;ASP.NET vNext&lt;/a&gt; (David Fowler) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/dotnet/archive/2014/05/12/the-next-generation-of-net-asp-net-vnext.aspx"&gt;The Next Generation of .NET – ASP.NET vNext&lt;/a&gt; (.NET Team Blog) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014?t=microsoft-asp.net#fbid="&gt;ASP.NET team session videos from TechEd&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385#fbid="&gt;INTRODUCING: The Future of .NET on the Server&lt;/a&gt; (Scott Hunter and Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/C9-09"&gt;Channel 9 Live: ASP.NET Developer Q&amp;amp;A&lt;/a&gt;&amp;#160; (Scott Hunter and Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411#fbid="&gt;DEEP DIVE: The Future of .NET on the Server&lt;/a&gt; (David Fowler and Scott Hanselman) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://www.asp.net/vnext"&gt;ASP.NET site content&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/overview"&gt;Getting Started with ASP.NET vNext&lt;/a&gt; (Mike Wasson) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-mvc-music-store"&gt;MVC Music Store Sample Application for ASP.NET vNext&lt;/a&gt; (Cephas Lin) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-bugtracker"&gt;BugTracker Sample Application for ASP.NET vNext&lt;/a&gt; (Erik Reitan) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Getting Involved&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://forums.asp.net/1255.aspx/1?ASP+NET+vNext"&gt;ASP.NET vNext Discussion Forum&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="https://jabbr.net/#/rooms/AspNetvNext"&gt;ASP.NET vNext chat on JabbR&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="https://github.com/aspnet/Home"&gt;ASP.NET vNext Home repository on GitHub&lt;/a&gt; - The place to get started with the code &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;What Is It?&lt;/h2&gt;  &lt;p&gt;In case you haven't read up on it, I'll just quote from the ASP.NET site:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;The next version of ASP.NET (“ASP.NET vNext”) has been re-designed from the ground up. The goal is to create a lean and composable .NET stack for building modern cloud-based apps.&lt;/p&gt;    &lt;p&gt;Here are some of the features of ASP.NET vNext:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;vNext includes new cloud-optimized versions of MVC, Web API, Web Pages, SignalR, and Entity Framework. &lt;/li&gt;      &lt;li&gt;MVC, Web API, and Web Pages will be merged into one framework, called MVC 6. The new framework removes a lot of overlap between the existing MVC and Web API frameworks. It uses a common set of abstractions for routing, action selection, filters, model binding, and so on. You can use the framework to create both UI (HTML) and web APIs. &lt;/li&gt;      &lt;li&gt;ASP.NET vNext apps can use a cloud-optimized subset of .NET vNext. This subset is factored for server and web workloads, has a smaller footprint than the full .NET vNext, and supports side-by-side deployment. &lt;/li&gt;      &lt;li&gt;MVC 6 has no dependency on System.Web. The result is a leaner framework, with faster startup time and lower memory consumption. &lt;/li&gt;      &lt;li&gt;vNext will support true side-by-side deployment. If your app uses the cloud-optimized subset of .NET vNext, you can bin deploy all of your dependencies, including the .NET vNext (cloud optimized) packages. That means you can update your app without affecting other applications on the same server. &lt;/li&gt;      &lt;li&gt;vNext is host agnostic. You can host your app in IIS, or self-host in a custom process. (Web API 2 and SignalR 2 already support self-hosting; ASP.NET vNext brings this same capability to MVC.) &lt;/li&gt;      &lt;li&gt;Dependency injection is built into the framework. Use your preferred IoC container to register dependencies. &lt;/li&gt;      &lt;li&gt;vNext uses the Rosyln compiler to compile code dynamically. You will be able to edit a code file, refresh the browser, and see the changes without rebuilding the project. &lt;/li&gt;      &lt;li&gt;vNext is open source and cross platform. &lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;To me as a web developer, this means I get:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;All the advantages of the .NET platform (performance, stability, security, comprehensive API), and &lt;/li&gt;    &lt;li&gt;The development experience of C# and Visual Studio... with &lt;/li&gt;    &lt;li&gt;The simplicity, portability, quick dev refresh cycle and flexibility of an interpreted web framework. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;And I like the sound of that.&lt;/p&gt;  &lt;h2&gt;Source Code&lt;/h2&gt;  &lt;p&gt;All the source code and samples are published under a new &lt;a href="https://github.com/aspnet"&gt;ASP.NET organization on GitHub&lt;/a&gt;. There are lots of interesting repos to look at; here are some top ones to get started with:&lt;/p&gt;  &lt;h3&gt;&lt;a href="https://github.com/aspnet/Home"&gt;Home repository&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;This is the place to get started. The readme for this repo explains how to install and run the Hello World samples.&lt;/p&gt;  &lt;h3&gt;&lt;a title="https://github.com/aspnet/MusicStore" href="https://github.com/aspnet/MusicStore"&gt;Music Store sample&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;Ah, the Music Store. The team wanted some samples to validate and test vNext as they developed it, and this was one of them. I updated the source code to ASP.NET MVC 5 and threw it over the wall to them, and it seems to have held up. Cephas Lin has a &lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-mvc-music-store"&gt;Music Store walkthrough posted in the vNext content on the ASP.NET site&lt;/a&gt;, and it's pretty easy to follow along.&lt;/p&gt;  &lt;h3&gt;&lt;a href="https://github.com/aspnet/BugTracker"&gt;BugTracker sample&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;The BugTracker is a single page application using SignalR,&amp;#160; Knockout.js and Web API. I'm pretty happy that they had a single page application as one of their validation cases from the beginning.&lt;/p&gt;  &lt;h3&gt;&lt;a title="https://github.com/aspnet/KRuntime" href="https://github.com/aspnet/KRuntime"&gt;KRuntime&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;If you're feeling adventurous, this it the actual runtime. It includes things like the compilation system, SDK tools, and the native CLR hosts. (parental warning advisory if stumbling across some C++ gives you nightmares)&lt;/p&gt;  &lt;ul&gt;&lt;!--EndFragment--&gt;&lt;/ul&gt;  &lt;p&gt;&lt;font size="5"&gt;Quick Walkthrough&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;I promised I'd skip the detailed walkthrough, because you really should be looking at the &amp;quot;official&amp;quot; ones I've linked to above. &lt;strong&gt;My point here is not really guide you through them, but to give you a look at what the experience is like if you're not feeling up to doing it yourself. So let's see what I can get running in 30 minutes or so (until my next meeting). If you want to follow along, read the walkthroughs.&lt;/strong&gt;&lt;/p&gt;  &lt;h3&gt;Important Notes Before We Get Started&lt;/h3&gt;  &lt;p&gt;I'm doing this on my dev machine. It runs side by side with my existing .NET and Visual Studio 2013 installs.&lt;/p&gt;  &lt;p&gt;This looks a bit fiddly because we're doing this all from the commandline. Don't worry if that's not your bag - this will all be supported via Visual Studio. This is an early preview. But, it's good that this level of control is available. Note that I'm doing all of this without firing up Visual Studio or installing any other software.&lt;/p&gt;  &lt;p&gt;You'll see the letter K pops up from time to time. This was internally called Project K before it was released. I have no idea if the k will go away now, but I kind of like it. So we've got kvm (k version manager), kre (k runtime engine), kpm (k package manager), and k (the actual bootstrapper to run our app).&lt;/p&gt;  &lt;h3&gt;The Home Repo samples&lt;/h3&gt;  &lt;p&gt;First, let's try out the &lt;a href="https://github.com/aspnet/home"&gt;ASP.NET vNext Home repo&lt;/a&gt;. I've already got this locally, but for the purposes of science I'll pretend that I don't. Since I'm just kicking the tires here, instead of cloning the repo I'll just download the zip to my desktop, unblock if necessary, and unzip it.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-05-13_14h27_33" href="http://www.flickr.com/photos/36836555@N00/14200631213/"&gt;&lt;img border="0" alt="2014-05-13_14h27_33" src="http://farm3.static.flickr.com/2919/14200631213_8cc6c267cf_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's what that gets me:&lt;/p&gt;  &lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5E2E-AE5E

 Directory of C:\Users\Jon\Desktop\Home-master\Home-master

05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          .
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          ..
05/13/2014  01:51 PM               851 .gitattributes
05/13/2014  01:51 PM               245 .gitignore
05/13/2014  01:51 PM             1,513 CONTRIBUTING.md
05/13/2014  01:51 PM               356 kvm.cmd
05/13/2014  01:51 PM            17,278 kvm.ps1
05/13/2014  01:51 PM                28 kvmsetup.cmd
05/13/2014  01:51 PM               592 LICENSE.txt
05/13/2014  01:51 PM               481 NuGet.Config
05/13/2014  01:51 PM             6,390 README.md
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          samples
               9 File(s)         27,734 bytes
               3 Dir(s)  11,363,086,336 bytes free&lt;/pre&gt;

&lt;p&gt;The next step in the readme tells me to execute kvmsetup.cmd, which tells me this:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;Copying file C:\Users\Jon\.kre\bin\kvm.ps1
Copying file C:\Users\Jon\.kre\bin\kvm.cmd
Adding C:\Users\Jon\.kre\bin to process PATH
Adding C:\Users\Jon\.kre\bin to user PATH
Adding C:\Program Files\KRE;%USERPROFILE%\.kre to process KRE_HOME
Adding C:\Program Files\KRE;%USERPROFILE%\.kre to machine KRE_HOME
Press any key to continue ...&lt;/pre&gt;

&lt;p&gt;And with that, we've got the version manager installed. Important: this is the version manager, not the runtime. We can install multiple versions of the runtime engine, and use kvm to select the active one for a project.&lt;/p&gt;

&lt;p&gt;Next, the readme tells me to install a named version of the K Runtime Engine: &lt;code&gt;kvm install 0.1-alpha-build-0421&lt;/code&gt;&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;kvm install 0.1-alpha-build-0421
Downloading KRE-svr50-x86.0.1-alpha-build-0421 from https://www.myget.org/F/aspnetvnext/api/v2/
Installing to C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421
Adding C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin to process PATH&lt;/pre&gt;

&lt;p&gt;Now we've got a runtime installed, so we can run some samples. The readme recommends running the console sample first, and I think that makes sense since it's an incredibly simple app that verifies things are installed. So I cd to samples\ConsoleApp and run kpm restore. This looks scary, but it's really fast, and it's a good thing. The idea is that instead of running on big, monolithic framework assemblies, ASP.NET vNext is grabbing a bunch of small, focused NuGet packages. &lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;cd samples\ConsoleApp

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;kpm restore

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;CALL &amp;quot;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\KLR.cmd&amp;quot; --lib &amp;quot;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\lib\Microsoft.Framework.PackageManager&amp;quot; &amp;quot;Microsoft.Framework.PackageManager&amp;quot; restore
Restoring packages for C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp\project.json
Attempting to resolve dependency ConsoleApp &amp;gt;= 1.0.0
Attempting to resolve dependency System.Console &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Console'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Console'
Attempting to resolve dependency mscorlib &amp;gt;=
Attempting to resolve dependency System &amp;gt;=
Attempting to resolve dependency System.Core &amp;gt;=
Attempting to resolve dependency Microsoft.CSharp &amp;gt;=
Attempting to resolve dependency ConsoleApp &amp;gt;= 1.0.0
Attempting to resolve dependency System.Console &amp;gt;= 4.0.0.0
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Console' 931ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Console' 972ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Console/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Console/4.0.0.0 1696ms
Attempting to resolve dependency System.IO &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.IO'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.IO'
Attempting to resolve dependency System.Runtime &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Runtime'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Runtime'
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Runtime' 659ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.IO' 838ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Runtime' 841ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Runtime/4.0.20.0
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.IO' 954ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.IO/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.IO/4.0.0.0 1779ms
Attempting to resolve dependency System.Text.Encoding &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Text.Encoding'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Text.Encoding'
Attempting to resolve dependency System.Threading.Tasks &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Threading.Tasks'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Threading.Tasks'
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Runtime/4.0.20.0 1919ms
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Text.Encoding' 746ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Text.Encoding' 837ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Text.Encoding/4.0.10.0
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Threading.Tasks' 843ms
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Threading.Tasks' 1051ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Threading.Tasks/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Text.Encoding/4.0.10.0 1356ms
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Threading.Tasks/4.0.0.0 1721ms
Resolving complete, 8357ms elapsed
Installing System.Console 4.0.0.0
Installing System.Runtime 4.0.20.0
Installing System.IO 4.0.0.0
Installing System.Text.Encoding 4.0.10.0
Installing System.Threading.Tasks 4.0.0.0
Restore complete, 8495ms elapsed&lt;/pre&gt;

&lt;p&gt;Now I run it with k run:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;k run
Hello World

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;&lt;/pre&gt;

&lt;p&gt;Like I said, not all that exciting. Just a quick verification check. Now that I know that's working, I'll quickly pop into one of the other sandbox samples, the HelloWeb one. Notice how simple the startup.cs file is (&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/overview"&gt;the official walkthrough explains it in detail&lt;/a&gt;). &lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5E2E-AE5E

 Directory of C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb

05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          .
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          ..
05/13/2014  01:51 PM           310,647 image.jpg
05/13/2014  01:51 PM               506 project.json
05/13/2014  01:51 PM               227 Startup.cs
               3 File(s)        311,380 bytes
               2 Dir(s)  11,368,951,808 bytes free

C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;copy startup.cs con
using Microsoft.AspNet.Builder;

namespace KWebStartup
{
    public class Startup
    {
        public void Configure(IBuilder app)
        {
            app.UseStaticFiles();
            app.UseWelcomePage();
        }
    }
}        1 file(s) copied.

C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;&lt;/pre&gt;

&lt;p&gt;Now I'll call kpm restore , just like before. This time kpm restore takes a bit longer, because there are more included packages (listed in &lt;a href="https://github.com/aspnet/Home/blob/master/samples/HelloWeb/project.json"&gt;project.json&lt;/a&gt;) and their dependencies.&lt;/p&gt;

&lt;p&gt;And I'm ready to run it. This time, instead of k run, I'll call k web since it's a web app. If I forget and call k run, it reminds what's what:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;k run
'HelloWeb' does not contain a static 'Main' method suitable for an entry point&lt;/pre&gt;

&lt;p&gt;Fine, k web it is. It tells me the server's started, but how do I view it? Well, the readme tells me it's at &lt;a href="http://localhost:5001"&gt;http://localhost:5001&lt;/a&gt;, but if I didn't know I could consult the commands section of project.json:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;&amp;quot;commands&amp;quot;: {
    &amp;quot;web&amp;quot;: &amp;quot;Microsoft.AspNet.Hosting server=Microsoft.AspNet.Server.WebListener server.urls=http://localhost:5001&amp;quot;
  }&lt;/pre&gt;

&lt;p&gt;Simple enough. And browsing to that gives me a cool hello world page:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-05-13_15h01_50" href="http://www.flickr.com/photos/36836555@N00/13993838169/"&gt;&lt;img border="0" alt="2014-05-13_15h01_50" src="http://farm6.static.flickr.com/5566/13993838169_53a2e6619f_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nerd note: That page is shown because we've got app.UseWelcomePage() in startup.cs. There are no images or css in the project because everything's contained in the emitted HTML. It's actually really impressive - it's got embedded fonts, images as data:urls, CSS, and a minimized version of jQuery (for some nice animations), so it's a 287KB HTML payload... but since it's being served locally and you're not going to run this in production, not a problem.&lt;/p&gt;

&lt;p&gt;Nerd smackdown: David Fowler reminded me that this welcome page has been in Katana for a while.&lt;/p&gt;

&lt;h3&gt;Music Store&lt;/h3&gt;

&lt;p&gt;Okay, now that I've got this stuff installed, let's see how fast I can get the Music Store sample running.&lt;/p&gt;

&lt;p&gt;Step 1: Grab the zip from &lt;a title="https://github.com/aspnet/MusicStore" href="https://github.com/aspnet/MusicStore"&gt;https://github.com/aspnet/MusicStore&lt;/a&gt;, verify it's not blocked, and unzip on desktop.&lt;/p&gt;

&lt;p&gt;Step 2: Run kpm restore.&lt;/p&gt;

&lt;p&gt;Step 3: Select the hosting opeion (Helios, SelfHost, CustomHost - explained &lt;a href="https://github.com/aspnet/MusicStore"&gt;here&lt;/a&gt;). In this case I'll stick with selfhost, so I run k web and browse to localhost:5002:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-05-13_15h15_46" href="http://www.flickr.com/photos/36836555@N00/13993925660/"&gt;&lt;img border="0" alt="2014-05-13_15h15_46" src="http://farm3.static.flickr.com/2897/13993925660_5110a4b5e3.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yippee!&lt;/p&gt;

&lt;p&gt;Again, the point is that it's pretty quick and painless to get started and play with the samples; just follow the walkthroughs. If you're used to Node or Rails a lot of these steps should seem pretty familiar. If you're not and this freaks you out, don't be freaked out... this will all work smoothly from within Visual Studio in the release version. This is a preview. Take a look! Have Fun! Let us know what you think!&lt;/p&gt;

&lt;h2&gt;Videos&lt;/h2&gt;

&lt;p&gt;The best way to get up to speed is by watching the videos I mentioned earlier.&lt;/p&gt;

&lt;p&gt;&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385/player?h=540&amp;amp;w=960" frameborder="0" scrolling="no" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411/player?h=540&amp;amp;w=960" frameborder="0" scrolling="no" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=KbIHkhY--4I:co1XT4kPU5U:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/KbIHkhY--4I" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 13 May 2014 23:05:50 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/a-30-minute-look-at-asp-net-vnext</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B213</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B213</link><category>microsoft-asp.net</category><category>visual-studio</category><title>ASP.NET: Building Web Application Using ASP.NET and Visual Studio</title><description>Learn about the latest features in Visual Studio 2013, including dozens of tips and tricks for building web applications using ASP.NET and Visual Studio 2013. Learn about the new HTML5 editor, new powerful CSS3 features, great new innovations in publishing and Azure integration, and much more. We also push the new Browser Link technology to its limits and beyond, explore what mobile and multi-browser development looks like with Visual Studio 2013, as well as look at new ways to run Web API or SignalR that use significantly less memory. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a2b4d8c386e749b1a484a328011dd538"&gt;</description><pubDate>Tue, 13 May 2014 13:05:40 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B213</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Learn about the latest features in Visual Studio 2013, including dozens of tips and tricks for building web applications using ASP.NET and Visual Studio 2013. Learn about the new HTML5 editor, new powerful CSS3 features, great new innovations in publishing and Azure integration, and much more. We also push the new Browser Link technology to its limits and beyond, explore what mobile and multi-browser development looks like with Visual Studio 2013, as well as look at new ways to run Web API or SignalR that use significantly less memory.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4668</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Scott Hanselman</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/C9-09</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/C9-09</link><category>microsoft-asp.net</category><title>Channel 9 Live: ASP.NET Developer Q&amp;A with Scott Hunter &amp; Scott Hanselman</title><description>&lt;p&gt;The Scotts answer your questions live!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d085d114425441739853a329009071cd"&gt;</description><pubDate>Tue, 13 May 2014 07:03:27 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/C9-09</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The Scotts answer your questions live! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2133</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Scott Hanselman</dc:creator></item><item><guid isPermaLink="false">aa910713-5c4a-4b07-98cb-7f4cdc44166d</guid><link>http://davidfowl.com/asp-net-vnext/</link><title>ASP.NET vNext</title><description>&lt;p&gt;For the past few months I've been working on what we're now calling ASP.NET vNext (don't worry I haven't forgotten about SignalR).&lt;/p&gt;

&lt;h3 id="abetterplatformforbuildingwebapplicationswithnet"&gt;A better platform for building web applications with .NET&lt;/h3&gt;

&lt;p&gt;We took a look at some of the common problems  that exist in our ecosystem today, and took best practices learned around .NET, ASP.NET and web development over the years and combined them to come up with the following requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low friction development experience
&lt;ul&gt;&lt;li&gt;NuGet packages are the unit of reference (not assemblies)&lt;/li&gt;
&lt;li&gt;Projects and NuGet packages are interchangeable. Projects can depend on packages and packages can depend on projects.&lt;/li&gt;
&lt;li&gt;Runtime compilation; building a binary on disk isn't required to run (thank you Roslyn).
&lt;ul&gt;&lt;li&gt;Ability to change code and f5 in the browser without an explicit build step.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Unified compilation; Same design time and runtime compiler. No more web.config
&lt;code&gt;&amp;lt;compilation&amp;gt;&lt;/code&gt; section.&lt;/li&gt;
&lt;li&gt;First class ability to produce NuGet packages from the project system.&lt;/li&gt;
&lt;li&gt;Human readable and easy to author project files with default conventions.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Dependency injection *everywhere*&lt;/li&gt;
&lt;li&gt;Fast cold start times&lt;/li&gt;
&lt;li&gt;Low memory footprint&lt;/li&gt;
&lt;li&gt;Lightweight pay as you go stack&lt;/li&gt;
&lt;li&gt;No dependency on System.Web&lt;/li&gt;
&lt;li&gt;No strong naming (yes I said it)&lt;/li&gt;
&lt;li&gt;Side by side runtimes&lt;/li&gt;
&lt;li&gt;OSS by default&lt;/li&gt;
&lt;li&gt;Excellent Visual Studio experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="thingswewantedtofix"&gt;Things we wanted to fix&lt;/h3&gt;

&lt;p&gt;There are a bunch of problems we wanted to fix that exist in the current stack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MVC, WebAPI and SignalR all scan for assemblies (using either BuildManager or by looking at the loaded assemblies) looking for types that implement some interface/base class. We wanted to make this more efficient.&lt;/li&gt;
&lt;li&gt;View compilation is always configured separately from your normal project compilation.&lt;/li&gt;
&lt;li&gt;View page errors don't show up in the IDE alongside normal compilation errors.&lt;/li&gt;
&lt;li&gt;Today we have two ASP.NET project types: Web Site and Web Application Projects; they each have their strengths and weaknesses. We wanted to unify these.&lt;/li&gt;
&lt;li&gt;Dependency Injection is different across all of our frameworks (WebAPI, MVC and SignalR). Each of our frameworks came to life at different times and all implemented their own version of dependency injection extensibility.&lt;/li&gt;
&lt;li&gt;Web API and MVC were different but had very similar programming models. Occasionally people would get confused about what to pick and when to pick it. It even sparked some &lt;a href='http://paulstovell.com/blog/one-more-aspnet' &gt;debate&lt;/a&gt; among the &lt;a href='http://encosia.com/asp-net-web-api-vs-asp-net-mvc-apis/' &gt;ASP.NET community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="systemweb"&gt;System.Web&lt;/h3&gt;

&lt;p&gt;It's hard to talk about ASP.NET without mentioning System.Web. It's easy to say that System.Web is this big monolithic, poorly layered assembly, but it has tons of useful functionality. Let's take a tour of the things that go missing when we don't have System.Web in the picture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IIS Integration (Native module)
&lt;ul&gt;&lt;li&gt;aspnet_regiis&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;web.config &lt;code&gt;&amp;lt;system.web&amp;gt;&lt;/code&gt; section&lt;/li&gt;
&lt;li&gt;BuildManager and the ASP.NET compilation system
&lt;ul&gt;&lt;li&gt;aspnet_compiler&lt;/li&gt;
&lt;li&gt;VirtualPathProvider &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;HttpRuntime.Cache&lt;/li&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;HttpContext and friends&lt;/li&gt;
&lt;li&gt;HttpUtility&lt;/li&gt;
&lt;li&gt;Session&lt;/li&gt;
&lt;li&gt;Health Monitoring&lt;/li&gt;
&lt;li&gt;Profile/Membership&lt;/li&gt;
&lt;li&gt;MS Ajax&lt;/li&gt;
&lt;li&gt;JavascriptSerializer&lt;/li&gt;
&lt;li&gt;WCF/IIS Integration&lt;/li&gt;
&lt;li&gt;MachineKey&lt;/li&gt;
&lt;li&gt;OutputCache&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Does dropping System.Web means I will lose this functionality?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nope, we've re-layered things into separate components that you can pick à la carte.&lt;/p&gt;

&lt;p&gt;Next post I'll go over the different components that make up ASP.NET vNext.&lt;/p&gt;

&lt;h4 id="bonus"&gt;Bonus&lt;/h4&gt;

&lt;p&gt;We are working with the Mono team to make it work with *nix, osx&lt;/p&gt;</description><pubDate>Mon, 12 May 2014 19:27:18 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/upcoming-web-camps-summer-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/fUuSM6iy1os/upcoming-web-camps-summer-2014</link><title>Upcoming Web Camps - Summer 2014</title><description>&lt;p&gt;Web Camps are free, no fluff, lots of code events where you can get learn what's new in the Microsoft web platform and how you can put it to use right away. They're by developers for developers - no marketing, just building web apps.&lt;/p&gt;
&lt;p&gt;&lt;a title="DevCamps-Summer-2014" href="http://www.flickr.com/photos/36836555@N00/14149839646/"&gt;&lt;img alt="DevCamps-Summer-2014" src="http://farm6.static.flickr.com/5588/14149839646_3ffc4b0443.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Upcoming events&lt;/h4&gt;
&lt;p&gt;Here's the list, with speakers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;May 20 - &lt;strong&gt;Lisbon&lt;/strong&gt;, Portugal - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; [&lt;a href="http://aka.ms/mswebcamp"&gt;register&lt;/a&gt; (nearly full, hurry!)]&lt;/li&gt;
&lt;li&gt;May 22 - &lt;strong&gt;Milan&lt;/strong&gt;, Italy - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; (additional tracks as part of Cloud e ASP.NET Developer Day) [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587661"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;May 26 - &lt;strong&gt;Helsinki&lt;/strong&gt;, Finland - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032582777"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;May 28 - &lt;strong&gt;Brussels&lt;/strong&gt; (Mechelen), Belgium - Jon Galloway (part of &lt;a href="http://www.techorama.be/"&gt;Techorama&lt;/a&gt;) [sold out]&lt;/li&gt;
&lt;li&gt;June 23 - &lt;strong&gt;New York City&lt;/strong&gt;, NY, USA - &lt;a href="http://www.bradygaster.com/"&gt;Brady Gaster&lt;/a&gt;, &lt;a href="http://nikcodes.com/"&gt;Nik Molnar&lt;/a&gt;, &lt;a href="http://blog.anthonyvanderhoorn.com/"&gt;Anthony van der Hoorn&lt;/a&gt; [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587864"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;July 9&amp;nbsp;- &lt;strong&gt;Los Angeles&lt;/strong&gt;, CA, USA - &lt;a href="https://twitter.com/coolcsh"&gt;Scott Hunter&lt;/a&gt;, Jon Galloway, Daniel Egan, Adam Tuliper&amp;nbsp;[&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587863"&gt;register&lt;/a&gt;] (rescheduled)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Fresh ASP.NET and Visual Studio 2013.2 Content&lt;/h4&gt;
&lt;p&gt;We'll be covering all kinds of great new stuff in ASP.NET, Visual Studio 2013.2 and Azure for web developers. We organized the content so we start with tools and frameworks (e.g. ASP.NET MVC, ASP.NET Web API, Visual Studio 2013.2, Azure Web Sites), then dig into some specific scenarios for modern web application development. Here's the general agenda (varies by location, but should give you the general idea):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keynote&lt;/li&gt;
&lt;li&gt;Introduction to ASP.NET and Visual Studio 2013 Web Tools&lt;/li&gt;
&lt;li&gt;Building Web Applications using the latest ASP.NET technologies&lt;/li&gt;
&lt;li&gt;Building web front ends for both desktop and mobile using the latest web standards&lt;/li&gt;
&lt;li&gt;API Services for both web and devices&lt;/li&gt;
&lt;li&gt;Running, improving and maintaining a site in the real world&lt;/li&gt;
&lt;li&gt;Real-time Communications with SignalR&lt;/li&gt;
&lt;li&gt;Wrap Up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go on, register (links are up above)! And let your web dev friends and co-workers who don't read blogs know, too, because this is a great way for them to get a recap on what's going on with ASP.NET, Visual Studio 2012, HTML5, JavaScript, and more.&lt;/p&gt;
&lt;p&gt;And... if we're not coming to a city near you (this time), you can play along from home. There's a complete video recording of our &lt;a href="http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp"&gt;Web Camp from Vancouver posted on Channel 9&lt;/a&gt;, and the &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=36393"&gt;Web Camps Training Kit&lt;/a&gt; includes all the decks and demos, plus 5 in-depth hands on labs.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=fUuSM6iy1os:Ww46AoyngIg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/fUuSM6iy1os" height="1" width="1" alt=""/&gt;</description><pubDate>Mon, 12 May 2014 23:21:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/upcoming-web-camps-summer-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more</link><category>.NET</category><category>Azure</category><category>Community News</category><title>Azure: VM Security Extensions, ExpressRoute GA, Reserved IPs, Internal Load Balancing, Multi Site-to-Site VPNs, Storage Import/Export GA, New SMB File Service, API Management, Hybrid Connection Service, Redis Cache, Remote Apps and more…</title><description>&lt;p&gt;This morning we released a massive amount of enhancements to Microsoft Azure.&amp;nbsp; Today&amp;rsquo;s new capabilities and announcements include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Virtual Machines: &lt;/strong&gt;Integrated Security Extensions including Built-in Anti-Virus Support and Support for Capturing VM images in the portal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Networking: &lt;/strong&gt;ExpressRoute General Availability, Multiple Site-to-Site VPNs, VNET-to-VNET Secure Connectivity, Reserved IPs, Internal Load Balancing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: General Availability of Import/Export service and preview of new SMB file sharing support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remote App&lt;/strong&gt;: Public preview of Remote App Service &amp;ndash; run client apps in the cloud&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Management&lt;/strong&gt;: Preview of the new Azure API Management Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hybrid Connections:&lt;/strong&gt; Easily integrate Azure Web Sites and Mobile Services with on-premises data+apps (free tier included)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cache&lt;/strong&gt;: Preview of new Redis Cache Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Support for Enterprise Agreement customers and channel partners&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: Integrated Security Extensions including Built-in Anti-Virus Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In a &lt;a href="http://weblogs.asp.net/scottgu/archive/2014/02/20/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more.aspx"&gt;previous blog post&lt;/a&gt; I talked about the new VM Agent we introduced as an optional extension to Virtual Machines hosted on Azure.&amp;nbsp; The VM Agent is a lightweight and unobtrusive process that you can optionally enable to run inside your Windows and Linux VMs. The VM Agent can then be used to install and manage &lt;i&gt;extensions&lt;/i&gt;, which are software modules that extend the functionality of a VM and help make common management scenarios easier.&lt;/p&gt;
&lt;p&gt;Today I&amp;rsquo;m pleased to announce three new security extensions that we are enabling via the VM Agent:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft Antimalware&lt;/li&gt;
&lt;li&gt;Symantec Endpoint Protection&lt;/li&gt;
&lt;li&gt;TrendMicro&amp;rsquo;s Deep Security Agent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These extensions enable you to add richer security protection to your Virtual Machines using respected security products that we automate installing/managing.&amp;nbsp; These extensions are easy to enable within your Virtual Machines through either the Azure Management Portal or via the command-line.&amp;nbsp; To enable them using the Azure Management Portal simply check them when you create new a new Virtual Machine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_26F05743.png"&gt;&lt;img width="820" height="524" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_5DCD3C3A.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once checked we&amp;rsquo;ll automate installing and running them within your VM.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Custom Powershell Script&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This week we&amp;rsquo;ve also enabled a new &amp;ldquo;Custom Script&amp;rdquo; extension that enables you to specify a Powershell script file (.ps1 extension) to run in the VM immediately after it&amp;rsquo;s created.&amp;nbsp; This provides another way to customize your VM on creation without having to RDP in.&amp;nbsp; Alternatively you can also take advantage of the &lt;a href="http://weblogs.asp.net/scottgu/archive/2014/04/14/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more.aspx" target="_blank"&gt;Chef and Puppet extensions&lt;/a&gt; we shipped last month.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: Support for Capturing Images with both OS + Data Drives attached&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last month at the //Build conference we released command-line support for capturing VM images that contain both an OS disk as well as multiple data disks attached.&amp;nbsp; This new VM image support made it much easier to capture and automate VMs with richer configurations, as well as to snapshot VMs without having to run sysprep on them.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release we have updated the Azure Management Portal to add support for capturing VM images that contain both an OS disk and multiple data disks as well.&amp;nbsp; One cool aspect of the &amp;ldquo;Capture&amp;rdquo; command is that it can now be run on both a stopped VM, as well as on a running VM as well (there is no need to restart it and the capture command completes in under a minute).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;To try this new support out, simply click the &amp;ldquo;Capture&amp;rdquo; button on a VM, and it will present a dialog that enables you to name the image you want to create:&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5F9D9201.png"&gt;&lt;img width="860" height="453" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_28C33DBB.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the image is captured it will show up in the &amp;ldquo;Images&amp;rdquo; section of the VM gallery &amp;ndash; allowing to you easily create any number of new VM instances from it:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_0EEF078C.png"&gt;&lt;img width="820" height="526" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_4CEB28FB.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This new support is ideal for dev/test scenarios as well as for creating re-usable images for use with any other VM creation scenario.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Networking: General Availability of Azure ExpressRoute&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the general availability release today of the Azure ExpressRoute service.&lt;/p&gt;
&lt;p&gt;ExpressRoute enables dedicated, private, high-throughput network connectivity between Azure datacenters and your on-premises IT environments. Using ExpressRoute, you can connect your existing datacenters to Azure without having to flow any traffic over the public Internet, and enable&amp;ndash;guaranteed network quality-of-service and the ability to use Azure as a natural extension of an existing private network or datacenter.&amp;nbsp; As part of our GA release we now offer an enterprise SLA for the service, as well as a variety of bandwidth tiers.&lt;/p&gt;
&lt;p&gt;We have previously announced several provider partnerships with ExpressRoute including with: &lt;strong&gt;AT&amp;amp;T&lt;/strong&gt;, &lt;strong&gt;Equinix&lt;/strong&gt;, &lt;strong&gt;Verizon&lt;/strong&gt;, &lt;strong&gt;BT&lt;/strong&gt;, and &lt;strong&gt;Level3&lt;/strong&gt;.&amp;nbsp; This week we are excited to announce new partnerships with &lt;strong&gt;TelecityGroup&lt;/strong&gt;, &lt;strong&gt;SingTel&lt;/strong&gt; and &lt;strong&gt;Zadara&lt;/strong&gt; as well.&amp;nbsp; You can use any of these providers to setup private fiber connectivity directly to Azure using ExpressRoute.&lt;/p&gt;
&lt;p&gt;You can get more information on the &lt;a href="http://azure.microsoft.com/en-us/services/expressroute/"&gt;ExpressRoute&lt;/a&gt;&lt;a href="http://azure.microsoft.com/en-us/services/virtual-network/"&gt;&lt;/a&gt; website.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Networking: Multiple Site-to-Site VPNs and VNET-to-VNET Connectivity&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the general availability release of two highly requested virtual networking features: &lt;strong&gt;multiple site-to-site VPN support&lt;/strong&gt; and &lt;strong&gt;VNET-to-VNET connectivity&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Multiple Site to Site VPNs&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Virtual Networks in Azure now supports more than one site-to-site connection, which enables you to securely connect multiple on-premises locations with a Virtual Network (VNET) in Azure. Using more than one site-to-site connection comes at no additional cost. You incur charges only for the VNET gateway uptime.&lt;/p&gt;
&lt;table border="0" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top"&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image032_4808753F.png"&gt;&lt;img width="300" height="261" title="clip_image032" style="display: inline; border-width: 0px;" alt="clip_image032" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image032_thumb_4E4F4BCD.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;VNET to VNET Connectivity&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release, we are also enabling VNET-to-VNET connectivity. That means that multiple virtual networks can now be directly and securely connected with one another. Using this feature, you can connect VNETs that are running in the &lt;strong&gt;same or different Azure regions&lt;/strong&gt; and in case of different Azure regions have the traffic securely route via the Microsoft network backbone.&lt;/p&gt;
&lt;p&gt;This feature enables scenarios that require presence in multiple regions (e.g. Europe and US, or East US and West US), applications that are highly available, or the integration of VNETs within a single region for a much larger network. This feature also enables you to connect VNETs across multiple different Azure account subscriptions, so you can now connect workloads across different divisions of your organization, or even different companies. The data traffic flowing between VNETs is charged at the same rate as egress traffic.&lt;/p&gt;
&lt;table border="0" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top"&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image034_496C9811.png"&gt;&lt;img width="350" height="85" title="clip_image034" style="display: inline; border-width: 0px;" alt="clip_image034" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image034_thumb_19B18043.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can get more information on the &lt;a href="http://azure.microsoft.com/en-us/services/virtual-network/"&gt;Virtual Network&lt;/a&gt; website.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Networking: &lt;/span&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: #000000;" color="#000000"&gt;IP Reservation, Instance-level public IPs, Internal Load Balancing Support, Traffic Manager&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s release we are also making available three highly request IP address features:&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;IP Reservations&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With IP reservation, you can now reserve public IP addresses and use them as virtual IP (VIP) addresses for your applications. This enables scenarios where applications need to have static public IP addresses, and you want to be able to have the IP address survive the application being deleted and redeployed.&amp;nbsp; You can now reserve up to 5 addresses per subscription free of charge and assign them to VM or Cloud Service instances of your choice. If additional VIP reservations are needed, you can also reserve more addresses at additional cost.&lt;/p&gt;
&lt;p&gt;This feature is now generally available as of today.&amp;nbsp; You can enable it via the command-line using new powershell cmdlets that we now support:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#Reserve a IP &lt;br /&gt;&lt;strong&gt;New-AzureReservedIP&lt;/strong&gt; -ReservedIPName EastUSVIP -Label "Reserved VIP in EastUS" -Location "East US"&lt;/p&gt;
&lt;p&gt;#Use the Reserved IP during deployment &lt;br /&gt;New-AzureVM -ServiceName "MyApp" -VMs $web1 -Location "East US" -VNetName VNetUSEast &lt;strong&gt;-ReservedIPName EastUSVIP&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We will enable portal management support in a future management portal update.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Public IP Address per Virtual Machine&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With Instance-level Public IPs for VMs, you can now assign public IP addresses to your virtual machines, so they become directly addressable without having to map an endpoint through a VIP. This feature will enable scenarios like easily running FTP servers in Azure and monitoring virtual machines directly using their IPs.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;We are making this new capability available in preview form today.&amp;nbsp; This feature is available only with new deployments and new virtual networks and can be enabled via PowerShell.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Internal Load Balancing (ILB) Support &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Today&amp;rsquo;s new Internal Load Balancing support enables you to load-balance Azure virtual machines with a private IP address. The internally load balanced IP address will be accessible only within a virtual network (if the VM is within a virtual network) or within a cloud service (if the VM isn&amp;rsquo;t within a virtual network) &amp;ndash; and means that no one outside of your application can access it. Internal Load Balancing is useful when you&amp;rsquo;re creating applications in which some of the tiers (for example: the database layer) aren&amp;rsquo;t public facing but require load balancing functionality. Internal Load Balancing is available in the standard tier of VMs at no additional cost.&lt;/p&gt;
&lt;p&gt;We are making this new capability available in preview form today. ILB is available only with new deployments and new virtual networks and can be accessed via PowerShell.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Traffic Manager support for external endpoints&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Starting today, Traffic Manager now supports routing traffic to both Azure endpoints and external endpoints (previously it only supported Azure endpoints).&lt;/p&gt;
&lt;p&gt;Traffic Manager enables you to control the distribution of user traffic to your specified endpoints. With support for endpoints that reside outside of Azure, you can now build highly available applications that span both Azure, on-premises environments, and even other cloud providers. You can apply intelligent traffic management policies across all managed endpoints. This functionality is available now in preview and you can manage it via the command-line using powershell.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Learning More&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can learn more about Reserved IP addresses and the above networking features &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn690120.aspx" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Storage: General Availability Release of Azure Import/Export Service &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last November, we &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/11/04/windows-azure-import-export-hard-drives-vm-acls-web-sockets-remote-debugging-continuous-delivery-new-relic-billing-alerts-and-more.aspx" target="_blank"&gt;launched the preview of our Microsoft Azure Import/Export Service&lt;/a&gt;. Today, I am excited to announce &lt;b&gt;the general availability &lt;/b&gt;release&lt;b&gt; &lt;/b&gt;of the service.&lt;/p&gt;
&lt;p&gt;The Microsoft Azure Import/Export Service enables you to move large amounts of data into and out of your Microsoft Azure Storage accounts by transferring them on hard disks. You can ship encrypted hard drives directly to our Microsoft Azure data centers, and we will automatically transfer the data to or from your Microsoft Azure Blobs for your storage account.&amp;nbsp; This enables you to import or export massive amounts of data quickly, cost effectively, and without being constrained by your network bandwidth.&lt;/p&gt;
&lt;p&gt;This release of the Import/Export service has several new features as well as improvements to the preview functionality. We have expanded our service to new regions in addition to the US. We are now available in the US, Europe and the Asia Pacific regions. You can also now use either FedEx or DHL to ship the drives.&amp;nbsp; Simply provide an appropriate Fedex/DHL account number and we will also automatically ship the drives back to you:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image028_27179349.png"&gt;&lt;img width="643" height="378" title="clip_image028" style="display: inline; border-width: 0px;" alt="clip_image028" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image028_thumb_14629992.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details about the improvements and new features of the Import/Export service can be found on the Microsoft Azure Storage Team &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/"&gt;Blog&lt;/a&gt;. Check out the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=329852&amp;amp;clcid=0x409"&gt;Getting Started Guide&lt;/a&gt; to learn about how to use the Import/Export service. Feel free to send questions and comments to the &lt;a href="mailto:waimportexport@microsoft.com"&gt;waimportexport@microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Storage: New SMB File Sharing Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the &lt;b&gt;preview of the new Microsoft Azure File Service&lt;/b&gt;. The Azure File Service is a new capability of our existing Azure storage system and supports exposing network file shares using the standard SMB protocol.&amp;nbsp; Applications running in Azure can now easily share files across Windows and Linux VMs using this new SMB file-sharing service, with all VMs having both read and write access to the files.&amp;nbsp; The files stored within the service can also be accessed via a REST interface, which opens a variety of additional non-SMB sharing scenarios.&lt;/p&gt;
&lt;p&gt;The Azure File Service is built on the same technology as the Blob, Table, and Queue Services, which means Azure Files is able to leverage the existing availability, durability, scalability, and geo redundancy that is built into our Storage platform. It is provided as a high-availability managed service run by us, meaning you don&amp;rsquo;t have to manage any VMs to coordinate it and we take care of all backups and maintenance for you.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Common Scenarios&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lift and Shift applications&lt;/strong&gt;: Azure Files makes it easier to &amp;ldquo;lift and shift&amp;rdquo; existing applications to the cloud that use on-premise file shares to share data between parts of the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Shared Application Settings&lt;/strong&gt;: A common pattern for distributed applications is to have configuration files in a centralized location where they can be accessed from many different virtual machines. Such configuration files can now be stored in an Azure File share, and read by all application instances.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diagnostic Share&lt;/strong&gt;: An Azure File share can also be used to save diagnostic files like logs, metrics, and crash dumps. Having these available through both the SMB and REST interface allows applications to build or leverage a variety of analysis tools for processing and analyzing the diagnostic data.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dev/Test/Debug&lt;/strong&gt;: When developers or administrators are working on virtual machines in the cloud, they often need a set of tools or utilities. Installing and distributing these utilities on each virtual machine where they are needed can be a time consuming exercise. With Azure Files, a developer or administrator can store their favorite tools on a file share, which can be easily connected to from any virtual machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about how to use the new Azure File Service visit &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn167006.aspx" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;RemoteApp: Preview of new Remote App Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m happy to announce the public preview today of Azure RemoteApp, a new service delivering Windows Client applications from the Azure cloud.&lt;/p&gt;
&lt;p&gt;Azure RemoteApp can be used by IT to enable employees to securely access their corporate applications from a variety of devices (including mobile devices like iPads and Phones).&amp;nbsp; Applications can be scaled up or down quickly without expensive infrastructure costs and management complexity.&lt;/p&gt;
&lt;p&gt;With Azure RemoteApp, your client applications run in the Azure cloud. Employees simply install the Microsoft Remote Desktop client on their devices and then can access applications via Microsoft&amp;rsquo;s Remote Desktop Protocol (RDP).&amp;nbsp; IT can optionally connect the applications back to on-premises networks (enabling hybrid connectivity) or alternatively run them entirely in the cloud.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image048_448C7506.jpg"&gt;&lt;img width="465" height="346" title="clip_image048" style="display: inline; border-width: 0px;" alt="clip_image048" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image048_thumb_45F097D8.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this service, you can bring scale, agility and global access to your business applications.&lt;/p&gt;
&lt;p&gt;Azure RemoteApp is free during preview period. Learn more about &lt;a href="http://azure.microsoft.com/en-us/services/RemoteApp"&gt;Azure RemoteApp&lt;/a&gt; and &lt;a href="http://go.microsoft.com/fwlink/?LinkID=397368&amp;amp;clcid=0x409"&gt;try the service free during preview&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Hybrid Connections: Easily integrate Azure Websites and Mobile Services with on-premises resources&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce &lt;b&gt;Hybrid Connections&lt;/b&gt;, a new and easy way to build hybrid applications on Azure. Hybrid Connections enable your Azure Website or Mobile Service to connect to on-premises data &amp;amp; services with just a few clicks within the Azure Management portal.&amp;nbsp; Today, we're also introducing a &lt;b&gt;Free tier of Azure BizTalk Services &lt;/b&gt;that enables&lt;b&gt; &lt;/b&gt;everyone to use this new hybrid connections feature for &lt;strong&gt;free&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;With Hybrid Connections, Azure websites and mobile services can easily access on-premises resources as if they were located on the same private network. This makes it much easier to move applications to the cloud, while still connecting securely with existing enterprise assets.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_68482D51.png"&gt;&lt;img width="808" height="365" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_1152CC4E.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hybrid Connections support all languages and frameworks supported by Azure Websites (.NET, PHP, Java, Python, node.js) and Mobile Services (node.js, .NET).&lt;/p&gt;
&lt;p&gt;The Hybrid Connections service &lt;span style="text-decoration: underline;"&gt;does not&lt;/span&gt; require you to enable a VPN or open up firewall rules in order to use it. This makes it easy to deploy within enterprise environments.&amp;nbsp; Built-in monitoring and management support still enables enterprise administrators control and visibility into the resources accessed by their hybrid applications.&lt;/p&gt;
&lt;p&gt;You can learn more about Hybrid Connections using the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overview: &lt;a href="http://go.microsoft.com/fwlink/p/?LinkID=397274"&gt;Hybrid Connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How-To: &lt;a href="http://go.microsoft.com/fwlink/?LinkId=397538"&gt;Connect an Azure Website with an On-Premises Resource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tutorial: &lt;a href="http://go.microsoft.com/fwlink/?LinkID=397979"&gt;Connect an Azure Website to an On-Premises SQL Server using Hybrid Connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tutorial: &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/mobile-services-dotnet-backend-hybrid-connections-get-started/"&gt;Connect an Azure Mobile Services .NET Backend to an On-Premises Resource using Hybrid Connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;API Management: Announcing Preview of new Azure API Management Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With the proliferation of mobile devices, it is important for organizations to be able to expose their existing backend systems via mobile-friendly APIs that enable internal app developers as well as external developer programs. Today, I&amp;rsquo;m excited announce the public preview of the new &lt;a href="http://go.microsoft.com/fwlink/?LinkId=398202"&gt;Azure API Management&lt;/a&gt; service that helps you better achieve this.&lt;/p&gt;
&lt;p&gt;The new Azure API management service allows you to create an easy to use API fa&amp;ccedil;ade over a diverse set of mobile backend services (including Mobile Services, Web Sites, VMs, Cloud Services and on-premises systems), and enables you to deliver a friendly API developer portal to your customers with documentation and samples, enable per-developer metering support that protects your APIs from abuse and overuse, and enable to you monitor and track API usage analytics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image014_4586F594.png"&gt;&lt;img width="545" height="316" title="clip_image014" style="display: inline; border-width: 0px;" alt="clip_image014" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image014_thumb_4E7687D3.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Creating an API Management service&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can easily create a new instance of the Azure API Management service from the &lt;a href="http://manage.windowsazure.com"&gt;Azure Management Portal&lt;/a&gt; by clicking &lt;b&gt;New-&amp;gt;App Services-&amp;gt;API Management-&amp;gt;Create&lt;/b&gt;. Once the service has been created, you can get started on your API by clicking on the &lt;b&gt;Manage&lt;/b&gt; button and transitioning to the Dashboard page on the Publisher portal.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image015_3BC18E1C.png"&gt;&lt;img width="705" height="471" title="clip_image015" style="display: inline; border-width: 0px;" alt="clip_image015" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image015_thumb_2496139E.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Publishing an API&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A typical API publishing workflow involves creating an API: first creating a fa&amp;ccedil;ade over an existing backend service, and then configuring policies on it and packaging/publishing the API to the Developer portal for developers to be able to consume.&lt;/p&gt;
&lt;p&gt;To create an API, select the &lt;b&gt;Add API&lt;/b&gt; button within the publisher portal, and in the dialog that appears enter the API name, location of the backend service and suffix of the API root under the service domain name.&amp;nbsp; Note that you can implement the back-end of the API anywhere (including non-Azure cloud providers or locations).&amp;nbsp; You can also obviously host the API using Azure &amp;ndash; including within a VM, Cloud Service, Web Site or Mobile Service.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve defined the settings, click Save to create the API endpoint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image017_34A4E255.png"&gt;&lt;img width="716" height="410" title="clip_image017" style="display: inline; border-width: 0px;" alt="clip_image017" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image017_thumb_4FDD3B56.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve defined have created your API endpoint, you can customize it.&amp;nbsp; You can also set policies such as caching rules, and usage quotas and rate limits that you can apply for developers calling the API. These features end up being extremely useful when publishing an API for external developers (or mobile apps) to consume, and help ensure that your APIs cannot be abused.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Developer Portal&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once your API has been published, click on the Developer Portal link.&amp;nbsp; This will launch a developer portal page that can be used by developers to learn how to consume and use the API that you have published.&amp;nbsp; It provides a bunch of built-in support to help you create documentation pages for your APIs, as well as built-in testing tools.&amp;nbsp; You&amp;rsquo;ll also get an impressive list of copy-and-paste-ready code samples that help teach developers how to invoke your APIs from the most popular programming languages.&amp;nbsp; Best of all this is all automatically generated for you:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image023_78E7DA52.png"&gt;&lt;img width="706" height="486" title="clip_image023" style="display: inline; border-width: 0px;" alt="clip_image023" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image023_thumb_14203354.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can test out any of the APIs you&amp;rsquo;ve published without writing a line code by using the interactive console.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image025_3362DA27.png"&gt;&lt;img width="705" height="837" title="clip_image025" style="display: inline; border-width: 0px;" alt="clip_image025" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image025_thumb_5143EED9.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Analytics and reports&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once your API is published, you&amp;rsquo;ll want to be able to track how it is being used.&amp;nbsp; Back in the publisher portal you can click on the &lt;b&gt;Analytics&lt;/b&gt; page to find reports on various aspects of the API, such as usage, health, latency, cache efficiency and more. With a single click, you can find out your most active developers and your most popular APIs and products. You can get time series metrics as well maps to show what geographies drive them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image027_376FB8AA.png"&gt;&lt;img width="711" height="433" title="clip_image027" style="display: inline; border-width: 0px;" alt="clip_image027" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image027_thumb_429BD3A5.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Learn More&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We are really excited about the new API Management service, and it is going to make securely publishing and tracking external APIs much simpler.&amp;nbsp; To learn more about API Management, follow the tutorials below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398182"&gt;Easily create an API fa&amp;ccedil;ade for the existing backend services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398184"&gt;Quickly add new capabilities to the APIs, such as response caching and cross domain access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398185"&gt;Package and publish APIs to developers and partners, internal and external&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkID=398186"&gt;Reliably protect published APIs from misuse and abuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=398201"&gt;Azure API Management developer center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Cache: New Azure Redis Cache Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the preview of a new Azure Redis Cache Service.&lt;/p&gt;
&lt;p&gt;This new cache service gives customers the ability to use a secure, dedicated &lt;a href="http://redis.io/"&gt;Redis cache&lt;/a&gt;, managed by Microsoft. With this offer, you get to leverage the rich feature set and ecosystem provided by Redis, and reliable hosting and monitoring from Microsoft.&lt;/p&gt;
&lt;p&gt;We are offering the Azure Redis Cache Preview in two tiers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basic&lt;/strong&gt; &amp;ndash; A single Cache node (ideal for dev/test and non-critical workloads)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; &amp;ndash; A replicated Cache (Two nodes, a Master and a Slave)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During the preview period, the Azure Redis Cache will be available in a 250 MB and 1 GB size. For a limited time, the cache will be offered free, with a limit of two caches per subscription.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Creating a New Cache Instance&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Getting started with the new Azure Redis Cache is easy.&amp;nbsp; To create a new cache, sign in to the &lt;a href="http://portal.azure.com/"&gt;Azure Preview Portal&lt;/a&gt;, and click &lt;strong&gt;New&lt;/strong&gt; &lt;b&gt;-&amp;gt;&lt;/b&gt; &lt;b&gt;Redis&lt;/b&gt; &lt;strong&gt;Cache (Preview):&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_4B8B65E4.png"&gt;&lt;img width="565" height="539" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_749604E0.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the new cache options are configured, click &lt;strong&gt;Create&lt;/strong&gt;. It can take a few minutes for the cache to be created. After the cache has been created, your new cache has a &lt;strong&gt;Running&lt;/strong&gt; status and is ready for use with default settings:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image042_6FB35124.jpg"&gt;&lt;img width="473" height="638" title="clip_image042" style="display: inline; border-width: 0px;" alt="clip_image042" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image042_thumb_44028728.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Connect to the Cache &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Application developers can use a variety of languages and corresponding &lt;a href="http://redis.io/clients"&gt;client packages&lt;/a&gt; to connect to the Azure Redis Cache. Below we&amp;rsquo;ll use a .NET Redis client called &lt;a href="http://github.com/StackExchange/StackExchange.Redis#documentation"&gt;StackExchange.Redis&lt;/a&gt; to connect to the cache endpoint. You can open any Visual Studio project and add the StackExchange.Redis NuGet package to it, via the NuGet package manager.&lt;/p&gt;
&lt;p&gt;The cache endpoint and key can be obtained respectively from the Properties blade and the Keys blade for your cache instance within the Azure Preview Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image046_314D8D71.jpg"&gt;&lt;img width="256" height="252" title="clip_image046" style="display: inline; border-width: 0px;" alt="clip_image046" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image046_thumb_019275A3.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve retrieved these you can create a connection instance to the cache with the code below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;var connection = StackExchange.Redis&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .ConnectionMultiplexer.Connect("contoso5.redis.cache.windows.net,ssl=true,password=...");&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once the connection is established, you can retrieve a reference to the Redis cache database, by calling the ConnectionMultiplexer.GetDatabase method.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IDatabase cache = connection.GetDatabase();&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Items can be stored in and retrieved from a cache by using the StringSet and StringGet methods.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cache.StringSet("Key1", "HelloWorld");&lt;/p&gt;
&lt;p&gt;string value = cache.StringGet("Key1");&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You have now stored and retrieved a &amp;ldquo;Hello World&amp;rdquo; string from a Redis cache instance running on Azure.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Learn More&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For more information, visit the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aka.ms/gbbc58"&gt;Getting Started guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aka.ms/e7e1a0"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aka.ms/clb5bw"&gt;MSDN forum &lt;/a&gt;for answers to all your Redis Cache questions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Store: Support for EA customers and channel partners in the Azure Store&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s update we are expanding the Azure Store to customers and channel partners subscribed to Azure via a direct Enterprise Agreement (EA). Azure EA customers in North America and Europe can now purchase a range of application and data services from 3rd party providers through the Store and have these subscriptions automatically billed against their EA.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_27F458EE.png"&gt;&lt;img width="800" height="526" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_0A15D4ED.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will be billed against your EA each quarter for all of your Store purchases on a separate, consolidated invoice.&amp;nbsp; Access to Azure Store can be managed by your EA Azure enrollment administrators, by going to &lt;b&gt;Manage Accounts and Subscriptions&lt;/b&gt; under the Accounts section in the Enterprise Portal, where you can disable or re-enable access to 3rd party purchases via Store.&amp;nbsp; Please visit &lt;a href="http://azure.microsoft.com/en-us/gallery/store/"&gt;Azure Store&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt; &lt;/span&gt;to learn more.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today&amp;rsquo;s Microsoft Azure release enables a ton of great new scenarios, and makes building applications hosted in the cloud even easier.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://www.windowsazure.com/"&gt;Microosft Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+VM+Security+Extensions%2c+ExpressRoute+GA%2c+Reserved+IPs%2c+Internal+Load+Balancing%2c+Multi+Site-to-Site+VPNs%2c+Storage+Import%2fExport+GA%2c+New+SMB+File+Service%2c+API+Management%2c+Hybrid+Connection+Service%2c+Redis+Cache%2c+Remote+Apps+and+more%e2%80%a6&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+VM+Security+Extensions%2c+ExpressRoute+GA%2c+Reserved+IPs%2c+Internal+Load+Balancing%2c+Multi+Site-to-Site+VPNs%2c+Storage+Import%2fExport+GA%2c+New+SMB+File+Service%2c+API+Management%2c+Hybrid+Connection+Service%2c+Redis+Cache%2c+Remote+Apps+and+more%e2%80%a6&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Mon, 12 May 2014 18:08:00 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385</link><category>microsoft-azure</category><category>microsoft-asp.net</category><title>INTRODUCING: The Future of .NET on the Server</title><description>Join the Lesser Scotts, Hunter and Hanselman, as they introduce you to new thinking around ASP.NET and the .NET Framework. What does ASP.NET look like in 2014 and beyond? In a world of NuGets and modular frameworks, of lightweight VMs, how could ASP.NET change and get faster, leaner, meaner, and more. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:3749991b79244f08a78ba328011deed4"&gt;</description><pubDate>Mon, 12 May 2014 16:22:07 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join the Lesser Scotts, Hunter and Hanselman, as they introduce you to new thinking around ASP.NET and the .NET Framework. What does ASP.NET look like in 2014 and beyond? In a world of NuGets and modular frameworks, of lightweight VMs, how could ASP.NET change and get faster, leaner, meaner, and more.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4302</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Scott Hanselman</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411</link><category>microsoft-.net</category><category>microsoft-asp.net</category><title>DEEP DIVE: The Future of .NET on the Server</title><description>Scott Hanselman joins developer David Fowler for this Part 2 Deep Dive into what’s coming in Microsoft ASP.NET. We explore what a decoupled stack looks like, how modules plug together, what this means for performance, and more. We explore the Project codenamed “Helios” and how this new way of writing ASP.NET applications uses OWIN and plugs into IIS giving you more power and choice than ever before. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/david-fowler&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:e38e8f24acfa466aadeba328011defa3"&gt;</description><pubDate>Sun, 11 May 2014 23:00:08 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman joins developer David Fowler for this Part 2 Deep Dive into what’s coming in Microsoft ASP.NET. We explore what a decoupled stack looks like, how modules plug together, what this means for performance, and more. We explore the Project codenamed “Helios” and how this new way of writing ASP.NET applications uses OWIN and plugs into IIS giving you more power and choice than ever before.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4506</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, David Fowler</dc:creator></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,c884bc0b-973e-40a3-b311-ef7685fe8e64.aspx</guid><link>http://sedodream.com/2014/05/08/HowToDownloadASiteUsingMsdeployexe.aspx</link><title>How to download a site using msdeploy.exe</title><description>&lt;p&gt;
Recently I encountered a customer asking if it’s possible to download a site using
msdeploy.exe. This is pretty easy using msdeploy.exe. I’ll demonstrate this with Microsoft
Azure Web Sites but you can use this with any hosting provider that supports Web Deploy
(aka MSDeploy).
&lt;/p&gt;
&lt;p&gt;
To perform a sync with msdeploy.exe the structure of the command that we need to execute
is as follows.
&lt;/p&gt;
&lt;blockquote&gt; 
&lt;p&gt;
msdeploy.exe –verb:sync –source:&amp;lt;fill-in-details&amp;gt; –dest:&amp;lt;fill-in-details&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt; 
&lt;p&gt;
For the source property we will use the remote Azure Web Site, and for the dest property
we will write to a folder on the local file system. You can get the Web Deploy publishing
settings in the Azure Web Site by clicking on the &lt;strong&gt;Download the publish profile&lt;/strong&gt; link
in the Configure page.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtodownloadasiteusingmsdeploy.exe_D54B/image_2.png"&gt;&lt;img title="image" style="display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtodownloadasiteusingmsdeploy.exe_D54B/image_thumb.png" width="228" height="244"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
This will download an XML file that has all the publish settings you’ll need. For
example below is a publish settings file for my demo site.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;&amp;lt;publishData&amp;gt;
  &amp;lt;publishProfile profileName="sayeddemo2 - Web Deploy" publishMethod="MSDeploy" 
                  publishUrl="waws-prod-bay-001.publish.azurewebsites.windows.net:443" 
                  msdeploySite="sayeddemo2" 
                  userName="$sayeddemo2" 
                  userPWD="*** removed ***" 
                  destinationAppUrl="http://sayeddemo2.azurewebsites.net" 
                  SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" 
                  controlPanelLink="http://windows.azure.com"&amp;gt;
    &amp;lt;databases/&amp;gt;
  &amp;lt;/publishProfile&amp;gt;
  &amp;lt;publishProfile profileName="sayeddemo2 - FTP" publishMethod="FTP" 
                  publishUrl="ftp://waws-prod-bay-001.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" 
                  userName="sayeddemo2\$sayeddemo2" userPWD="*** removed ***" 
                  destinationAppUrl="http://sayeddemo2.azurewebsites.net" SQLServerDBConnectionString="" 
                  mySQLDBConnectionString="" hostingProviderForumLink="" 
                  controlPanelLink="http://windows.azure.com"&amp;gt;
    &amp;lt;databases/&amp;gt;
  &amp;lt;/publishProfile&amp;gt;
&amp;lt;/publishData&amp;gt;&lt;/pre&gt;
&lt;p&gt;
The publish settings file provided by Azure Web Sites has two profiles; an MSDeploy
profile and an FTP profile. We can ignore the FTP profile and just use the MSDeploy
one. The relevant settings from the profile that we will use are the following values.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
publishUrl 
&lt;li&gt;
msdeploySite 
&lt;li&gt;
userName 
&lt;li&gt;
usePWD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We will use the contentPath MSDeploy provider to download the files. On the source
parameter we will need to include the relevant details of the remote machine. The
full command to execute is below. I’ll break it down a bit after the snippet.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;"C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" 
    -verb:sync 
    -source:contentPath=sayeddemo2,
        ComputerName="https://waws-prod-bay-001.publish.azurewebsites.windows.net/msdeploy.axd?site=sayeddemo2",
        UserName=$sayeddemo2,Password=***removed***,AuthType='Basic'  
    -dest:contentPath=c:\temp\pubfromazure -disablerule:BackupRule
&lt;/pre&gt;
&lt;p&gt;
The important parts of the command above are how the remote settings are passed to
the source provider. On the dest side I’ve provided the location where the files should
be downloaded to.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com/"&gt;http://msbuildbook.com/&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Thu, 08 May 2014 23:02:02 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=c884bc0b-973e-40a3-b311-ef7685fe8e64</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,c884bc0b-973e-40a3-b311-ef7685fe8e64.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
Recently I encountered a customer asking if it’s possible to download a site using
msdeploy.exe. This is pretty easy using msdeploy.exe. I’ll demonstrate this with Microsoft
Azure Web Sites but you can use this with any hosting provider that supports Web Deploy
(aka MSDeploy).
</p>
        <p>
To perform a sync with msdeploy.exe the structure of the command that we need to execute
is as follows.
</p>
        <blockquote>
          <p>
msdeploy.exe –verb:sync –source:&lt;fill-in-details&gt; –dest:&lt;fill-in-details&gt;
</p>
        </blockquote>
        <p>
For the source property we will use the remote Azure Web Site, and for the dest property
we will write to a folder on the local file system. You can get the Web Deploy publishing
settings in the Azure Web Site by clicking on the <strong>Download the publish profile</strong> link
in the Configure page.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtodownloadasiteusingmsdeploy.exe_D54B/image_2.png">
            <img title="image" style="display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtodownloadasiteusingmsdeploy.exe_D54B/image_thumb.png" width="228" height="244"></img>
          </a>
        </p>
        <p>
This will download an XML file that has all the publish settings you’ll need. For
example below is a publish settings file for my demo site.
</p>
        <pre class="brush: xml;">&lt;publishData&gt;
  &lt;publishProfile profileName="sayeddemo2 - Web Deploy" publishMethod="MSDeploy" 
                  publishUrl="waws-prod-bay-001.publish.azurewebsites.windows.net:443" 
                  msdeploySite="sayeddemo2" 
                  userName="$sayeddemo2" 
                  userPWD="*** removed ***" 
                  destinationAppUrl="http://sayeddemo2.azurewebsites.net" 
                  SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" 
                  controlPanelLink="http://windows.azure.com"&gt;
    &lt;databases/&gt;
  &lt;/publishProfile&gt;
  &lt;publishProfile profileName="sayeddemo2 - FTP" publishMethod="FTP" 
                  publishUrl="ftp://waws-prod-bay-001.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" 
                  userName="sayeddemo2\$sayeddemo2" userPWD="*** removed ***" 
                  destinationAppUrl="http://sayeddemo2.azurewebsites.net" SQLServerDBConnectionString="" 
                  mySQLDBConnectionString="" hostingProviderForumLink="" 
                  controlPanelLink="http://windows.azure.com"&gt;
    &lt;databases/&gt;
  &lt;/publishProfile&gt;
&lt;/publishData&gt;</pre>
        <p>
The publish settings file provided by Azure Web Sites has two profiles; an MSDeploy
profile and an FTP profile. We can ignore the FTP profile and just use the MSDeploy
one. The relevant settings from the profile that we will use are the following values.
</p>
        <ul>
          <li>
publishUrl 
</li>
          <li>
msdeploySite 
</li>
          <li>
userName 
</li>
          <li>
usePWD</li>
        </ul>
        <p>
We will use the contentPath MSDeploy provider to download the files. On the source
parameter we will need to include the relevant details of the remote machine. The
full command to execute is below. I’ll break it down a bit after the snippet.
</p>
        <pre class="brush: xml;">"C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" 
    -verb:sync 
    -source:contentPath=sayeddemo2,
        ComputerName="https://waws-prod-bay-001.publish.azurewebsites.windows.net/msdeploy.axd?site=sayeddemo2",
        UserName=$sayeddemo2,Password=***removed***,AuthType='Basic'  
    -dest:contentPath=c:\temp\pubfromazure -disablerule:BackupRule
</pre>
        <p>
The important parts of the command above are how the remote settings are passed to
the source provider. On the dest side I’ve provided the location where the files should
be downloaded to.
</p>
        <p>
 
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com/">http://msbuildbook.com/</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/lessons-learned-preparing-and-presenting-tech-training-events</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/SQVFuoV8fo4/lessons-learned-preparing-and-presenting-tech-training-events</link><title>Lessons Learned Preparing and Presenting Tech Training Events</title><description>&lt;p&gt;You've agreed to present a full day training event, and the day's approaching. What do you do?&lt;/p&gt;  &lt;p&gt;I'm not a training expert, but I've learned a few lessons on the job over the past few years that I think will help. I'd done some technical presentations over the years, but in the 4+ years I've been at Microsoft I've been doing quite a bit more. I've presented at dozens of Web Camp events (both one and two day) all over the world, been in charge of the Web Camps Training Kit for the past few years, helped plan and present two &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start"&gt;Microsoft Virtual Academy events&lt;/a&gt; (both full day, &lt;a href="http://channel9.msdn.com/Series/Building-Web-Apps-with-ASP-NET-Jump-Start"&gt;almost 400k online views for some of the sessions&lt;/a&gt;). I've also presented some smaller training workshops to some development teams at some large companies as they were looking at making some technology transitions.&lt;/p&gt;  &lt;p&gt;Most of these events went pretty well. Some of them, towards the beginning and despite my best efforts, did not go well. Here's what I've learned so far.&lt;/p&gt;  &lt;h2&gt;Different From One Hour Tech Presentation&lt;/h2&gt;  &lt;p&gt;I'm going to start with the planning stages in a second, but we need to get one thing out of the way first. A training event is significantly different from a one hour technical presentation. Many of the things are similar - you can start to get a handle on it by breaking an eight hour day into a series of eight one hour talks - but it's different enough that some things you can get away with for an hour won't work for eight, and vice versa.&lt;/p&gt;  &lt;p&gt;Just a few of the important differences:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Expectations for the balance training vs. entertaining are different. When people invest a day attending training, they have higher expectations of learning something, whereas some attendees of a one hour session - especially at a conference or code camp - are just &amp;quot;channel surfing&amp;quot; and have greater expectations for entertainment. On the other hand, it's perhaps more important to strategically entertain / engage during a full day of training to break it up. &lt;/li&gt;    &lt;li&gt;A full day of training is exhausting. I know an hour presentation seems tiring, but wait until you've done a full day. It's a marathon, not a sprint. &lt;/li&gt;    &lt;li&gt;Organization and timing are more important. You might be able to get away with rambling and poor time management for an hour, but it won't fly when you're doing multiple sessions. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Note: Keep in mind that this post is focused on presenting several consecutive hours of technical training. Many of the recommendations I'll give will also apply to your standard one hour technical presentation, but keep in mind that I'm not writing about How To Give A Technical Presentation. &lt;/p&gt;  &lt;h2&gt;Planning&lt;/h2&gt;  &lt;h3&gt;Ask Questions Early&lt;/h3&gt;  &lt;p&gt;If at possible, do a short pre-meeting before you get too much into planning. I generally hate meetings and avoid them when possible. This is a meeting you want to have. I get different answers in a meeting than I do in an e-mail thread. &lt;/p&gt;  &lt;p&gt;Find out the following:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Who will you be speaking to (numbers, skill level, etc.)? &lt;/li&gt;    &lt;li&gt;What do they want to get out of the day? &lt;/li&gt;    &lt;li&gt;Get a list of specific questions and topics that they want to learn about. &lt;/li&gt;    &lt;li&gt;What is the expected format? Is this presentation style (attendees passively watching speaker), workshop (attendees following along on laptops), a mix, or something else? &lt;/li&gt;    &lt;li&gt;Will the presentation be filmed? It usually can be if you ask early enough. &lt;/li&gt;    &lt;li&gt;What's the tech setup? What resolution will you be projecting at? What video connector? &lt;/li&gt; &lt;/ol&gt;  &lt;h3&gt;Some Anecdotes on Planning&lt;/h3&gt;  &lt;p&gt;&lt;strong&gt;Planning win:&lt;/strong&gt; A few years back I got a request for a day of advanced MVC training, but during a pre-meeting it came out that the team had no MVC experience and while they were experienced developers, what they needed was an introduction to MVC with a few additional, specific questions addressed at the end of the day after they were up to speed. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Lesson: Ask questions before (or at the very least at the beginning of) the event to determine skill and experience level, don't assume.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Planning fail:&lt;/strong&gt; Probably my worst presentation ever was an ASP.NET MVC bootcamp I presented at a conference. Having spent a portion of my youth in the military, I'd assumed that the participants at a bootcamp would show up expecting to do some work. In what kind of bizarro world do bootcamp attendees just kick back and watch a presentation? None, right? Right. &lt;/p&gt;  &lt;p&gt;So I prepared a long workshop style tutorial wherein I would guide attendees through building an application, completely revolving around them typing things into their laptops. I had a bunch of downloads prepared for them including checkpoints at the end of each section, etc. When I began the presentation, it quickly became apparent that none of my assumptions were correct. Many of the attendees didn't have laptops, many that did have laptops didn't have the development prerequisites, and everyone was expecting to watch me talk to them for half a day. It was horrible. Eventually I just had to give up on my plans, throw out my slides, and come up with something new on the fly. It wasn't good, but it was better than the train wreck my original lesson plan had become. Some left, some stuck around and I did my best to adapt, get those who wanted to follow along set up and speak to the rest of them. Years later, this still haunts me. I'm really sorry. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Lesson: Ask an organizer to make sure you're clear on the format. If you expect people to participate, make sure that's clearly communicated to them before the event. Assume people will be participating as little as they can get away with unless.&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;Get Another Presenter&lt;/h2&gt;  &lt;p&gt;Training is SO much easier if you have another presenter who can cover a few of your talks. You'll need breathers, and you'll appreciate time to review notes and set up your demos. Attendees will appreciate the break from watching one person all day, too.&lt;/p&gt;  &lt;p&gt;This goes double if you're travelling to another time zone. It's really hard to keep focused and energetic when you're jetlagged. Breaks are important, and you'll be kept busy during scheduled breaks.&lt;/p&gt;  &lt;h2&gt;Preparing The Lesson Plan&lt;/h2&gt;  &lt;h3&gt;What Matters: The End Result&lt;/h3&gt;  &lt;p&gt;Decide what you want them to get out of the day and let that drive your outline – not the feature list or demos you want to show off, etc. What will they remember a day after your talk? Focus on that.&lt;/p&gt;  &lt;p&gt;Expectations for the balance of training vs. entertaining are different compared to a one hour presentation. When people invest a day attending training, they have higher expectations of learning something, whereas some attendees of a one hour session - especially at a conference or code camp - are just &amp;quot;channel surfing&amp;quot; and have greater expectations for entertainment. On the other hand, it's perhaps more important to strategically entertain / engage during a full day of training to break it up.&lt;/p&gt;  &lt;p&gt;A lot of the value you're providing in a full day of training is in the higher level conceptual models and organization. You're not just working through the feature list, you're explaining why the features exist and how they work together.&lt;/p&gt;  &lt;h3&gt;Work From An Outline&lt;/h3&gt;  &lt;p&gt;As I mentioned earlier, an eight hour training course is just eight one hour presentations. It takes time an preparation, but you can do this. Let's look at an example breakdown an eight hour course on anything - could be on How To Make Ramen Burgers:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;strong&gt;Keynote&lt;/strong&gt;. You always need an introduction. Explain what you'll cover, set expectations, explain the high level roadmap for the day, cover prerequisites. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;The Tools&lt;/strong&gt; - Explain what you'll use, how it works, where you can learn more. (note: If you're thinking this doesn't apply, remember to adapt tools to the concept. e.g. for Node, this is stuff like NPM.) &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;The Concepts&lt;/strong&gt; - Now that we're familiar with the tools, let's build something simple and explain every concept, ever step of the way. Remind advanced folks that we're going to speed up in a bit. Let them feel superior for being so experienced (and stay awake) by asking questions. Key point: the experienced people are not your adversaries! They are your allies, and a huge asset in teaching the class. Include them, don't battle them. &lt;/li&gt;    &lt;li&gt;Deep Dive 1 &lt;/li&gt;    &lt;li&gt;Deep Dive 2 &lt;/li&gt;    &lt;li&gt;Deep Dive 3 &lt;/li&gt;    &lt;li&gt;Deep Dive 4 &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Wrap Up.&lt;/strong&gt; Summarize what was covered, encourage everyone with what they've learned, give resources for going further. This is important for two reasons. First, you want to tie things up conceptually so they don't just leave with &amp;quot;Whoa, that was a lot of stuff. What was the middle thing?&amp;quot; feeling. Second, you want to make sure they can take advantage of what you just taught them, and learn more or get help. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Yes, steps 4 - 7 are not filled in. &lt;/p&gt;  &lt;p&gt;&lt;a title="sidney-harris-cartoon-a-miracle-occurs-here[1]" href="http://www.flickr.com/photos/36836555@N00/13900085900/"&gt;&lt;img border="0" alt="sidney-harris-cartoon-a-miracle-occurs-here[1]" src="http://farm8.static.flickr.com/7061/13900085900_8cac31e8df_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;But already you're down from 8 hours to 4 hours, and that's quite something.&lt;/p&gt;  &lt;p&gt;Now, for steps 4 - 7, here's the idea. You are the expert. You've been asked to speak because you know something. You're really quite smart, and experienced. Right? If not, well... oh, dear, we should have covered that earlier. You'll really need to be somewhat experienced to do some training. If you're not, and you can't get out of this, hack like mad for a week or two to try to build some experience. Good luck!&lt;/p&gt;  &lt;p&gt;So, you're experienced. What would you tell a friend who wanted to learn about this concept? Can you break it into four big things they should know? Either four main concepts, or a four step process? Great. From there, it's just four one hour presentations.&lt;/p&gt;  &lt;p&gt;Here's what I currently cover at Web Camps:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Keynote &lt;/li&gt;    &lt;li&gt;Introduction to ASP.NET and Visual Studio 2013 Web Tooling &lt;em&gt;&amp;lt;-- The tools &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Building Web Applications using the latest ASP.NET technologies &lt;em&gt;&amp;lt;-- The concepts &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Building web front ends using the latest web standards &lt;em&gt;&amp;lt;-- Deep dive #1&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;API Services for both web and devices &lt;em&gt;&amp;lt;-- Deep dive #2&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;Running, improving and maintaining a site in the real world &lt;em&gt;&amp;lt;-- Deep dive #3&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;Real-time Communications with SignalR &lt;em&gt;&amp;lt;-- Deep Dive #3 &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Wrap Up &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Presenting several presentations works best if there's a natural flow. In the above case, it's something like &lt;em&gt;Create -&amp;gt; Build -&amp;gt; Deploy&lt;/em&gt;. &lt;/p&gt;  &lt;p&gt;But be willing to make exceptions. For this example, you'll see there's one small thing that's out of order: Sessions 6 is post-deployment, and 7 is a dev topic. That is completely intentional, based on presenting this content a few times. &lt;a href="http://asp.net/signalr"&gt;SignalR&lt;/a&gt; is cool and exciting. It's a highlight, and it's fun to end on. Scaling and maintaining a site in production is really important, but it's hard work and requires more energy than most attendees will have at the end of the day. So I break my logical flow to put the hawt guitar solo at the end. And, honestly, to keep people from leaving after session 5, or at lunch time.&lt;/p&gt;  &lt;h3&gt;A Theme&lt;/h3&gt;  &lt;p&gt;You've been to technical training, right? It gets hard to keep perspective and focus after a few hours. One really useful way to simplify that is to have a common theme. For me, that's usually a common scenario: we're building a site that does X. It doesn't really matter what X is as long as it fits all of your scenarios and you can excited about it. Really, it should be something you can get excited about. Do you like golfing? Make a golf tracker site, not a Contoso Widget Inventory System. And definitely not a Foo app that tracks Bar and Baz instances.&lt;/p&gt;  &lt;ol&gt;&lt;!--EndFragment--&gt;&lt;/ol&gt;  &lt;h2&gt;Demos&lt;/h2&gt;  &lt;p&gt;Okay, let's start with the bad news:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;The only way to keep people awake and interested in a full day training course is with a lot of demos. &lt;/li&gt;    &lt;li&gt;It is exponentially harder to do a full day of demos than it is to do a single hour of demos. The hardest part is that you don't really get any set up time in between sessions, but even if you do it might get monopolized by someone with an obscure question who isn't thinking about the time it takes to set up demos for the next session. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;So, just plan to give 8 presentations without any time in between them. (Note: Remember that I said it's great to have another presenter? Yeah. Any time another presenter speaks, it resets your clock. Gold.)&lt;/p&gt;  &lt;h3&gt;Begin / End States&lt;/h3&gt;  &lt;p&gt;Okay, we've built up some stress. You have to give eight presentations, you can't count on having any prep time between them, and they have to be good. What can you do?&lt;/p&gt;  &lt;p&gt;Here's where prep can really help.&amp;#160; The idea is that, for each demo, you have a begin state (where the demo starts) and an end state (the way the demo should look when your demo is done). This really helps with your peace of mind: for every demo, you've got a set place to start and - more importantly - a working demo to fall back to in case everything goes wrong. Just like washing your car ensures it won't rain, having a working (and validated) end state for each demo does wonders for both the demo and your peace of mind. Trust me. And, if you get nervous (like me) it's so great knowing there's a working example of your demo app in case things just won't cooperate.&lt;/p&gt;  &lt;p&gt;You can do this using source control labels if those come naturally to you. For the Web Camps Training Kit, we just have subfolders with begin and end stats.&lt;/p&gt;  &lt;h3&gt;Strategic Typing&lt;/h3&gt;  &lt;p&gt;Think about what you'll be live coding. Does this add value? Does it teach people? Are you 100% certain you can pull it off without dealing with a&amp;#160; minor typo here or there? Hey, if you're a ninja coder, more power to you. Run that kata.&lt;/p&gt;  &lt;p&gt;For the rest of us, think of what you'll actually show, and what your attendees will profit from seeing. Forget about impressing them, focus on the actual value of having 100 or so people watch you type. As I've done this, I've moved to showing a lot of my demos as tours rather than &amp;quot;feats of strength&amp;quot; - here's what the code looks like, let's talk about it.&lt;/p&gt;  &lt;p&gt;I realize I'm not going to impress people with this technique, or get high speaker ratings, or any of that. I'm okay with it. I have a limited amount of time, I choose to focus it on making my viewers successful rather than trying to make me successful.&lt;/p&gt;  &lt;p&gt;But, recognize that just watching someone explain code can be boring, too. So I try to pick strategic bits and pieces. An easy way to interact with the code is to intentionally break it, or change output text.&lt;/p&gt;  &lt;h3&gt;Reset Scripts&lt;/h3&gt;  &lt;p&gt;Doubling back a bit here, but if you're going to give the same training several times, what do you do? The simplest solution is to have one source&amp;#160; of truth, and you copy from that into a presentation directory each time. That totally works. The important bit is not to present from the source directory.&lt;/p&gt;  &lt;p&gt;If you want to level-up a bit, you might want to write some scripts. The idea is to have three directories for each demo: Begin, Complete, and Initial. The idea is that your script copies your initial state directories over your presentation directory.&lt;/p&gt;  &lt;h3&gt;You Don't Have To Write Then All From Scratch&lt;/h3&gt;  &lt;p&gt;You don't necessarily have to write all of your own demos. More precisely, there's no perceived value to your students / attendees in presenting novel, amazing demos that don't actually accomplish something. Your demos should be optimized for the time and opportunity. Lately I've been building some simple code by hand, then showing a completed example someone else has published. I'll dig in to the code and show them how the exact concepts and code we used in the simple Hello World example work in a completed application.&lt;/p&gt;  &lt;p&gt;Ask around - Twitter, social networks, co-workers, etc. Often someone has a great demo already written, waiting for you to show it off. That lets you focus on the presentation, not building a new demo from scratch.&lt;/p&gt;  &lt;h2&gt;Presentation&lt;/h2&gt;  &lt;h3&gt;Managing expectations&lt;/h3&gt;  &lt;p&gt;Be really clear with expectations and roadmap throughout the day.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Show the outline at the start of the day and set expectations on what you will and won’t be covering. &lt;/li&gt;    &lt;li&gt;Refer back to the outline regularly during the day – it doesn’t hurt to have a “you are here” at the start of each talk. It also cuts down on questions about things that will be covered in a later session. &lt;/li&gt;    &lt;li&gt;Wrap up at the end – helps people digest what they’ve learned (as explained earlier). &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Things make a lot more sense if you're providing the conceptual framework for attendees to file the content away.&lt;/p&gt;  &lt;h3&gt;Slides&lt;/h3&gt;  &lt;p&gt;There are different philosophies on using slides in presentations. For training, my opinion is that they can really help, and it's best to keep them pretty standard.&lt;/p&gt;  &lt;p&gt;Here's what I think the slides should do:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Make it easy to follow what you're talking about by showing structure, showing frequent &amp;quot;you are here&amp;quot; signposts, and giving plenty of context. &lt;/li&gt;    &lt;li&gt;Gives something for attendees to write down (or take pictures of). &lt;/li&gt;    &lt;li&gt;Give the speaker some cues. It's hard to remember where every single demo goes in a full day of training. Some Demo slides that just show the title of the feature or concept can cue you in so you're not wondering what's next or forgetting demos. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;The standard things apply - don't read slide after slide, don't make eye charts with tons of bullet points, etc. Use diagrams and pictures where possible. Use the slides to enhance the presentation, not as a crutch.&lt;/p&gt;  &lt;h2&gt;Rehearsal&lt;/h2&gt;  &lt;p&gt;It's time consuming, but it's important to take the time for a full rehearsal. If you're co-presenting, take turns presenting your sessions for the other speakers (screen sharing if you're remote). I know this is a big time investment and you won't want to do it - or you'll want to race through it - but this will really pay off.&lt;/p&gt;  &lt;p&gt;Two big things to pay attention to:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;strong&gt;Timing&lt;/strong&gt; - You know how it's tricky to nail timing a one hour talk? Multiply that by eight. You need to know which sessions are running long, which ones can be sped up if you're running late, etc. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Demo Transitions&lt;/strong&gt; - You'll want to make sure you're able to transition smoothly between slides and demos, that the demos actually work when you do them consecutively, etc. &lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;Cheat Sheet&lt;/h2&gt;  &lt;p&gt;As you're rehearsing, make notes on a one-page cheat sheet. Mine usually include reminders about important bits of code or steps for the demos, anything tricky about the demo reset steps or setup, and important points I miss in practicing. I keep mine with me when I speak, and the fact that I know it's sitting next to me means I rarely really need it. When you do need it, though, it saves your audience from watching you fumble around. And it's handy to glance at during travel, as well.&lt;/p&gt;  &lt;h2&gt;Tech Check&lt;/h2&gt;  &lt;p&gt;It's a good idea to get in to the place you'll be presenting early to make sure that your laptop works and check the resolution and font size are visible in the back seats. Attendees shouldn't have to suffer through any of that. If you absolutely can't schedule it, at least find out the tech specifics and make sure you've got whatever video adapters you'll need.&lt;/p&gt;  &lt;h2&gt;It's All About Preparation&lt;/h2&gt;  &lt;p&gt;You'll notice that pretty much all of the above covers how to prepare for the event itself. There are a few other small tips for during the event (e.g. have some energy bars or Five Hour Energy handy, ask questions at the beginning to verify attendee experience level), but if you've prepared correctly then most of the actual presentation is already done. &lt;a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful"&gt;Just be the user interface for the content you've prepared. Disappear.&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=SQVFuoV8fo4:1vG3zscFthc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/SQVFuoV8fo4" height="1" width="1" alt=""/&gt;</description><pubDate>Mon, 05 May 2014 23:14:48 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/lessons-learned-preparing-and-presenting-tech-training-events</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity</guid><link>http://weblogs.asp.net/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity</link><category>Azure</category><category>Community News</category><category>SQL Server</category><title>Azure: 99.95% SQL Database SLA, 500 GB DB Size, Improved Performance Self-Service Restore, and Business Continuity</title><description>&lt;p&gt;Earlier this month at the Build conference, we announced a number of great new improvements coming to SQL Databases on Azure including: an improved 99.95% SLA, support for databases up to 500GB in size, self-service restore capability, and new Active Geo Replication support.&amp;nbsp; &lt;a href="https://www.youtube.com/watch?v=LZdLElZUAco&amp;amp;feature=youtu.be" target="_blank"&gt;This 3 minute video&lt;/a&gt; shows a segment of my keynote where I walked through the new capabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LZdLElZUAco&amp;amp;feature=youtu.be" target="_blank"&gt;&lt;img width="485" height="295" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_7740915F.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Last week we made these new capabilities available in preview form, and also introduced new SQL Database service tiers that make it easy to take advantage of them.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;New SQL Database Service Tiers&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last week we introduced a new &lt;strong&gt;Basic&lt;/strong&gt; and &lt;strong&gt;Standard&lt;/strong&gt; tier option with SQL Databases &amp;ndash; which are additions to the existing &lt;strong&gt;Premium&lt;/strong&gt; tier we previously announced.&amp;nbsp; Collectively these tiers provide a flexible set of offerings that enable you to cost effectively deploy and host SQL Databases on Azure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basic Tier&lt;/strong&gt;: Designed for applications with a light transactional workload. Performance objectives for Basic provide a predictable hourly transaction rate&lt;strong&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Standard Tier&lt;/strong&gt;: Standard is the go-to option for cloud-designed business applications. It offers mid-level performance and business continuity features. Performance objectives for Standard deliver predictable per minute transaction rates.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Premium Tier&lt;/strong&gt;: Premium is designed for mission-critical databases. It offers the highest performance levels and access to advanced business continuity features. Performance objectives for Premium deliver predictable per second transaction rates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You &lt;span style="text-decoration: underline;"&gt;do not&lt;/span&gt; need to buy a SQL Server license in order to use any of these pricing tiers &amp;ndash; all of the licensing and runtime costs are built-into the price, and the databases are automatically managed (high availability, auto-patching and backups are all built-in).&amp;nbsp; We also now provide you the ability to pay for the database at the per-day granularity (meaning if you only run the database for a few days you only pay for the days you had it &amp;ndash; not the entire month).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The price for the new SQL Database Basic tier &lt;strong&gt;starts as low as $0.16/day ($4.96 per month) for a 2 GB SQL Database&lt;/strong&gt;.&amp;nbsp; During the preview period we are providing an additional 50% discount on top of these prices.&amp;nbsp; You can learn more about the pricing of the new tiers &lt;a href="http://azure.microsoft.com/en-us/pricing/details/sql-database/#basic-standard-and-premium" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Improved 99.95% SLA and Larger Database Sizes&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;We are extending the availability SLA of all of the new SQL Database tiers to be 99.95%.&amp;nbsp; This SLA applies to the Basic, Standard and Premium tier options &amp;ndash; enabling you to deploy and run SQL Databases on Azure with even more confidence.&lt;/p&gt;
&lt;p&gt;We are also increasing the maximum sizes of databases that are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basic Tier&lt;/strong&gt;: Supports databases up to &lt;strong&gt;2 GB&lt;/strong&gt; in size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standard Tier&lt;/strong&gt;: Supports databases up to &lt;strong&gt;250 GB&lt;/strong&gt; in size.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Premium Tier&lt;/strong&gt;: Supports databases up to &lt;strong&gt;500 GB&lt;/strong&gt; in size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the pricing model for our service tiers has also changed so that you &lt;span style="text-decoration: underline;"&gt;no longer need to pay a per-database size fee&lt;/span&gt; (previously we charged a per-GB rate) - instead we now charge a flat rate per service tier.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Predictable Performance Levels with Built-in Usage Reports&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Within the new service tiers, we are also introducing the concept of &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741336.aspx"&gt;performance levels&lt;/a&gt;, which are a defined level of database resources that you can depend on when choosing a tier.&amp;nbsp; This enables us to provide a much more consistent performance experience that you can design your application around.&lt;/p&gt;
&lt;p&gt;The resources of each service tier and performance level are expressed in terms of Database Throughput Units (DTUs). A DTU provides a way to describe the relative capacity of a performance level based on a blended measure of CPU, memory, and read and write rates. Doubling the DTU rating of a database equates to doubling the database resources.&amp;nbsp; You can learn more about the performance levels of each service tier &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741336.aspx" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Monitoring your resource usage&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can now monitor the resource usage of your SQL Databases via both an API as well as the Azure Management Portal.&amp;nbsp; Metrics include: CPU, reads/writes and memory (not available this week but coming soon),&amp;nbsp; You can also track your performance usage relative (as a percentage) to the available DTU resources within your service tier level:&lt;/p&gt;
&lt;p&gt;&lt;img title="Performance Metircs" alt="Performance Metircs" src="http://i.msdn.microsoft.com/dynimg/IC723272.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style="text-decoration: underline;"&gt;Dynamically Adjusting your Service Tier&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One of the benefits of the new SQL Database Service Tiers is that you can dynamically increase or decrease them depending on the needs of your application.&amp;nbsp; For example, you can start off on a lower service tier/performance level and then gradually increase the service tier levels as your application becomes popular and you need more resources.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;It is quick and easy to change between service tiers or performance levels &amp;mdash; it&amp;rsquo;s a simple online operation.&amp;nbsp; Because you now pay for SQL Databases by the day (as opposed to the month) this ability to dynamically adjust your service tier up or down also enables you to leverage the elastic nature of the cloud and save money.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741336.aspx" target="_blank"&gt;Read this article&lt;/a&gt; to learn more about how performance works in the new system and the benchmarks for each service tier.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;New Service-Service Restore Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Have you ever had that sickening feeling when you&amp;rsquo;ve realized that you inadvertently deleted data within a database and might not have a backup?&amp;nbsp; We now have built-in &lt;strong&gt;Service Service Restore support&lt;/strong&gt; with SQL Databases that helps you protect against this.&amp;nbsp; This support is available in all service tiers (even the Basic Tier).&lt;/p&gt;
&lt;p&gt;SQL Databases now automatically takes database backups daily and log backups every 5 minutes. The daily backups are also stored in geo-replicated Azure Storage (which will store a copy of them at least 500 miles away from your primary region).&lt;/p&gt;
&lt;p&gt;Using the new self-service restore functionality, you can now &lt;a href="http://msdn.microsoft.com/en-us/library/azure/jj650016.aspx"&gt;restore&lt;/a&gt; your database to a point in time in the past as defined by the specified backup retention policies of your service tier:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basic Tier&lt;/strong&gt;: Restore from most recent daily backup&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standard Tier&lt;/strong&gt;: Restore to &lt;span style="text-decoration: underline;"&gt;any point&lt;/span&gt; in last 7 days&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Premium Tier&lt;/strong&gt;: Restore to &lt;span style="text-decoration: underline;"&gt;any point &lt;/span&gt;in last 35 days&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Restores can be accomplishing using either an API we provide or via the Azure Management Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image004_120CB76C.png"&gt;&lt;img width="570" height="428" title="clip_image004" style="display: inline; border-width: 0px;" alt="clip_image004" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image004_thumb_28CE8FA6.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;New Active Geo-replication Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;For Premium Tier databases, we are also adding support that enables you to create up to 4 readable, secondary, databases in any Azure region.&amp;nbsp; When active geo-replication is enabled, we will ensure that all transactions committed to the database in your primary region are continuously replicated to the databases in the other regions as well:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_161995EF.png"&gt;&lt;img width="800" height="450" title="image" style="display: inline; border: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_278F1829.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One of the primary benefits of &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741339.aspx"&gt;active geo-replication&lt;/a&gt; is that it provides application control over disaster recovery at a database level.&amp;nbsp; Having cross-region redundancy enables your applications to recover in the event of a disaster (e.g. a natural disaster, etc).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The new active geo-replication support enables you to initiate/control any failovers &amp;ndash; allowing you to shift the primary database to any of your secondary regions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_4BB70369.png"&gt;&lt;img width="800" height="450" title="image" style="display: inline; border: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_2242C229.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This provides a robust business continuity offering, and enables you to run mission critical solutions in the cloud with confidence.&amp;nbsp; You can learn more about this support &lt;a href="http://msdn.microsoft.com/en-us/library/azure/dn741339.aspx" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Starting using the Preview of all of the Above Features Today!&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;All of the above features are now available to starting using in preview form.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;You can sign-up for the preview by visiting our &lt;a href="http://azure.microsoft.com/en-us/services/preview/" target="_blank"&gt;Preview center&lt;/a&gt; and clicking the &amp;ldquo;Try Now&amp;rdquo; button on the &amp;ldquo;New Service Tiers for SQL Databases&amp;rdquo; option.&amp;nbsp; You can then choose which Azure subscription you wish to enable them for.&amp;nbsp; Once enabled, you can immediately start creating new Basic, Standard or Premium SQL Databases.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This update of SQL Database support on Azure provides some great new features that enable you to build even better cloud solutions.&amp;nbsp; If you don&amp;rsquo;t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://www.windowsazure.com/en-us/documentation/"&gt;Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity&amp;g=https%3A//weblogs.asp.net/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+99.95%25+SQL+Database+SLA%2c+500+GB+DB+Size%2c+Improved+Performance+Self-Service+Restore%2c+and+Business+Continuity&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+99.95%25+SQL+Database+SLA%2c+500+GB+DB+Size%2c+Improved+Performance+Self-Service+Restore%2c+and+Business+Continuity&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Tue, 29 Apr 2014 15:13:00 Z</pubDate></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/z33jOo75CH4</guid><link>https://www.youtube.com/watch?v=z33jOo75CH4&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to create Visual Studio project templates with TemplateBuilder and SideWaffle</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=z33jOo75CH4&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/z33jOo75CH4/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=z33jOo75CH4&amp;amp;feature=youtube_gdata"&gt;How to create Visual Studio project templates with TemplateBuilder and SideWaffle&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video show you how you can create project templates for Visual Studio using TemplateBuilder and SideWaffle&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
3253&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;15
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;06:41&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sun, 20 Apr 2014 21:36:38 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/z33jOo75CH4" /><a10:updated>2015-01-30T21:01:21Z</a10:updated></item><item><guid isPermaLink="false">http://jeffhandley.com/archive/2014/04/15/A-Fun-ValidationAttribute-Bug.aspx</guid><link>http://feeds.jeffhandley.com/~r/JeffHandley/~3/mazcDJYSz18/A-Fun-ValidationAttribute-Bug.aspx</link><title>A Fun ValidationAttribute Bug</title><description>I tweeted about a bug that I recently helped fix in System.ComponentModel.DataAnnotations.ValidationAttribute. As I said, it's a bug resulting from code I wrote for that class years ago. I was honestly surprised there was any interest in this, but there was! Since I piqued your interest, I thought it only fair that I quench your thirst and show you the details of the bug.
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;I helped fix a bug in System.ComponentModel.DataAnnotations.ValidationAttribute today. A threading bug I introduced a long time ago. :-(&lt;/p&gt;— Jeff Handley (@JeffHandley) &lt;a href="https://twitter.com/JeffHandley/statuses/455887240602726400"&gt;April 15, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;h2&gt;History and Backwards Compatibility&lt;/h2&gt; &lt;p&gt;The first implementation of ValidationAttribute had a method with the following signature:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;abstract&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;);&lt;/pre&gt;
&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Any class that inherited from ValidationAttribute had to override the IsValid method and put the validation logic in place.  This was fine and dandy until .NET 4.0 when I worked on a set of features to introduce context-aware validation attributes using new classes called ValidationContext and ValidationResult.  Using ValidationContext, validation attributes could perform complex business logic using application services or even calls into a database.  With this, we wanted to add an overload to IsValid to allow the following signature:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;abstract&lt;/span&gt; ValidationResult IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;, ValidationContext validationContext);&lt;/pre&gt;&lt;pre class="csharpcode"&gt; &lt;/pre&gt;
&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt;Of course we couldn’t add a new abstract method to a class, as that would break existing implementations.  So instead, we looked into adding the following:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;virtual&lt;/span&gt; ValidationResult IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;, ValidationContext validationContext) {
    ValidationResult result = ValidationResult.Success;
    
    &lt;span class="kwrd"&gt;if&lt;/span&gt; (!&lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;)) {
        &lt;span class="kwrd"&gt;string&lt;/span&gt;[] memberNames = validationContext.MemberName != &lt;span class="kwrd"&gt;null&lt;/span&gt; ? &lt;span class="kwrd"&gt;new&lt;/span&gt; &lt;span class="kwrd"&gt;string&lt;/span&gt;[] {
            validationContext.MemberName
        } : &lt;span class="kwrd"&gt;null&lt;/span&gt;;
        
        result = &lt;span class="kwrd"&gt;new&lt;/span&gt; ValidationResult(
            &lt;span class="kwrd"&gt;this&lt;/span&gt;.FormatErrorMessage(validationContext.DisplayName),
            memberNames);
    }

     &lt;span class="kwrd"&gt;return&lt;/span&gt; result;
}&lt;/pre&gt;
&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This introduced a new problem: new attributes that want to use the ValidationContext must now override both overloads of IsValid, and that would be rather confusing.  We wanted new attributes to only have to override the ValidationContext-based IsValid overload and add documentation that the old boolean-based IsValid method should not be overridden—changing it from abstract to virtual.  We’d change that method to the following:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;virtual&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;) {
    &lt;span class="rem"&gt;// Call the ValidationContext-based method and if it's successful, return true&lt;/span&gt;
    &lt;span class="kwrd"&gt;return&lt;/span&gt; &lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;, validationContext: &lt;span class="kwrd"&gt;null&lt;/span&gt;) == ValidationResult.Success;
}&lt;/pre&gt;
&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This is where I got in the code before I introduced the bug.  We’ll cover that next.&lt;/p&gt;
&lt;h2&gt;Ensuring One Overload is Overridden&lt;/h2&gt;
&lt;p&gt;This is an unusual situation.  We want to introduce a new overload that calls into the original method if it’s overridden.  But we want to make the original method virtual and have it call into the new overload if it’s overridden.&lt;/p&gt;
&lt;p&gt;Let’s state that again, because it can be confusing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the original method is overridden, have the new overload’s base implementation call into it&lt;/li&gt;
&lt;li&gt;If the new overload is overridden, have the original method’s base implementation call into it&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;A third way of stating it is: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Allow implementers to override either method&lt;/li&gt;
&lt;li&gt;Call into the overridden method from whichever base implementation remains&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;Needless to say, there’s a risk of a circular reference that we need to prevent too.  The way I solved this was to use a private field and a lock to track the state of whether a base implementation was in the middle of making a call to an overridden implementation.  You can see this in the .NET Framework reference source for the &lt;a href="http://referencesource.microsoft.com/#System.ComponentModel.DataAnnotations/DataAnnotations/ValidationAttribute.cs#279" target="_blank"&gt;System.ComponentModel.DataAnnotations assembly’s ValudationAttribute class&lt;/a&gt;.  Here’s the snippet too:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="rem"&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// Gets the value indicating whether or not the specified &amp;lt;paramref name="value"/&amp;gt; is valid&lt;/span&gt;
&lt;span class="rem"&gt;/// with respect to the current validation attribute.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// Derived classes should not override this method as it is only available for backwards compatibility.&lt;/span&gt;
&lt;span class="rem"&gt;/// Instead, implement &amp;lt;see cref="IsValid(object, ValidationContext)"/&amp;gt;.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;remarks&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// The preferred public entry point for clients requesting validation is the &amp;lt;see cref="GetValidationResult"/&amp;gt; method.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/remarks&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;param name="value"&amp;gt;The value to validate&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;returns&amp;gt;&amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; if the &amp;lt;paramref name="value"/&amp;gt; is acceptable, &amp;lt;c&amp;gt;false&amp;lt;/c&amp;gt; if it is not acceptable&amp;lt;/returns&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="InvalidOperationException"&amp;gt; is thrown if the current attribute is malformed.&amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="NotImplementedException"&amp;gt; is thrown when neither overload of IsValid has been implemented&lt;/span&gt;
&lt;span class="rem"&gt;/// by a derived class.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="preproc"&gt;#if&lt;/span&gt; !SILVERLIGHT
&lt;span class="kwrd"&gt;public&lt;/span&gt;
&lt;span class="preproc"&gt;#else&lt;/span&gt;
&lt;span class="kwrd"&gt;internal&lt;/span&gt;
&lt;span class="preproc"&gt;#endif&lt;/span&gt;
&lt;span class="kwrd"&gt;virtual&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;) {
    &lt;span class="kwrd"&gt;lock&lt;/span&gt; (&lt;span class="kwrd"&gt;this&lt;/span&gt;._syncLock) {
        &lt;span class="kwrd"&gt;if&lt;/span&gt; (&lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload) {
            &lt;span class="kwrd"&gt;throw&lt;/span&gt; &lt;span class="kwrd"&gt;new&lt;/span&gt; NotImplementedException(DataAnnotationsResources.ValidationAttribute_IsValid_NotImplemented);
        } &lt;span class="kwrd"&gt;else&lt;/span&gt; {
            &lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload = &lt;span class="kwrd"&gt;true&lt;/span&gt;;

            &lt;span class="kwrd"&gt;try&lt;/span&gt; {
                &lt;span class="kwrd"&gt;return&lt;/span&gt; &lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;, &lt;span class="kwrd"&gt;null&lt;/span&gt;) == &lt;span class="kwrd"&gt;null&lt;/span&gt;;
            } &lt;span class="kwrd"&gt;finally&lt;/span&gt; {
                &lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload = &lt;span class="kwrd"&gt;false&lt;/span&gt;;
            }
        }
    }
}

&lt;span class="preproc"&gt;#if&lt;/span&gt; !SILVERLIGHT
&lt;span class="rem"&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// Protected virtual method to override and implement validation logic.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// Derived classes should override this method instead of &amp;lt;see cref="IsValid(object)"/&amp;gt;, which is deprecated.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;param name="value"&amp;gt;The value to validate.&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;param name="validationContext"&amp;gt;A &amp;lt;see cref="ValidationContext"/&amp;gt; instance that provides&lt;/span&gt;
&lt;span class="rem"&gt;/// context about the validation operation, such as the object and member being validated.&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;returns&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// When validation is valid, &amp;lt;see cref="ValidationResult.Success"/&amp;gt;.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// When validation is invalid, an instance of &amp;lt;see cref="ValidationResult"/&amp;gt;.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/returns&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="InvalidOperationException"&amp;gt; is thrown if the current attribute is malformed.&amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="NotImplementedException"&amp;gt; is thrown when &amp;lt;see cref="IsValid(object, ValidationContext)" /&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// has not been implemented by a derived class.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="preproc"&gt;#else&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// Protected virtual method to override and implement validation logic.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;param name="value"&amp;gt;The value to validate.&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;param name="validationContext"&amp;gt;A &amp;lt;see cref="ValidationContext"/&amp;gt; instance that provides&lt;/span&gt;
&lt;span class="rem"&gt;/// context about the validation operation, such as the object and member being validated.&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;returns&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// When validation is valid, &amp;lt;see cref="ValidationResult.Success"/&amp;gt;.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// When validation is invalid, an instance of &amp;lt;see cref="ValidationResult"/&amp;gt;.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/para&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/returns&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="InvalidOperationException"&amp;gt; is thrown if the current attribute is malformed.&amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;exception cref="NotImplementedException"&amp;gt; is thrown when &amp;lt;see cref="IsValid(object, ValidationContext)" /&amp;gt;&lt;/span&gt;
&lt;span class="rem"&gt;/// has not been implemented by a derived class.&lt;/span&gt;
&lt;span class="rem"&gt;/// &amp;lt;/exception&amp;gt;&lt;/span&gt;
&lt;span class="preproc"&gt;#endif&lt;/span&gt;
&lt;span class="kwrd"&gt;protected&lt;/span&gt; &lt;span class="kwrd"&gt;virtual&lt;/span&gt; ValidationResult IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;, ValidationContext validationContext) {
    &lt;span class="kwrd"&gt;lock&lt;/span&gt; (&lt;span class="kwrd"&gt;this&lt;/span&gt;._syncLock) {
        &lt;span class="kwrd"&gt;if&lt;/span&gt; (&lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload) {
            &lt;span class="kwrd"&gt;throw&lt;/span&gt; &lt;span class="kwrd"&gt;new&lt;/span&gt; NotImplementedException(DataAnnotationsResources.ValidationAttribute_IsValid_NotImplemented);
        } &lt;span class="kwrd"&gt;else&lt;/span&gt; {
            &lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload = &lt;span class="kwrd"&gt;true&lt;/span&gt;;

            &lt;span class="kwrd"&gt;try&lt;/span&gt; {
                ValidationResult result = ValidationResult.Success;

                &lt;span class="kwrd"&gt;if&lt;/span&gt; (!&lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;)) {
                    &lt;span class="kwrd"&gt;string&lt;/span&gt;[] memberNames = validationContext.MemberName != &lt;span class="kwrd"&gt;null&lt;/span&gt; ? &lt;span class="kwrd"&gt;new&lt;/span&gt; &lt;span class="kwrd"&gt;string&lt;/span&gt;[] { validationContext.MemberName } : &lt;span class="kwrd"&gt;null&lt;/span&gt;;
                    result = &lt;span class="kwrd"&gt;new&lt;/span&gt; ValidationResult(&lt;span class="kwrd"&gt;this&lt;/span&gt;.FormatErrorMessage(validationContext.DisplayName), memberNames);
                }
                &lt;span class="kwrd"&gt;return&lt;/span&gt; result;
            } &lt;span class="kwrd"&gt;finally&lt;/span&gt; {
                &lt;span class="kwrd"&gt;this&lt;/span&gt;._isCallingOverload = &lt;span class="kwrd"&gt;false&lt;/span&gt;;
            }
        }
    }
}
&lt;/pre&gt;
&lt;p&gt;
&lt;/p&gt;&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt;You’ll notice a fun detail in that for Silverlight code (we cross-compile this code to .NET and Silverlight), we made the original method internal instead of public, because it was a new class for Silverlight—therefore there was no reason to even introduce the method on the public surface area.  Instead, we’d only have the ValidationContext-based approach.&lt;/p&gt;
&lt;h2&gt;Locks Are Bad&lt;/h2&gt;
&lt;p&gt;So this is where the code landed.  I had it code reviewed by about a dozen smart people—all much smarter than me in fact.  We all felt sick to our stomachs about it, but we couldn’t think of a better way to accomplish it.  I got code review sign-off, checked in, and this code has been in place for several years now.&lt;/p&gt;
&lt;p&gt;Recently though, our team that helps service older code found that this lock I created is quite the bottleneck when validating a lot of attributes.  I don’t know the specific scenario, but it doesn’t really matter—that lock that I used was a bad idea and it’s causing a performance bottleneck for some customers.  It needed to be fixed.&lt;/p&gt;
&lt;h2&gt;A Cleaner Approach&lt;/h2&gt;
&lt;p&gt;A couple of weeks ago, Miguel Lacouture worked up a much cleaner approach to solving this problem that doesn’t use locks.  He asked if I would code review his fix since I had written the original code.  I had some review feedback for him, but his approach seems significantly superior to what I had come up with long ago.  With the feedback I sent him, here’s the proposed new implementation for these two methods:&lt;/p&gt;&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;private&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; _hasBaseIsValid = &lt;span class="kwrd"&gt;false&lt;/span&gt;;
&lt;span class="kwrd"&gt;private&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; _hasBaseIsValidWithContext = &lt;span class="kwrd"&gt;false&lt;/span&gt;;

&lt;span class="kwrd"&gt;virtual&lt;/span&gt; &lt;span class="kwrd"&gt;bool&lt;/span&gt; IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;) {
    &lt;span class="rem"&gt;// Track that this overload wasn't overridden&lt;/span&gt;
    &lt;span class="kwrd"&gt;if&lt;/span&gt; (!_hasBaseIsValid) {
        _hasBaseIsValid = &lt;span class="kwrd"&gt;true&lt;/span&gt;;
    }

    &lt;span class="rem"&gt;// That means that the other overload must be overridden&lt;/span&gt;
    &lt;span class="rem"&gt;// And if it hasn't been, then throw a NotImplementedException&lt;/span&gt;
    &lt;span class="kwrd"&gt;if&lt;/span&gt; (_hasBaseIsValidWithContext) {
        &lt;span class="kwrd"&gt;throw&lt;/span&gt; &lt;span class="kwrd"&gt;new&lt;/span&gt; NotImplementedException(DataAnnotationsResources.ValidationAttribute_IsValid_NotImplemented);
    }

    &lt;span class="rem"&gt;// We know the other overload was overridden&lt;/span&gt;
    &lt;span class="rem"&gt;// So call it to produce the result&lt;/span&gt;
    &lt;span class="kwrd"&gt;return&lt;/span&gt; &lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;, &lt;span class="kwrd"&gt;null&lt;/span&gt;) == &lt;span class="kwrd"&gt;null&lt;/span&gt;;
}

&lt;span class="kwrd"&gt;virtual&lt;/span&gt; ValidationResult IsValid(&lt;span class="kwrd"&gt;object&lt;/span&gt; &lt;span class="kwrd"&gt;value&lt;/span&gt;, ValidationContext validationContext) {
    &lt;span class="rem"&gt;// Track that this overload wasn't overridden&lt;/span&gt;
    &lt;span class="kwrd"&gt;if&lt;/span&gt; (!_hasBaseIsValidWithContext) {
        _hasBaseIsValidWithContext = &lt;span class="kwrd"&gt;true&lt;/span&gt;;
    }

    &lt;span class="rem"&gt;// That means that the other overload must be overridden&lt;/span&gt;
    &lt;span class="rem"&gt;// And if it hasn't been, then throw a NotImplementedException&lt;/span&gt;
    &lt;span class="kwrd"&gt;if&lt;/span&gt; (_hasBaseIsValid) {
        &lt;span class="kwrd"&gt;throw&lt;/span&gt; &lt;span class="kwrd"&gt;new&lt;/span&gt; NotImplementedException(DataAnnotationsResources.ValidationAttribute_IsValid_NotImplemented);
    }

    &lt;span class="rem"&gt;// We know the other overload was overridden&lt;/span&gt;
    &lt;span class="rem"&gt;// So call it to produce the result&lt;/span&gt;
    ValidationResult result = ValidationResult.Success;

    &lt;span class="kwrd"&gt;if&lt;/span&gt; (!&lt;span class="kwrd"&gt;this&lt;/span&gt;.IsValid(&lt;span class="kwrd"&gt;value&lt;/span&gt;)) {
    &lt;span class="kwrd"&gt;string&lt;/span&gt;[] memberNames = validationContext.MemberName != &lt;span class="kwrd"&gt;null&lt;/span&gt; ? &lt;span class="kwrd"&gt;new&lt;/span&gt; &lt;span class="kwrd"&gt;string&lt;/span&gt;[] {
        validationContext.MemberName
    } : &lt;span class="kwrd"&gt;null&lt;/span&gt;;

    result = &lt;span class="kwrd"&gt;new&lt;/span&gt; ValidationResult(
        &lt;span class="kwrd"&gt;this&lt;/span&gt;.FormatErrorMessage(validationContext.DisplayName),
        memberNames);

    &lt;span class="kwrd"&gt;return&lt;/span&gt; result;
}
&lt;/pre&gt;
&lt;p&gt;
&lt;/p&gt;&lt;style type="text/css"&gt;&lt;![CDATA[csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
]]&gt;&lt;/style&gt;

&lt;p&gt;The general idea is that the lock was simply unnecessary because we can easily just record which of the base implementations still exist, and then determine if they both exist.  The lock was guarding against multiple threads calling into one of the IsValid implementations and temporarily flipping a bit to true when we were calling an overload.  But this new approach just turns switches on and if multiple threads come in it won’t cause any problems.&lt;/p&gt;
&lt;h2&gt;Look Good?&lt;/h2&gt;
&lt;p&gt;This code is unique—ensuring that 1 of 2 overloads is overridden—and the existing bug has been there for years.  What do you think of the new implementation?  See any holes in it?  Of course, Miguel and the rest of his team will test the heck out of the new implementation, but if you see any issues with it, let me know.&lt;/p&gt;
&lt;p&gt;Kudos to Miguel for finding a novel approach to solving the problem.  I wish I’d thought of this approach back when I was writing this code for RIA Services.&lt;/p&gt;
&lt;div id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:323afdd4-7645-4d96-92b8-6ffac840f455" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;Technorati Tags: &lt;a href="http://technorati.com/tags/RIAServices" rel="tag"&gt;RIAServices&lt;/a&gt;,&lt;a href="http://technorati.com/tags/Validation" rel="tag"&gt;Validation&lt;/a&gt;,&lt;a href="http://technorati.com/tags/DataAnnotations" rel="tag"&gt;DataAnnotations&lt;/a&gt;&lt;/div&gt;&lt;img src="http://jeffhandley.com/aggbug/299.aspx" width="1" height="1" /&gt;&lt;img src="//feeds.feedburner.com/~r/JeffHandley/~4/mazcDJYSz18" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 15 Apr 2014 08:29:14 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Handley</dc:creator><comments>http://jeffhandley.com/archive/2014/04/15/A-Fun-ValidationAttribute-Bug.aspx#feedback</comments><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://jeffhandley.com/comments/commentRss/299.aspx</wfw:commentRss><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://jeffhandley.com/archive/2014/04/15/A-Fun-ValidationAttribute-Bug.aspx</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/catching-up-on-the-channel-9-event-videos-for-build-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/qh4WnW8BtTQ/catching-up-on-the-channel-9-event-videos-for-build-2014</link><title>5 Tricks for catching up on the Channel 9 event videos for Build 2014</title><description>&lt;p&gt;Okay, you've had a week to digest all the video content from Build 2014? Done yet? Me, neither. Well, how about some tricks to make this easier?&lt;/p&gt;  &lt;p&gt;I'd written up a few tips and tricks for catching up on Channel 9 event videos back in 2011, this is an update circa 2014.&lt;/p&gt;  &lt;h2&gt;Trick 1: Subscribe and watch at high speed in VLC&lt;/h2&gt;  &lt;p&gt;There are a lot of sessions, and watching even at 10% faster makes a difference. I think you'll be surprised at how, with a little practice, you can keep cranking the speed up and absorb the content at 2x or even faster. Note: Every time I tell people about high speed playback, people assume it's going to make the speakers sound like chipmunks. &lt;strong&gt;All of the high speed playback options I'm going to show are pitch corrected, so they don't raise the speakers' voices.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;If you don't have VLC installed, I highly recommend it. It's lightweight and has a minimal interface, but is packed with codecs and advanced features when you need them. You can install via &lt;a href="http://chocolatey.org/packages/vlc"&gt;Chocolatey&lt;/a&gt; (cinst vlc), directly from &lt;a href="http://www.videolan.org/"&gt;http://www.videolan.org/&lt;/a&gt;, or from &lt;a href="http://ninite.com"&gt;http://ninite.com&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Run VLC and pop into Playlist mode. You can do that from the View menu, hit Ctrl+L, or click on the Playlist icon at the bottom to do that.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.flickr.com/photos/36836555@N00/5642027358/"&gt;&lt;img border="0" alt="2011-04-21 16h47_08" src="http://static.flickr.com/5023/5642027358_7896ef1d7d.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;In the Playlist interface, expand the Internet group and click on + sign to the right of Podcasts.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_14h59_04" href="http://www.flickr.com/photos/36836555@N00/13881286755/"&gt;&lt;img border="0" alt="2014-04-15_14h59_04" src="http://farm3.static.flickr.com/2850/13881286755_14fdfda85b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;This brings up a prompt to enter the URL for the feed. Each Channel 9 event has a list of formats available under the &amp;quot;Subscribe to this event&amp;quot; link:&lt;/p&gt;  &lt;p&gt;&lt;a title="Channel 9 Event - RSS" href="http://www.flickr.com/photos/36836555@N00/13881210023/"&gt;&lt;img border="0" alt="Channel 9 Event - RSS" src="http://farm3.static.flickr.com/2835/13881210023_cdbd89f5f7.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;You have a few options (the types are obvious from the last bit of the URL):&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4high"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4high&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp3"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp3&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can enter the format of your choice here - in my case I'm going to pick the MP4 HD feed: &lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4high"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4high&lt;/a&gt;. However, note that the MP3 format is available. We'll get back to that later.&lt;/p&gt;  &lt;p&gt;That grabs the feed and builds a playlist for us, listing all the videos. &lt;/p&gt;  &lt;p&gt;Note: nothing's been downloaded at this point, it's just showing the list from the RSS feed.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h06_24" href="http://www.flickr.com/photos/36836555@N00/13881464363/"&gt;&lt;img border="0" alt="2014-04-15_15h06_24" src="http://farm8.static.flickr.com/7101/13881464363_47b464242b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now I'll use the search section to filter on ASP.NET because I do love it so.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h16_09" href="http://www.flickr.com/photos/36836555@N00/13881632633/"&gt;&lt;img border="0" alt="2014-04-15_15h16_09" src="http://farm8.static.flickr.com/7333/13881632633_f760420689.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's the key thing - when I double click the video to start streaming it, I'll switch to a faster speed. There are two ways to do that.&lt;/p&gt;  &lt;p&gt;The easy way is to use the Playback / Speed menu.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h19_24" href="http://www.flickr.com/photos/36836555@N00/13881625085/"&gt;&lt;img border="0" alt="2014-04-15_15h19_24" src="http://farm4.static.flickr.com/3692/13881625085_afc967b8cd.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Once you get hooked on this, though, you can use the [ and ] hotkeys (speed up and slow down respectively). Now I'm watching this demo at 2x speed. You might start with 1.5x or so and crank it up as you get more used to it.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h20_16" href="http://www.flickr.com/photos/36836555@N00/13881701123/"&gt;&lt;img border="0" alt="2014-04-15_15h20_16" src="http://farm3.static.flickr.com/2814/13881701123_731b575e74.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Trick 2: Use high speed playback in the Channel 9 player&lt;/h2&gt;  &lt;p&gt;HTML5 video players in all the new browsers support high speed playback. Here's an example showing the Day 1 Keynote on the Channel 9 site; I've right clicked the video to bring up the context menu and I'm about to kick it up to 2x.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h24_19" href="http://www.flickr.com/photos/36836555@N00/13881744765/"&gt;&lt;img border="0" alt="2014-04-15_15h24_19" src="http://farm4.static.flickr.com/3785/13881744765_0c604ba5fc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That's it! Easy!&lt;/p&gt;  &lt;h2&gt;Trick 3: Subscribe to the MP3 feed on Windows Phone 8.1&lt;/h2&gt;  &lt;p&gt;One of my favorite sleeper features in Windows Phone 8.1 is support for high speed playback in the new Podcasts app. For this one, I wanted to add the MP3 URL for just the Build 2014 event: &lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp3"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp3&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;But that's a bit long to type on the phone, so I made a special short URL: &lt;a href="http://aka.ms/b14mp3"&gt;http://aka.ms/b14mp3&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Then in the Podcasts app, I chose add by URL:&lt;/p&gt;  &lt;p&gt;&lt;a title="wp_ss_20140415_0002" href="http://www.flickr.com/photos/36836555@N00/13882347204/"&gt;&lt;img border="0" alt="wp_ss_20140415_0002" src="http://farm3.static.flickr.com/2856/13882347204_259d718a1b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That gave me a list of MP3's. In the podcast options, I can select to have it stream or download them. Now, once I started playing one, I clicked on the little 1.5x thing to the right of the video twice, toggling to 2x speed.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;a title="wp_ss_20140415_0001" href="http://www.flickr.com/photos/36836555@N00/13882347074/"&gt;&lt;img border="0" alt="wp_ss_20140415_0001" src="http://farm6.static.flickr.com/5275/13882347074_f3e87fac48.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Yee haw!!!&lt;/p&gt;  &lt;p&gt;Notes: &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;David Tesar reminded me that the &lt;a href="http://www.windowsphone.com/en-us/store/app/moliplayer-pro/19ea6d3e-e3d9-401d-b30a-f6471811fe08"&gt;Moliplayer video player app&lt;/a&gt; for Windows Phone has variable speed playback.&lt;/li&gt;    &lt;li&gt;There are high speed playback options for other phones, too. On Android, the &lt;a href="https://play.google.com/store/apps/details?id=com.astroplayerkey"&gt;Astro Player app&lt;/a&gt; has great support for variable speed playback.&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Trick 4: Downloading videos using a script&lt;/h2&gt;  &lt;p&gt;In the past, I've published some Powershell scripts for bulk downloading Channel 9 videos. Here' s one, updated for Build 2014. But don't run it just yet, because I think I've found a better options, which I'll show you next.&lt;/p&gt; &lt;script src="https://gist.github.com/jongalloway/935780.js"&gt;&lt;/script&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Trick 5: Downloading videos using a smarter script&lt;/h2&gt;  &lt;p&gt;That's fine, but it's kind of heavy handed. Let's be honest, have you actually watched all of the videos from an event before? It's more likely that you'll want to pick some based on the topic. I found a great site that builds customized feeds based on the session tags: &lt;a title="http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014" href="http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014"&gt;http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014&lt;/a&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;Disclaimer: This is some random site I found on the internet. Works on my machine. It does generate scripts, so you can see what it's doing.&lt;/p&gt;  &lt;p&gt;Here I've filtered to show events tagged with ASP.NET, Web API, and Node.js.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h54_54" href="http://www.flickr.com/photos/36836555@N00/13882221823/"&gt;&lt;img border="0" alt="2014-04-15_15h54_54" src="http://farm8.static.flickr.com/7413/13882221823_8165911af5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Clicking the download button lets me select the formats I want to download.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h56_40" href="http://www.flickr.com/photos/36836555@N00/13882590544/"&gt;&lt;img border="0" alt="2014-04-15_15h56_40" src="http://farm3.static.flickr.com/2908/13882590544_d17f59b2ef_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That generates a custom PowerShell script (WGET is also an option) with just the content I picked:&lt;/p&gt;  &lt;pre class="brush: ps; auto-links: false;"&gt;$overwrite = $false
$webClient = New-Object System.Net.WebClient 
$feeds =  ((&amp;quot;Take_Your_Solution_Worldwide_from_the_Start_with_Bing_Translator.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/2-656_LG.mp4&amp;quot;),(&amp;quot;Continuous_Delivery_and_Continuous_Integration_with_Visual_Studio_Online_and_Microsoft_Azure.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-584_LG.mp4&amp;quot;),(&amp;quot;What_s_New_for_ASP_NET_and_Web_in_Visual_Studio_2013_Update_2_and_Beyond.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-602_LG.mp4&amp;quot;),(&amp;quot;Building_Web_APIs_for_Mobile_Apps_Using_ASP_NET_Web_API_2_1.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-603_LG.mp4&amp;quot;),(&amp;quot;Deep_Dive_Improving_Performance_in_Your_ASP_NET_App.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-605_LG.mp4&amp;quot;),(&amp;quot;Powerful_Mobile_Apps_with_Mobile_Services_and_ASP_NET_Web_API.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-623_LG.mp4&amp;quot;),(&amp;quot;Using_Node_js_and_Python_in_Visual_Studio_and_on_Azure.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-631_LG.mp4&amp;quot;),(&amp;quot;Building_a_Single_Page_Application_with_ASP_NET_and_AngularJS.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-644_LG.mp4&amp;quot;))  
$entries = $feeds.Length
$progress = 0 
$pagepercent = 0 
$dir = get-location
foreach ($item in $feeds){
    $name,$link = $item
    $saveFileName = join-path $dir $name
    if ((-not $overwrite) -and (Test-Path -path $saveFileName))     
    {        
        write-progress -activity &amp;quot;$saveFileName already downloaded&amp;quot; -status &amp;quot;$pagepercent% ($progress / $entries) complete&amp;quot; -percentcomplete $pagepercent    
    }    
    else     
    {        
        write-progress -activity &amp;quot;Downloading $saveFileName&amp;quot; -status &amp;quot;$pagepercent% ($progress / $entries) complete&amp;quot; -percentcomplete $pagepercent       
        &amp;amp;{#TRY
            $webClient.DownloadFile($link, $saveFileName)
        }
        trap [Exception]{
            write-host
            write-host (&amp;quot;Unable to download &amp;quot; + $saveFileName)
            continue; 
        }
    }    
    $pagepercent = [Math]::floor((++$progress)/$entries*100) 
}&lt;/pre&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;Hope these tips help. Get to work!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=qh4WnW8BtTQ:8vbISAoYlZg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/qh4WnW8BtTQ" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 15 Apr 2014 23:01:45 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/catching-up-on-the-channel-9-event-videos-for-build-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more</link><category>.NET</category><category>Azure</category><category>Community News</category><category>Visual Studio</category><title>Azure Updates: Web Sites, VMs, Mobile Services, Notification Hubs, Storage, VNets, Scheduler, AutoScale and More</title><description>&lt;p&gt;It has been a really busy last 10 days for the Azure team. This blog post quickly recaps a few of the significant enhancements we&amp;rsquo;ve made.&amp;nbsp; These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: SSL included, Traffic Manager, Java Support, Basic Tier&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Machines&lt;/strong&gt;: Support for Chef and Puppet extensions, Basic Pricing tier for Compute Instances&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Network&lt;/strong&gt;: General Availability of DynamicRouting VPN Gateways and Point-to-Site VPN&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Services&lt;/strong&gt;: Preview of Visual Studio support for .NET, Azure Active Directory integration and Offline support;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notification Hubs&lt;/strong&gt;: Support for Kindle Fire devices and Visual Studio Server Explorer integration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autoscale&lt;/strong&gt;: General Availability release&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: General Availability release of Read Access Geo Redundant Storage&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active Directory Premium&lt;/strong&gt;: General Availability release&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduler service&lt;/strong&gt;: General Availability release&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Preview release of new Azure Automation service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: SSL now included at no additional charge in Standard Tiers &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With Azure Web Sites you can host up to 500 web-sites in a single standard tier hosting plan.&amp;nbsp; Azure web-sites run in VMs isolated to host only your web applications (giving you predictable performance and security isolation), and you can scale-up/down the number of VMs either manually or using our built-in AutoScale functionality.&amp;nbsp; The pricing for standard tier web-sites is based on the number of VMs you run &amp;ndash; if you host all 500 web-sites in a single VM then all you pay for is for that single VM, if you scale up your web site plan to run across two VMs then you&amp;rsquo;d pay for two VMs, etc.&lt;/p&gt;
&lt;p&gt;Prior to this month we charged an additional fee if you wanted to enable SSL for the sites.&amp;nbsp; Starting this month, we now include the ability to use 5 SNI based SSL certificates and 1 IP based SSL certificate with each standard tier web site hosting plan &lt;strong&gt;at no additional charge&lt;/strong&gt;.&amp;nbsp; This helps make it even easier (and cheaper) to SSL enable your web-sites.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Traffic Manager Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://weblogs.asp.net/scottgu/archive/2013/11/21/windows-azure-general-availability-release-of-biztalk-services-traffic-manager-azure-ad-app-access-xamarin-support-for-mobile-services.aspx" target="_blank"&gt;I&amp;rsquo;ve blogged in the past&lt;/a&gt; about the Traffic Manager service we have built-into Azure.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The Azure Traffic Manager service allows you to control the distribution of user traffic to applications that you host within Azure. This enables you to run instances of your applications across different azure regions all over the world.&amp;nbsp; Traffic Manager works by applying an intelligent routing policy engine to the Domain Name Service (DNS) queries on your domain names, and maps the DNS routes to the appropriate instances of your applications (e.g. you can setup Traffic Manager to route customers in Europe to a European instance of your app, and customers in North America to a US instance of your app).&lt;/p&gt;
&lt;p&gt;You can use Traffic Manager to &lt;strong&gt;improve application availability&lt;/strong&gt; - by enabling automatic customer traffic fail-over scenarios in the event of issues with one of your application instances.&amp;nbsp; You can also use Traffic Manager to &lt;strong&gt;improve application performance&lt;/strong&gt; - by automatically routing your customers to the closet application instance nearest them.&lt;/p&gt;
&lt;p&gt;We are excited to now provide general availability support of Traffic Manager with Azure Web Sites.&amp;nbsp; This enables you to both improve the performance and availability of your web-sites.&amp;nbsp; You can learn more about how to take advantage of this new support &lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2014/03/27/azure-traffic-manager-can-now-integrate-with-azure-web-sites.aspx" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Java Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This past week we added support for an additional server language with Azure Web Sites &amp;ndash; Java.&amp;nbsp; It is now easy to deploy and run Java web applications written using a variety of frameworks and containers including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 1.7.0_51 &amp;ndash; this is the default supported Java runtime&lt;/li&gt;
&lt;li&gt;Tomcat 7.0.50 &amp;ndash; the default Java container&lt;/li&gt;
&lt;li&gt;Jetty 9.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can manage which Java runtime you use, as well as which container hosts your applications using the Azure management portal or our management APIs.&amp;nbsp; &lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2014/04/04/java-on-azure-web-sites.aspx" target="_blank"&gt;This blog post&lt;/a&gt; provides more detail on the new support and options.&lt;/p&gt;
&lt;p&gt;With this announcement, Azure Web Sites now provides first class support for building web applications and sites using .NET, PHP, Node.js, Python and Java.&amp;nbsp; This enables you to use a wide variety of language + frameworks to build your applications, and take advantage of all the great capabilities that Web Sites provide (Easy Deployment, Continuous Deployment, AutoScale, Staging Support, Traffic Manager, outside-in monitoring, Backup, etc).&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Support for Wildcard DNS and SSL Certificates&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Azure Web Sites now supports the ability to map wildcard DNS and SSL Certficates to web-sites.&amp;nbsp; This enables a variety of scenarios &amp;ndash; including the ability to map wildcard vanity domains (e.g. *.myapp.com &amp;ndash; for example: scottgu.myapp.com) to a single backend web site.&amp;nbsp; This can be particularly useful for SaaS based scenarios.&lt;/p&gt;
&lt;p&gt;Scott Cate has an &lt;a href="http://scottcate.com/technology/microsoft-azure-websites-full-support-for-wildcard-dns-and-ssl/" target="_blank"&gt;excellent video&lt;/a&gt; that walks through how to easily set this support up.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: New Basic Tier Pricing Option&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Earlier in this post I talked about how we are now including the ability to use 5 SNI and 1 IP based SSL certificate at no additional cost with each standard tier azure web site hosting plan.&amp;nbsp; We have also recently announced that we are also including the auto-scale, traffic management, backup, staging and web jobs features at no additional cost as part of each standard tier azure web site hosting plan as well.&amp;nbsp; We think the combination of these features provides an incredibly compelling way to securely host and run any web application.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;New Basic Tier Pricing Option&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Starting this month we are also introducing a new &amp;ldquo;basic tier&amp;rdquo; option for Azure web sites which enables you to run web applications without some of these additional features &amp;ndash; and at 25% less cost.&amp;nbsp; We think the basic tier is great for smaller/less-sophisticated web applications, and enables you to be successful while paying even less.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For additional details about the Basic tier pricing, visit the &lt;a href="http://www.windowsazure.com/en-us/pricing/details/web-sites/"&gt;Azure Web sites pricing page&lt;/a&gt;.&amp;nbsp; You can select which tier your web-site hosting plan uses by clicking the Scale tab within the Web Site extension of the Azure management portal.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: Create from Visual Studio&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With the most recent Azure SDK 2.3 release, it is now possible to create Virtual Machines from directly inside Visual Studio&amp;rsquo;s Server Explorer.&amp;nbsp; Simply right-click on the Azure node within it, and choose the &amp;ldquo;Create Virtual Machine&amp;rdquo; menu option:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_2420EEA0.png"&gt;&lt;img width="459" height="405" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_460C5124.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will bring up a &amp;ldquo;Create New Virtual Machine&amp;rdquo; wizard that enables you to walkthrough creating a Virtual Machine, picking an image to run in it, attaching it to a virtual network, and open up firewall ports all from within Visual Studio:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_7AACAD5F.png"&gt;&lt;img width="784" height="554" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7F25BED7.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once created you can then manage the VM (shutdown, restart, start, remote desktop, enable debugging, attach debugger) all from within Visual Studio:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_13AB0E56.png"&gt;&lt;img width="575" height="469" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3359E81E.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This makes it incredibly easy to start taking advantage of Azure without having to leave the Visual Studio IDE.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: Integrated Puppet and Chef support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In a &lt;a href="http://weblogs.asp.net/scottgu/archive/2014/02/20/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more.aspx" target="_blank"&gt;previous blog post&lt;/a&gt; I talked about the new VM Agent we introduced as an optional extension to Virtual Machines hosted on Azure.&amp;nbsp; The VM Agent is a lightweight and unobtrusive process that you can optionally enable to run inside your Windows and Linux VMs. The VM Agent can then be used to install and manage &lt;i&gt;extensions&lt;/i&gt;, which are software modules that extend the functionality of a VM and help make common management scenarios easier.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;At last week&amp;rsquo;s Build conference we announced built-in support for several new extensions &amp;ndash; including extensions that enable easy support for Puppet and Chef.&amp;nbsp; Puppet and Chef allow developers and IT administrators to define and automate the desired state of infrastructure configuration, making it effortless to manage 1000s of VMs in Azure.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Enabling Puppet Support&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We now have a built-in VM image within the Azure VM gallery that enables you to easily stand up a puppet-master server that you can use to store and manage your infrastructure using Puppet.&amp;nbsp; Creating a Puppet Master in Azure is now easy &amp;ndash; simply select the &amp;ldquo;Puppet Enterprise&amp;rdquo; template within the VM gallery:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_69CA9A20.png"&gt;&lt;img width="819" height="523" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_174BB9E4.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can then create new Azure virtual machines that connect to this Puppet Master.&amp;nbsp; Enabling this with VMs created using the Azure management portal is easy (we also make it easy to do with VMs created with the command-line).&amp;nbsp; To enable the Puppet extension within a VM you create using the Azure portal simply navigate to the last page of the &lt;b&gt;Create VM from gallery &lt;/b&gt;experience and check the &amp;ldquo;Puppet Enterprise Agent&amp;rdquo; extension within it:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5DC8A9EC.png"&gt;&lt;img width="816" height="524" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_39371C68.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Specify the URL of the Puppet master server to get started. Once you deploy the VM, the extension will configure the puppet agent to connect to this Puppet master server and pull down the initial configuration that should be used to configure the machine.&lt;/p&gt;
&lt;p&gt;This new support makes it incredibly easy to get started with both Puppet and Chef and enable even richer configuration management of your IaaS infrastructure within Azure.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: Basic Tier&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Earlier in this blog post I discussed how we are introducing a new &amp;ldquo;Basic Tier&amp;rdquo; option for Azure Web Sites.&amp;nbsp; Starting this month we are also introducing a &amp;ldquo;Basic Tier&amp;rdquo; for Virtual Machines as well.&lt;/p&gt;
&lt;p&gt;The Basic Tier option provides VM options with similar CPU + memory configuration options as our existing VMs (which are now called &amp;ldquo;Standard Tier&amp;rdquo; VMs) but do not include the built-in load balancing and AutoScale capabilities.&amp;nbsp; They also cost up to 27% less.&amp;nbsp; These instances are well-suited for production applications that do not require a built-in load balancer (you can optionally bring your own load balancer), batch processing scenarios, as well as for dev/test workloads.&amp;nbsp; Our new Basic tier VMs also have similar performance characteristics to AWS&amp;rsquo;s equivalent VM instances (which are less powerful than the Standard tier VMs we have today).&lt;/p&gt;
&lt;p&gt;Comprehensive pricing information is now available on the &lt;a href="http://www.windowsazure.com/en-us/pricing/details/virtual-machines/"&gt;Virtual Machines Pricing Details&lt;/a&gt; page.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Networking: General Availability of Azure Virtual Network Dynamic Routing VPN Gateways and Point-to-Site VPN&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last year, we &lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2013/04/26/virtual-network-adds-new-capabilities-for-cross-premises-connectivity.aspx"&gt;previewed&lt;/a&gt; a feature called DynamicRouting Gateway and Point-to-Site VPN that supports Route-based VPNs and allows you to connect individual computers to a Virtual Network in Azure. Earlier this month we announced that the feature is now generally available. The DynamicRouting VPN Gateway in a Virtual Network will now carry the same 99.9% SLA as the StaticRouting VPN Gateway.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-13-25/6567.brk-1.png"&gt;&lt;img width="550" height="345" title="clip_image037" style="display: inline; border-width: 0px;" alt="clip_image037" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image037_5B8EB1E1.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that we&amp;rsquo;re in General Availability mode, DynamicRouting Gateway will automatically incur standard Gateway charges which will take effect starting May 1, 2014.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For further details on the service, please visit the Virtual Network &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/jj156075.aspx"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Mobile Services: &lt;/span&gt;&lt;span style="text-decoration: underline;"&gt;Visual Studio Support for Mobile Services .NET Backend&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With Visual Studio 2013 Update 2, you can now create your backend Mobile Service logic using .NET and the ASP.NET Web API framework in Visual Studio, using Mobile Services templates and scaffolds. Mobile Services support for .NET on the backend offers the following benefits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use &lt;strong&gt;ASP.NET Web API and Visual Studio&lt;/strong&gt; together with Mobile Services to&lt;strong&gt; add a backend to your mobile app in minutes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;publish any existing Web API&lt;/strong&gt; to Mobile Services and benefit from authentication, push notifications and other capabilities that Mobile Services provides. You can also take advantage of any Web API features like OData controllers, or 3rd party Web API-based frameworks like Breeze.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;debug&lt;/strong&gt; your Mobile Services .NET backend using Visual Studio running &lt;strong&gt;locally on&lt;/strong&gt;&lt;em&gt; &lt;/em&gt;your machine or &lt;strong&gt;remotely in Azure&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;With Mobile Services &lt;em&gt;we &lt;/em&gt;&lt;strong&gt;run, manage and monitor your Web API for you&lt;/strong&gt;. Azure will automatically notify you if we discover you have a problem with your app.&lt;/li&gt;
&lt;li&gt;With Mobile Services .NET support you can &lt;strong&gt;store your data securely using any data backend of your choice&lt;/strong&gt;: SQL Azure, SQL on Virtual Machine, Azure Table storage, Mongo, et al.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It&amp;rsquo;s easy to get started with Mobile Services .NET support in Visual Studio. Simply use the &lt;b&gt;File-New Project&lt;/b&gt; dialog and select the &lt;b&gt;Windows Azure Mobile Service&lt;/b&gt; project template under the &lt;b&gt;Cloud&lt;/b&gt; node.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image012_2FDDE7E5.jpg"&gt;&lt;img width="624" height="431" title="clip_image012" style="display: inline; border-width: 0px;" alt="clip_image012" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image012_thumb_1675E4AB.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Choose Windows Azure Mobile Service in the New ASP .NET Project dialog.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image014_469FC01F.jpg"&gt;&lt;img width="624" height="466" title="clip_image014" style="display: inline; border-width: 0px;" alt="clip_image014" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image014_thumb_7F4A6A2C.jpg" border="0" /&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;You will see a Mobile Services .NET project, notice this is a customized ASP .NET Web API project with additional Mobile Service NuGet packages and sample controllers automatically included:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image016_73B4ACED.jpg"&gt;&lt;img width="476" height="408" title="clip_image016" style="display: inline; border-width: 0px;" alt="clip_image016" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image016_thumb_11298EAB.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Running the Mobile Service Locally&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can now test your .Net Mobile Service project locally. Open the sample &lt;b&gt;TodoItemController.cs&lt;/b&gt; in the project. The controller shows you how you can use the built-in &lt;b&gt;TableController&amp;lt;T&amp;gt;&lt;/b&gt; .NET class we provide with Mobile Services. Set a breakpoint inside the &lt;b&gt;GetAllTodoItems()&lt;/b&gt; method and hit F5 within Visual Studio to run the Mobile Service locally.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image018_79FE142C.jpg"&gt;&lt;img width="624" height="290" title="clip_image018" style="display: inline; border-width: 0px;" alt="clip_image018" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image018_thumb_75879365.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mobile Services includes a help page to view and test your APIs. On the help page, click on the &lt;b&gt;try it out &lt;/b&gt;link and then click the &lt;b&gt;GET tables/TodoItem&lt;/b&gt; link. Then click &lt;b&gt;try this out&lt;/b&gt; and &lt;b&gt;send &lt;/b&gt;on the GET tables/TodoItem page&lt;b&gt;. &lt;/b&gt;As you might expect, you will hit the breakpoint you set earlier.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image020_472E0DB8.jpg"&gt;&lt;img width="624" height="476" title="clip_image020" style="display: inline; border-width: 0px;" alt="clip_image020" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image020_thumb_5BB35D36.jpg" border="0" /&gt;&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Add APIs to your Mobile Service using Scaffolds&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can add additional functionality to your Mobile Service using Mobile Service or generic Web API controller scaffolds through the &lt;b&gt;Add Scaffold&lt;/b&gt; dialog (right click on your project and choose &lt;b&gt;Add&lt;/b&gt; -&amp;gt; &lt;b&gt;New Scaffolded Item&lt;/b&gt;&amp;hellip; command)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image022_052A2F28.jpg"&gt;&lt;img width="624" height="431" title="clip_image022" style="display: inline; border-width: 0px;" alt="clip_image022" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image022_thumb_3DD4D935.jpg" border="0" /&gt;&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Publish your Mobile Services project to Azure&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once you are done developing your Mobile Service locally, you can publish it to Azure. Simply right click on your project and choose the &lt;b&gt;Publish&lt;/b&gt; command. Using the publish wizard, you can publish to a new or existing Azure Mobile Service:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image024_1FF65534.jpg"&gt;&lt;img width="624" height="490" title="clip_image024" style="display: inline; border-width: 0px;" alt="clip_image024" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image024_thumb_068E51FA.jpg" border="0" /&gt;&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Remote debugging&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Just like Cloud Services and Websites, you can now remote debug your Mobile Service to get more visibility into how your code is operating live in Azure. To enable remote debugging for a Mobile Service, publish your Mobile Service again and set the &lt;b&gt;Configuration&lt;/b&gt; to &lt;b&gt;Debug&lt;/b&gt; in the Publish wizard.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image027_300523EB.jpg"&gt;&lt;img width="624" height="490" title="clip_image027" style="display: inline; border-width: 0px;" alt="clip_image027" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image027_thumb_169D20B1.jpg" border="0" /&gt;&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once your Mobile Service is published and running live in the cloud, simply set a breakpoint in local source code. Then use Visual Studio&amp;rsquo;s Server Explorer to select the Mobile Service instance deployed in the cloud, right click and choose the &lt;b&gt;Attach Debugger &lt;/b&gt;command.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image028_1630EDBC.png"&gt;&lt;img width="372" height="301" title="clip_image028" style="display: inline; border-width: 0px;" alt="clip_image028" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image028_thumb_31D579B2.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the debugger attaches to the mobile service, you can use the debugging capabilities of Visual Studio to instantly and in-real time debug your app running in the cloud.&lt;/p&gt;
&lt;p&gt;To learn more about Visual Studio Support for Mobile Services .NET backend follow tutorials at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn629482.aspx"&gt;Quickstart: Add a mobile service (.NET backend)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn614132.aspx"&gt;How to use controllers to access data in mobile services (.NET backend)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn614130.aspx"&gt;How to create custom APIs and scheduled jobs in a mobile service (.NET backend)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This new .NET backend supports makes it easy to create even better mobile applications than ever before.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Mobile Services: Offline Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In addition to the above support, we are also introducing a preview of a new Mobile Services Offline capability with client SDK support for Windows Phone and Windows Store apps.&lt;/p&gt;
&lt;p&gt;With this functionality, mobile applications can create and modify data even when they are offline/disconnected from a network. When the app is back online, it can synchronize local changes with the Mobile Services Table APIs. The feature also includes support for detecting conflicts when the same record is changed on both the client and the backend.&lt;/p&gt;
&lt;p&gt;To use the new Mobile Services offline functionality, set up a local sync store. You can define your own sync store or use the provided SQLite-based implementation.&amp;nbsp; The Mobile Services SDK provides a new local table API for the sync store, with a symmetrical programming model to the existing Mobile Services Table API. You can use &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-handle-database-conflicts/"&gt;Optimistic Concurrency&lt;/a&gt; along with the offline feature to detect conflicting changes between the client and backend.&lt;/p&gt;
&lt;p&gt;The preview of the Mobile Services Offline feature is available now as part of the Mobile Services SDK for Windows Store and Windows Phone apps. In the future, we will support all client platforms supported by Mobile Services, including iOS, Android, Xamarin, etc.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Mobile Services: Support for Azure Active Directory Sign On&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;We now support Azure Active Directory Single Sign On for Mobile Services.&amp;nbsp; Azure Active Directory authentication is available for both the .NET and Node.js backend options of Mobile Services.&lt;/p&gt;
&lt;p&gt;To take advantage of the feature, first register your client app and your Mobile Service with your Azure Active Directory tenant using the &lt;b&gt;Applications&lt;/b&gt; tab in the Azure Active Directory management portal.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image030_6675D5ED.jpg"&gt;&lt;img width="623" height="410" title="clip_image030" style="display: inline; border-width: 0px;" alt="clip_image030" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image030_thumb_1F207FFB.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In your client project, you will need to add the &lt;a href="http://www.nuget.org/packages/Microsoft.IdentityModel.Clients.ActiveDirectory/2.5.1-alpha"&gt;Active Directory Authentication Library (ADAL)&lt;/a&gt;, currently available for Windows Store, iOS, and Android clients.&lt;/p&gt;
&lt;p&gt;From there on, the token retrieved from ADAL library can be used to authenticate and access Mobile Services.&amp;nbsp; The single sign-on features of ADAL also enables your mobile service to make calls to other resources (such as SharePoint and Office 365) on behalf of the user.&amp;nbsp; You can read more about the new ADAL functionality &lt;a href="http://go.microsoft.com/fwlink/?LinkId=394710"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These new updates make Mobile Services an even more attractive platform for building powerful employee facing apps.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Notification Hub: Kindle Support and Visual Studio Integration&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve previously blogged about &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/08/12/windows-azure-general-availability-of-sql-server-always-on-support-and-notification-hubs-autoscale-improvements-more.aspx" target="_blank"&gt;Azure Notification Hubs&lt;/a&gt;, a high scale cross platform push notification service that allows you to instantly send personalized push notifications to segments of your audience or individuals containing millions of iOS, Android, Windows, Widows Phone devices with a single API call.&lt;/p&gt;
&lt;p&gt;Today we&amp;rsquo;ve made two important updates to Azure Notification Hubs: adding support for Amazon Kindle Fire devices, and Visual Studio support for Notification Hubs.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Support for Amazon&amp;rsquo;s Kindle&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s addition you can now configure your Notification Hubs with Amazon Device Messaging (ADM) service credentials on the configuration page for your Notification Hub in the Azure Management portal, and start sending push notifications to your app on Amazon&amp;rsquo;s Kindle device, in addition to iOS, Android, or Windows.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image032_1AA9FF34.jpg"&gt;&lt;img width="623" height="382" title="clip_image032" style="display: inline; border-width: 0px;" alt="clip_image032" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image032_thumb_0141FBFA.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Testing Push Notifications with Visual Studio &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Earlier I blogged about how we enabled &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/11/21/windows-azure-general-availability-release-of-biztalk-services-traffic-manager-azure-ad-app-access-xamarin-support-for-mobile-services.aspx"&gt;debugging push notifications using the Azure Management Portal&lt;/a&gt;. With today&amp;rsquo;s Visual Studio update, you can now browse your notification hubs and send test push notifications directly from Visual Studio Server Explorer as well.&lt;/p&gt;
&lt;p&gt;Simply select your notification hub in the Server Explorer of Visual Studio under the Notifications Hubs node.&amp;nbsp; Then right click, and choose the&lt;b&gt; Send Test Notifications&lt;/b&gt; command:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image033_67D9F8BF.png"&gt;&lt;img width="394" height="285" title="clip_image033" style="display: inline; border-width: 0px;" alt="clip_image033" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image033_thumb_6E8D0242.png" border="0" /&gt;&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In the notification hub window, you can then send a message either to a particular tag or all registered devices (broadcast). You can select from a variety of templates - Windows Store, Windows Phone, Android, iOS, or even a cross platform message using the Custom Template. After you hit Send, you&amp;rsquo;ll receive the message result instantly to help you diagnose if your message was successfully sent or not.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image035_0A318E39.jpg"&gt;&lt;img width="624" height="346" title="clip_image035" style="display: inline; border-width: 0px;" alt="clip_image035" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image035_thumb_57CDBAB9.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn more about Azure Notification Hubs, read tutorials &lt;a href="https://www.windowsazure.com/en-us/documentation/services/notification-hubs/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;AutoScale: Announcing General Availability of Autoscale Service &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last summer we announced the preview release of our Autoscale service. I&amp;rsquo;m happy to announce that Autoscale is now generally available!&amp;nbsp; Better yet, there's no additional charge for using Autoscale.&lt;/p&gt;
&lt;p&gt;We've added new features since we first released it as a preview version: support for both performance-and schedule-based autoscaling, along with an &lt;a href="http://go.microsoft.com/fwlink/?LinkID=331678&amp;amp;clcid=0x409"&gt;API and .NET SDK&lt;/a&gt; so you can programmatically scale using any performance counters that you define.&lt;/p&gt;
&lt;p&gt;Autoscale supports all four Azure compute services: Cloud Services, Virtual Machines, Mobile Services and Web Sites. For Virtual Machines and Web Sites, Autoscale is included as a feature in the Standard pricing tiers, and for Mobile Services, it's included as a part of both Basic and Standard pricing tiers.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Storage: Announcing General Availability of Read Access Geo Redundant Storage (RA-GRS)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://weblogs.asp.net/scottgu/archive/2013/12/12/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates.aspx" target="_blank"&gt;In December&lt;/a&gt;, we added the ability to allow customers to achieve higher read availability for their data. This feature called Read Access - Geo Redundant Storage (RA-GRS) allows you to read an eventually consistent copy of your geo-replicated data from the storage account&amp;rsquo;s secondary region in case of any unavailability to the storage account&amp;rsquo;s primary region.&lt;/p&gt;
&lt;p&gt;Last week we announced that RA-GRS feature is now out of preview mode, and generally available. It is available to all Azure customers across all regions including the users in China.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;RA-GRS SLA and Pricing&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The benefit of using RA-GRS is that it provides a higher read availability (99.99+%) for a storage account over GRS (99.9+%). When using RA-GRS, the write availability continues to be 99.9+% (same as GRS today) and read availability for RA-GRS is 99.99+%, where the data is expected to be read from secondary if primary is unavailable. In terms of pricing, the capacity (GB) charge is slightly higher for RA-GRS than GRS, whereas the transaction and bandwidth charges are the same for GRS and RA-GRS. See the Windows Azure Storage pricing page &lt;a href="http://www.windowsazure.com/en-us/pricing/details/storage/"&gt;here&lt;/a&gt; for more details about the SLA and pricing.&lt;/p&gt;
&lt;p&gt;You can find more information on the storage blog &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/12/04/introducing-read-access-geo-replicated-storage-ra-grs-for-windows-azure-storage.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Active Directory: General Availability of Azure AD Premium&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Earlier this month we announced the general availability of Azure Active Directory Premium, which provides additional identity and access management capabilities for enterprises. Building upon the capabilities of Azure AD, Azure AD Premium provides these capabilities with a guaranteed SLA and no limit on directory size. Additional capabilities include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Group-based access assignment&lt;/b&gt; enables administrators to use groups in AD to assign access for end users to over 1200 cloud applications in the &lt;a href="http://www.windowsazure.com/en-us/gallery/active-directory/"&gt;AD Application Gallery&lt;/a&gt;. End users can get single-sign on access to their applications from their Access Panel at &lt;a href="https://myapps.microsoft.com"&gt;https://myapps.microsoft.com&lt;/a&gt; or from our &lt;a href="http://blogs.technet.com/b/ad/archive/2014/03/20/my-apps-sso-app-launcher-for-ios-now-available.aspx"&gt;iOS application&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Self-service password reset&lt;/b&gt; that enables end users to reset forgotten passwords without calling your help desk.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Delegated group management&lt;/b&gt; that enables end users to create security groups and manage membership in security groups they own.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Multi-Factor Authentication&lt;/b&gt; that lets you easily deploy a Multi-Factor Authentication solution for your business without deploying new software or hardware.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Customized branding&lt;/b&gt; that lets you include your organization&amp;rsquo;s branding elements in the experiences that users see when signing in to AD or accessing their Access Panel.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reporting, alerting, and analytics&lt;/b&gt; that increase your visibility into application usage in your organization, and potential security concerns with user accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Azure AD Premium also includes usage rights for &lt;a href="http://www.microsoft.com/en-us/server-cloud/products/forefront-identity-manager/default.aspx#fbid=cUN5RvdMwOE"&gt;Forefront Identity Manager&lt;/a&gt; Server and Client Access Licenses.&lt;/p&gt;
&lt;p&gt;To read more about AD Premium, including how to acquire it, read the &lt;a href="http://blogs.technet.com/b/ad/archive/2014/03/25/identity-and-access-management-for-every-user-in-every-organization-using-any-service-on-any-device.aspx"&gt;Active Directory Team blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Active Directory: Public Preview of Azure Rights Management Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Earlier this month we announced the public preview of the ability to manage your Azure Rights Management service within the Azure Management Portal. If your organization has Azure Rights Management either as a stand-alone service or as part of your Office 365 or EMS subscriptions you can now manage it by signing into the Azure Management Portal. Once in the Portal, select &lt;b&gt;ACTIVE DIRECTORY&lt;/b&gt; in the left navigation bar, navigate to the &lt;b&gt;RIGHTS MANAGEMENT&lt;/b&gt; tab, then click on the name of your directory.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image039_6C530A37.jpg"&gt;&lt;img width="641" height="412" title="clip_image039" style="display: inline; border-width: 0px;" alt="clip_image039" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image039_thumb_00D859B6.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this preview you can now create custom rights policy templates that let you define who can access sensitive documents, and what permissions (view, edit, save, print, and more) users can have on those documents.&amp;nbsp; To begin creating a rights policy template, in the &lt;b&gt;Quick Start&lt;/b&gt; page, click on &lt;b&gt;Create an additional rights policy template&lt;/b&gt; option and follow the instructions on the page to define a name and description for the template, add users and rights and define other restrictions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image041_006C26C1.jpg"&gt;&lt;img width="768" height="552" title="clip_image041" style="display: inline; border-width: 0px;" alt="clip_image041" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image041_thumb_67042386.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once your template has been created and published, it will become available to users in your organization in their favorite applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image043_57641875.jpg"&gt;&lt;img width="548" height="462" title="clip_image043" style="display: inline; border-width: 0px;" alt="clip_image043" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image043_thumb_290A92C8.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn more managing Azure Rights Management and the benefits it offers to organizations, see the Information Protection group&amp;rsquo;s &lt;a href="http://blogs.technet.com/b/rms/archive/2014/03/31/create-custom-templates-in-azure-rms-with-the-azure-management-portal.aspx"&gt;blog&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Scheduler: General Availability Release Scheduler Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This month we&amp;rsquo;ve also delivered the General Availability release of the Azure Scheduler service.&amp;nbsp; Scheduler allows you to run jobs on simple or complex recurring schedules that can invoke HTTP/S endpoints or post messages to storage queues. Scheduler has built-in high availability and can reliably call services inside or outside of Azure.&lt;/p&gt;
&lt;p&gt;During preview customers have used it for a wide set of scenarios including for invoking services in their backend for Hadoop workloads, triggering diagnostics cleanup, and periodically checking that partners have submitted content on time. ISVs have used it to empower their applications to add scheduling capabilities such as report generation and sending reminders.&lt;/p&gt;
&lt;p&gt;In the Scheduler portal extension you can easily create and manage your scheduler jobs. Since the initial release, Scheduler has also added the ability to update HTTP jobs with custom headers and basic authentication. It has also exposed the ability to change the recurrence schedule which will allow you to also choose to limit the execution of a job or allow the job to run infinitely.&lt;/p&gt;
&lt;p&gt;With the general availability, new Azure Scheduler cmdlets have been released with Azure PowerShell and the Scheduler .NET API has been included in &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Libraries"&gt;WAML 1.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I highly encourage you to try out the Scheduler today. You might find the following links helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure Scheduler &lt;a href="http://go.microsoft.com/fwlink/p/?LinkID=328061"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a href="http://go.microsoft.com/?linkid=9811175&amp;amp;clcid=0x409"&gt;Azure PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;.NET API &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Scheduler/"&gt;NuGet Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://social.msdn.microsoft.com/Forums/en-US/azurescheduler"&gt;MSDN forum&lt;/a&gt; to find answers to all your Scheduler questions&lt;/li&gt;
&lt;li&gt;Scheduler &lt;a href="http://www.windowsazure.com/en-us/pricing/details/scheduler/"&gt;Pricing Details&lt;/a&gt; page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It makes scheduling recurring tasks really easy.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Automation: Announcing Microsoft Azure Automation Preview&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last week we announced the preview of a new Microsoft Azure service: &lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=392861"&gt;Automation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Automation allows you to automate the creation, deployment, monitoring, and maintenance of resources in your Azure environment using a highly scalable and reliable workflow execution engine. The service can be used to orchestrate the time-consuming, error-prone, and frequently repeated tasks you&amp;rsquo;d otherwise accomplish manually across Microsoft Azure and third-party systems to decrease operational expense for your cloud operations.&lt;/p&gt;
&lt;p&gt;To get started with Automation, you first need to sign-up for the preview on the &lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=392856"&gt;Azure Preview&lt;/a&gt; page. Once you have been approved for the preview, you can sign in to the Management Portal and start using it. Automation is currently only available in the East-US data center, but we will add the ability to deploy to additional data centers in the future.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span style="text-decoration: underline;"&gt;Authoring a Runbook&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Once you have the Automation preview enabled on your subscription, you can easily get started automating by following a few simple steps:&lt;b&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Step 1: In the &lt;a href="manage.windowsazure.com"&gt;Microsoft Azure management portal&lt;/a&gt;, click &lt;b&gt;New&lt;/b&gt;-&amp;gt;&lt;b&gt;App&lt;/b&gt; &lt;b&gt;Services&lt;/b&gt;-&amp;gt;&lt;b&gt;Automation&lt;/b&gt;-&amp;gt;&lt;b&gt;Runbook&lt;/b&gt;-&amp;gt;&lt;b&gt;Quick Create&lt;/b&gt; to create a new runbook. Runbooks are collections of activities that provide an environment for automating everything from diagnostic logging to applying updates to all instances of a virtual machine or web role to renewing certificates to cleaning storage accounts. Enter a name and description for the runbook, and create a new Automation account which will store your Runbooks, Assets, and Jobs.&lt;/p&gt;
&lt;p&gt;Next time you create a runbook you can either use the same Automation account as you just created or create a separate one to if you&amp;rsquo;d like to maintain separation between a few different collections of runbooks / assets.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image045_3D8FE246.jpg"&gt;&lt;img width="624" height="269" title="clip_image045" style="display: inline; border-width: 0px;" alt="clip_image045" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image045_thumb_201D913A.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image047_6DB9BDBA.jpg"&gt;&lt;img width="639" height="207" title="clip_image047" style="display: inline; border-width: 0px;" alt="clip_image047" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image047_thumb_0D689783.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 2: Click on your runbook, then click &lt;b&gt;Author&lt;/b&gt;-&amp;gt;&lt;b&gt;Draft&lt;/b&gt;. Type some PowerShell commands in the editor, then hit &amp;lsquo;&lt;b&gt;Publish&lt;/b&gt;&amp;rsquo; to make this runbook draft available for production execution.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image049_4208F3BE.jpg"&gt;&lt;img width="649" height="405" title="clip_image049" style="display: inline; border-width: 0px;" alt="clip_image049" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image049_thumb_0FA5203F.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span style="text-decoration: underline;"&gt;Starting a Runbook and Viewing the Job&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;1. To start the runbook you just published, go back to the &amp;lsquo;&lt;b&gt;Runbooks&lt;/b&gt;&amp;rsquo; tab, click on your newly-published runbook, and hit &amp;lsquo;&lt;b&gt;Start.&lt;/b&gt;&amp;rsquo; Enter any required parameters for the runbook, then click the checkmark button.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image051_5D414CBF.jpg"&gt;&lt;img width="502" height="420" title="clip_image051" style="display: inline; border-width: 0px;" alt="clip_image051" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image051_thumb_63F45642.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. Click on your runbook, then click on the &amp;lsquo;&lt;b&gt;Jobs&lt;/b&gt;&amp;rsquo; tab for this runbook. Here you can view all the instances of a runbook that have run, called jobs. You should see the job you just started.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image053_1894B27E.jpg"&gt;&lt;img width="655" height="218" title="clip_image053" style="display: inline; border-width: 0px;" alt="clip_image053" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image053_thumb_38438C46.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3. Click on the job you just started to view more details about its execution. Here you can see the job output, as well as any exceptions that may have occurred while the job was executing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image055_05DFB8C7.jpg"&gt;&lt;img width="497" height="515" title="clip_image055" style="display: inline; border-width: 0px;" alt="clip_image055" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image055_thumb_258E928F.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you get familiar with the service, you&amp;rsquo;ll be able to create more sophisticated runbooks to automate your scenarios. I encourage you to try out Microsoft Azure Automation today.&lt;/p&gt;
&lt;p&gt;For more information, click through the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=392861"&gt;Service Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=392857"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=392519"&gt;Getting Started guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkID=301740"&gt;Runbook Authoring guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=393641"&gt;Pricing Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/?LinkId=390561"&gt;MSDN forum&lt;/a&gt; for answers to all your Automation questions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;This most recent release of Azure includes a bunch of great features that enable you to build even better cloud solutions.&amp;nbsp; If you don&amp;rsquo;t already have a Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://www.windowsazure.com/en-us/documentation/"&gt;Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure+Updates%3a+Web+Sites%2c+VMs%2c+Mobile+Services%2c+Notification+Hubs%2c+Storage%2c+VNets%2c+Scheduler%2c+AutoScale+and+More&amp;v3=ScottGu%27s%20Blog%20-%20Azure+Updates%3a+Web+Sites%2c+VMs%2c+Mobile+Services%2c+Notification+Hubs%2c+Storage%2c+VNets%2c+Scheduler%2c+AutoScale+and+More&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-updates-web-sites-vms-mobile-services-notification-hubs-storage-vnets-schedule-autoscale-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Mon, 14 Apr 2014 20:58:00 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2014/3-603</guid><link>http://channel9.msdn.com/Events/Build/2014/3-603</link><category>web</category><category>azure</category><category>web-api</category><category>asp.net</category><title>Building Web APIs for Mobile Apps Using ASP.NET Web API 2.1</title><description>&lt;p&gt;To build a great connected application you need powerful backend services. In this session we’ll learn how to use ASP.NET Web API 2.1 to support connection applications for Windows Phone, Windows Store and more!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d44cfc82d7454ef8b08fa2fe017ccd3e"&gt;</description><pubDate>Mon, 31 Mar 2014 06:06:27 Z</pubDate><comments>http://channel9.msdn.com/Events/Build/2014/3-603</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">To build a great connected application you need powerful backend services. In this session we’ll learn how to use ASP.NET Web API 2.1 to support connection applications for Windows Phone, Windows Store and more! </itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2014/3-644</guid><link>http://channel9.msdn.com/Events/Build/2014/3-644</link><category>html5</category><category>javascript</category><category>asp.net</category><category>jquery</category><title>Building a Single Page Application with ASP.NET and AngularJS</title><description>&lt;p&gt;In this breakout session, we’ll see how to power an AngularJS Single Page Application using both ASP.NET Web API and SignalR for back-end data services. You’ll learn how to get started building web applications with AngularJS, how to leverage HTML5 features like local storage and pushState, providing efficient server resources via HTTP and web sockets (sing SignalR), important routing configuration concerns, testing and deployment.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:af55795c49de4ac4a6fba2fe017cd658"&gt;</description><pubDate>Mon, 31 Mar 2014 06:06:35 Z</pubDate><comments>http://channel9.msdn.com/Events/Build/2014/3-644</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this breakout session, we’ll see how to power an AngularJS Single Page Application using both ASP.NET Web API and SignalR for back-end data services. You’ll learn how to get started building web applications with AngularJS, how to leverage HTML5 features like local storage and pushState, providing efficient server resources via HTTP and web sockets (sing SignalR), important routing configuration concerns, testing and deployment. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3731</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway, David Catuhe</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2014/3-602</guid><link>http://channel9.msdn.com/Events/Build/2014/3-602</link><category>web</category><category>azure</category><category>asp.net</category><title>What's New for ASP.NET and Web in Visual Studio 2013 Update 2 and Beyond</title><description>&lt;p&gt;The web marches on, and so does Visual Studio and ASP.NET, with a renewed commitment to making a great IDE for web developers of all kinds. Join Scott &amp;amp; Scott for this dive into VS2013 Update 2 and beyond. We’ll see new features in ASP.NET, new ideas in front end web development, as well as a peek into ASP.NET’s future.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:80777002126442ccb0aaa2fe017ccd35"&gt;</description><pubDate>Mon, 31 Mar 2014 06:06:27 Z</pubDate><comments>http://channel9.msdn.com/Events/Build/2014/3-602</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The web marches on, and so does Visual Studio and ASP.NET, with a renewed commitment to making a great IDE for web developers of all kinds. Join Scott &amp;amp; Scott for this dive into VS2013 Update 2 and beyond. We’ll see new features in ASP.NET, new ideas in front end web development, as well as a peek into ASP.NET’s future. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3593</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Scott Hanselman</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Site-Web-Jobs-with-Jaime-Espinosa</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Site-Web-Jobs-with-Jaime-Espinosa</link><category>Azure</category><title>Web Site Web Jobs with Jaime Espinosa</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Jaime Espinosa from the Web Sites team to describe how to get going with Web Jobs. Web Job are a great way to do background processing within the same context of your Windows Azure Web Site.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Notes&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://feedback.windowsazure.com/forums/169385-web-sites"&gt;Windows Azure Web Sites User Voice&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/a1166718-a2d9-4a48-a5fd-504ff4ad1b65"&gt;Bing Code Search for C#&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://curah.microsoft.com/52143/using-the-webjobs-feature-of-windows-azure-web-sites"&gt;&amp;quot;One&amp;quot; Web Jobs Resource&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/f4824551-2660-4afa-aba1-1fcc1673c3d0"&gt;Visual Studio Extension for adding Web Jobs to a Web Application&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs.Host/0.2.0-alpha2"&gt;Web Jobs SDK on NuGet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Referenced Shows&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK"&gt;Web Jobs SDK with Pranav Rastogi &amp;amp; Mike Stall&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Windows-Azure-Web-Sites-Private-Site-Extensions"&gt;David Ebbo on Site Extensions&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:6101025cdda24923832ea2fd0070db93"&gt;</description><pubDate>Sun, 30 Mar 2014 02:39:43 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime.mp4" type="video/mp4" length="89018756" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Site-Web-Jobs-with-Jaime-Espinosa</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Jaime Espinosa from the Web Sites team to describe how to get going with Web Jobs. Web Job are a great way to do background processing within the same context of your Windows Azure Web Site. Show Notes Windows Azure Web Sites User VoiceBing Code Search for C#&amp;quot;One&amp;quot; Web Jobs ResourceVisual Studio Extension for adding Web Jobs to a Web ApplicationWeb Jobs SDK on NuGetReferenced Shows Web Jobs SDK with Pranav Rastogi &amp;amp; Mike StallDavid Ebbo on Site Extensions</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3036</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime.mp3" expression="full" duration="3036" fileSize="48585370" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime.mp4" expression="full" duration="3036" fileSize="89018756" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime.webm" expression="full" duration="3036" fileSize="247453851" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_high.mp4" expression="full" duration="3036" fileSize="566895999" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/8997/8f717f7a-e3d7-4639-a80e-56b1f9dd8997/WebSiteWebJobswithJaime_mid.mp4" expression="full" duration="3036" fileSize="361410172" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Web-Site-Web-Jobs-with-Jaime-Espinosa/RSS</wfw:commentRss></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10508511</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/03/17/ef6-1-0-rtm-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF6.1.0 RTM Available</title><description>&lt;p&gt;Since the release of EF6 our team has been working on the EF6.1 release. This is our next release that includes new features.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in EF6.1&lt;/h2&gt;  &lt;p&gt;EF6.1 adds the following new features:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Tooling consolidation&lt;/strong&gt; provides a consistent way to create a new EF model. This feature &lt;a href="http://msdn.com/data/jj200620"&gt;extends the ADO.NET Entity Data Model wizard to support creating Code First models&lt;/a&gt;, including reverse engineering from an existing database. These features were previously available in Beta quality in the EF Power Tools. &lt;/li&gt;    &lt;li&gt;&lt;a href="http://msdn.com/data/dn630221"&gt;&lt;strong&gt;Handling of transaction commit failures&lt;/strong&gt;&lt;/a&gt; provides the &lt;a href="http://msdn.microsoft.com/en-us/library/system.data.entity.infrastructure.commitfailurehandler(v=vs.113).aspx"&gt;CommitFailureHandler&lt;/a&gt; which makes use of the newly introduced ability to intercept transaction operations. The CommitFailureHandler allows automatic recovery from connection failures whilst committing a transaction. &lt;/li&gt;    &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-US/data/jj591583#Index"&gt;&lt;strong&gt;IndexAttribute&lt;/strong&gt;&lt;/a&gt; allows indexes to be specified by placing an [Index] attribute on a property (or properties) in your Code First model. Code First will then create a corresponding index in the database. &lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Public%20Mapping%20API"&gt;&lt;strong&gt;The public mapping API&lt;/strong&gt;&lt;/a&gt; provides access to the information EF has on how properties and types are mapped to columns and tables in the database. In past releases this API was internal. &lt;/li&gt;    &lt;li&gt;&lt;a href="http://msdn.com/data/jj556606#Interceptors"&gt;&lt;strong&gt;Ability to configure interceptors via the App/Web.config file&lt;/strong&gt;&lt;/a&gt; allows interceptors to be added without recompiling the application. &lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;System.Data.Entity.Infrastructure.Interception.DatabaseLogger&lt;/strong&gt; is a new interceptor that makes it easy to log all database operations to a file. In combination with the previous feature, this allows you to easily &lt;a href="http://msdn.com/data/jj556606#LogDatabase"&gt;switch on logging of database operations for a deployed application&lt;/a&gt;, without the need to recompile. &lt;strong&gt;Migrations model change detection&lt;/strong&gt; has been improved so that scaffolded migrations are more accurate; performance of the change detection process has also been enhanced. &lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;strong&gt;Performance improvements&lt;/strong&gt; including reduced database operations during initialization, optimizations for null equality comparison in LINQ queries, faster view generation (model creation) in more scenarios, and more efficient materialization of tracked entities with multiple associations. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Support for .ToString, String.Concat and enum HasFlags in LINQ Queries&lt;/strong&gt;.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;System.Data.Entity.Infrastructure.Interception.IDbTransactionInterceptor&lt;/strong&gt; is a new interceptor that allows components to receive notifications when Entity Framework initiates operations on a transaction.&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where do I get EF6.1?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/"&gt;available on NuGet&lt;/a&gt;. If you are using Code First then there is no need to install the tooling. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and Visual Studio 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=40762"&gt;available on the Microsoft Download Center&lt;/a&gt;. You only need to install the tooling if you want to use Model First or Database First.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s new since EF6.1 Beta 1?&lt;/h2&gt;  &lt;p&gt;Since the Beta 1 of EF6.1 we’ve just been fixing bugs and tidying up the new features. There are no new features in the RTM since Beta 1.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Thank you to our contributors&lt;/h2&gt;  &lt;p&gt;We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release - &lt;a href="https://www.codeplex.com/site/users/view/RogerAlsing"&gt;RogerAlsing&lt;/a&gt;, &lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;, and &lt;a href="https://www.codeplex.com/site/users/view/MikeCole"&gt;mikecole&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following contributions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Support for String.Concat and .ToString in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Support for enum HasFlags method in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Entity SQL canonical function support for SQL Server Compact (ErikEJ) &lt;/li&gt;    &lt;li&gt;Fix for &lt;a href="https://entityframework.codeplex.com/workitem/1632"&gt;a bug&lt;/a&gt; that was affecting EF running under Mono (ErikEJ) &lt;/li&gt; &lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10508511" width="1" height="1"&gt;</description><pubDate>Mon, 17 Mar 2014 17:47:35 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">54</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10508511</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/03/17/ef6-1-0-rtm-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/sxsw/Blake-Miller-Founder-and-CEO-of-Bodeefit</guid><link>http://channel9.msdn.com/Blogs/sxsw/Blake-Miller-Founder-and-CEO-of-Bodeefit</link><category>BizSpark</category><category>Startups</category><category>Windows 8.1</category><title>Blake Miller Founder and CEO of Bodeefit</title><description>&lt;p&gt;Blake talks about how fitness based startup Bodeefit made a big investment and bet on Windows when they debuted their &amp;quot;workout of the day&amp;quot; application for Windows 8.1&lt;/p&gt;&lt;p&gt;&lt;a href="http://apps.microsoft.com/windows/en-US/app/bodeefit/e1e93def-358b-43ab-bbbe-2a80c8b2e1d9"&gt;http://apps.microsoft.com/windows/en-US/app/bodeefit/e1e93def-358b-43ab-bbbe-2a80c8b2e1d9&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:d7f9ba1d87b049ca8362a2ed011a6502"&gt;</description><pubDate>Mon, 17 Mar 2014 17:30:59 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller.mp4" type="video/mp4" length="21468258" /><comments>http://channel9.msdn.com/Blogs/sxsw/Blake-Miller-Founder-and-CEO-of-Bodeefit</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Blake talks about how fitness based startup Bodeefit made a big investment and bet on Windows when they debuted their &amp;quot;workout of the day&amp;quot; application for Windows 8.1 http://apps.microsoft.com/windows/en-US/app/bodeefit/e1e93def-358b-43ab-bbbe-2a80c8b2e1d9 </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">442</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller.mp3" expression="full" duration="442" fileSize="7078598" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller.mp4" expression="full" duration="442" fileSize="21468258" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller.webm" expression="full" duration="442" fileSize="60975662" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_high.mp4" expression="full" duration="442" fileSize="133424959" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d5a8/c8b3c86b-b478-4ce3-9aad-2293c03ad5a8/SXSWBlakeMiller_mid.mp4" expression="full" duration="442" fileSize="87210008" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Golnaz</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Golnaz</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/sxsw/Blake-Miller-Founder-and-CEO-of-Bodeefit/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/sxsw/Charise-Flynn-COO-of-Dwolla</guid><link>http://channel9.msdn.com/Blogs/sxsw/Charise-Flynn-COO-of-Dwolla</link><category>BizSpark</category><category>Software Development Kit</category><category>Startups</category><category>Windows 8.1</category><title>Charise Flynn COO of Dwolla</title><description>&lt;p&gt;Charise talks about Dwolla's innovative payment network, updated app for Windows 8.1 and how developers will soon be able to take better advantage of Dwolla on Windows 8 and Windows Phone.&lt;/p&gt;&lt;p&gt;&lt;a href="http://apps.microsoft.com/windows/en-us/app/dwolla/af8758f2-995a-40d0-84a0-e3e747f2704f"&gt;http://apps.microsoft.com/windows/en-us/app/dwolla/af8758f2-995a-40d0-84a0-e3e747f2704f&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:f5c23c5935fc4620a27ba2ed011b207f"&gt;</description><pubDate>Mon, 17 Mar 2014 17:30:48 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn.mp4" type="video/mp4" length="18460022" /><comments>http://channel9.msdn.com/Blogs/sxsw/Charise-Flynn-COO-of-Dwolla</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Charise talks about Dwolla's innovative payment network, updated app for Windows 8.1 and how developers will soon be able to take better advantage of Dwolla on Windows 8 and Windows Phone. http://apps.microsoft.com/windows/en-us/app/dwolla/af8758f2-995a-40d0-84a0-e3e747f2704f </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">346</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn.mp3" expression="full" duration="346" fileSize="5544518" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn.mp4" expression="full" duration="346" fileSize="18460022" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn.webm" expression="full" duration="346" fileSize="48155211" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_high.mp4" expression="full" duration="346" fileSize="107781355" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c94/f3ba96c5-da95-49bf-9833-d65d9a061c94/SXSWChariseFlynn_mid.mp4" expression="full" duration="346" fileSize="71127696" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Golnaz</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Golnaz</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/sxsw/Charise-Flynn-COO-of-Dwolla/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/sxsw/Rodney-Williams-Founder-and-CEO-of-Lisnr</guid><link>http://channel9.msdn.com/Blogs/sxsw/Rodney-Williams-Founder-and-CEO-of-Lisnr</link><category>BizSpark</category><category>Startups</category><title>Rodney Williams Founder and CEO of Lisnr</title><description>&lt;p&gt;Rodney talks about the unique audio capabilities of Lisnr and how they'll soon be available on Windows 8.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:570db8e42d4d46958f95a2ed011b8951"&gt;</description><pubDate>Mon, 17 Mar 2014 17:30:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams.mp4" type="video/mp4" length="13388971" /><comments>http://channel9.msdn.com/Blogs/sxsw/Rodney-Williams-Founder-and-CEO-of-Lisnr</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Rodney talks about the unique audio capabilities of Lisnr and how they'll soon be available on Windows 8. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">312</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams.mp3" expression="full" duration="312" fileSize="5001926" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams.mp4" expression="full" duration="312" fileSize="13388971" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams.webm" expression="full" duration="312" fileSize="39897354" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_high.mp4" expression="full" duration="312" fileSize="90034987" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bc92/9da04d44-4c77-40da-82a7-3cc929d5bc92/SXSWRodneyWilliams_mid.mp4" expression="full" duration="312" fileSize="57606860" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Golnaz</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Golnaz</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/sxsw/Rodney-Williams-Founder-and-CEO-of-Lisnr/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/sxsw/Chris-Bergman-Founder-and-CEO-of-ChoreMonster</guid><link>http://channel9.msdn.com/Blogs/sxsw/Chris-Bergman-Founder-and-CEO-of-ChoreMonster</link><category>BizSpark</category><category>Startups</category><category>Windows 8.1</category><title>Chris Bergman Founder and CEO of ChoreMonster</title><description>&lt;p&gt;What if your kids begged you to do their chores? Chris Bergman talks about bringing his award winning chore application to Windows 8.1&lt;/p&gt;&lt;p&gt;&lt;a href="http://apps.microsoft.com/windows/en-us/app/choremonster/f1c0b03c-42c4-4bf7-a8bf-e15057d75d85"&gt;http://apps.microsoft.com/windows/en-us/app/choremonster/f1c0b03c-42c4-4bf7-a8bf-e15057d75d85&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:50e78012c16c4b77a21ba2ed011c87fb"&gt;</description><pubDate>Mon, 17 Mar 2014 17:30:37 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman.mp4" type="video/mp4" length="14902526" /><comments>http://channel9.msdn.com/Blogs/sxsw/Chris-Bergman-Founder-and-CEO-of-ChoreMonster</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">What if your kids begged you to do their chores? Chris Bergman talks about bringing his award winning chore application to Windows 8.1 http://apps.microsoft.com/windows/en-us/app/choremonster/f1c0b03c-42c4-4bf7-a8bf-e15057d75d85 </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">272</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman.mp3" expression="full" duration="272" fileSize="4355270" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman.mp4" expression="full" duration="272" fileSize="14902526" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman.webm" expression="full" duration="272" fileSize="38218660" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_high.mp4" expression="full" duration="272" fileSize="87647461" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/67f2/ab08877f-be60-4873-8b48-bc68fb6f67f2/SXSWChrisBergman_mid.mp4" expression="full" duration="272" fileSize="58024590" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Golnaz</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Golnaz</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/sxsw/Chris-Bergman-Founder-and-CEO-of-ChoreMonster/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/sxsw/Michael-Forte-Founder-and-CEO-of-Phriz-be</guid><link>http://channel9.msdn.com/Blogs/sxsw/Michael-Forte-Founder-and-CEO-of-Phriz-be</link><category>BizSpark</category><category>Startups</category><category>Windows Phone 8</category><category>Windows 8.1</category><title>Michael Forte Founder and CEO of Phriz.be</title><description>&lt;p&gt;Michael talks about a mobile-first sharing platform that allows you to see nearby users or devices and easily connect to share photos and how Phriz.be creates unique user experiences for Windows 8.1 and Windows Phone 8.&lt;/p&gt;&lt;p&gt;Windows 8&lt;/p&gt;&lt;p&gt;&lt;a href="http://apps.microsoft.com/windows/en-us/app/phriz-be/9cfdb6a9-b5f2-422a-bc12-5e86c2170da5"&gt;http://apps.microsoft.com/windows/en-us/app/phriz-be/9cfdb6a9-b5f2-422a-bc12-5e86c2170da5&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Windows Phone&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.windowsphone.com/en-us/store/app/phriz-be/ce86d298-b9bd-477d-bacf-91c5f443b6c9"&gt;http://www.windowsphone.com/en-us/store/app/phriz-be/ce86d298-b9bd-477d-bacf-91c5f443b6c9&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:813787f4ff1745aeafa7a2ed011ef333"&gt;</description><pubDate>Mon, 17 Mar 2014 17:30:04 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte.mp4" type="video/mp4" length="11616166" /><comments>http://channel9.msdn.com/Blogs/sxsw/Michael-Forte-Founder-and-CEO-of-Phriz-be</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Michael talks about a mobile-first sharing platform that allows you to see nearby users or devices and easily connect to share photos and how Phriz.be creates unique user experiences for Windows 8.1 and Windows Phone 8. Windows 8 http://apps.microsoft.com/windows/en-us/app/phriz-be/9cfdb6a9-b5f2-422a-bc12-5e86c2170da5 Windows Phone http://www.windowsphone.com/en-us/store/app/phriz-be/ce86d298-b9bd-477d-bacf-91c5f443b6c9 </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">241</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte.mp3" expression="full" duration="241" fileSize="3862214" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte.mp4" expression="full" duration="241" fileSize="11616166" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte.webm" expression="full" duration="241" fileSize="33602487" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_high.mp4" expression="full" duration="241" fileSize="73177553" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/55e9/da3f19f0-8913-4f83-bb6d-3873b98f55e9/SXSWMichaelForte_mid.mp4" expression="full" duration="241" fileSize="47727465" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Golnaz</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Golnaz</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/sxsw/Michael-Forte-Founder-and-CEO-of-Phriz-be/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/dwURmZ71sj8</guid><link>https://www.youtube.com/watch?v=dwURmZ71sj8&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>JSON Intellisense in Visual Studio</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=dwURmZ71sj8&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/dwURmZ71sj8/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=dwURmZ71sj8&amp;amp;feature=youtube_gdata"&gt;JSON Intellisense in Visual Studio&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;A prototype of how Intellisense for JSON might look like&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1139&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;12
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:38&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 15 Mar 2014 22:44:53 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/dwURmZ71sj8" /><a10:updated>2014-08-22T19:07:10Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10507354</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/03/12/migrations-screencast-series.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Code+First/">Code First</category><title>Migrations Screencast Series</title><description>&lt;p&gt;We recently published a three part series on using Entity Framework Code First Migrations. The short series is designed to help you use migrations in the ‘real world’ where you often work in a development team and/or have to write applications that interact with existing database schemas.&lt;/p&gt;  &lt;p&gt;The screencasts cover some concepts using diagrams and then show these concepts in action with a demo in Visual Studio.&lt;/p&gt;  &lt;p&gt;   &lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;       &lt;tr&gt;         &lt;td valign="top" width="285"&gt;           &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Under-the-Hood"&gt;&lt;img title="UnderTheHood" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="UnderTheHood" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/5241.UnderTheHood_5F00_34CAF884.png" width="277" height="156" /&gt;&lt;/a&gt;&lt;/p&gt;         &lt;/td&gt;          &lt;td valign="top"&gt;           &lt;h2&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Under-the-Hood"&gt;Migrations – Under the Hood&lt;/a&gt;&lt;/h2&gt;            &lt;p&gt;This screencast digs into how migrations works, including how it detects changes to the model by storing model snapshots in each migration. &lt;/p&gt;            &lt;p&gt;This is useful for all developers to know, but also a pre-requisite to understanding the concepts in the other two screencasts.&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="285"&gt;           &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Team-Environments"&gt;&lt;img title="TeamEnvironments" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="TeamEnvironments" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/3107.TeamEnvironments_5F00_2DABBC0C.png" width="277" height="156" /&gt;&lt;/a&gt;&lt;/p&gt;         &lt;/td&gt;          &lt;td valign="top"&gt;           &lt;h2&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Team-Environments"&gt;Migrations – Team Environments&lt;/a&gt;&lt;/h2&gt;            &lt;p&gt;This is the companion screencast to our &lt;a href="http://msdn.com/data/dn481501"&gt;Code First Migrations in Team Environments&lt;/a&gt; documentation.&lt;/p&gt;            &lt;p&gt;This screencast covers using Code First Migrations in a development team, where two or more developers are working on the same project, using a source control system.&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="285"&gt;           &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Existing-Databases"&gt;&lt;img title="ExistingDatabases" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="ExistingDatabases" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/0044.ExistingDatabases_5F00_0D90AF4F.png" width="277" height="156" /&gt;&lt;/a&gt;&lt;/p&gt;         &lt;/td&gt;          &lt;td valign="top"&gt;           &lt;h2&gt;&lt;a href="http://channel9.msdn.com/Blogs/EF/Migrations-Existing-Databases"&gt;Migrations – Existing Databases&lt;/a&gt;&lt;/h2&gt;            &lt;p&gt;This is the companion screencast to our &lt;a href="http://msdn.com/data/dn579398"&gt;Code First Migrations with an existing database&lt;/a&gt; documentation. &lt;/p&gt;            &lt;p&gt;This screencast covers how to enable migrations for an existing database and then use migrations to propagate changes in your Code First model to the database. &lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;     &lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10507354" width="1" height="1"&gt;</description><pubDate>Wed, 12 Mar 2014 16:48:15 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10507354</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/03/12/migrations-screencast-series.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-the-newest-dots-in-ASP-NET-with-Daniel-Roth</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-the-newest-dots-in-ASP-NET-with-Daniel-Roth</link><category>API</category><category>asp .net</category><category>ASP.NET MVC</category><title>Introducing the newest "dots" in ASP.NET with Daniel Roth</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by Daniel Roth to talk about the features and bug fixes which were fixed in the latest &amp;quot;dot&amp;quot; releases of ASP.NET MVC, Web API and Web Pages.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/MVC/EnumSample/ReadMe.txt"&gt;Enums Support in ASP.NET MVC&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/web-api-routing-and-actions/web-api-global-error-handling"&gt;Global Error Handling in ASP.NET Web API&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing"&gt;Attribute&amp;nbsp;Based Routing improvements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson"&gt;BSON&amp;nbsp;Media-Type Formatter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://aspnet.codeplex.com/"&gt;ASP.NET Roadmap on Codeplex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/"&gt;ASP.NET Framework on Codeplex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.bsonspec.org"&gt;BSON Spec&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/syntaxc4"&gt;Follow Cory Fowler on Twitter&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/danroth27"&gt;Follow Daniel Roth on Twitter&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:b63456b05d61428da42ba2e40004f385"&gt;</description><pubDate>Thu, 06 Mar 2014 22:17:22 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth.wmv" type="video/x-ms-wmv" length="135679565" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-the-newest-dots-in-ASP-NET-with-Daniel-Roth</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Daniel Roth to talk about the features and bug fixes which were fixed in the latest &amp;quot;dot&amp;quot; releases of ASP.NET MVC, Web API and Web Pages. Show Links Enums Support in ASP.NET MVCGlobal Error Handling in ASP.NET Web APIAttribute Based Routing improvementsBSON Media-Type FormatterASP.NET Roadmap on CodeplexASP.NET Framework on CodeplexBSON SpecFollow Cory Fowler on Twitter Follow Daniel Roth on Twitter </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2164</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth.mp3" expression="full" duration="2164" fileSize="34618608" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth.mp4" expression="full" duration="2164" fileSize="70541137" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth.webm" expression="full" duration="2164" fileSize="202114833" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth.wmv" expression="full" duration="2164" fileSize="135679565" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_mid.mp4" expression="full" duration="2164" fileSize="300922296" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6be3/7d9596ff-6e40-440b-905e-77860e306be3/MVCWebAPIWebPagesDotReleasesWithDanielRoth_Source.wmv" expression="full" duration="2164" fileSize="574143308" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Introducing-the-newest-dots-in-ASP-NET-with-Daniel-Roth/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/4LfGhFWEacg/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 4 - Web API Help Pages, BSON, and Global Error Handling</title><description>&lt;p&gt;This is part 4 of a series covering some of the new features in the ASP.NET MVC 5.1 and Web API 2.1 releases. The last one! If you've read them all, you have earned twelve blog readership points... after you finish this one, of course. Here are the previous posts:&lt;/p&gt;    &lt;ul&gt;    &lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;  &lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;  &lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;  &lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;As a reminder, Part 1 explained that ASP.NET MVC 5.1 / Web API 2.1 is a NuGet update for the MVC 5 / Web API 2 releases that shipped with Visual Studio 2013. There will be a Visual Studio update that will make them the defaults when you create new projects.&lt;/p&gt;    &lt;p&gt;In this post, we'll look at new features in ASP.NET Web API 2.1.&lt;/p&gt;    &lt;h2&gt;Attribute Routing&lt;/h2&gt;   &lt;p&gt;We already looked at the updates to Attribute Routing improvements for both ASP.NET Web API and MVC in the second post in this series, I just want to call it out again since this post is overviewing all of the other new features in ASP.NET Web API 2.1 and the Attribute Routing support for custom constraints is one of the top features in the ASP.NET Web API 2.1 release.&lt;/p&gt;    &lt;p&gt;As a reminder, custom route constraints make it really easy to create wrap route matching logic in a constraint which can then be placed on ApiControllers or actions like this:&lt;/p&gt;    &lt;pre class="brush: csharp; auto-links: false; highlight: [1,7];"&gt;[VersionedRoute("api/Customer", 1)]
public class CustomerVersion1Controller : ApiController
{
    // controller code goes here
}
[VersionedRoute("api/Customer", 2)]
public class CustomerVersion2Controller : ApiController
{
    // controller code goes here
}&lt;/pre&gt;

&lt;p&gt;In that example, the custom VersionedRoute constraint looks for an api-version header and forwards the request to the correct controller. &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;See the post for more information&lt;/a&gt;, including a link to the sample application.&lt;/p&gt;

&lt;h2&gt;Help Page improvements&lt;/h2&gt;

&lt;p&gt;Okay, let's dig into some of the cool new features we haven't seen yet. To start with, I'm going to scaffold out a new PersonApiController using the same Person class I've used earlier in this series, shown below:&lt;/p&gt;

&lt;pre class="brush: js; auto-links: false;"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
   public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    public int Age { get; set; }
}
//I guess technically these are called honorifics
public enum Salutation : byte
{
    [Display(Name = "Mr.")]   Mr,
    [Display(Name = "Mrs.")]  Mrs,
    [Display(Name = "Ms.")]   Ms,
    [Display(Name = "Dr.")]   Doctor,
    [Display(Name = "Prof.")] Professor,
    Sir, 
    Lady, 
    Lord
}&lt;/pre&gt;

&lt;p&gt;And we're using the standard Web API scaffolding:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-30_16h11_27" href="http://www.flickr.com/photos/36836555@N00/12228468183/" mce_href="http://www.flickr.com/photos/36836555@N00/12228468183/"&gt;&lt;img alt="2014-01-30_16h11_27" src="http://farm8.static.flickr.com/7343/12228468183_ff9c844c8e.jpg" border="0" mce_src="http://farm8.static.flickr.com/7343/12228468183_ff9c844c8e.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing has really changed for the top level ASP.NET Web API Help Page - you get a generated list of API calls for each API Controller.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-12_23h20_49" href="http://www.flickr.com/photos/36836555@N00/12495094414/" mce_href="http://www.flickr.com/photos/36836555@N00/12495094414/"&gt;&lt;img alt="2014-02-12_23h20_49" src="http://farm4.static.flickr.com/3711/12495094414_6afae7eb09.jpg" border="0" mce_src="http://farm4.static.flickr.com/3711/12495094414_6afae7eb09.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What has changed is what you see when you click through on one of the API calls, e.g. the PersonApi GET method. Here's how that looked in ASP.NET Web API 2.1:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h40_46" href="http://www.flickr.com/photos/36836555@N00/12598874764/" mce_href="http://www.flickr.com/photos/36836555@N00/12598874764/"&gt;&lt;img alt="2014-02-17_13h40_46" src="http://farm3.static.flickr.com/2817/12598874764_9baa1098f0_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2817/12598874764_9baa1098f0_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It shows sample data in JSON and XML, and you can kind of guess what they are if you've named your model properties well, but there's no information on type, model attributes, validation rules, etc.&lt;/p&gt;

&lt;p&gt;Here's how it looks in ASP.NET Web API 2:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h41_45" href="http://www.flickr.com/photos/36836555@N00/12598899184/" mce_href="http://www.flickr.com/photos/36836555@N00/12598899184/"&gt;&lt;img alt="2014-02-17_13h41_45" src="http://farm3.static.flickr.com/2860/12598899184_be54e7720a_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2860/12598899184_be54e7720a_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Response Formats section hasn't changed, but now we have a Resource Description area at the top. Let's take a closer look at that:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h53_18" href="http://www.flickr.com/photos/36836555@N00/12599121614/" mce_href="http://www.flickr.com/photos/36836555@N00/12599121614/"&gt;&lt;img alt="2014-02-17_13h53_18" src="http://farm4.static.flickr.com/3779/12599121614_b2cbe8590e_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3779/12599121614_b2cbe8590e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we're clearly displaying both the type and validation rules.&lt;/p&gt;

&lt;p&gt;Note that the Salutation type is hyperlinked, since it's using our custom Salutation enum. Clicking through shows the possible values for that enum:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h47_37" href="http://www.flickr.com/photos/36836555@N00/12598689633/" mce_href="http://www.flickr.com/photos/36836555@N00/12598689633/"&gt;&lt;img alt="2014-02-17_13h47_37" src="http://farm4.static.flickr.com/3823/12598689633_aeeaff5074_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3823/12598689633_aeeaff5074_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;If you've done any work integrating with API's that had minimal or out of date documentation, hopefully the value of the above is really clear. What's great is that this is generated for me at runtime, so it's always up to date with the latest code. If my Web API is in production and I add a new Enum value or change a validation rule, the live documentation on the web site is immediately updated without any work or extra thought on my part as soon as I deploy the code.&lt;/b&gt;&lt;/p&gt;

&lt;h3&gt;Short detour: Filling in Descriptions using C# /// Comments&lt;/h3&gt;

&lt;p&gt;Now that we've got documentation for our model types, it's clear that we could improve it a bit. The most obvious thing is that there's no provided description. That's easy to add using C# /// comments (aka XML Comments). ASP.NET Web API Help Pages have had support for /// comments documentation for a while, it just hasn't been this obvious.&lt;/p&gt;

&lt;p&gt;The ASP.NET Web API Help Pages are implemented in a really clear, open model: it's all implemented in an ASP.NET MVC Area within your existing site. If you're not familiar with ASP.NET MVC Areas, they're a way to allow you to segment your applications into with separate routes, models, views and controllers but still keep them in the same project so it's easier to manage, share resources, etc.&lt;/p&gt;

&lt;p&gt;Here's the Help Page Area within the sample project we're working on:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_14h36_48" href="http://www.flickr.com/photos/36836555@N00/12599963954/" mce_href="http://www.flickr.com/photos/36836555@N00/12599963954/"&gt;&lt;img alt="2014-02-17_14h36_48" src="http://farm3.static.flickr.com/2863/12599963954_f08e78d026_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2863/12599963954_f08e78d026_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1. In the above screenshot, I've highlighted the \App_Start\HelpPageConfig.cs file because that's where we're going to set up the XML comments. There's a Register method right at the top with the following two lines:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;//// Uncomment the following to use the documentation from XML documentation file.
//config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml")));&lt;/pre&gt;

&lt;p&gt;So to use that, we'll uncomment the second line, just as the instructions say.&lt;/p&gt;

&lt;p&gt;2. Note that the comments are pointing to an XmlDocument.xml file. We need to check a box in the project settings to generate that XML file as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_14h46_38" href="http://www.flickr.com/photos/36836555@N00/12599717125/" mce_href="http://www.flickr.com/photos/36836555@N00/12599717125/"&gt;&lt;img alt="2014-02-17_14h46_38" src="http://farm6.static.flickr.com/5537/12599717125_e0e8763f1a_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5537/12599717125_e0e8763f1a_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it!&lt;/p&gt;

&lt;p&gt;Once that's done, I'm going to throw the /// comments on the controller methods and model properties and generate XML comments. I used &lt;a href="http://submain.com/products/ghostdoc.aspx" mce_href="http://submain.com/products/ghostdoc.aspx"&gt;GhostDoc&lt;/a&gt; to generate the comments, then cleaned them up and editorialized a bit.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;/// &amp;lt;summary&amp;gt;
/// This is an example person class. It artisanally crafted by a
/// bearded, bespeckled craftsman after being lovingly sketched
/// in a leather bound notebook with charcoal pencils.
/// &amp;lt;/summary&amp;gt;
public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// This uses a custom salution enum since there's apparently no ISO standard.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;value&amp;gt;
    /// The person's requested salutation.
    /// &amp;lt;/value&amp;gt;
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
   public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// This is the person's actual or desired age.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;value&amp;gt;
    /// The age in years, represented in an integer.
    /// &amp;lt;/value&amp;gt;
    public int Age { get; set; }
}&lt;/pre&gt;

&lt;p&gt;And here's the updated help page with the descriptions:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_15h04_16" href="http://www.flickr.com/photos/36836555@N00/12600033795/" mce_href="http://www.flickr.com/photos/36836555@N00/12600033795/"&gt;&lt;img alt="2014-02-17_15h04_16" src="http://farm8.static.flickr.com/7302/12600033795_f95a2754d6_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7302/12600033795_f95a2754d6_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a ton of other features in the HelpPageConfig - you could pull your documentation from a database or CMS, for example. And since it's all implemented in standard ASP.NET MVC, you can modify the views or do whatever else you want. But it's nice to have these new features available out of the box.&lt;/p&gt;

&lt;h2&gt;BSON&lt;/h2&gt;

&lt;p&gt;BSON is a binary serialization format that's similar to JSON in that they both store name-value pairs, but it's quite different in how the data is actually stored. BSON serializes data in a binary format, which can offer some performance benefits for encode / decode / traversal.&amp;nbsp; It's been possible to hook up a custom BSON formatter in ASP.NET Web API before; &lt;a href="http://www.strathweb.com/2012/07/bson-binary-json-and-how-your-web-api-can-be-even-faster/" mce_href="http://www.strathweb.com/2012/07/bson-binary-json-and-how-your-web-api-can-be-even-faster/"&gt;Filip and others have written comprehensive blog posts describing how to do just that&lt;/a&gt;. It's even easier now - both for clients and servers - since the BSON formatter is included with ASP.NET Web API.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Important note:&lt;/b&gt; BSON isn't designed to be more compact than JSON, in fact it's often bigger (depending on your data structure and content). That's because, unlike JSON, BSON embeds type information in the document. That makes for fast scan and read, but it's holding more data than the equivalent JSON document. That means that it will be faster in some cases, but it may be slower in other cases if your messages are bigger. This shows the value of content negotiation and flexible formatters in ASP.NET Web API - you can easily try out different formatters, both on the client and server side, and use the best one for the job.&lt;/p&gt;

&lt;p&gt;I'll look at two examples here.&lt;/p&gt;

&lt;h3&gt;Testing BSON with a text-heavy model&lt;/h3&gt;

&lt;p&gt;For the first example, I'll use the Person class we've been using for our previous examples. I'd like to have a lot more people in my database. I grabbed some absolutely silly code I wrote 7 years ago that generates fake surnames (&lt;a href="http://weblogs.asp.net/jgalloway/archive/2007/01/12/code-puzzle-2-generate-random-fake-surnames-recap.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2007/01/12/code-puzzle-2-generate-random-fake-surnames-recap.aspx"&gt;Generate random fake surnames&lt;/a&gt;) and added a controller action to slam 500 new people with a first name of Bob but a random last name and age into the database. Then I clicked on it a few times.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_16h19_50" href="http://www.flickr.com/photos/36836555@N00/12601399413/" mce_href="http://www.flickr.com/photos/36836555@N00/12601399413/"&gt;&lt;img alt="2014-02-17_16h19_50" src="http://farm8.static.flickr.com/7445/12601399413_a3ff443d5d.jpg" border="0" mce_src="http://farm8.static.flickr.com/7445/12601399413_a3ff443d5d.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turning on the BSON formatter is just a one line code change:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [5];"&gt;public static class WebApiConfig
{
    public static void Register(HttpConfiguration config)
    {
        config.Formatters.Add(new BsonMediaTypeFormatter());
        // ...
    }
}&lt;/pre&gt;

&lt;p&gt;Now whenever a client sends an Accept header for application/bson, they'll get the data in BSON format. For comparison, I'm making two requests in Fiddler. Here's a request with no Accept header specified, so we get JSON:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_00h48_12" href="http://www.flickr.com/photos/36836555@N00/12608617655/" mce_href="http://www.flickr.com/photos/36836555@N00/12608617655/"&gt;&lt;img alt="2014-02-18_00h48_12" src="http://farm3.static.flickr.com/2810/12608617655_5096fc8815_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2810/12608617655_5096fc8815_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The content-length there is 118,353 bytes.&lt;/p&gt;

&lt;p&gt;Now I'm setting an Accept header with application/bson:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_00h51_19" href="http://www.flickr.com/photos/36836555@N00/12609081114/" mce_href="http://www.flickr.com/photos/36836555@N00/12609081114/"&gt;&lt;img alt="2014-02-18_00h51_19" src="http://farm6.static.flickr.com/5472/12609081114_9d2b98729c_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5472/12609081114_9d2b98729c_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that &lt;b&gt;this BSON request is 134,395 bytes, or 13% larger&lt;/b&gt;. I've marked some of the type identifiers in there, but you can see there are a lot more since they're lined up in columns.&lt;/p&gt;

&lt;p&gt;Place your bets: think the faster BSON serializer will be faster, despite the larger payload size? Before we answer that, we'll add in a second scenario that replaces our text-heavy Person class with a quite exciting BoringData class that's mostly numeric and binary data:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class BoringData
{
    public int Id { get; set; }
    public long DataLong { get; set; }
    public byte[] DataBytes { get; set; }
    public DateTime DataDate { get; set; }
}&lt;/pre&gt;

&lt;p&gt;And here's the test we'll throw at both of these:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;private HttpClient _client = new HttpClient();
static void Main(string[] args)
{
    try
    {
        Console.WriteLine("Hit ENTER to begin...");
        RunAsync().Wait();
    }
    finally
    {
        Console.WriteLine("Hit ENTER to exit...");
        Console.ReadLine();
    }
}
private async static Task RunAsync()
{
    using (HttpClient client = new HttpClient())
    {
        await RunTimedTest&amp;lt;BoringData&amp;gt;(client, new JsonMediaTypeFormatter(), "http://localhost:29108/api/BoringDataApi", "application/json");
        await RunTimedTest&amp;lt;BoringData&amp;gt;(client, new BsonMediaTypeFormatter(), "http://localhost:29108/api/BoringDataApi", "application/bson");
        await RunTimedTest&amp;lt;Person&amp;gt;(client, new JsonMediaTypeFormatter(), "http://localhost:29108/api/PersonApi", "application/json");
        await RunTimedTest&amp;lt;Person&amp;gt;(client, new BsonMediaTypeFormatter(), "http://localhost:29108/api/PersonApi", "application/bson");
    }
}
public static async Task RunTimedTest&amp;lt;T&amp;gt;(HttpClient _client, MediaTypeFormatter formatter, string Uri, string mediaHeader)
{
    int iterations = 500;
    _client.DefaultRequestHeaders.Accept.Clear();
    _client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(mediaHeader));
    MediaTypeFormatter[] formatters = new MediaTypeFormatter[] { formatter };
    var watch = Stopwatch.StartNew();
    for (int i = 0; i &amp;lt; iterations; i++)
    {
        var result = await _client.GetAsync(Uri);
        var value = await result.Content.ReadAsAsync&amp;lt;T[]&amp;gt;(formatters);
    }
    Console.WriteLine("Format: {0,-20} Type: {1,-15}\t Time (s):{2,10:ss\\.fff}", mediaHeader, typeof(T).Name, watch.Elapsed);
}&lt;/pre&gt;

&lt;p&gt;The BoringDataApi controller's GET method returns lots of data, as you'd expect:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class BoringDataApiController : ApiController
{
    static Random rng = new Random(Guid.NewGuid().GetHashCode());
    public IEnumerable&amp;lt;BoringData&amp;gt; GetBoringData()
    {
        return GetLotsOfBoringData(100);
    }
    private IEnumerable&amp;lt;BoringData&amp;gt; GetLotsOfBoringData(int quantity)
    {
        byte[] buf1 = new byte[10000];
        byte[] buf2 = new byte[64];

        for (int i = 1; i &amp;lt; quantity; i++)
        {
            rng.NextBytes(buf1);
            rng.NextBytes(buf2);
            yield return new BoringData
            {
                Id  = i,
                DataBytes = buf1,
                DataDate = DateTime.UtcNow,
                DataLong = BitConverter.ToInt64(buf2,0)
            };
        }
    }
}&lt;/pre&gt;

&lt;p&gt;So, big picture, the test harness will run 500 end to end tests on both controllers, requesting both Person and BoringData as both JSON and BSON. What we're &lt;b&gt;not comparing&lt;/b&gt; is the difference between the Person and BoringData responses, we're just looking for some general trends to see if BSON is faster than JSON for a mostly-textual and mostly-binary model. &lt;a href="http://kellabyte.com/2014/02/12/create-benchmarks-and-results-that-have-value/" mce_href="http://kellabyte.com/2014/02/12/create-benchmarks-and-results-that-have-value/"&gt;Yes, Kelly Sommers will beat me up for this, and I'm okay with that&lt;/a&gt;. My goal is to get some basic guidelines on when BSON works better than JSON. &lt;/p&gt;

&lt;p&gt;The real point here is that you won't know how your API or a specific content type will perform until you test it.&lt;/p&gt;

&lt;p&gt;So how'd we do?&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_17h13_33" href="http://www.flickr.com/photos/36836555@N00/12624517414/" mce_href="http://www.flickr.com/photos/36836555@N00/12624517414/"&gt;&lt;img alt="2014-02-18_17h13_33" src="http://farm6.static.flickr.com/5540/12624517414_10643b7003_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5540/12624517414_10643b7003_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case (and I ran this test many times with the same general result) BSON was a lot faster for mostly binary/numeric data, and a little slower for mostly textual data. In this pretty random example, &lt;b&gt;BSON was 140% faster for the mostly binary case and and 21% slower for the mostly-textual case. &lt;/b&gt;That's because both serialize textual data to UTF-8, but BSON includes some additional metadata.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;So, very generally speaking, if your service returns a lot of binary / numeric / non-textual data, you should really look at BSON.&lt;/b&gt; If you're looking for a silver bullet, you may have to pony up for some silver.&lt;/p&gt;

&lt;h3&gt;Easier implementations due to BaseJsonMediaTypeFormatter&lt;/h3&gt;

&lt;p&gt;Yes, that's the most boring heading you'll ever see. But it's hopefully true. The new BaseJsonMediaTypeFormatter has been designed to make it easier to implement new different serialization formats easier, since the the internal JSON formatters have been redesigned to make it easier to extend. I asked Doug, the dev that did most of the work for this BSON update, about his &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509"&gt;commit message saying recent changes will make it easier to make other formatters like MessagePack happen&lt;/a&gt; and he said:&lt;/p&gt;

&lt;blockquote&gt;
  
&lt;p&gt;Yes.&amp;nbsp; BaseJsonMediaTypeFormatter introduces a few Json.Net types and concepts.&amp;nbsp; But it also provides solid and reusable async wrappers around easier-to-implement sync methods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The main thing I've noticed there is the common BaseJsonMediaTypeFormatter. There's not a whole lot of code in the &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509"&gt;BsonMediaTypeFormatter&lt;/a&gt;, since a lot of it's in the common base and in other support classes.&lt;/p&gt;

&lt;p&gt;And while I'm mentioning &lt;a href="http://msgpack.org/" mce_href="http://msgpack.org/"&gt;MessagePack&lt;/a&gt;, I think it's another great option that's really worth looking at, since (unlike BSON) MessagePack is designed for small message size. There's a &lt;a href="https://github.com/WebApiContrib/WebAPIContrib" mce_href="https://github.com/WebApiContrib/WebAPIContrib"&gt;MsgPack formatter available now in the WebApiContrib formatters collection&lt;/a&gt;, and Filip Woj. wrote a nice blog post overview here: &lt;a href="http://www.strathweb.com/2012/09/boost-up-your-asp-net-web-api-with-messagepack/" mce_href="http://www.strathweb.com/2012/09/boost-up-your-asp-net-web-api-with-messagepack/"&gt;Boost up your ASP.NET Web API with MessagePack&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Global Error Handling&lt;/h2&gt;

&lt;p&gt;The last feature we'll look at is Global Error Handling. The name's pretty self-descriptive: it lets you register handlers and loggers which will respond to any unhandled exceptions across your entire Web API application.&lt;/p&gt;

&lt;p&gt;Global error handling is especially useful in Web API because of the way the parts are so loosely coupled and composable - you've got all kinds of different handlers and filters, wired together with a very configurable system that encourages dependency injection... There's a lot going on.&lt;/p&gt;

&lt;p&gt;&lt;a title="ASP.NET Web API Poster" href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf" mce_href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf"&gt;&lt;img alt="ASP.NET Web API Poster" src="http://farm4.static.flickr.com/3731/12758637613_45f521098d_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3731/12758637613_45f521098d_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: You can &lt;a href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf" mce_href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf"&gt;download the PDF of this poster from the ASP.NET site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That provides you tons of flexibility when you're building HTTP services, but it can make it hard to find out what's wrong when there's a problem. Exception filters help, but &lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling" mce_href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling"&gt;as David Matson notes&lt;/a&gt;, they don't handle:&lt;/p&gt;

&lt;ol&gt;
  
&lt;li&gt;Exceptions thrown from controller constructors &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown from message handlers &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown during routing &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown during response content serialization &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I recommend David Matson's &lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling" mce_href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling"&gt;Web API Global Error Handling&lt;/a&gt; wiki article entry in the ASP.NET repository for more information on design and technical implementation. The short excerpt is that you can register one IExceptionHandler and multiple IExceptionLogger instances in your application, and they'll respond to all Web API exceptions.&lt;/p&gt;

&lt;p&gt;There's already &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/Elmah/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/Elmah/ReadMe.txt"&gt;a pretty clear sample in the Web API samples&lt;/a&gt; which shows a GenericTextExceptionHandler (which returns a generic exception message for unhandled exceptions) and an ElmahExceptionLogger (which implements logging using the popular ELMAH logging system). I've been trying to come up with some other use cases, but I think they captured the main ones here - usually if you have an unhandled exception, you want to log it and make sure you return some sort of useful message to your client. &lt;/p&gt;

&lt;p&gt;Both of these interfaces are really simple - they both have a single async method (LogAsync and HandleAsync, respectively) which are passed an ExceptionContext and a CancellationToken.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public interface IExceptionLogger
{
    Task LogAsync(ExceptionLoggerContext context, CancellationToken cancellationToken);
}
public interface IExceptionHandler
{
    Task HandleAsync(ExceptionHandlerContext context, CancellationToken cancellationToken);
}&lt;/pre&gt;

&lt;p&gt;The ExceptionContext includes the exception as well as a lot of other useful context information:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Exception (Exception) &lt;/li&gt;

  
&lt;li&gt;Request (HttpRequestMessage) &lt;/li&gt;

  
&lt;li&gt;RequestContext () &lt;/li&gt;

  
&lt;li&gt;ControllerContext (HttpControllerContext) &lt;/li&gt;

  
&lt;li&gt;ActionContext (HttpActionContext) &lt;/li&gt;

  
&lt;li&gt;Response (HttpResponseMessage) &lt;/li&gt;

  
&lt;li&gt;CatchBlock (string) &lt;/li&gt;

  
&lt;li&gt;IsTopLevelCatchBlock (bool) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They're registered in your WebApiConfig like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public static class WebApiConfig
{
    public static void Register(HttpConfiguration config)
    {
        config.MapHttpAttributeRoutes();
        // There can be multiple exception loggers. (By default, no exception loggers are registered.)
        config.Services.Add(typeof(IExceptionLogger), new ElmahExceptionLogger());
        // There must be exactly one exception handler. (There is a default one that may be replaced.)
        // To make this sample easier to run in a browser, replace the default exception handler with one that sends
        // back text/plain content for all errors.
        config.Services.Replace(typeof(IExceptionHandler), new GenericTextExceptionHandler());
    }
}&lt;/pre&gt;

&lt;p&gt;There are a few areas to possibly add to, but I'm going to pass on actually implementing them so I can get this series wrapped before ASP.NET Web API 2.2 ships. Maybe an exercise for the reader?&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;The sample GenericTextExceptionHandler just returns generic text, but since it has access to the exception details and the context, I'd perhaps instead return an error reference code with the response so customers of my API could use them for troubleshooting. Since one cause of API errors is an inability to access the backend database, I might instead &lt;a href="https://www.runscope.com/docs/api/resources/messages#message-create" mce_href="https://www.runscope.com/docs/api/resources/messages#message-create"&gt;send an error message to Runscope&lt;/a&gt; to give more context for debugging there as well. &lt;/li&gt;

  
&lt;li&gt;Rather than implement several IExceptionLogger instances, I'd probably use ELMAH's extensibility to register additional log listeners - there are listeners available for files and databases like &lt;a href="http://code.google.com/p/elmah/downloads/list" mce_href="http://code.google.com/p/elmah/downloads/list"&gt;XML, JSON, SQL Server, PostgreSQL, SQLite, MySQL&lt;/a&gt;, and lots of &lt;a href="https://www.nuget.org/packages?q=elmah&amp;amp;prerelease=&amp;amp;sortOrder=relevance" mce_href="https://www.nuget.org/packages?q=elmah&amp;amp;prerelease=&amp;amp;sortOrder=relevance"&gt;NuGet packages&lt;/a&gt; covering &lt;a href="https://www.nuget.org/packages/Glimpse.Elmah/" mce_href="https://www.nuget.org/packages/Glimpse.Elmah/"&gt;Glimpse integration&lt;/a&gt;, RavenDb, MongoDb, etc. One other idea is to &lt;a href="http://docs.exceptionless.com/contents/sendingerrors/" mce_href="http://docs.exceptionless.com/contents/sendingerrors/"&gt;add in an additional logger to an additional service like Exceptionless&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Damien (damienbod) has a nice overview of Web API Exception handling, complete with a lot of references: &lt;a href="http://damienbod.wordpress.com/2014/02/12/exploring-web-api-exception-handling/" mce_href="http://damienbod.wordpress.com/2014/02/12/exploring-web-api-exception-handling/"&gt;Exploring Web API Exception Handling&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;More features to read about&lt;/h2&gt;

&lt;p&gt;We've looked at several of the top features in this release, but there are a lot more. Here's a list with links to the documentation:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ASP.NET MVC 5.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap"&gt;Bootstrap support for editor templates&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum"&gt;Enum support in views&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive"&gt;Unobtrusive validation for MinLength/MaxLength Attributes&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext"&gt;Supporting the ‘this’ context in Unobtrusive Ajax&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;ASP.NET Web API 2.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error"&gt;Global error handling&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page"&gt;Help Page improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute"&gt;IgnoreRoute support&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson"&gt;BSON media-type formatter&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters"&gt;Better support for async filters&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing"&gt;Query parsing for the client formatting library&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;ASP.NET Web Pages 3.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed the series. As a reminder, you can grab the source for my samples &lt;a href="https://github.com/jongalloway/StarDotOne" mce_href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt; and the official ASP.NET / Web API samples in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt" mce_href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=4LfGhFWEacg:-rfz58149Q0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/4LfGhFWEacg" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 26 Feb 2014 19:51:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK</link><category>ASP.NET</category><category>Azure</category><category>Windows Azure</category><title>Making Your Jobs Easier With Windows Azure WebJobs SDK</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by &lt;a href="http://blogs.msdn.com/b/pranav_rastogi/"&gt;Pranav Rastogi&lt;/a&gt; and &lt;a href="http://blogs.msdn.com/b/jmstall/"&gt;Mike Stall&lt;/a&gt;&amp;nbsp;to talk about the Windows Azure WebJobs SDK.&lt;/p&gt;&lt;p&gt;The Windows Azure WebJobs SDK simplifies the task of adding background processing to your Windows Azure web sites. The SDK integrates Windows Azure Storage, triggering a function in your program when items are added to Queues, Blobs or Tables. A dashboard provides rich monitoring and diagnostics for the programs that you write by using the SDK. The monitoring and diagnostics features are built into the SDK and do not require you to add any special code in your program.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx"&gt;Scott &lt;/a&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx"&gt;Hanselman's&lt;/a&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx"&gt; introduction to WebJobs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs"&gt;WebJobs SDK Getting &lt;/a&gt;&lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs"&gt;Started Tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://aspnet.codeplex.com/SourceControl/latest"&gt;WebJobs Samples on CodePlex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://curah.microsoft.com/52143/using-the-webjobs-feature-of-windows-azure-web-sites"&gt;Links on how to use Azure WebJobs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/web-sites-create-web-jobs/"&gt;Azure WebJobs on Windows Azure&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;NuGet packages&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs/0.1.0-alpha1"&gt;Microsoft.WindowsAzure.Jobs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs.Host/0.1.0-alpha1"&gt;Microsoft.WindowsAzure.Jobs.Host&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/rustd"&gt;Follow Pranav Rastogi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/syntaxc4"&gt;Follow Cory Fowler&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:3e0383813ee54b4cb67ca2d6013b293b"&gt;</description><pubDate>Mon, 24 Feb 2014 19:17:45 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS.wmv" type="video/x-ms-wmv" length="181066637" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by Pranav Rastogi and Mike Stall to talk about the Windows Azure WebJobs SDK. The Windows Azure WebJobs SDK simplifies the task of adding background processing to your Windows Azure web sites. The SDK integrates Windows Azure Storage, triggering a function in your program when items are added to Queues, Blobs or Tables. A dashboard provides rich monitoring and diagnostics for the programs that you write by using the SDK. The monitoring and diagnostics features are built into the SDK and do not require you to add any special code in your program. Show Links          Scott Hanselman's introduction to WebJobs         WebJobs SDK Getting Started Tutorial         WebJobs Samples on CodePlex         Links on how to use Azure WebJobs         Azure WebJobs on Windows Azure NuGet packages          Microsoft.WindowsAzure.Jobs         Microsoft.WindowsAzure.Jobs.Host  Follow Pranav Rastogi Follow Cory Fowler </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3052</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS.mp3" expression="full" duration="3052" fileSize="48835070" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS.mp4" expression="full" duration="3052" fileSize="91588469" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS.webm" expression="full" duration="3052" fileSize="299196771" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS.wmv" expression="full" duration="3052" fileSize="181066637" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_mid.mp4" expression="full" duration="3052" fileSize="431210844" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/cadd/0de19555-b3ab-4b2c-899e-22eecd86cadd/MikeStallAndPranavRastogiTalkWindowsAzureWebJobsS_Source.wmv" expression="full" duration="3052" fileSize="957490211" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB7</guid><link>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB7</link><category>asp.net</category><category>signalr</category><category>real-time</category><title>Real-Time Communication with SignalR</title><description>&lt;p&gt;Real-time web communications are made possible with SignalR. In this session, Jon reviews the basic behind the real-time web and demos ASP.NET Signal R. He then updates the GeekQuiz app with a real-time HTML5 chart, powered by SignalR.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:2e076dd3ed914790ba90a2ce014039b0"&gt;</description><pubDate>Fri, 21 Feb 2014 04:01:07 Z</pubDate><comments>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB7</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Real-time web communications are made possible with SignalR. In this session, Jon reviews the basic behind the real-time web and demos ASP.NET Signal R. He then updates the GeekQuiz app with a real-time HTML5 chart, powered by SignalR. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2081</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB5</guid><link>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB5</link><category>webapi</category><category>asp.net</category><category>asp.net+webapi</category><category>http</category><category>apps</category><category>web</category><title>API Services for Both Web and Devices</title><description>&lt;p&gt;How does ASP.NET WebAPI fit in with everything? Jon introduces WebAPI and demonstrates consuming web APIs from both web apps and client apps.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:b359bde4ce5c4259a959a2ce013f52ba"&gt;</description><pubDate>Fri, 21 Feb 2014 02:06:20 Z</pubDate><comments>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">How does ASP.NET WebAPI fit in with everything? Jon introduces WebAPI and demonstrates consuming web APIs from both web apps and client apps. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3430</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more</guid><link>http://weblogs.asp.net/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more</link><category>.NET</category><category>ASP.NET</category><category>Azure</category><category>Community News</category><title>Azure: ExpressRoute Dedicated Networking, Web Site Backup Restore, Mobile Services .NET support, Hadoop 2.2, and more</title><description>&lt;p&gt;This morning we released a massive amount of enhancements to Windows Azure.&amp;nbsp; Today&amp;rsquo;s new capabilities and announcements include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ExpressRoute&lt;/strong&gt;: Dedicated, private, high-throughput network connectivity with on-premises&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: Backup and Restore Support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Services&lt;/strong&gt;: .NET support, Notification Hub Integration, PhoneGap support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HDInsight&lt;/strong&gt;: Hadoop 2.2 support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Management&lt;/strong&gt;: Co-admin limit increased from 10-&amp;gt;200 users&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Service Outage Notifications Integrated within Management Portal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Machines&lt;/strong&gt;: VM Agent and Background Information Support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active Directory&lt;/strong&gt;: More SaaS apps, more reports, self-service group management&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BizTalk Services&lt;/strong&gt;: EDIFACT protocol support, Service Bus Integration, Backup and Restore&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;ExpressRoute: Dedicated, private, high-throughput network connectivity with on-premises&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today we delivered the public preview of our new ExpressRoute service.&amp;nbsp; ExpressRoute enables dedicated, private, high-throughput network connectivity between Azure datacenters and your on-premises IT environments. Using ExpressRoute, you can connect your existing datacenters to Azure without having to flow any traffic over the public Internet, and enable&amp;ndash;guaranteed network quality-of-service and the ability to use Azure as a natural extension of an existing private network or datacenter.&lt;/p&gt;
&lt;p&gt;Starting today you can establish dedicated connections though Equinix datacenters, or add Azure services to your MPLS VPN provided by AT&amp;amp;T.&amp;nbsp; We are also today announcing a new strategic partnership with Level3 to enable private connection connectivity through Level3 Cloud Connect Solutions.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Configuring ExpressRoute&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release we&amp;rsquo;ve made some updates to our Virtual Network service to enable you to configure connections to your local networks through ExpressRoute circuits.&lt;/p&gt;
&lt;p&gt;When creating a new Virtual Network, you now have the option to configure ExpressRoute when selecting the Site-To-Site VPN option:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_293289ED.png"&gt;&lt;img width="662" height="428" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_725835A6.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For an already created Virtual Network, you can also configure your site-to-site connection to use ExpressRoute in the &lt;b&gt;Configure&lt;/b&gt; tab.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve enhanced a site-to-site connection with ExpressRoute, all VMs or Cloud Services deployed in that Virtual Network will be able to connect to the remote network over the dedicated connection &amp;ndash; enabling faster speeds, lower network latency and complete network isolation. If your subscription doesn&amp;rsquo;t have access to ExpressRoute yet, you can sign up to use it &lt;a href="http://www.windowsazure.com/en-us/services/preview/" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Backup and Restore Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last month we &lt;a href="http://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx" target="_blank"&gt;added two great new capabilities&lt;/a&gt; to Windows Azure Web Sites &amp;ndash; support for Staged Publishing (which enables atomic deployments), and Web Jobs (which enable background tasks).&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release we are adding another great new capability to Web Sites - backup and restore support. The new web site backup support enables you to save a snapshot version of your web app &amp;ndash; along with any SQL or MySQL databases it uses.&amp;nbsp; You can manually perform backups, or setup an automated rule to have them backed up automatically (e.g. once a day at midnight).&amp;nbsp; You can then choose to later restore a web site to a previous state, or alternatively create a new web site based on one of your original site's backups.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;This new Backup and Restore capability is available at no additional cost to all Web Site customers running using our Standard Tier.&amp;nbsp; It provides a great way to run your web apps with even more confidence.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Enabling Backup Support&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Enabling backup support with a web-site is easy.&amp;nbsp; Simply navigate to the new &amp;ldquo;Backups&amp;rdquo; tab within a web-site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_119ADC7A.png"&gt;&lt;img width="862" height="550" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_68269B39.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click the &amp;ldquo;Backup Now&amp;rdquo; option in the command-tray to manually perform a backup.&amp;nbsp; Or set the automated backup option to true, configure the time of day you wish to perform the backup, and then click the &lt;strong&gt;save&lt;/strong&gt; button in order to setup an automated backup rule.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Mobile Services: .NET Support, Notification Hub Integration, PhoneGap Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today we are releasing another round of great updates to Windows Azure Mobile Services.&amp;nbsp; These updates include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.NET support&lt;/b&gt;: You can now write your backend logic using ASP.NET Web API and run it using Mobile Services&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Notification Hubs integration: &lt;/b&gt;Mobile Services now use Notification Hubs for push notifications, which enables an even richer set of push notification scenarios&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Integrated PhoneGap support:&lt;/b&gt; You can now easily integrate PhoneGap apps with Mobile Services&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on each of these below:&lt;/p&gt;
&lt;h3&gt;&lt;span style="text-decoration: underline;"&gt;.NET Support&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Starting today we now provide full support for writing your backend Mobile Service logic using .NET and the ASP.NET Web API framework.&amp;nbsp; This provides the following benefits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use &lt;i&gt;ASP.NET Web API and Visual Studio&lt;/i&gt; together with Mobile Services to build great mobile apps&lt;/li&gt;
&lt;li&gt;You can &lt;i&gt;publish any existing Web API&lt;/i&gt; to Mobile Services and integrate additional Mobile Services features like mobile authentication and push notifications&lt;/li&gt;
&lt;li&gt;You can take full advantage of Web API features like &lt;em&gt;OData controllers&lt;/em&gt;, and 3rd party Web API-based &lt;em&gt;frameworks like Breeze&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You can &lt;i&gt;debug&lt;/i&gt; your Mobile Services .NET backend using Visual Studio running &lt;i&gt;locally on &lt;/i&gt;your &lt;em&gt;machine&lt;/em&gt; or remotely in Azure&lt;/li&gt;
&lt;li&gt;With Mobile Services &lt;i&gt;we run, manage, monitor and scale your Web API for you&lt;/i&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The combination of ASP.NET Web API and Mobile Services delivers a mobile backend story that is both super powerful and really easy to use.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Getting Started with Mobile Services using .NET&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s easy to get started with Mobile Services using today&amp;rsquo;s new .NET support. Simply go to the Windows Azure Management Portal and create a new Mobile Service (New-&amp;gt;Compute-&amp;gt;Mobile Service). On the first screen of the create wizard choose the new &lt;strong&gt;.NET &lt;/strong&gt;option as your backend language:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_2959C5F3.png"&gt;&lt;img width="624" height="414" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_68B77983.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When your new Mobile Service is created, you&amp;rsquo;ll be presented with a helpful quick start page:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_18E154F8.png"&gt;&lt;img width="623" height="426" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3ACCB77C.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To easily get started using .NET as your backend language, click to &lt;strong&gt;download&lt;/strong&gt; the sample project listed in the quick-start page above.&lt;/p&gt;
&lt;p&gt;Unzip the downloaded package and open the solution file. You will see a Mobile Services .NET template project. Notice this is simply an ASP.NET Web API project with additional Mobile Service NuGet packages included:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5605107D.png"&gt;&lt;img width="362" height="324" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_4A6F533E.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: in a future update we will provide even richer Mobile Service tooling support within Visual Studio.&amp;nbsp; This will provide additional Mobile Service tooling features on top of the standard Web API project support.&amp;nbsp; With today&amp;rsquo;s preview though you&amp;rsquo;ll just use the standard Web API project template within Visual Studio already.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Running the Mobile Service Locally&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Open the TodoItemController.cs controller file in the project you downloaded and examine its content. This controller shows you how can use the built-in TableController&amp;lt;T&amp;gt; .NET class we now provide with Mobile Services that enables easy remote data scenarios (note: you can also skip using this and just derive your controllers from the standard Controller base class and use an existing data API like EF, NHibernate or others).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The default TodoItemController.cs in the project already has scaffold support for all of the key CRUD methods for a TodoItems resource.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_77F07301.png"&gt;&lt;img width="624" height="393" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_0C098F8B.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Set a breakpoint inside the GetAllTodoitems() method. Then hit F5 within Visual Studio to run the Mobile Service locally. Mobile Services supports a local help page for the Web API Controllers you include in your project. This makes it really easy to test things out locally.&lt;/p&gt;
&lt;p&gt;Click on the &lt;b&gt;GetAllTodoItems&lt;/b&gt; link within the help page to bring up method documentation for the above Web API Controller. Click on the &lt;b&gt;Test API&lt;/b&gt; link within the help page to invoke the &lt;b&gt;GetAllTodoItems&lt;/b&gt; API and test it out. As you might expect, you will hit the breakpoint you&amp;rsquo;ve set up earlier.&amp;nbsp; The ability to develop and test locally, and debug all operations, makes it really easy to develop solutions.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Publishing your Mobile Service to Azure&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once you are done developing your Mobile Service locally, you can publish it to Azure.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In a future update we will provide integrated Mobile Services publishing support directly within Visual Studio.&amp;nbsp; With today&amp;rsquo;s release the easiest way to publish it to go to Mobile Services dashboard in the Windows Azure Management Portal and download the Web Deploy publish settings file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_35142E87.png"&gt;&lt;img width="623" height="361" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_504C8788.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you download the publish settings file, simply right-click on your Web API project within the VS Solution Explorer, and then click the Publish context menu command.&amp;nbsp; Within the publish wizard you can select the publish file you downloaded, which will enable you to easily deploy the Mobile Service to Azure.&lt;/p&gt;
&lt;p&gt;To learn more about Mobile Services .NET support check out these tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting Started with Mobile Services .NET for &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started/"&gt;Windows Store&lt;/a&gt;, &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-phone-get-started/"&gt;Windows Phone&lt;/a&gt;, and &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-ios-get-started/"&gt;iOS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Getting Started with Data with Mobile Services .NET for &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started-data/"&gt;Windows Store&lt;/a&gt;, &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-phone-get-started-data/"&gt;Windows Phone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Getting Started with Authentication with Mobile Services .NET for &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started-users/"&gt;Windows Store&lt;/a&gt;, &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-phone-get-started-users/"&gt;Windows Phone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting Started with Push Notifications with Mobile Services .NET for &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started-push/" target="_blank"&gt;Windows Store&lt;/a&gt;, &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-phone-get-started-push/"&gt;Windows Phone&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span style="text-decoration: underline;"&gt;Notification Hub Integration&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;With today&amp;rsquo;s release we are making it really easy to use Notification Hubs with Mobile Services.&amp;nbsp; This integration simplifies many common scenarios and removes the need to explicitly manage push channels.&amp;nbsp; It also provides Mobile Service customers with more powerful features including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Advanced targeting using tags and tag expressions&lt;/li&gt;
&lt;li&gt;Broadcast push support at high scale&lt;/li&gt;
&lt;li&gt;Personalization and localization using templates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today&amp;rsquo;s Notification Hub integration is still a preview.&amp;nbsp; You can enable it using the &lt;strong&gt;push&lt;/strong&gt; tab of your Mobile Service:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_605B563F.png"&gt;&lt;img width="623" height="424" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7B93AF40.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once enabled you can easily send push notifications to any or all users you wish with a single API call in the backend (using either the .NET or Node.js based API).&lt;/p&gt;
&lt;h3&gt;&lt;span style="text-decoration: underline;"&gt;Integrated PhoneGap Support&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Mobile Services already provides support for a number of cross-platform mobile client frameworks, including Xamarin, PhoneGap, Sencha. Today we added an integrated PhoneGap quick start in the Azure management portal, which will significantly simplify developing cross-platform mobile apps with PhoneGap and Mobile Services:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_01DA85CF.png"&gt;&lt;img width="623" height="405" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_32046143.png" border="0" /&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;HDInsight: Hadoop 2.2 Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;HDInsight is our 100% compatible Apache Hadoop-based distribution for Windows Azure.&amp;nbsp; With HDInsight you can leverage data stored in Windows Azure Blob Storage or the native HDFS file system local to the compute nodes and crunch massive amounts of data.&lt;/p&gt;
&lt;p&gt;We now support Hadoop 2.2 clusters (in preview mode) with our HDInsight service.&amp;nbsp; This new update provides an order of magnitude (up to 40x) faster query response times, much better data compression (up to 80%), and enables you to leverage the benefits of YARN.&lt;/p&gt;
&lt;p&gt;You can learn more about the Hadoop 2.2 improvements from our data team&amp;rsquo;s &lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2014/02/12/windows-azure-hdinsight-supports-preview-clusters-of-hadoop-2-2.aspx" target="_blank"&gt;announcement blog post&lt;/a&gt; as well as by following &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/hdinsight-get-started-30/" target="_blank"&gt;this tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Management: Co-admin support increased from 10 to 200 administrators per subscription&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Last fall I &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/10/22/windows-azure-backup-services-release-hyper-v-recovery-manager-vm-enhancements-enhanced-enterprise-management-support.aspx" target="_blank"&gt;blogged&lt;/a&gt; about a number of Azure enhancements we had rolled out to enable a &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/10/22/windows-azure-backup-services-release-hyper-v-recovery-manager-vm-enhancements-enhanced-enterprise-management-support.aspx" target="_blank"&gt;better enterprise authentication experience&lt;/a&gt;. These improvements included the ability to associate Azure subscriptions with Active Directory tenants, and to enable Active Directory SSO into Azure along with multi-factor authentication support.&lt;/p&gt;
&lt;p&gt;Today we are making another nice management improvement &amp;ndash; which is to increase the number of co-administrators that can be enabled on each Azure subscription to 200 (previously we only supported 10 co-admins per subscription).&amp;nbsp; The increased co-admin limit will make it easier for large teams to share a single Azure subscription, and simplify a number of subscription management scenarios.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Monitoring: Service Outage Notifications integrated within Management Portal&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Service outages unfortunately sometimes happen with the cloud.&amp;nbsp; One of the asks we&amp;rsquo;ve heard from customers has been to improve the notification process when a service has an issue and to provide better real-time, per-user customized, information on status.&amp;nbsp; Rather than just learning that an abstract service is having an issue, you want to know if it is &lt;em&gt;the particular service instance your app is using&lt;/em&gt; &amp;ndash; and if so what the latest health status is with it.&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release, we are introducing Azure incident notification support directly in the Azure Management Portal &amp;ndash; and customizing it based on the particular service instances you are using. When a service outage incident occurs that affects your apps, you will now see a notification in the Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_51470816.png"&gt;&lt;img width="621" height="61" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_218BF048.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will surface this alert for the following types of incidents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Partial Performance Degradation&lt;/li&gt;
&lt;li&gt;Partial Service Interruption&lt;/li&gt;
&lt;li&gt;Full Performance Degradation&lt;/li&gt;
&lt;li&gt;Full Service Interruption&lt;/li&gt;
&lt;li&gt;Advisory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you click &lt;strong&gt;OK &lt;/strong&gt;within the notification window, you will see a dialog that provides more details about the incident(s):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_15F63309.png"&gt;&lt;img width="667" height="450" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_11137F4D.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This dialog will include key information such as the timestamp of the incident, name of the service and the incident type, description of the latest update related to the incident, and the SubscriptionID (where available) of the subscriptions you have that use the service in question. With this release, the SubscriptionID will be provided for incidents involving Virtual Machines, Cloud Services, Storage, SQL Databases, Service Bus and Web Sites. You may see &amp;ldquo;Not Available&amp;rdquo; for other services, but we are working to add these in the future releases.&lt;/p&gt;
&lt;p&gt;From this incident details dialog, you can navigate to the &lt;b&gt;Operation Logs&lt;/b&gt; page by clicking on the link at the bottom of the dialog. This page will give you the filtered view of history for incidents that carry the same SubscriptionID information.&amp;nbsp; This will allow you to see full details for every past incident involving this service (along with start and end times of the incidents).&lt;/p&gt;
&lt;p&gt;We will continue to enhance this feature set over the next few releases to fold in all Azure Services to make it easy for you to detect outages and updates that pertain to your specific service(s) on Azure.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Virtual Machines: VM Agent and Background Info Extension&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s release we are adding a new feature that helps make managing Virtual Machines even more powerful: VM Agent support.&lt;/p&gt;
&lt;p&gt;For those of you who use Cloud Services with web and worker roles, you may know that we already use an agent inside these workloads to facilitate certain management features.&amp;nbsp; With today&amp;rsquo;s release we are introducing a new VM Agent for IaaS VMs that over time will bring this same kind of managed functionality to Virtual Machines as well.&lt;/p&gt;
&lt;p&gt;The VM Agent is a lightweight and unobtrusive process that you can optionally enable to run inside your Windows and Linux VMs. The VM Agent can then be used to install and manage &lt;i&gt;extensions&lt;/i&gt;, which are software modules that extend the functionality of a VM and help make common management scenarios easier.&amp;nbsp; Over the next several months you&amp;rsquo;ll see us deliver many new extensions that you can optionally enable within your virtual machines.&lt;/p&gt;
&lt;p&gt;The VM Agent is automatically installed when creating a VM from Quick Create. You can opt-out of installing the VM Agent by creating a VM using the &lt;b&gt;From Gallery&lt;/b&gt; option and unselecting the &amp;ldquo;Install the VM Agent&amp;rdquo; checkbox:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3A1E1E49.png"&gt;&lt;img width="878" height="561" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_353B6A8D.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Background Info Extension&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One small but useful extension that we have enabled with today&amp;rsquo;s VM Agent release is one we call &amp;ldquo;BGInfo&amp;rdquo;.&amp;nbsp; This extension helpfully displays information about a Windows VM on the desktop of the VM instance when you RDP into it &amp;ndash; providing an easy way to quickly figure out the VM&amp;rsquo;s configuration settings (internal and public IP, disk space, memory, deployment ID, etc):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image001_696F93D3.jpg"&gt;&lt;img width="949" height="254" title="clip_image001" style="display: inline; border-width: 0px;" alt="clip_image001" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image001_thumb_0BC7294D.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Over the next several months you&amp;rsquo;ll see us continue to ship additional extensions that extend the management support of VMs even further.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Active Directory: More apps, more reports and self-service group management&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s release we&amp;rsquo;ve updated Windows Azure Active Directory to support SSO integration with more SaaS apps, and enhanced the Windows Azure Active Directory Premium tier (which is currently in preview) with more built-in reports and added end-user self-service and delegated group management.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Enabling Active Directory SSO to SaaS applications&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We now enable Active Directory single-sign-on (SSO) support with over 600 SaaS popular apps. To integrate these applications with your organization's Active Directory, select your Active Directory within the Windows Azure Management Portal, change to the &lt;b&gt;Applications&lt;/b&gt; tab, then click the &lt;strong&gt;Add &lt;/strong&gt;button:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_60165F50.png"&gt;&lt;img width="862" height="550" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_0D2B4C1F.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then choose &lt;b&gt;Add an application for my organization to use&lt;/b&gt;.&amp;nbsp; This will allow you to pick from 600+ popular SaaS applications to integrate with:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_08489863.png"&gt;&lt;img width="751" height="527" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_2380F164.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once an app has been integrated with your Active Directory, you can select which users in your directory can sign into the app.&amp;nbsp; Once you do this, the app will appear on the access panel for each user logged into the &lt;a href="http://myapps.microsoft.com"&gt;http://myapps.microsoft.com&lt;/a&gt; site &amp;ndash; enabling them to sign-in and begin using it using their corporate credentials.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Premium Security and Usage Reports&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Windows Azure AD Premium is designed to address the identity and access management needs of enterprises. It is currently in preview, and you can use its features including tenant branding and self-service password reset while in preview at no charge. At the end of the preview it will be converted to a paid service.&lt;/p&gt;
&lt;p&gt;To find out more about how to get started with Windows Azure AD Premium preview, see &lt;a href="http://blogs.technet.com/b/ad/archive/2013/11/21/app-access-enhancements-ga-azure-ad-premium-preview.aspx"&gt;this earlier blog post&lt;/a&gt; on the Active Directory blog. Briefly, there&amp;rsquo;s a two-step process to evaluate this preview. First, navigate to &lt;a href="http://www.windowsazure.com/en-us/services/preview/"&gt;Windows Azure Preview Feature page&lt;/a&gt; and add Windows Azure Active Directory Premium to your subscription by clicking "try it now", selecting the "Free Trial" or other subscription. Then, in the Windows Azure Management Portal, select a directory and on the &lt;b&gt;Configure&lt;/b&gt; tab of the directory, move the slider for Premium features to &lt;b&gt;enabled&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_7E85C19B.png"&gt;&lt;img width="373" height="101" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7E198EA6.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Usage Reports&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s update we&amp;rsquo;ve added new reports to the Windows Azure Active Directory Premium tier that will help you better understand how your organization&amp;rsquo;s users are accessing applications.&lt;/p&gt;
&lt;p&gt;You can now click the &lt;b&gt;Reports&lt;/b&gt; tab to see additional views which highlight potential account compromise scenarios. These reports show sign-ins from IP addresses with suspicious activity, irregular sign-in activity, and a list of users whose accounts may have been compromised.&lt;/p&gt;
&lt;h5&gt;&lt;span style="text-decoration: underline;"&gt;Delegated and self-service group management in Windows Azure AD Premium&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;With today&amp;rsquo;s release we&amp;rsquo;ve also added delegated and self-service group management support as part of the Premium preview. In previous updates we enabled administrators to view and manage groups in the Windows Azure Management Portal - now we&amp;rsquo;re enabling end users within your organizations to create and join groups as well.&lt;/p&gt;
&lt;p&gt;Once Premium preview is enabled on a directory, a user who is a member of the directory can get a group management experience by going to &lt;a href="http://myapps.microsoft.com"&gt;http://myapps.microsoft.com&lt;/a&gt;, then signing in and clicking on the &lt;b&gt;Groups&lt;/b&gt; tab. The user will then see all of the groups that are present in the directory and he or she can request to join a group. They can also filter the view to show only groups of which they&amp;rsquo;re a member or groups they own:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_396CF465.png"&gt;&lt;img width="624" height="254" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3BA97D21.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3DE605DD.png"&gt;&lt;img width="624" height="243" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_12353BE1.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A user can also create a new group.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_7F804229.png"&gt;&lt;img width="624" height="336" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_53CF782D.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These groups can be used to control access to SaaS applications or within applications themselves, such as in SharePoint Online. Currently these groups are not mail-enabled - we&amp;rsquo;ll add that functionality in a future release.&lt;/p&gt;
&lt;p&gt;More updates on these and other features in Premium are on the &lt;a href="http://blogs.technet.com/b/ad/"&gt;Active Directory team blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;BizTalk Services: EDIFACT Protocol Support, Service Bus Integration, Backup and Restore&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s release we are updating Windows Azure Biz Talk Services with a host of new features. If you are already using BizTalk Services, your environment will be automatically updated with the following new features:&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;EDIFACT Protocol Support and X12 Schema Updates&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We now support EDIFACT messaging versions up to D10B natively in the platform. When you create a new EDI agreement you can now choose the target protocol as EDIFACT (instead of X12) and configure the agreement. Features such as Batching, Tracking, AS2 with EDIFACT are all supported with today&amp;rsquo;s update.&lt;/p&gt;
&lt;p&gt;Support for X12 messaging up to 6030 and Message Type 999 in addition to 997 for acknowledgements is also now supported.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Pulling Messages from Service Bus Queues and Topics&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Support for pulling messages from Service Bus Queues and Topics: This allows a BizTalk &amp;ldquo;Bridge&amp;rdquo; to pull messages directly from a Service Bus Queue or Topic without having to write to an intermediary service. After installing the new &lt;em&gt;BizTalk Services SDK&lt;/em&gt;, the new Sources are available within the VS Toolbox of BizTalk Services projects:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_560C00E9.png"&gt;&lt;img width="183" height="358" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_714459EA.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This enables complex configuration such as the one below where messages can be pulled from an FTP endpoint, Service Bus Queue, Service Bus Topic, to be processed by the bridge and sent back to a FTP endpoint, Service Bus Queue or Service Bus Topic based on route rules&lt;s&gt;:&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3A6A05A4.png"&gt;&lt;img width="349" height="244" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_19E2C5F2.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Service Bus Shared Access Signatures (SAS) support with Service Bus Queues and Topics: &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can now use SAS keys to configure Service Bus Queues and Topics with Agreements and Bridges in the Azure Portal as well as in Visual Studio.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;BizTalk Adapter Services No Longer Needs SQL On Premises&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Starting today all BizTalk Adapter configuration data is now stored in the cloud without any additional configuration in SQL express configuration required on-premises. For existing customers, the SDK installation provides an option to update/migrate the existing configuration to the cloud:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_6A27AE23.png"&gt;&lt;img width="506" height="338" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_706E84B1.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Backup and Restore Support&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Backup and Restore operations within BizTalk Services can now be easily configured and managed through the Azure&amp;nbsp; management portal.&amp;nbsp; Backup and restore can be scheduled by following these five steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to your deployment&amp;rsquo;s &lt;b&gt;Configure&lt;/b&gt; page and flip the &lt;b&gt;Backup status&lt;/b&gt; from None to &lt;b&gt;Automatic&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;Add the storage account where you want the backup of the deployment to be stored&lt;/li&gt;
&lt;li&gt;Tweak the first occurrence and recurrence schedule&lt;/li&gt;
&lt;li&gt;Enter the retention period in days or leave the default to 20 days&lt;/li&gt;
&lt;li&gt;Hit Save on your configuration changes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Operation Log Support&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can now view all BizTalk Services management operations such as Create, Delete, Backup, etc. in the Azure Portal using the &lt;b&gt;Management Services&lt;/b&gt; tab.&amp;nbsp; This makes it easy to audit and review all management operations performed with the service.&lt;/p&gt;
&lt;p&gt;We hope these features will add value to your integration scenarios and enrich your Biztalk Services experience. We would love to hear your feedback via BizTalk Services &lt;a href="https://social.msdn.microsoft.com/Forums/windowsazure/en-US/home?forum=azurebiztalksvcs"&gt;forums&lt;/a&gt; and &lt;a href="http://feedback.windowsazure.com/forums/216276-biztalk-services"&gt;user voice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today&amp;rsquo;s Windows Azure release enables a bunch of great new scenarios.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t already have a Windows Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="https://www.windowsazure.com/"&gt;Windows Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more&amp;g=https%3A//weblogs.asp.net/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Azure%3a+ExpressRoute+Dedicated+Networking%2c+Web+Site+Backup+Restore%2c+Mobile+Services+.NET+support%2c+Hadoop+2.2%2c+and+more&amp;v3=ScottGu%27s%20Blog%20-%20Azure%3a+ExpressRoute+Dedicated+Networking%2c+Web+Site+Backup+Restore%2c+Mobile+Services+.NET+support%2c+Hadoop+2.2%2c+and+more&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/azure-expressroute-dedicated-networking-web-site-backup-restore-mobile-services-net-support-hadoop-2-2-and-more&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Thu, 20 Feb 2014 20:16:00 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB3</guid><link>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB3</link><category>asp.net</category><category>windows+azure</category><category>database</category><category>entity+framework</category><category>routing</category><category>mvc</category><category>asp.net+mvc</category><category>sql</category><title>Building Web Applications Using the Latest ASP.NET Technologies</title><description>&lt;p&gt;Jon Galloway walks through an overview of MVC, showing how to structure and build models, views, and controllers. After creating his website, Jon shows how to easily deploy the web site to Windows Azure from Visual Studio, including automatically deploying the web site's database and wiring it up for use with the web site.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:b326d30dea594d739ca2a2ce013d514e"&gt;</description><pubDate>Tue, 18 Feb 2014 18:31:21 Z</pubDate><comments>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB3</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Jon Galloway walks through an overview of MVC, showing how to structure and build models, views, and controllers. After creating his website, Jon shows how to easily deploy the web site to Windows Azure from Visual Studio, including automatically deploying the web site's database and wiring it up for use with the web site. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2971</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Windows-8-Applications-with-HTML5-and-Web-App-Template</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Windows-8-Applications-with-HTML5-and-Web-App-Template</link><category>CSS</category><category>HTML5</category><category>JavaScript</category><category>Windows 8</category><title>Building Windows 8 Applications with HTML5 and Web App Template</title><description>&lt;p&gt;Join your guide&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;as he talks to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory is joined by fellow Technical Evangelist, and ginger, Jeff Burtoft. Jeff has something really interesting to show to web developers who would like to create a&amp;nbsp;mobile application. Jeff introduces the answer, the Web Application Template for Windows 8 and Windows Phone 8, and how you can get started today with your existing web site or web application.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://wat.codeplex.com"&gt;Web Application Template&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Previous Show:&amp;nbsp;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/HTML-Going-Mobile-with-Apache-Cordova"&gt;HTML going mobile with Apache Cordova&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/boyofgreen"&gt;Follow Jeff Burtoft&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/SyntaxC4"&gt;Follow Cory Fowler&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:b8cf26a0432b4207a095a2cf01475ab9"&gt;</description><pubDate>Tue, 18 Feb 2014 00:20:42 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft.wmv" type="video/x-ms-wmv" length="155754251" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Windows-8-Applications-with-HTML5-and-Web-App-Template</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guide Cory Fowler as he talks to the product teams in Redmond as well as the web community. This week Cory is joined by fellow Technical Evangelist, and ginger, Jeff Burtoft. Jeff has something really interesting to show to web developers who would like to create a mobile application. Jeff introduces the answer, the Web Application Template for Windows 8 and Windows Phone 8, and how you can get started today with your existing web site or web application. Show Links Web Application TemplatePrevious Show: HTML going mobile with Apache Cordova  Follow Jeff Burtoft Follow Cory Fowler </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2381</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft.mp3" expression="full" duration="2381" fileSize="38097297" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft.mp4" expression="full" duration="2381" fileSize="80190715" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft.webm" expression="full" duration="2381" fileSize="241675110" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft.wmv" expression="full" duration="2381" fileSize="155754251" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_mid.mp4" expression="full" duration="2381" fileSize="311565019" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/1c71/40509bff-efa1-4308-931b-f80d29b51c71/WebAppTemplateWithJeffBurtoft_Source.wmv" expression="full" duration="2381" fileSize="653930726" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, Jeff Burtoft</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, Jeff Burtoft</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Building-Windows-8-Applications-with-HTML5-and-Web-App-Template/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB2</guid><link>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB2</link><category>visual+studio</category><category>web+sites</category><category>web+essentials</category><category>intelliesense</category><category>page+inspector</category><category>web+publishing</category><category>owin</category><category>browser+link</category><category>identity</category><category>bootstrap</category><category>side+waffle</category><category>scaffolding</category><title>Introduction to ASP.NET and Visual Studio 2013 Web Tooling</title><description>&lt;p&gt;&lt;a href="http://twitter.com/marc_gagne" target="_blank"&gt;Marc&lt;/a&gt;&amp;nbsp;introduces all of the tools now available in Visual Studio for developing web experiences, including: the new web editor in Visual Studio, Browser Link, Page Inspector, Web IntelliSense, Web Essentials, and publishing wizards.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:86dca738fc5c495ba5c6a2ce013d1b42"&gt;</description><pubDate>Thu, 13 Feb 2014 15:43:46 Z</pubDate><comments>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB2</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Marc introduces all of the tools now available in Visual Studio for developing web experiences, including: the new web editor in Visual Studio, Browser Link, Page Inspector, Web IntelliSense, Web Essentials, and publishing wizards. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3707</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway, Marc Gagne </dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB1</guid><link>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB1</link><category>visual+studio</category><category>web+sites</category><category>webapi</category><category>nuget</category><category>css3</category><category>html5</category><category>javascript</category><category>web+essentials</category><category>asp.net</category><category>web+standards</category><category>windows+azure</category><category>cloud</category><title>Keynote</title><description>&lt;p&gt;&lt;a href="http://twitter.com/jongalloway" target="_blank"&gt;Jon Galloway&lt;/a&gt;&amp;nbsp;kicks things off by covering the core building blocks needed throughout the WebCamp: Visual Studio, NuGet, ASP.NET, and Windows Azure.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a94b0daed5ee42be938aa2ce013cd2c4"&gt;</description><pubDate>Thu, 13 Feb 2014 02:54:48 Z</pubDate><comments>http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp/WEB1</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Jon Galloway kicks things off by covering the core building blocks needed throughout the WebCamp: Visual Studio, NuGet, ASP.NET, and Windows Azure. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1368</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498647</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Data+Source/">Entity Data Source</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>Preview of Dynamic Data Provider and EntityDataSource Control for EF6</title><description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;This post was &lt;/strong&gt;&lt;/em&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/01/30/announcing-preview-of-dynamic-data-provider-and-entitydatasource-control-for-entity-framework-6.aspx"&gt;&lt;em&gt;&lt;strong&gt;originally posted on the .NET Web Development and Tools Blog&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;We are pleased to announce an update to ASP.NET DynamicData and EntityDataSource control, so that they work with Entity Framework 6.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in this preview&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;DynamicData provider for Entity Framework 6&lt;/li&gt;    &lt;li&gt;EntityDataSource control for Entity Framework 6&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;How to install this preview&lt;/h2&gt;  &lt;p&gt;You can download this preview for ASP.NET DynamicData.EFProvider (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/&lt;/a&gt;) and EntityDataSource (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/&lt;/a&gt;) as preview NuGet packages from the NuGet gallery. You can install these pre-release packages through NuGet using the NuGet Package Manager Console, like this:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Install-Package Microsoft.AspNet.DynamicData.EFProvider -Version 6.0.0-alpha1 –Pre &lt;/li&gt;    &lt;li&gt;Install-Package Microsoft.AspNet.EntityDataSource -Version 6.0.0-alpha1 –Pre &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Getting started&lt;/h2&gt;  &lt;h3&gt;Microsoft.AspNet.DynamicData.EFProvider&lt;/h3&gt;  &lt;p&gt;This package has a DynamicData EFProvider for Entity Framework 6. This provider can work with a Model (either Code First or EF Designer) which was created using Entity Framework 6. This package also installs the Page Templates, Entity Templates and Field Templates which are required for DynamicData. The templates have been updated to use &lt;strong&gt;Microsoft.AspNet.EntityDataSource&lt;/strong&gt; control which we are also previewing today as well.&lt;/p&gt;  &lt;p&gt;For more information on ASP.NET DynamicData please see &lt;a href="http://msdn.microsoft.com/en-us/library/cc488545.aspx"&gt;http://msdn.microsoft.com/en-us/library/cc488545.aspx&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Following are the steps for using this package in a ASP.NET DynamicData application:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Create a new ASP.NET Dynamic Data Entities Web Application &lt;/li&gt;    &lt;li&gt;Add the Microsoft.AspNet.DynamicData.EFProvider NuGet package &lt;/li&gt;    &lt;li&gt;This will do the following      &lt;ul&gt;       &lt;li&gt;Add a reference to the DynamicData EFProvider binary &lt;/li&gt;        &lt;li&gt;Install the templates. If you are starting with a new project, then you can override the templates. If you have an existing application, then you should be careful when overriding the changes. The templates replace the EntityDataSource control which shipped in .NET with Microsoft.AspNet.EntityDataSource and also have a few bug fixes in the Many-Many field template so they work with Entity Framework 6. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Create your model using Entity Framework Code First or EF Designer. &lt;/li&gt;    &lt;li&gt;Add the following code in RegisterRoutes in Global.asax.cs to register your EF Model:      &lt;pre&gt;DefaultModel.RegisterContext(
    new Microsoft.AspNet.DynamicData.ModelProviders.EFDataModelProvider(&lt;br /&gt;        () =&amp;gt; newNorthwindEntities1()),
    newContextConfiguration { ScaffoldAllTables = true });&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;Run the project &lt;/li&gt;

  &lt;li&gt;You would see all the tables listed on the Default page. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Microsoft.AspNet.EntityDataSource Control&lt;/h3&gt;

&lt;p&gt;This is an update to the EntityDataSource control which shipped in the .NET Framework. The EntityDataSource control has been updated to work with Entity Framework 6.&lt;/p&gt;

&lt;p&gt;To use this control, please do the following&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an ASP.NET application &lt;/li&gt;

  &lt;li&gt;Install the package&lt;strong&gt; &lt;/strong&gt;Microsoft.AspNet.EntityDataSource 

    &lt;ul&gt;
      &lt;li&gt;This package will 
        &lt;ul&gt;
          &lt;li&gt;install the runtime binary for &lt;strong&gt;&lt;/strong&gt;Microsoft.AspNet.EntityDataSource &lt;/li&gt;

          &lt;li&gt;Install the EntityFramework version 6 NuGet package &lt;/li&gt;

          &lt;li&gt;Add the following tag prefix in web.config 
            &lt;pre&gt;&amp;lt;pages&amp;gt; 
  &amp;lt;controls&amp;gt; 
    &amp;lt;add &lt;br /&gt;      tagPrefix=&amp;quot;ef&amp;quot; &lt;br /&gt;      assembly=&amp;quot;Microsoft.AspNet.EntityDataSource&amp;quot; &lt;br /&gt;      namespace=&amp;quot;Microsoft.AspNet.EntityDataSource&amp;quot; /&amp;gt; 
  &amp;lt;/controls&amp;gt; 
&amp;lt;/pages&amp;gt; &lt;/pre&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;

  &lt;li&gt;Create a new Web Form page &lt;/li&gt;

  &lt;li&gt;Use the control as follows and bind it to any Databound control such as GridView, FormView etc. 
    &lt;pre&gt;&amp;lt;ef:EntityDataSource ID=&amp;quot;GridDataSource&amp;quot; runat=&amp;quot;server&amp;quot; EnableDelete=&amp;quot;true&amp;quot; /&amp;gt; &lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;&amp;#160;&lt;/h5&gt;

&lt;h2&gt;Known Issues&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for C# only. &lt;/li&gt;

  &lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for Web Application projects only and will not work for WebSites projects. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;h2&gt;Give feedback&lt;/h2&gt;

&lt;p&gt;If you find any issues with this preview, please file issues at the EntityFramework CodePlex site &lt;a href="https://entityframework.codeplex.com/"&gt;https://entityframework.codeplex.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for trying out the preview and helping us make it better.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498647" width="1" height="1"&gt;</description><pubDate>Tue, 11 Feb 2014 23:13:09 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10498647</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx#comments</comments></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498574</guid><link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF 6.1.0 Beta 1 Available</title><description>&lt;p&gt;Since the release of EF6 our team has started working on the EF6.1 release. This is our next release that will include new features.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;Entity Framework 6.1 is a minor update to Entity Framework 6 and includes a number of bug fixes and new features. The new features in this release include:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Tooling%20Consolidation"&gt;&lt;strong&gt;Tooling consolidation&lt;/strong&gt;&lt;/a&gt; provides a consistent way to create a new EF model. This feature extends the ADO.NET Entity Data Model wizard to support creating Code First models, including reverse engineering from an existing database. These features were previously available in Beta quality in the EF Power Tools. &lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Handling%20of%20Transaction%20Commit%20Failures%20"&gt;&lt;strong&gt;Handling of transaction commit failures&lt;/strong&gt;&lt;/a&gt; provides the new System.Data.Entity.Infrastructure.CommitFailureHandler which makes use of the newly introduced ability to intercept transaction operations. The CommitFailureHandler allows automatic recovery from connection failures whilst committing a transaction. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;IndexAttribute&lt;/b&gt; allows indexes to be specified by placing an &lt;strong&gt;[Index]&lt;/strong&gt; attribute on a property (or properties) in your Code First model. Code First will then create a corresponding index in the database. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;The public mapping API&lt;/b&gt; provides access to the information EF has on how properties and types are mapped to columns and tables in the database. In past releases this API was internal. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;&lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;Ability to configure interceptors via the App/Web.config file&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;(allowing interceptors to be added without recompiling the application). &lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;System.Data.Entity.Infrastructure.Interception.DatabaseLogger&lt;/strong&gt; is a new interceptor that makes it easy to log all database operations to a file. In combination with the previous feature, this allows you to easily &lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;switch on logging of database operations for a deployed application, without the need to recompile&lt;/a&gt;. &lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;b&gt;Migrations model change detection &lt;/b&gt;has been improved so that scaffolded migrations are more accurate; performance of the change detection process has also been greatly enhanced. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Performance improvements &lt;/b&gt;including reduced database operations during initialization, optimizations for null equality comparison in LINQ queries, faster view generation (model creation) in more scenarios, and more efficient materialization of tracked entities with multiple associations. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where do I get the beta?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.0-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=41928"&gt;available on the Microsoft Download Center&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of features that will be available in the final release of EF6.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the entity-framework tag.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Thank you to our contributors&lt;/h2&gt;  &lt;p&gt;We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release - &lt;a href="https://www.codeplex.com/site/users/view/RogerAlsing"&gt;RogerAlsing&lt;/a&gt;, &lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;, and &lt;a href="https://www.codeplex.com/site/users/view/MikeCole"&gt;mikecole&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following contributions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Support for String.Concat and .ToString in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Support for enum HasFlags method in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Entity SQL canonical function support for SQL Server Compact (ErikEJ) &lt;/li&gt;    &lt;li&gt;Fix for &lt;a href="https://entityframework.codeplex.com/workitem/1632"&gt;a bug&lt;/a&gt; that was affecting EF running under Mono (ErikEJ) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;All the features we plan to include in the final release of EF6.1 are included in this Beta. At this stage our team is tidying up a few things with the new features and fixing any high priority bugs that are reported.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498574" width="1" height="1"&gt;</description><pubDate>Tue, 11 Feb 2014 20:01:43 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">56</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10498574</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/HTML-Going-Mobile-with-Apache-Cordova</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/HTML-Going-Mobile-with-Apache-Cordova</link><category>Apache Cordova</category><title>HTML Going Mobile with Apache Cordova</title><description>&lt;p&gt;Join your guides&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://www.twitter.com/jaffe75"&gt;Jaffe Worley&lt;/a&gt;&amp;nbsp;as they talk to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week Cory and Jaffe are joined by Olivier Bloch of MS Open Technologies. Olivier shows us just how simple building a Windows 8 mobile experience is with Apache Cordova.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Past Show: &lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Building-Mobile-Applications-using-HTML5-with-Nomad-for-Visual-Studio"&gt;Building Mobile Applications with HTML5 and Nomad for Visual Studio&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://cordova.apache.org/"&gt;Apache Cordova Project&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ie/dn433244(v=vs.85).aspx"&gt;Pointer Events&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:28c12ab9136d45d2960ba2c0016b79fc"&gt;</description><pubDate>Tue, 11 Feb 2014 19:46:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova.wmv" type="video/x-ms-wmv" length="209734295" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/HTML-Going-Mobile-with-Apache-Cordova</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guides Cory Fowler and Jaffe Worley as they talk to the product teams in Redmond as well as the web community. This week Cory and Jaffe are joined by Olivier Bloch of MS Open Technologies. Olivier shows us just how simple building a Windows 8 mobile experience is with Apache Cordova. Show Links Past Show: Building Mobile Applications with HTML5 and Nomad for Visual StudioApache Cordova ProjectPointer Events</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2187</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova.mp3" expression="full" duration="2187" fileSize="34999497" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova.mp4" expression="full" duration="2187" fileSize="111278527" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova.webm" expression="full" duration="2187" fileSize="296081460" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova.wmv" expression="full" duration="2187" fileSize="209734295" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_high.mp4" expression="full" duration="2187" fileSize="841272174" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_mid.mp4" expression="full" duration="2187" fileSize="497888919" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/d8b8/f0681eb7-134a-4089-9ae2-f1fe8140d8b8/htmlgoingmobilewithapachecordova_Source.wmv" expression="full" duration="2187" fileSize="1252128134" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, "The Jaffe"</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, "The Jaffe"</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/HTML-Going-Mobile-with-Apache-Cordova/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/Ebmhl2CUJF4/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</link><category>ASP.NET</category><category>ASP.NET MVC</category><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 3 - Bootstrap and JavaScript enhancements</title><description>&lt;p&gt;This is part 3 of a 4 part series covering some of the new features in the ASP.NET MVC 5.1 and Web API 2.1 releases.&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;
  
&lt;p&gt;In this post, we'll be focusing on some client-side improvements to ASP.NET MVC 5.1.&lt;/p&gt;
  
&lt;p&gt;As a reminder if you haven't read the first post, these updates are currently delivered via a NuGet update to your existing ASP.NET MVC 5 / Web API 2 applications. They'll be part of the File / New Project templates included in an upcoming Visual Studio update.&lt;/p&gt;
  &lt;h2&gt;EditorFor now supports passing HTML attributes - Great for Bootstrap&lt;/h2&gt;  
&lt;p&gt;The new ASP.NET project templates all include Bootstrap themes. Bootstrap uses custom class names for everything - styling, components, layout, behavior. That made it frustrating that you couldn't pass classes down to the Html.EditorFor HTML helper: you either had to use specific HTML Helpers like Html.TextBoxFor (which do allow you to pass HTML attributes, but don't benefit from some of the other nice features in HTML.EditorFor, like Data Attribute support for display and input validation) or give up on using the Bootstrap classes and style things yourself.&lt;/p&gt;
  
&lt;p&gt;In the 5.1 release, you can now pass HTML attributes as an additional parameter to Html.EditorFor, allowing you to get the best of both. Here's an example of why that's useful.&lt;/p&gt;
  
&lt;p&gt;In the first post in the series, we scaffolded a simple create controller and associated views. The Create view ended up looking like this:&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-28_10h51_55" href="http://www.flickr.com/photos/36836555@N00/12193032655/" mce_href="http://www.flickr.com/photos/36836555@N00/12193032655/"&gt;&lt;img alt="2014-01-28_10h51_55" src="http://farm3.static.flickr.com/2890/12193032655_8a37eaee04_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2890/12193032655_8a37eaee04_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;That's okay, but it's not taking advantage of any of the Bootstrap form styling (e.g. focus indication, element sizing, groups, etc.) and it won't do anything special with custom Bootstrap themes. A great start would be just to add the "form-control" class to the form elements. That just involves changing from this:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.FirstName)&lt;/pre&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.FirstName, new { htmlAttributes = new { @class = "form-control" }, })&lt;/pre&gt;

&lt;p&gt;When I make that update to the textboxes, I get this view:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-28_00h51_07" href="http://www.flickr.com/photos/36836555@N00/12186423094/" mce_href="http://www.flickr.com/photos/36836555@N00/12186423094/"&gt;&lt;img alt="2014-01-28_00h51_07" src="http://farm3.static.flickr.com/2850/12186423094_8976fc8c40_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2850/12186423094_8976fc8c40_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll notice some subtle improvements, like the focus highlight on the FirstName field, nicer textbox size and validation layout for Age, etc. These are just really simple things with a&amp;nbsp; very basic model, but they give a quick idea of the improvement here.&lt;/p&gt;

&lt;p&gt;Also nice is that I can pass the attributes on Html.EditorFor when displaying the entire model. Here I've updated the entire form section to just use one EditorFor call, passing in the model:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [10];"&gt;@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    &amp;lt;div class="form-horizontal"&amp;gt;
        &amp;lt;h4&amp;gt;Person&amp;lt;/h4&amp;gt;
        &amp;lt;hr /&amp;gt;
        @Html.ValidationSummary(true)
        @Html.EditorFor(model =&amp;gt; model, new { htmlAttributes = new { @class = "form-control" }, })
        &amp;lt;div class="form-group"&amp;gt;
            &amp;lt;div class="col-md-offset-2 col-md-10"&amp;gt;
                &amp;lt;input type="submit" value="Create" class="btn btn-default" /&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
}&lt;/pre&gt;

&lt;p&gt;Note that to make sure the Id property didn't display and to use the custom radio enum display template (as explained in the first post in the series), I added two annotations to my model. Here's how the model and associated Enum look:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [3,5];"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public int Age { get; set; }
}
//I guess technically these are called honorifics
public enum Salutation : byte
{
    [Display(Name = "Mr.")]   Mr,
    [Display(Name = "Mrs.")]  Mrs,
    [Display(Name = "Ms.")]   Ms,
    [Display(Name = "Dr.")]   Doctor,
    [Display(Name = "Prof.")] Professor,
    Sir, 
    Lady, 
    Lord
}&lt;/pre&gt;

&lt;p&gt;That gives me the exact same output as shown above (the second, nicer screenshot). What's cool there is that the EditorFor method passed that form-control class to each element in the form, so each input tag got the form-control class. That means that I could apply additional Bootstrap classes, as well as my own custom classes, in that same call:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;        @Html.EditorFor(model =&amp;gt; model, new { htmlAttributes = new { @class = "form-control input-sm my-custom-class" }, })&lt;/pre&gt;

&lt;p&gt;You can see the &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/f5a8ab8dd751b6d046f55dfdf0138bda202bcdbf" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/f5a8ab8dd751b6d046f55dfdf0138bda202bcdbf"&gt;code changes and associated tests for this EditorFor change on this commit on CodePlex&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Client-side validation for MinLength and MaxLength&lt;/h2&gt;

&lt;p&gt;This is a pretty straightforward one: we had client-side validation for StringLength before, but not for MinLength and MaxLength. Personally, I feel like it's a tossup on which to use - StringLength lets you set both min and max and is more widely supported, but MinLength and MaxLength allow you to specify them separately and give different validation messages for each. Regardless, the good news is that whichever you use, they're both supported on both server and client.&lt;/p&gt;

&lt;p&gt;To test that out, we'll add some MinLength and MaxLength attributes to our Person class.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [8,9,12,13];"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    public int Age { get; set; }
}&lt;/pre&gt;

&lt;p&gt;I get immediate feedback on what the website thinks of a potential stage name I've been considering:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-28_14h45_16" href="http://www.flickr.com/photos/36836555@N00/12196896086/" mce_href="http://www.flickr.com/photos/36836555@N00/12196896086/"&gt;&lt;img alt="2014-01-28_14h45_16" src="http://farm8.static.flickr.com/7443/12196896086_9043699fb8_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7443/12196896086_9043699fb8_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the &lt;a href="http://aspnetwebstack.codeplex.com/workitem/1476" mce_href="http://aspnetwebstack.codeplex.com/workitem/1476"&gt;link to the work item&lt;/a&gt;, and here's &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/1eb13543f730431a2f20abe64bb8ff5df76d5941" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/1eb13543f730431a2f20abe64bb8ff5df76d5941"&gt;the code diff for the commit&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Three small but useful fixes to Unobtrusive Ajax&lt;/h2&gt;

&lt;p&gt;There are a &lt;a href="http://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=ajax&amp;amp;status=Resolved&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Votes&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All" mce_href="http://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=ajax&amp;amp;status=Resolved&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Votes&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All"&gt;few fixes to Unobtrusive Ajax&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/1487" mce_href="http://aspnetwebstack.codeplex.com/workitem/1487"&gt;Support "this" context for ajax actions/forms&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/238" mce_href="http://aspnetwebstack.codeplex.com/workitem/238"&gt;Unobtrusive.Ajax interferes with the cancel convention on validation&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/1520" mce_href="http://aspnetwebstack.codeplex.com/workitem/1520"&gt;ASP.NET MVC 3 LoadingElementDuration is not working&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I thought the first fix was pretty interesting: a &lt;a href="http://stackoverflow.com/questions/6630189/how-to-use-this-inside-mvc3-ajax-actionlink-onbegin-oncomplete-events/14611314#14611314" mce_href="http://stackoverflow.com/questions/6630189/how-to-use-this-inside-mvc3-ajax-actionlink-onbegin-oncomplete-events/14611314#14611314"&gt;question came up on StackOverflow&lt;/a&gt;, someone posted &lt;a href="http://aspnetwebstack.codeplex.com/workitem/1487" mce_href="http://aspnetwebstack.codeplex.com/workitem/1487"&gt;a suggested one line fix on a CodePlex issue&lt;/a&gt;, and it got &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/8a2c969ab6b41591e6a7194028b5b37a562c855a" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/8a2c969ab6b41591e6a7194028b5b37a562c855a"&gt;fixed in this commit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This issue allows callbacks from Unobtrusive Ajax to have access to the initiating element.&amp;nbsp; That's pretty handy when you've got multiple potential callers, e.g. a list of items which contain Ajax.ActionLink calls. In the past, I've had to write &lt;a href="http://www.asp.net/mvc/tutorials/mvc-music-store/mvc-music-store-part-8" mce_href="http://www.asp.net/mvc/tutorials/mvc-music-store/mvc-music-store-part-8"&gt;unnecessarily complicated JavaScript to wire things up manually&lt;/a&gt; because I couldn't take advantage of the OnBegin, OnComplete, OnFailure and OnSuccess options, e.g.&lt;/p&gt;

&lt;pre class="brush: js; auto-links: false;"&gt;&amp;lt;script type="text/javascript"&amp;gt;
    $(function () {
        // Document.ready -&amp;gt; link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", {"id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        }
                        $('#cart-total').text(data.CartTotal);
                        $('#update-message').text(data.Message);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });
    });
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Now with this change, I'd have the option of wiring up the Ajax call and success callbacks separately and tersely, since they'd have access to the calling element for the ID.&lt;/p&gt;

&lt;p&gt;That's it for this post, in the next (and definitely last) post of this series I'll look at some ASP.NET Web API 2.1 improvements.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=Ebmhl2CUJF4:_xuZ-vfgobM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/Ebmhl2CUJF4" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 28 Jan 2014 23:17:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/MadsKristensen/Introducing-File-Nestor-for-Visual-Studio</guid><link>http://channel9.msdn.com/Blogs/MadsKristensen/Introducing-File-Nestor-for-Visual-Studio</link><title>Introducing File Nesting extension for Visual Studio</title><description>&lt;p&gt;Download the extension: &lt;a href="http://visualstudiogallery.msdn.microsoft.com/3ebde8fb-26d8-4374-a0eb-1e4e2665070c"&gt;File Nesting on the VS Gallery&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Source code: &lt;a href="https://github.com/madskristensen/FileNesting"&gt;https://github.com/madskristensen/FileNesting&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:5a07a01b2d694ccda6daa2c1002c5918"&gt;</description><pubDate>Tue, 28 Jan 2014 03:24:17 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting.mp4" type="video/mp4" /><comments>http://channel9.msdn.com/Blogs/MadsKristensen/Introducing-File-Nestor-for-Visual-Studio</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Download the extension: File Nesting on the VS Gallery Source code: https://github.com/madskristensen/FileNesting </itunes:summary><media:thumbnail url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting.mp3" expression="full" fileSize="1" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting.mp4" expression="full" fileSize="1" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting.webm" expression="full" fileSize="1" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/a311/c331942e-0bbe-4fc9-86d5-fb9e83b5a311/filenesting_mid.mp4" expression="full" fileSize="1" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">13</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/MadsKristensen/Introducing-File-Nestor-for-Visual-Studio/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/LUB2e8fTiAw/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 2 - Attribute Routing with Custom Constraints</title><description>&lt;p&gt;I'm continuing a series looking at some of the new features in ASP.NET MVC 5.1 and Web API 2.1. Part 1 (&lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt;) explained how to update your NuGet packages in an ASP.NET MVC application, so I won't rehash that here.&lt;/p&gt;

&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;

&lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;
  
&lt;p&gt;In this post, we'll look at improvements to attribute routing for both ASP.NET MVC and ASP.NET Web API. First, a quick review of what routing constraints are used for.&lt;/p&gt;
  &lt;h2&gt;Intro to Routing Constraints&lt;/h2&gt;  
&lt;p&gt;ASP.NET MVC and Web API have both offered both simple and custom route constraints since they first came out. A simple constraint would be something like this:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false; highlight: [3];"&gt;routes.MapRoute("blog", "{year}/{month}/{day}",
    new { controller = "blog", action = "index" },
    new { year = @"\d{4}", month = @"\d{2}", day = @"\d{2}" });&lt;/pre&gt;

&lt;p&gt;In the above case, "/2014/01/01" would match but "/does/this/work" would not since the values don't match the required pattern.&amp;nbsp; If you needed something more complex than a simple pattern match, you'd use a custom constraint by implementing IRouteConstraint and defining the custom logic in the Match method - if it returns true, the route is a match.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public interface IRouteConstraint
{
    bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection);
}&lt;/pre&gt;
&lt;h2&gt;Route Constraints in Attribute Routing&lt;/h2&gt;

&lt;p&gt;One of the top new features in ASP.NET MVC 5 and Web API 2 was the addition of Attribute Routing. Rather than defining all your routes in /App_Start/RouteConfig.cs using a series of routes.MapRoute() calls, you can define routes using attributes on your controller actions and controller classes. You can take your pick of whichever works better to you: continue to use traditional routing, use attribute routing instead, or use them both.&lt;/p&gt;

&lt;p&gt;Attribute routing previously offered custom inline constraints, like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;[Route("temp/{scale:values(celsius|fahrenheit)}")]&lt;/pre&gt;

&lt;p&gt;Here, the scale segment has a custom inline Values constraint which will only match if the the scale value is in the pipe-delimited list, e.g. this will match temp/celsius and /temp/fahrenheit but not /temp/foo. You can read more about the Attribute Routing features that shipped with ASP.NET MVC 5, including inline constraints like the above, on this post by Ken Egozi: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx" mce_href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx"&gt;Attribute Routing in ASP.NET MVC 5&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;While inline constraints allow you to restrict values for a particular segment, they're both a little limited (e.g. they can't operate over the entire URL, and some more complex thing that aren't possible at that scope). To see more about what changed and why, see the &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b"&gt;issue report&lt;/a&gt; and &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b"&gt;changed code for this commit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now with ASP.NET MVC 5.1, we can create a new attribute that implements a custom route constraint. Here's an example.&lt;/p&gt;

&lt;h2&gt;ASP.NET MVC 5.1 Example: Adding a custom LocaleRoute&lt;/h2&gt;

&lt;p&gt;Here's a simple custom route attribute that matches based on a list of supported locales.&lt;/p&gt;

&lt;p&gt;First, we'll create a custom LocaleRouteConstraint that implements IRouteConstraint:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class LocaleRouteConstraint : IRouteConstraint
{
	public string Locale { get; private set; }
	public LocaleRouteConstraint(string locale)
	{
		Locale = locale;
	}
	public bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection)
	{
		object value;
		if (values.TryGetValue("locale", out value) &amp;amp;&amp;amp; !string.IsNullOrWhiteSpace(value as string))
		{
			string locale = value as string;
			if (isValid(locale))
			{
				return string.Equals(Locale, locale, StringComparison.OrdinalIgnoreCase);
			}
		}
		return false;
	}
	private bool isValid(string locale)
	{
		string[] validOptions = "EN-US|EN-GB|FR-FR".Split('|') ;
		return validOptions.Contains(locale.ToUpper());
	}
}&lt;/pre&gt;

&lt;p&gt;IRouteConstraint has one method, Match. That's where you write your custom logic which determines if a set of incoming route values, context, etc., match your custom route. If you return true, routes with this constraint are eligible to respond to the request; if you return false the request will not be mapped to routes with this constraint.&lt;/p&gt;

&lt;p&gt;In this case, we've got a simple isValid matcher which takes a locale string (e.g. fr-fr) and validates it against a list of supported locales. In more advanced use, this may be querying against a database backed cache of locales your site supports or using some other more advanced method. If you are working with a more advanced constraint, especially a locale constraint, I recommend Ben Foster's article &lt;a title="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration" href="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration" mce_href="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration"&gt;Improving ASP.NET MVC Routing Configuration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;It's important to see that the real value in this case is running more advanced logic than a simple pattern match - if that's all you're doing, you could use a regex inline route constraint (e.g. {x:regex(^\d{3}-\d{3}-\d{4}$)}).&lt;/p&gt;

&lt;p&gt;Now we've got a constraint, but we need to map it to an attribute to use in attribute routing. Note that separating constraints from attributes gives a lot more flexibility - for instance, we could use this constraint on multiple attributes.&lt;/p&gt;

&lt;p&gt;Here's a simple one:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class LocaleRouteAttribute : RouteFactoryAttribute
{
	public LocaleRouteAttribute(string template, string locale)
		: base(template)
	{
		Locale = locale;
	}
	public string Locale
	{
		get;
		private set;
	}
	public override RouteValueDictionary Constraints
	{
		get
		{
			var constraints = new RouteValueDictionary();
			constraints.Add("locale", new LocaleRouteConstraint(Locale));
			return constraints;
		}
	}
	public override RouteValueDictionary Defaults
	{
		get
		{
			var defaults = new RouteValueDictionary();
			defaults.Add("locale", "en-us");
			return defaults;
		}
	}
}&lt;/pre&gt;

&lt;p&gt;Now we've got a complete route attribute we can place on a controller or action:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [5];"&gt;using System.Web.Mvc;
namespace StarDotOne.Controllers
{
    [LocaleRoute("hello/{locale}/{action=Index}", "EN-GB")]
    public class ENGBHomeController : Controller
    {
        // GET: /hello/en-gb/
        public ActionResult Index()
        {
            return Content("I am the EN-GB controller.");
        }
    }
}&lt;/pre&gt;

&lt;p&gt;And here's our FR-FR controller:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;using System.Web.Mvc;
namespace StarDotOne.Controllers
{
    [LocaleRoute("hello/{locale}/{action=Index}", "FR-FR")]
    public class FRFRHomeController : Controller
    {
        // GET: /hello/fr-fr/
        public ActionResult Index()
        {
            return Content("Je suis le contrôleur FR-FR.");
        }
    }
}&lt;/pre&gt;

&lt;p&gt;Before running this, we need to verify that we've got Attribute Routes enabled in our RouteConfig:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [7];"&gt;public class RouteConfig
{
    public static void RegisterRoutes(RouteCollection routes)
    {
        routes.IgnoreRoute("{resource}.axd/{*pathInfo}");
        routes.MapMvcAttributeRoutes();
        routes.MapRoute(
            name: "Default",
            url: "{controller}/{action}/{id}",
            defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional }
        );
    }
}&lt;/pre&gt;

&lt;p&gt;Now a request to /hello/en-gb/ goes to our ENGBController and a request to /hello/fr-fr/ goes to the FRFRController:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_11h18_03" href="http://www.flickr.com/photos/36836555@N00/12122081323/" mce_href="http://www.flickr.com/photos/36836555@N00/12122081323/"&gt;&lt;img alt="2014-01-24_11h18_03" src="http://farm6.static.flickr.com/5532/12122081323_30f4b1cd6f_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5532/12122081323_30f4b1cd6f_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because we've set the default locale in the LocaleRouteAttribute to en-us, we can browse to it using either /hello/en-us/ or just /hello:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_11h20_05" href="http://www.flickr.com/photos/36836555@N00/12122479736/" mce_href="http://www.flickr.com/photos/36836555@N00/12122479736/"&gt;&lt;img alt="2014-01-24_11h20_05" src="http://farm4.static.flickr.com/3704/12122479736_545c6a0708_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3704/12122479736_545c6a0708_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've been paying close attention, you may be thinking that we could have accomplished the same thing using an inline route constraint. I think the real benefit over a custom inline constraint is when you're doing more than operating on one segment in the URL: preforming logic on the entire route or context. One great example there would be using a custom attribute based on a user's locale selection (set in a cookie, perhaps) or using a header.&lt;/p&gt;

&lt;p&gt;So, to recap:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;You could write custom route constraints before in "Traditional" code-based routing, but not in attribute routing &lt;/li&gt;

  
&lt;li&gt;You could write custom inline constraints, but they mapped just to a segment in the URL &lt;/li&gt;

  
&lt;li&gt;Custom route constraints now can operate at a higher level than just a segment on the URL path, e.g. headers or other request context &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A very common use case for using headers in routing is versioning by header. We'll look at that with ASP.NET Web API 2.1 next. Keep in mind that, while the general recommendation is to use ASP.NET Web API for your HTTP APIs, many APIs are still running on ASP.NET MVC for a variety of reasons (existing / legacy systems APIs built on ASP.NET MVC, familiarity with MVC, mostly-MVC applications with relatively few APIs that want to stay simple, developer preferences, etc.) and for that reason, versioning ASP.NET MVC HTTP APIs by headers is probably one of the top use cases of custom route attribute constaints for ASP.NET MVC as well.&lt;/p&gt;

&lt;h2&gt;ASP.NET Web API 2.1 Custom Route Attributes example: Versioning By Header&lt;/h2&gt;

&lt;p&gt;Note: The example I'm showing here is in &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt"&gt;the official samples list on CodePlex&lt;/a&gt;. There's a lot of great examples there, including some samples showing off some of the more complex features you don't hear about all that often. Since the methodology is almost exactly the same as what we looked at in ASP.NET MVC 5.1 and &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt"&gt;the sample's available&lt;/a&gt;, I'll go through this one a lot faster.&lt;/p&gt;

&lt;p&gt;First, the custom constraint:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;internal class VersionConstraint : IHttpRouteConstraint
{
    public const string VersionHeaderName = "api-version";
    private const int DefaultVersion = 1;
    public VersionConstraint(int allowedVersion)
    {
        AllowedVersion = allowedVersion;
    }
    public int AllowedVersion
    {
        get;
        private set;
    }
    public bool Match(HttpRequestMessage request, IHttpRoute route, string parameterName, IDictionary&amp;lt;string, object&amp;gt; values, HttpRouteDirection routeDirection)
    {
        if (routeDirection == HttpRouteDirection.UriResolution)
        {
            int version = GetVersionHeader(request) ?? DefaultVersion;
            if (version == AllowedVersion)
            {
                return true;
            }
        }
        return false;
    }
    private int? GetVersionHeader(HttpRequestMessage request)
    {
        string versionAsString;
        IEnumerable&amp;lt;string&amp;gt; headerValues;
        if (request.Headers.TryGetValues(VersionHeaderName, out headerValues) &amp;amp;&amp;amp; headerValues.Count() == 1)
        {
            versionAsString = headerValues.First();
        }
        else
        {
            return null;
        }
        int version;
        if (versionAsString != null &amp;amp;&amp;amp; Int32.TryParse(versionAsString, out version))
        {
            return version;
        }
        return null;
    }
}&lt;/pre&gt;

&lt;p&gt;This is similar to the simpler LocaleConstraint we looked at earlier, but parses an integer version number from a header. Now, like before, we create an attribute to put this constraint to work:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;    internal class VersionedRoute : RouteFactoryAttribute
    {
        public VersionedRoute(string template, int allowedVersion)
            : base(template)
        {
            AllowedVersion = allowedVersion;
        }
        public int AllowedVersion
        {
            get;
            private set;
        }
        public override IDictionary&amp;lt;string, object&amp;gt; Constraints
        {
            get
            {
                var constraints = new HttpRouteValueDictionary();
                constraints.Add("version", new VersionConstraint(AllowedVersion));
                return constraints;
            }
        }
    }
}&lt;/pre&gt;

&lt;p&gt;And with that set up, we can just slap the attribute header on a couple different ApiControllers:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [1,7];"&gt;[VersionedRoute("api/Customer", 1)]
public class CustomerVersion1Controller : ApiController
{
    // controller code goes here
}
[VersionedRoute("api/Customer", 2)]
public class CustomerVersion2Controller : ApiController
{
    // controller code goes here
}&lt;/pre&gt;

&lt;p&gt;That's it - now requests to /api/Customer with the api-version header set to 1 (or empty, since it's the default) go to the first controller, and with api-version set to 2 go to the second controller. The sample includes a handy test client console app that does just that:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_14h58_06" href="http://www.flickr.com/photos/36836555@N00/12124449735/" mce_href="http://www.flickr.com/photos/36836555@N00/12124449735/"&gt;&lt;img alt="2014-01-24_14h58_06" src="http://farm8.static.flickr.com/7310/12124449735_156c2c6a3e_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7310/12124449735_156c2c6a3e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, let's wrap up there for now. In the next (probably final) post, we'll take a quick high level look at some of the other features in this release.&lt;/p&gt;

&lt;p&gt;Recap:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Custom route constraints let you run custom logic to determine if a route matches as well as other things like compute values that are available in the matching controllers &lt;/li&gt;

  
&lt;li&gt;The previous release allowed for custom inline route constraints, but they only operated on a segment &lt;/li&gt;

  
&lt;li&gt;This *.1 release includes support for full custom route constraints &lt;/li&gt;
&lt;/ul&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=LUB2e8fTiAw:CWr9g_TrD2o:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/LUB2e8fTiAw" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 24 Jan 2014 23:03:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/eeeusPqRqIE/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 1 - Overview and Enums</title><description>&lt;p&gt;This is the first in a four part series covering ASP.NET MVC 5.1 and Web API 2.1&lt;/p&gt;

&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;

&lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1 were released on January 20. I call it the star-dot-one release, not sure if that one's going to stick. Here are the top links to find out more:&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;The announcement blog post: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/01/20/announcing-the-release-of-asp-net-mvc-5-1-asp-net-web-api-2-1-and-asp-net-web-pages-3-1.aspx" mce_href="http://blogs.msdn.com/b/webdev/archive/2014/01/20/announcing-the-release-of-asp-net-mvc-5-1-asp-net-web-api-2-1-and-asp-net-web-pages-3-1.aspx"&gt;Announcing the Release of ASP.NET MVC 5.1, ASP.NET Web API 2.1 and ASP.NET Web Pages 3.1&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
  
&lt;p&gt;Release notes &lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes"&gt;ASP.NET MVC 5.1 release notes&lt;/a&gt;       
&lt;ul&gt;       
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap"&gt;Bootstrap support for editor templates&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum"&gt;Enum support in views&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive"&gt;Unobtrusive validation for MinLength/MaxLength Attributes&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext"&gt;Supporting the ‘this’ context in Unobtrusive Ajax&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt;&lt;!--EndFragment--&gt; &lt;/li&gt;
     &lt;/ul&gt;
   &lt;/li&gt;
    
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21"&gt;ASP.NET Web API release notes&lt;/a&gt;       
&lt;ul&gt;       
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error"&gt;Global error handling&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page"&gt;Help Page improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute"&gt;IgnoreRoute support&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson"&gt;BSON media-type formatter&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters"&gt;Better support for async filters&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing"&gt;Query parsing for the client formatting library&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;!--EndFragment--&gt;&lt;/li&gt;
     &lt;/ul&gt;
   &lt;/li&gt;
    
&lt;li&gt;ASP.NET Web Pages 3.1 is a bug fix release, here's the &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of fixed bugs&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
  
&lt;p&gt;Let's run through what's involved in getting them and trying some of the new features.&lt;/p&gt;
  &lt;h3&gt;Nothing to Install, just NuGet package updates&lt;/h3&gt;  
&lt;p&gt;As I mentioned in my last post, ASP.NET has moved from a "big thing" that you install every few years. The ASP.NET project templates are now mostly a collection of composable NuGet packages, which can be updated more frequently and used without needing to install anything that will affect your dev environment, other projects you're working on, your server environment, or other applications on your server.&lt;/p&gt;
  
&lt;p&gt;You don't need to wait for your hosting provider to support ASP.NET MVC 5.1, ASP.NET Web API 2.1 or ASP.NET Web Pages 3.1 - if they supported 5/2/3 they support 5.1/2.1/3.1. Easier said, if your server supports ASP.NET 4.5, you're set.&lt;/p&gt;
  
&lt;p&gt;However, there are some new features for ASP.NET MVC 5.1 views that require you to be running the most recent Visual Studio update to get editing support. You're installing the Visual Studio updates when they come out so that's not a problem, right?&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;For Visual Studio 2012, you should have &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390062" mce_href="http://go.microsoft.com/fwlink/?LinkId=390062"&gt;ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt;. You'd need this for ASP.NET MVC 5 support in Visual Studio 2012, so no real change there. &lt;/li&gt;
    
&lt;li&gt;For Visual Studio 2013, you should have &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390064" mce_href="http://go.microsoft.com/fwlink/?LinkId=390064"&gt;Visual Studio 2013 Update 1&lt;/a&gt;. This update is needed to get nice editor support for the new ASP.NET MVC 5.1 Razor View features (e.g. Bootstrap overloads). &lt;/li&gt;
 &lt;/ul&gt;
  &lt;h3&gt;Okay, Let's Have a Look Then&lt;/h3&gt;  
&lt;p&gt;Game plan: I'm going to take an ASP.NET MVC 5 + Web API 2 project, update the NuGet packages, and then throw some of my favorite features in there.&lt;/p&gt;
  
&lt;p&gt;In this case, I'm opting for the "mostly Web API template" since it includes both MVC and Web API, and it includes help pages right out of the box. I could go with "mostly MVC" + Web API, but then I'd need to install the Web API Help Page NuGet package and I might strain a muscle.&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h31_07" href="http://www.flickr.com/photos/36836555@N00/12060286423/" mce_href="http://www.flickr.com/photos/36836555@N00/12060286423/"&gt;&lt;img alt="2014-01-20_16h31_07" src="http://farm4.static.flickr.com/3764/12060286423_947afba81e.jpg" border="0" mce_src="http://farm4.static.flickr.com/3764/12060286423_947afba81e.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Now I'll open the Manage NuGet Packages dialog and check for updates. Yup, there they are.&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h37_07" href="http://www.flickr.com/photos/36836555@N00/12060960846/" mce_href="http://www.flickr.com/photos/36836555@N00/12060960846/"&gt;&lt;img alt="2014-01-20_16h37_07" src="http://farm4.static.flickr.com/3819/12060960846_2472bcd4c5_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3819/12060960846_2472bcd4c5_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Since this is a throw-away project I'll throw caution to the wind and click Update All. If this were a real project, I might just update the three new releases so as not to pick an unnecessary fight with JavaScript libraries. But I'm feeling lucky today so Update All it is. &lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h42_15" href="http://www.flickr.com/photos/36836555@N00/12061011636/" mce_href="http://www.flickr.com/photos/36836555@N00/12061011636/"&gt;&lt;img alt="2014-01-20_16h42_15" src="http://farm6.static.flickr.com/5511/12061011636_906022fdbc_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5511/12061011636_906022fdbc_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Wow, look at them go! jQuery 2.0.3 even. It's a party. (anti-party disclaimer for those who might be getting carsick: I didn't have to update to jQuery 2.0.3 or any of that other stuff to use the 5.1/2.1 stuff).&lt;/p&gt;
  &lt;h3&gt;Enum Support in ASP.NET MVC Views&lt;/h3&gt;  
&lt;p&gt;Okay, I'll start by creating a Person model class with a Salutation enum:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false;"&gt;using System.ComponentModel.DataAnnotations;
namespace StarDotOne.Models
{
    public class Person
    {
        public int Id { get; set; }
        public Salutation Salutation { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public int Age { get; set; }
    }
    //I guess technically these are called honorifics
    public enum Salutation
    {
        [Display(Name = "Mr.")]
        Mr,
        [Display(Name = "Mrs.")]
        Mrs,
        [Display(Name = "Ms.")]
        Ms,
        [Display(Name = "Dr.")]
        Doctor,
        [Display(Name = "Prof.")]
        Professor,
        Sir,
        Lady,
        Lord
    }
}&lt;/pre&gt;

&lt;p&gt;Note that I'm using the Display attribute on a few that I want to abbreviate.&lt;/p&gt;

&lt;p&gt;Next, I delete my HomeController and views and scaffold a new HomeController using the Person class. Caution to the wind being our theme, I'll run it.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h04_50" href="http://www.flickr.com/photos/36836555@N00/12065201545/" mce_href="http://www.flickr.com/photos/36836555@N00/12065201545/"&gt;&lt;img alt="2014-01-21_00h04_50" src="http://farm6.static.flickr.com/5473/12065201545_26d6e4041f_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5473/12065201545_26d6e4041f_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh no! No dropdown on Salutation!&lt;/p&gt;

&lt;p&gt;Just kidding. That's to be expected. To get the dropdown, we need to change the scaffolded view code for the Salutation from the generic Html.EditorFor to use the new Html.EnumDropDownListFor helper.&lt;/p&gt;

&lt;p&gt;So in my Create.cshtml, I need to change this line:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.Salutation)&lt;/pre&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EnumDropDownListFor(model =&amp;gt; model.Salutation)&lt;/pre&gt;

&lt;p&gt;Okay, with that done I'll refresh the page:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h09_53" href="http://www.flickr.com/photos/36836555@N00/12065544563/" mce_href="http://www.flickr.com/photos/36836555@N00/12065544563/"&gt;&lt;img alt="2014-01-21_00h09_53" src="http://farm6.static.flickr.com/5478/12065544563_b892c5f80e_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5478/12065544563_b892c5f80e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there it is.&lt;/p&gt;

&lt;p&gt;"Now, Jon," you say, "That's really nice, but it would have been absolutely perfect if the scaffolder or EditorFor or something had seen the Enum property and just done the right thing."&lt;/p&gt;

&lt;p&gt;You're right. I'm told that will all magically work in an update on the way soon. For now, though, it's easy to get that behavior using some simple EditorTemplates and DisplayTemplates. You can find examples of them in this &lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/MVC/EnumSample/EnumSample/Views/Shared/" mce_href="https://aspnet.codeplex.com/SourceControl/latest#Samples/MVC/EnumSample/EnumSample/Views/Shared/"&gt;EnumSample on CodePlex&lt;/a&gt;. So I grabbed those templates and copied them into the /Views/Shared directory in my project:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h18_21" href="http://www.flickr.com/photos/36836555@N00/12065331315/" mce_href="http://www.flickr.com/photos/36836555@N00/12065331315/"&gt;&lt;img alt="2014-01-21_00h18_21" src="http://farm6.static.flickr.com/5482/12065331315_c33f53ec08_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5482/12065331315_c33f53ec08_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I'll change my Create.cshtml view back how it was originally scaffolded, using Html.EditorFor. That way the view engine will look for a matching EditorTemplate for the object type, find Enum.cshtml, and use that to render all Enum model properties.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h51_35" href="http://www.flickr.com/photos/36836555@N00/12065950363/" mce_href="http://www.flickr.com/photos/36836555@N00/12065950363/"&gt;&lt;img alt="2014-01-21_00h51_35" src="http://farm3.static.flickr.com/2847/12065950363_06f7e5be44_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2847/12065950363_06f7e5be44_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blam!&lt;/p&gt;

&lt;p&gt;Okay, one more fun thing in that EnumSample. There's an override in Html.EditorFor that lets you specify the EditorTemplate you'd like to be used. So I'll change that line to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.Salutation, templateName: "Enum-radio")&lt;/pre&gt;

&lt;p&gt;And now we are truly dropping science like Galileo dropped the orange:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h57_41" href="http://www.flickr.com/photos/36836555@N00/12066013263/" mce_href="http://www.flickr.com/photos/36836555@N00/12066013263/"&gt;&lt;img alt="2014-01-21_00h57_41" src="http://farm4.static.flickr.com/3756/12066013263_ca2023f5f6_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3756/12066013263_ca2023f5f6_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recap so far:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;We updated to the new NuGet packages &lt;/li&gt;

  
&lt;li&gt;We saw that we can now use a new helper to render dropdowns for enums: Html.EnumDropDownListFor &lt;/li&gt;

  
&lt;li&gt;We saw that we can use EditorTemplates (and, trust me, DisplayTemplates as well) to encapsulate that so any call to Html.EditorFor will intelligently display enum properties &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the next post in the series: &lt;a title="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 2 - Attribute Routing with Custom Constraints&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=eeeusPqRqIE:YTiCVn7kj0A:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/eeeusPqRqIE" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 21 Jan 2014 22:44:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/MadsKristensen/Working-with-images-in-Web-Essentials-2013</guid><link>http://channel9.msdn.com/Blogs/MadsKristensen/Working-with-images-in-Web-Essentials-2013</link><title>Working with images in Web Essentials 2013</title><description>&lt;p&gt;This is a demo of a typical workflow for working with image files in Visual Studio. Web Essentials adds a lot of tools that makes this workflow easier than ever.&lt;/p&gt;&lt;p&gt;Features demoed:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Paste image from clipboard&lt;/li&gt;&lt;li&gt;Lossless image optimization&lt;/li&gt;&lt;li&gt;Create image sprites&lt;/li&gt;&lt;li&gt;Sprites are better with LESS/SCSS&lt;/li&gt;&lt;li&gt;Base64 encode images&lt;/li&gt;&lt;li&gt;Optimize base64 encoded images&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Existing features NOT demoed in this video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Paste image from clipboard onto CSS, LESS, SCSS, JavaScript, TypeScript, Markdown&lt;/li&gt;&lt;li&gt;Save base64 encoded image back to disk&lt;/li&gt;&lt;li&gt;Re-embed existing image as base64 encoded dataURI&lt;/li&gt;&lt;li&gt;Adding more images to a sprite&lt;/li&gt;&lt;li&gt;Changing an existing sprite without breaking your site&lt;/li&gt;&lt;li&gt;Optimize image from the HTML editor (Smart Tag on &amp;lt;img&amp;gt; element)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Let me know what you think.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:2dccea075e0a4a7fb414a2ba0042dca2"&gt;</description><pubDate>Tue, 21 Jan 2014 04:33:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow.mp4" type="video/mp4" length="14978098" /><comments>http://channel9.msdn.com/Blogs/MadsKristensen/Working-with-images-in-Web-Essentials-2013</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">This is a demo of a typical workflow for working with image files in Visual Studio. Web Essentials adds a lot of tools that makes this workflow easier than ever. Features demoed: Paste image from clipboardLossless image optimizationCreate image spritesSprites are better with LESS/SCSSBase64 encode imagesOptimize base64 encoded imagesExisting features NOT demoed in this video: Paste image from clipboard onto CSS, LESS, SCSS, JavaScript, TypeScript, MarkdownSave base64 encoded image back to diskRe-embed existing image as base64 encoded dataURIAdding more images to a spriteChanging an existing sprite without breaking your siteOptimize image from the HTML editor (Smart Tag on &amp;lt;img&amp;gt; element)Let me know what you think. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">681</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow.mp3" expression="full" duration="681" fileSize="10910350" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow.mp4" expression="full" duration="681" fileSize="14978098" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow.webm" expression="full" duration="681" fileSize="36994541" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/213c/706dc600-d8cf-49c0-a36e-096a0e0d213c/WebEssentialsImageWorkflow_mid.mp4" expression="full" duration="681" fileSize="29264951" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">15</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/MadsKristensen/Working-with-images-in-Web-Essentials-2013/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Windows-Azure-Web-Sites-Private-Site-Extensions</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Windows-Azure-Web-Sites-Private-Site-Extensions</link><category>Extensions</category><category>IIS</category><title>Windows Azure Web Sites Private Site Extensions</title><description>&lt;p&gt;Join your guides &lt;a href="http://blog.syntaxc4.net"&gt;Cory Fowler&lt;/a&gt; and &lt;a href="http://www.twitter.com/jaffe75"&gt;Jaffe Worley&lt;/a&gt; as they talk to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;In this episode Cory is joined by David Ebbo from the Windows Azure Web Sites team. David introduces Windows Azure Web Sites Site Extensions which add additional functionality to your Windows Azure Web Sites. Cory also chats with Yochay Kiriaty about altering how Application Request Routing (ARR) routes (similar to load balancing) users across multiple instances of your Windows Azure Web Sites.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.windowsazure.com/en-us/documentation/articles/web-sites-transform-extend/"&gt;How to Create Windows Azure Web Sites Private Site Extensions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Whats-New-in-Web-Publishing#time=0h25m00s"&gt;Sayed Hashimi on Web Config Transformations&lt;/a&gt;&amp;nbsp;(fast-forwarded to 25 minutes)&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/projectkudu/phpmanager"&gt;PHP Manager Extension on GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/projectkudu/kudu/wiki"&gt;Project Kudu Documentation on GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2013/11/18/disabling-arr-s-instance-affinity-in-windows-azure-web-sites.aspx"&gt;Disabling ARR's Instance Affinity in Windows Azure Web Sites&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:3d5bee6d66e84ee798b6a2b5001a028e"&gt;</description><pubDate>Tue, 21 Jan 2014 23:25:50 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions.mp4" type="video/mp4" length="68145074" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Windows-Azure-Web-Sites-Private-Site-Extensions</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guides Cory Fowler and Jaffe Worley as they talk to the product teams in Redmond as well as the web community. In this episode Cory is joined by David Ebbo from the Windows Azure Web Sites team. David introduces Windows Azure Web Sites Site Extensions which add additional functionality to your Windows Azure Web Sites. Cory also chats with Yochay Kiriaty about altering how Application Request Routing (ARR) routes (similar to load balancing) users across multiple instances of your Windows Azure Web Sites. Show Links How to Create Windows Azure Web Sites Private Site ExtensionsSayed Hashimi on Web Config Transformations (fast-forwarded to 25 minutes)PHP Manager Extension on GitHubProject Kudu Documentation on GitHubDisabling ARR's Instance Affinity in Windows Azure Web Sites  </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2364</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions.mp3" expression="full" duration="2364" fileSize="37823070" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions.mp4" expression="full" duration="2364" fileSize="68145074" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions.webm" expression="full" duration="2364" fileSize="188897529" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_mid.mp4" expression="full" duration="2364" fileSize="275783476" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/0b23/bc8ce595-9c01-48b7-99b1-4a85760a0b23/WindowsAzureWebSitePrivateSiteExtensions_Source.wmv" expression="full" duration="2364" fileSize="1" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, "The Jaffe"</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, "The Jaffe"</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Windows-Azure-Web-Sites-Private-Site-Extensions/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/y70gmpYwwwY/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</link><title>ASP.NET - A last look back at 2013, looking ahead to 2014</title><description>&lt;p&gt;There's something about getting into a new year that makes us step back and consider the bigger picture. Where is it all headed? Am I making the most out of my life? What web tools and products has Microsoft released lately?&lt;/p&gt;  &lt;p&gt;I got to present a few Web Camps in December, in Oslo and Vancouver. I was reminded that there are some people - we'll call them normal developers who have work to do - don't sit there refreshing the Microsoft downloads new releases page all day. I don't understand them, but I appreciate that they exist. &lt;/p&gt;  &lt;p&gt;We announce stuff all the time, but it's hard to keep up with what's important, what you need to know, and stuff you should start paying attention to because it's going to be a big deal really soon. So here's my quick summary of the important things that happened in 2013 and what I think it suggests we watch for in 2014.&lt;/p&gt;  &lt;h2&gt;The Big Picture&lt;/h2&gt;  &lt;h3&gt;One ASP.NET&lt;/h3&gt;  &lt;p&gt;This has been a thing for brewing for a bit, but really came together in 2013. With Visual Studio 2013, you really can mix and match ASP.NET MVC + Web API + Web Forms + SignalR + &amp;quot;your framework here&amp;quot; and they all get along. This has been a lot of work over several releases: breaking out functionality out into packages, setting up common components like routing and identity so they're universal, moving to common HTML and CSS for the project templates, Visual Studio tooling changes, etc. That all culminated with the Visual Studio 2013 release, where we finally have just one ASP.NET project with a la carte support for Web Forms, MVC, Web API, and more. &lt;/p&gt;  &lt;p&gt;What's probably more important is that you can also add functionality after you've created a project, so if you decide later to add MVC libraries to your Web Forms project it's no big deal.&lt;/p&gt;  &lt;h3&gt;Visual Studio as a great editor for front-end (HTML / CSS / JavaScript) files&lt;/h3&gt;  &lt;p&gt;Again, this one has been growing over time: Visual Studio 2012 introduced new JavaScript and CSS editors. The &lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/whats-new#_Toc318097407"&gt;JavaScript editor added tons of new features&lt;/a&gt; like ECMAScript 5 support, code outlining, brace matching, go to definition, dynamic IntelliSense. The &lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/whats-new#_Toc318097415"&gt;CSS editor added&lt;/a&gt; things like much better IntelliSense, color picker, snippets, lots of HTML5 / modern web development support. It also included Page Inspector - a built-in browser view that shows a running view of your site (e.g. live data from the database, JavaScript is evaluated, everything's running end to end) and allows you to click on an an element and find the line of code that produced the HTML. But the HTML editor in Visual Studio 2012 was old, and that prevented adding modern web development features.&lt;/p&gt;  &lt;p&gt;In Visual Studio 2013, the HTML editor was completely rewritten to allow for the cool (MEF based) extensibility that the CSS editor in Visual Studio 2012 leveraged so heavily. That allowed for new support for all kinds of new modern features like IntelliSense for AngularJS, built-in CoffeeScript and LESS editor support and more. The HTML editor features in Visual Studio 2013 get even better with the Web Essentials extension, which I'll talk about in a minute.&lt;/p&gt;  &lt;p&gt;And we haven't even mentioned Browser Link yet! Browser Link takes the smarts that went into Page Inspector, hooks it up with a real-time Web Socket connection (powered by SignalR) that's hosted inside of Visual Studio, and gives me real-time, two-way interactivity between my server-side code and any running browser. That means I can run my site in Visual Studio, pop open Chrome or Opera or Firefox or IE or some mobile emulator, hover over an element in the browser and see the source of that HTML highlighted in Visual Studio. That is a huge, huge timesaver I've been wanting for a very long time.&lt;/p&gt;  &lt;p&gt;The point is that Visual Studio 2013 ships with newly rewritten, advanced editors for your front-end web files. Like me, you may have seen Visual Studio as an editor for back-end code but went to a lightweight notepad style text editor for HTML / CSS / JavaScript / modern web language of the week. But I think it's time to change that way of thinking - Visual Studio gives me the benefits of a lightweight editor (starts up in 2-3 seconds on a modern computer, has a light UI that gets out of my way), but helps me spot misspellings, get the right vendor prefixes, use JavaScript libraries without having to dig through source code and docs more than I want to, etc.&lt;/p&gt;  &lt;h3&gt;Web Essentials as &amp;quot;Visual Studio web dev labs&amp;quot;&lt;/h3&gt;  &lt;p&gt;Web Essentials is a side project run by Mads Kristensen, the project manager for the web developer features that ship with Visual Studio. While Visual Studio's new ship schedule means you get a new version yearly and updates several times throughout the year, Web Essentials ships as often as Mads wants to. Which turns out to be &lt;a href="http://vswebessentials.com/changelog"&gt;pretty often&lt;/a&gt; - often every two or three weeks.&lt;/p&gt;  &lt;p&gt;Some features in Web Essentials are prototypes which might land in the next version of Visual Studio - an example is the Paste JSON as Classes feature. This allows you to get your hands on them right away, give feedback on how they work, and then see them graduate to full Visual Studio support.&lt;/p&gt;  &lt;p&gt;Web Essentials also includes some interesting features which are useful to web developers who are engaged enough to spend a minute to install and extension, but might not be for everyone. Zen Coding might be an example of that - I don't know if it'll ever ship in Visual Studio, but it's a useful feature if you're an HTML focused web developer and into the new, new stuff. Since web development techniques and metalanguages come out so frequently and change so rapidly, it's great to have a lightweight extension that can keep up with them until they're mature enough to maybe ship with Visual Studio.&lt;/p&gt;  &lt;h3&gt;Release and update speed&lt;/h3&gt;  &lt;p&gt;When Visual Studio 2012 was launched in September 2012, Soma announced that they were shifting to a faster release cadence which would include both more frequent full releases and regular smaller updates to deliver features throughout the year. An important point there is that these aren't just service packs with bug fixes, they include useful features. We really saw that come together in 2013. The best example of that was the ASP.NET and Web Tools 2012.2 release in February 2013. I list some of the features below, but it was a pretty big batch: new templates for both ASP.NET Web Forms and MVC, Page Inspector and more. As of now, there have been a total of 5 updates for Visual Studio 2012; &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;the latest added some support for ASP.NET MVC 5 (albeit only with an empty MVC 5 template) to Visual Studio 2012&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I think that's a great thing. The technologies, browsers and languages we need to work with as web developers move really quickly, and we need tools that keep up. Two or three years between releases doesn't work for me, and even yearly is pushing it. I expect to see this update cycle continue in 2014 and beyond. For instance, we've already got the &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/09/asp-net-and-web-tools-2013-2-preview-for-visual-studio-2013.aspx"&gt;release candidates for ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1&lt;/a&gt; - expect the final release very soon. [Update: the final version was released on January 20, read my &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;post series on the new features here&lt;/a&gt;.]&lt;/p&gt;  &lt;p&gt;&lt;em&gt;Note: In case you didn't know - if you've got Visual Studio 2012 Professional, you can &lt;/em&gt;&lt;a href="http://www.microsoftstore.com/store/msusa/en_US/pdp/Visual-Studio-Professional-2013/productID.284832200"&gt;&lt;em&gt;upgrade to Visual Studio 2013 Professional for $99 now&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;/p&gt;  &lt;p&gt;Again, thinking beyond Visual Studio, the rest of the ASP.NET dev landscape is moving very quickly. &lt;a href="http://weblogs.asp.net/scottgu/default.aspx"&gt;Windows Azure has releases roughly every three weeks&lt;/a&gt;. &lt;a href="http://vswebessentials.com/"&gt;Web Essentials&lt;/a&gt; and &lt;a href="http://sidewaffle.com/"&gt;SideWaffle&lt;/a&gt; have release updates measured in weeks. &lt;a href="https://twitter.com/nugetlatest"&gt;NuGet packages update constantly&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Do you have to keep up to date with all of the new things? No, of course not. But since web development technologies and requirements move rapidly, it's good to know that you're generally not going to be waiting on Visual Studio or ASP.NET when you do need the features. And of course, there are lots of benefits (in addition to the big flashy new features) to being on the newest version, e.g. scaffolding in ASP.NET MVC now whitelists your parameters to prevent overposting.&lt;/p&gt;  &lt;h3&gt;Externalization of ASP.NET&lt;/h3&gt;  &lt;p&gt;ASP.NET used to be pretty monolithic. You'd get one big ASP.NET release and it did everything. You could plug into it - using things like control events, membership provider hooks, modules and handlers, but you were just plugging into the big ASP.NET thing.&lt;/p&gt;  &lt;p&gt;That's really changed over the years.&lt;/p&gt;  &lt;p&gt;When you look at what's installed in a new ASP.NET project, it's almost all NuGet packages. That's a big part of what made it possible for the One ASP.NET thing to happen: ASP.NET MVC, Web Forms, Web API, and Web Pages all share common NuGet packages. That definitely includes new features, like the new &lt;a href="http://asp.net/identity"&gt;ASP.NET Identity&lt;/a&gt; system.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;Side note: You can use these packages individually, or even create your own versions (since they're a permissive &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/"&gt;&lt;em&gt;under open source license&lt;/em&gt;&lt;/a&gt;&lt;em&gt;). You can grab &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Use%20Nightly%20Builds"&gt;&lt;em&gt;nightly builds&lt;/em&gt;&lt;/a&gt;&lt;em&gt; and which include &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/list/changesets"&gt;&lt;em&gt;changes as they're committed&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;The tooling (Microsoftese, generally meaning &amp;quot;Visual Studio support&amp;quot;) for ASP.NET has also been externalized over the past few years. If you poke around in the Visual Studio program directory (e.g. \Common7\IDE\Extensions\Microsoft\Web Tools), you'll see features are being built using the standard VSIX / MEF extensibility points. That's good because it means things can ship and update more quickly, and the hooks they're using are available to you. Heck, the source is even available to you if you pop them open in a tool like ILSpy or Reflector.&lt;/p&gt;  &lt;p&gt;Things are also being built using OWIN (Open Web Interfaces for .NET) now. I've written before about &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/05/30/getting-up-to-speed-with-katana.aspx"&gt;why I think OWIN and Katana are important&lt;/a&gt;. The result is that core functionality like authentication is now being plugged into ASP.NET as portable middleware rather than shipped in a big monolithic framework that hides somewhere in your GAC.&lt;/p&gt;  &lt;p&gt;Oh, and &lt;a href="http://sidewaffle.com/"&gt;SideWaffle&lt;/a&gt;. What on earth is a SideWaffle?!? Well, just like NuGet externalized ASP.NET dependencies and VSIX externalized tooling, SideWaffle externalizes templates. The idea is that, unlike waiting for new ASP.NET project templates in Visual Studio releases or updates, you install the SideWaffle extension and get (or contribute) Visual Studio templates that are updated more rapidly.&lt;/p&gt;  &lt;h2&gt;Releases&lt;/h2&gt;  &lt;p&gt;I've already talked about what these release mean in a big picture sense, so I'll just list them out in linked bullet point form.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw"&gt;ASP.NET and Web Tools 2012.2 (Feb 2013, included with Visual Studio Update 2)&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;Here's my announcement blog post with more details: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/02/18/announcing-the-asp-net-and-web-tools-2012-2-release.aspx"&gt;Announcing the ASP.NET and Web Tools 2012.2 Release!&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Some top features:      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_Templates"&gt;Template updates for ASP.NET MVC 4 (SPA, Facebook)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_Web_API"&gt;ASP.NET Web API updates (Help Page, Tracing, OData)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_Friendly_URLs"&gt;ASP.NET Web Forms updates to include Friendly URLs&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_Tooling"&gt;Web Tools (Page Inspector updates, IntelliSense, Publishing)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_SignalR"&gt;ASP.NET SignalR (this was the first time SignalR shipped with a Visual Studio release)&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/10/17/top-things-web-developers-should-know-about-the-visual-studio-2013-release.aspx"&gt;Visual Studio 2013 (Oct 2013)&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;ul&gt;     &lt;li&gt;ASP.NET Core Features (new &lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC8"&gt;ASP.NET Identity&lt;/a&gt; system, common templates using Bootstrap, &lt;a href="http://www.asp.net/visual-studio/overview/2013/aspnet-scaffolding-overview"&gt;new Scaffolding system&lt;/a&gt;) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC10"&gt;ASP.NET MVC 5&lt;/a&gt; (One ASP.NET so it works in all ASP.NET projects, attribute&amp;#160; routing) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;ASP.NET Web API 2&lt;/a&gt; (Attribute routing, OAuth 2, CORS, Portable client, OWIN integration, lots more) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC13"&gt;SignalR 2&lt;/a&gt; (OWIN and cross platform / portable support, cross domain support, lots more) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms171868.aspx#v451"&gt;.NET 4.5.1&lt;/a&gt; (ASP.NET impact is mostly performance improvements, e.g. &lt;a href="http://blogs.msdn.com/b/dotnet/archive/2013/10/09/asp-net-app-suspend-responsive-shared-net-web-hosting.aspx"&gt;App Suspend&lt;/a&gt;) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/using-browser-link"&gt;Brower Link&lt;/a&gt; (and &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/browser-link-apis-in-visual-studio-2013-rtm.aspx"&gt;Browser Link Extension support&lt;/a&gt;) &lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Release Post: &lt;a title="http://www.asp.net/visual-studio/overview/2012/aspnet-and-web-tools-20131-for-visual-studio-2012" href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;Announcing release of ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Features      &lt;ul&gt;       &lt;li&gt;Round trip support between Visual Studio 2012 and 2013 &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC10"&gt;ASP.NET MVC 5 support&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;ASP.NET Web API 2 support&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;ASP.NET Scaffolding (brings the new scaffolding system in to Visual Studio 2012) &lt;/li&gt;        &lt;li&gt;Bootstrap support &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Windows Azure updates&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Tons of releases throughout the year, but here are some of what I think are the top features for ASP.NET developers:      &lt;ul&gt;       &lt;li&gt;Remote debugging (was in Web Roles, now it's available in Windows Azure Web Sites) &lt;/li&gt;        &lt;li&gt;Create and publish to Windows Azure Web Sites from Visual Studio &lt;/li&gt;        &lt;li&gt;Right-click on VM, RDP &lt;/li&gt;        &lt;li&gt;MDSN benefits / price cuts / run VS in cloud (also VS Online) &lt;/li&gt;        &lt;li&gt;Web Socket support &lt;/li&gt;        &lt;li&gt;Windows Server 2012 R2 &lt;/li&gt;        &lt;li&gt;General Availability (Web Sites, Mobile Services, IAAS) &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://vswebessentials.com/changelog"&gt;Web Essentials&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://sidewaffle.com/"&gt;Side Waffle&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;NuGet&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;There were lots throughout the year, but I think the main feature for web developers was that Package Restore is enabled by default in NuGet 2.7 &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Portable class libraries&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;This is a big step forward for portable libraries - both community open source libraries and Microsoft provided libraries - to work cross platform &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;New Stuff That You Really Need To Understand&lt;/h2&gt;  &lt;h3&gt;&lt;a href="http://asp.net/identity"&gt;ASP.NET Identity&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;We had an old ASP.NET Membership system that worked for a while, but was definitely showing its age. It didn't support claims and social authentication, it didn't work well with custom membership data, it was hard to extend. Then we got Simple Membership in ASP.NET MVC 4, which was simple but hard to extend. A lot of work went into the new Identity system to make sure it both did simple things well and was wasn't hard to extend later.&lt;/p&gt;  &lt;p&gt;There's a lot of documentation out there on the new Identity system, and more on the way at &lt;a title="http://www.asp.net/identity" href="http://www.asp.net/identity"&gt;http://www.asp.net/identity&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Also, I recommend K. Scott Allen's recent posts exploring ASP.NET Identity, such as&amp;#160; &lt;a href="http://odetocode.com/blogs/scott/archive/2014/01/09/customization-options-with-asp-net-identity.aspx"&gt;Customization Options With ASP.NET Identity&lt;/a&gt;.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;All of the new web project templates are built using Bootstrap. I &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/10/17/top-things-web-developers-should-know-about-the-visual-studio-2013-release.aspx"&gt;overviewed that a little in a previous post&lt;/a&gt;, but there's a lot more to it. The top benefits I see are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;It's popular across the web development community, so we're able to take advantage of community support for things like themes, documentation, tutorials, etc. &lt;/li&gt;    &lt;li&gt;It's responsive and mobile-first, so it's very easy to build sites that work well at narrow (mobile) screen resolutions, intermediate screen resolutions like tablets, and on widescreen displays &lt;/li&gt;    &lt;li&gt;It's got a lot of components and jQuery based plugins that handle common web developer concerns &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Other Neat Stuff That You Should Start Paying Attention To&lt;/h2&gt;  &lt;h3&gt;Scaffolding&lt;/h3&gt;  &lt;p&gt;We've had scaffolding in ASP.NET before, but it was framework specific - there was MVC scaffolding, Web API scaffolding, and nothing else if you were working on another project type. The scaffolding system in Visual Studio 2013 (and now available in 2012, as mentioned above) has been updated so it works in any ASP.NET project, and it's been built to be easily extensible (the extensibility bit will be shipped and documented in a Visual Studio update early this year).&lt;/p&gt;  &lt;p&gt;Some good references:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/aspnet-scaffolding-overview"&gt;ASP.NET Scaffolding overview on the ASP.NET site&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/26/how-to-customize-the-generated-files-from-the-new-scaffolded-item-dialog.aspx"&gt;How to customize the generated files from the New Scaffolded Item dialog&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/09/asp-net-and-web-tools-2013-2-preview-for-visual-studio-2013.aspx"&gt;ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;The release candidates have already shipped and the final release will be out very extremely soon. Some of the new features:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;ASP.NET MVC 5.1      &lt;ul&gt;       &lt;li&gt;Attribute Routing support for constraints &lt;/li&gt;        &lt;li&gt;Bootstrap support for HTML helpers (allowing HTML attributes in Html.EditorFor) &lt;/li&gt;        &lt;li&gt;Support for Enums &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;ASP.NET Web API 2.1      &lt;ul&gt;       &lt;li&gt;Global Error Handling &lt;/li&gt;        &lt;li&gt;Attribute Routing support for constraints &lt;/li&gt;        &lt;li&gt;BSON media type formatter &lt;/li&gt;        &lt;li&gt;Async filters &lt;/li&gt;        &lt;li&gt;Help Page improvements &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;OWIN and Katana&lt;/h3&gt;  &lt;p&gt;I mentioned these earlier. If you've been putting this on your &amp;quot;I'll ignore this until it starts getting important&amp;quot; list, it's time. The new Identity system is wired into the ASP.NET project templates using OWIN, and new things will be moving that direction.&lt;/p&gt;  &lt;h3&gt;Visual Studio Online&lt;/h3&gt;  &lt;p&gt;I think Visual Studio Online - including the Monaco editor - is getting pretty interesting. It's definitely useful for web developers. See my post here: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/11/13/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor.aspx"&gt;A look at the new Visual Studio Online &amp;quot;Monaco&amp;quot; code editor&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Node Tools for Visual Studio&lt;/h3&gt;  &lt;p&gt;Node (and NPM) are getting to be pretty big in the web development world, and I think it's important to keep up with where it's going. It hasn't been that hard: Node's pretty lightweight, runs well on Windows for a while now, and is incredibly easy to run in Windows Azure Web Sites. But, it's gotten incredibly easy now that they've built pretty impressive support for Node.js into Visual Studio. I think it's worth taking some time and getting a little familiarity with Node.js if you haven't yet. Don't get me wrong, I'm in no way pushing Node.js over ASP.NET development, I'm just saying that I personally think it's a good idea to keep up with as a professional web developer.&lt;/p&gt;  &lt;p&gt;See Scott Hanselman's post (&lt;a href="http://www.hanselman.com/blog/IntroducingNodejsToolsForVisualStudio.aspx"&gt;Introducing node.js Tools for Visual Studio&lt;/a&gt;) and give it a look.&lt;/p&gt;  &lt;h2&gt;Keeping Up With The New Stuff&lt;/h2&gt;  &lt;p&gt;That's a condensed list of what I think's important circa January 2014, and it's a lot. How on earth can we keep up with all of this?&lt;/p&gt;  &lt;p&gt;Here are some resources I recommend:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;ASP.NET social accounts      &lt;ul&gt;       &lt;li&gt;Twitter: &lt;a href="https://twitter.com/aspnet"&gt;@aspnet&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;Facebook: &lt;a href="http://fb.me/aspnet"&gt;http://fb.me/aspnet&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="https://plus.google.com/communities/115589658993141493462"&gt;Google+&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;The ASP.NET Community Spotlight (home page of the ASP.NET site) &lt;/li&gt;    &lt;li&gt;The /vnext section on ASP.NET, currently spotlighting Visual Studio 2013: &lt;a href="http://asp.net/vnext"&gt;http://asp.net/vnext&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Web Camps      &lt;ul&gt;       &lt;li&gt;Look for &lt;a href="http://www.devcamps.ms/web"&gt;live events&lt;/a&gt; in your area &lt;/li&gt;        &lt;li&gt;Download the &lt;a href="http://aka.ms/webcamps-training-kit"&gt;Web Camps Training Kit&lt;/a&gt; for 30mb of demos explaining all the new features &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web+Camps+TV"&gt;Web Camps TV&lt;/a&gt; with Cory Fowler and Jaffe Worley &lt;/li&gt;    &lt;li&gt;Windows Azure shows      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Cloud+Cover"&gt;Cloud Cover&lt;/a&gt; with Nick Harris and Chris Risner &lt;/li&gt;        &lt;li&gt;&lt;a href="http://friday.azure.com/"&gt;Windows Azure Friday&lt;/a&gt; (with Scott Hanselman) is a great resource for Windows Azure content &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/"&gt;Web Dev blog&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;This is THE blog for the Web Dev team at Microsoft - lots of great content, release announcements, etc. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;All right! Go to it! &lt;a href="https://www.youtube.com/watch?v=LkCNJRfSZBU"&gt;Let's do this&lt;/a&gt;!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=y70gmpYwwwY:Yy9p1usMKmE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/y70gmpYwwwY" height="1" width="1" alt=""/&gt;</description><pubDate>Sat, 18 Jan 2014 00:07:13 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance</guid><link>http://weblogs.asp.net/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance</link><category>.NET</category><category>ASP.NET</category><category>Azure</category><title>Windows Azure: Staging Publishing Support for Web Sites, Monitoring Improvements, Hyper-V Recovery Manager GA, and PCI Compliance</title><description>&lt;p&gt;This morning we released another great set of enhancements to Windows Azure.&amp;nbsp; Today&amp;rsquo;s new capabilities and announcements include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Web Sites&lt;/strong&gt;: Staged Publishing Support and Always On Support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring Improvements&lt;/strong&gt;: Web Sites + SQL Database Alerts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hyper-V Recovery Manager&lt;/strong&gt;: General Availability Release&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Services&lt;/strong&gt;: Support for SenchaTouch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCI Compliance&lt;/strong&gt;: Windows Azure Now Validated for PCI DSS Compliance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Staged Publishing Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With today&amp;rsquo;s release, you can now enable staged publishing to your Windows Azure Web Sites.&amp;nbsp; This new feature is really powerful, and enables you to deploy updates of your web apps/sites to a staging version of the site that can be accessed via a URL that is different from your main site.&amp;nbsp; You can &lt;strong&gt;use this staged site to test your site/app deployment&lt;/strong&gt; and then, when ready, &lt;strong&gt;instantaneously swap the content and configuration&lt;/strong&gt; between the live site and the staging version.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;This new features enables you to deploy changes with more confidence.&amp;nbsp; And it ensures that your site is never in an inconsistent state (where some files have been updated and others not) - now you can immediately swap all changes to all of the files in one shot.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Enabling Staged Publishing Support&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To setup staged publishing go to the &lt;b&gt;DASHBOARD&lt;/b&gt; tab of a web site and click &lt;b&gt;Enable staged publishing&lt;/b&gt; from the &lt;b&gt;quick glance&lt;/b&gt; section:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5F2B0A64.png"&gt;&lt;img width="868" height="568" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_01166CE9.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clicking this link will cause Azure to create a new staging version of the web-site and link it to the existing site.&amp;nbsp; This linkage is represented in the navigation of the Windows Azure Management Portal &amp;ndash; the staging site will show up as a sub-node of the primary site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_75147CB4.png"&gt;&lt;img width="855" height="439" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7031C8F8.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you look closely at the name of the staging site, you&amp;rsquo;ll notice that its URL by default is &lt;em&gt;sitename&lt;/em&gt;-staging (e.g. if the primary site name was &amp;ldquo;scottgu&amp;rdquo;, the staging site would be &amp;ldquo;scottgu-staging&amp;rdquo;):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3238383A.png"&gt;&lt;img width="898" height="85" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_548FCDB3.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;You can optionally map any custom DNS name you want to the staging site (using either a C-Name or A-Record) &amp;ndash; just like you would a normal site.&amp;nbsp; So your staging domain doesn&amp;rsquo;t have to have an azurewebsites.net extension.&amp;nbsp; In the scenario above I could remap the staging domain to be &lt;em&gt;staging.scottgu.com&lt;/em&gt;, or &lt;em&gt;scottgu-staging.com&lt;/em&gt;, or even &lt;em&gt;foobar.scottgu.com&lt;/em&gt; if I wanted to.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The staging URL doesn&amp;rsquo;t change between deployments of a site &amp;ndash; so you can configure a custom DNS once, and then you can use it across all subsequent deployments.&amp;nbsp; You can also optionally enable SSL on the staging site and upload a SSL certificate to use with the staging domain (ensuring you can fully test/validate your SSL scenarios before swapping live).&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Configuring the Staging Site&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You can click on the staging site to manage it just like any other site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_48FA1074.png"&gt;&lt;img width="888" height="538" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_44175CB8.png" border="0" /&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;SCALE&lt;/b&gt; tab and the &lt;b&gt;LINKED RESOURCES&lt;/b&gt; tabs are disabled for staging sites, but all other tabs work as expected.&amp;nbsp; You can use the &lt;strong&gt;CONFIGURE&lt;/strong&gt; tab to set configuration settings like database and application connection-strings (if you set these at the site level they override anything you might have in a web.config file).&lt;/p&gt;
&lt;p&gt;One thing you&amp;rsquo;ll also notice when you open the staging site is that there is a new &lt;strong&gt;SWAP&lt;/strong&gt; button in the bottom command-bar of it &amp;ndash; we&amp;rsquo;ll talk about how to use that in a little bit.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Deploying to the Staging Site&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Deploying a new instance of your web-app/site to the staging site is really easy.&amp;nbsp; Simply deploy to it just like you would any normal site.&amp;nbsp; You can use FTP, the built-in &amp;ldquo;Publish&amp;rdquo; dialog inside Visual Studio, Web Deploy or Git, TFS, VS Online, GitHub, BitBucket, DropBox or any of the other deployment mechanism we already support.&amp;nbsp; You configure these just like you would a normal site.&lt;/p&gt;
&lt;p&gt;Below I&amp;rsquo;m going to use the built-in VS publish wizard to publish a new version of the site to the staging site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_58307941.png"&gt;&lt;img width="576" height="452" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_4F4377B3.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once this new version of the app is deployed to the staging site we can access a page in it using the staging domain (in this case &lt;a href="http://scottgu-staging"&gt;http://scottgu-staging&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_558A4E41.png"&gt;&lt;img width="831" height="314" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_29D98445.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the new version of the site we deployed is &lt;strong&gt;&lt;em&gt;only in the staging site&lt;/em&gt;&lt;/strong&gt;.&amp;nbsp; This means that if we hit the primary site domain (in this case &lt;a href="http://scottgu"&gt;http://scottgu&lt;/a&gt;) we wouldn&amp;rsquo;t see this new &amp;ldquo;V2&amp;rdquo; update - it would instead show any older version that had been previously deployed:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_41078F74.png"&gt;&lt;img width="778" height="302" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_5C3FE875.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;This allows us to do final testing and validation of the staging version without impacting users visiting the live production site.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Swapping Deployments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;At some point we&amp;rsquo;ll be ready to roll our staged version to be the live production site version.&amp;nbsp; Doing this is easy &amp;ndash; all we need to do is push the &lt;strong&gt;SWAP&lt;/strong&gt; button within the command-bar of either our live site or staging site using the Windows Azure Portal (you can also automate this from the command-line or via a REST call):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_308F1E79.png"&gt;&lt;img width="869" height="467" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_2BAC6ABD.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When we push the &lt;strong&gt;SWAP&lt;/strong&gt; button we&amp;rsquo;ll be prompted with a confirmation dialog explaining what is about to happen:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3FC58746.png"&gt;&lt;img width="886" height="254" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3AE2D38A.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;If we confirm we want to proceed with the swap, Azure will immediately swap the content of the live site (in this case &lt;a href="http://scottgu"&gt;http://scottgu&lt;/a&gt;) with the newer content in the staging site (in this case &lt;a href="http://scottgu-staging"&gt;http://scottgu-staging&lt;/a&gt;).&amp;nbsp; This will take place immediately &amp;ndash; and ensure that all of the files are swapped in a single shot (so that you never have mix-matched files).&lt;/p&gt;
&lt;p&gt;Some settings from the staged version will automatically copy to the production version &amp;ndash; including things like connection string overrides, handler mappings, and other settings you might have configured.&amp;nbsp; Other settings like the DNS endpoints, SSL bindings, etc will not change (ensuring that you don&amp;rsquo;t need to worry about SSL certs used for the staging domain overriding the production URL cert, etc).&lt;/p&gt;
&lt;p&gt;Once the swap is complete (the command takes only a few seconds to execute), you&amp;rsquo;ll find that the content that was previously in the staging site is now in the live production site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_58C3E83C.png"&gt;&lt;img width="784" height="311" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_18219BCD.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the content that had been in the older live version of the site is now in the staging site.&amp;nbsp; Having the older content available in the staging site is useful &amp;ndash; as it allows you to quickly swap it back to the previous site if you discover an issue with the version that you just deployed (just click the SWAP button again to do this).&amp;nbsp; Once you are sure the new version is fine you can just overwrite the staging site again with V3 of your app and repeat the process again.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Deployment with Confidence&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We think you&amp;rsquo;ll find that the new staged publishing feature is both easy to use and very powerful, and enables you to handle deployments of your sites with an industrial strength workflow.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Web Sites: Always On Support&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;One of the other useful Web Site features that we are introducing today is a feature we call &amp;ldquo;Always On&amp;rdquo;.&amp;nbsp; When Always On is enabled on a site, Windows Azure will automatically ping your Web Site regularly to ensure that the Web Site is always active and in a warm/running state.&amp;nbsp; This is useful to ensure that a site is always responsive (and that the app domain or worker process has not paged out due to lack of external HTTP requests).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;It also useful as a way to keep a Web Site active for scenarios where you want to run background code within it irrespective of whether it is actively processing external HTTP customer requests.&amp;nbsp; We have another new feature we are enabling this week called &amp;ldquo;Web Jobs&amp;rdquo; that makes it really easy to now write this background code and run it within a Web Site. I&amp;rsquo;ll blog more about this feature and how to use it in the next few days.&lt;/p&gt;
&lt;p&gt;You can enable Always On support for Web Sites running in Standard mode by navigating to the &lt;strong&gt;CONFIGURE&lt;/strong&gt; tab within the portal, and then toggling the Always On button that is now within it:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_1A5E2489.png"&gt;&lt;img width="483" height="540" title="image" style="display: inline; border: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_35967D8A.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Monitoring Improvements: Web Sites + SQL Database Alerts&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With almost every release we make improvements to our monitoring functionality of Azure services. Today&amp;rsquo;s update brings two nice new improvements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Metrics updated every minute for Windows Azure Web Sites&lt;/li&gt;
&lt;li&gt;Alerting for more metrics from Windows Azure Websites and Windows Azure SQL Databases&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Monitoring Data Every Minute&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release we are now updating statistics on the monitoring dashboard of a Web Site every minute, so you can get much more fresh information on exactly how your website is being used (prior to today the granularity was not as fine grained):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_37D30646.png"&gt;&lt;img width="880" height="490" title="image" style="display: inline; border: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_4BEC22CF.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Viewing data at this higher granularity can make it easier to observe changes to your website as they happen. No additional configuration is required to get data every minute &amp;ndash; it is now automatically enabled for all Azure Websites.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Expanding Alerting&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;When you create alerts you can now choose between &lt;b&gt;six&lt;/b&gt; different services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cloud Service&lt;/li&gt;
&lt;li&gt;Mobile Service&lt;/li&gt;
&lt;li&gt;SQL Database (&lt;b&gt;New Today!&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Virtual Machine&lt;/li&gt;
&lt;li&gt;Web Site (&lt;b&gt;More Metrics Today!&lt;/b&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started with Alerting, click on the &lt;b&gt;Management Services&lt;/b&gt; extension on the left navigation tab of the the Windows Azure Management Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_0DF29211.png"&gt;&lt;img width="419" height="450" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_4226BB57.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, click the &lt;b&gt;Add Rule&lt;/b&gt; button in the command bar at the bottom of the screen. This will open a wizard for creating an alert rule. You can see all of the services that now support alerts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_0022DCC7.png"&gt;&lt;img width="584" height="457" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_6D6DE30F.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;New Web Site Alert Metrics&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release we are adding the ability to alert on any metric that you see for a Web Site in the portal (previously we only supported alerts on Uptime and Response Time metrics). Today&amp;rsquo;s new metrics include support for setting threshold alerts for errors as well as CPU time and total requests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5AB8E958.png"&gt;&lt;img width="396" height="311" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7D107ED1.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The CPU time and Data Out metric alerts are particularly useful for Free or Shared websites &amp;ndash; you can now use these alerts to email you if you&amp;rsquo;re getting close to exceeding your quotas for a free or shared website (and need to scale up instances).&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;New SQL Alert Metrics&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s release you can also now define alerts for your &lt;b&gt;SQL Databases&lt;/b&gt;. For Web and Business tier databases you can setup alert metrics for the Storage for the database.&amp;nbsp; There are also now additional metrics and alerts for SQL Database &lt;b&gt;Premium&lt;/b&gt; (which is currently in preview) such as CPU Cores and IOPS.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve set up these new alerts, they behave just like alerts for other services. You&amp;rsquo;ll be informed when they cross the thresholds you establish, and you can see the recent alert history in the dashboard:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_1F68144B.png"&gt;&lt;img width="624" height="340" title="image" style="display: inline; border-width: 0px;" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_0593DE1C.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Windows Azure Hyper-V Recovery Manager: General Availability Release&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the General Availability of Windows Azure Hyper-V Recovery Manager (HRM). This release is now live in production, backed by an enterprise SLA, supported by Microsoft Support, and is ready to use for production scenarios.&lt;/p&gt;
&lt;p&gt;Windows Azure Hyper-V Recovery Manager helps protect your on premise applications and services by orchestrating the protection and recovery of Virtual Machines running in a System Center Virtual Machine Manager 2012 R2 and System Center Virtual Machine Manager 2012 SP1 private cloud to a secondary location. With simplified configuration, automated protection, continuous health monitoring and orchestrated recovery, Hyper-V Recovery Manager service can help you implement Disaster Recovery and recover applications &lt;b&gt;accurately&lt;/b&gt;, &lt;b&gt;consistently&lt;/b&gt;, and with &lt;b&gt;minimal downtime&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_485B4807.png" /&gt;&lt;/p&gt;
&lt;p&gt;The service leverages Hyper-V Replica technology available in Windows Server 2012 and Windows Server 2012 R2 to orchestrate the protection and recovery of Hyper-V Virtual Machines from one on-premise site to another on-premise site. Application data always travels on your &lt;b&gt;&lt;i&gt;on premise replication channel&lt;/i&gt;&lt;/b&gt;. Only metadata that is needed (such as names of logical clouds, virtual machines, networks etc.) for orchestration is sent to Azure. All traffic sent to/from Azure is encrypted.&lt;/p&gt;
&lt;h4&gt;Getting Started&lt;/h4&gt;
&lt;p&gt;To get started, use the &lt;a href="https://manage.windowsazure.com"&gt;Windows Azure Management Portal&lt;/a&gt; to create a Hyper-V Recovery Manager Vault. Browse to &lt;b&gt;Data Services &amp;gt; Recovery Services&lt;/b&gt; and click &lt;b&gt;New&lt;/b&gt; to create a New Hyper-V Recovery Manager Vault. You can name the vault and specify a region where you would like the vault to be created.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image002_7CA6DC8D.jpg"&gt;&lt;img width="614" height="282" title="clip_image002" style="display: inline; border-width: 0px;" alt="clip_image002" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image002_thumb_751B6D20.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the Hyper-V recovery Manager vault is created, you&amp;rsquo;ll be presented with a simple tutorial that will help guide you on how to register your SCVMM Servers and configure protection and recovery of Virtual Machines.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image004_306ED2DF.jpg"&gt;&lt;img width="569" height="526" title="clip_image004" style="display: inline; border-width: 0px;" alt="clip_image004" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image004_thumb_32AB5B9B.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn more about setting up Hyper-V Recovery Manager in your deployment follow our detailed &lt;a href="http://www.windowsazure.com/en-us/manage/services/recovery-services/configure-a-hyper-v-recovery-vault/"&gt;step-by-step guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Key Benefits of Hyper-V Recovery Manager&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hyper-V Recovery Manager offers the following key benefits that differentiate it from other disaster recovery solutions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Simple Setup and Configuration&lt;/b&gt;: HRM dramatically simplifies configuration and management operations across large number of Hyper-V hosts, Virtual Machines and data-centers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Automated Protection&lt;/b&gt;: HRM leverages the capabilities of Windows Server and System Center to provide on-going replication of VMs and ensures protection throughout the lifecycle of a VM.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Remote Monitoring&lt;/b&gt;: HRM leverages the power and reach of Azure to provide a remote monitoring and DR management service that can be accessed from anywhere.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Orchestrated Recovery&lt;/b&gt;: Recovery Plans enables automated DR orchestration by sequencing failover of different application tiers and customization with scripts and manual actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;New Improvements&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Hyper-V Recovery Manager service has been enhanced since the initial October Preview with several nice improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Improved Failback Support&lt;/b&gt;: The Failback support has been improved in scenarios where the primary host cluster has been rebuilt after an outage.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Support for Kerberos based Authentication&lt;/b&gt;: Cloud configuration now allows selecting Kerberos based authentication for Hyper-V Replica. This is useful in scenarios where customers want to use 3rd party WAN optimization and compression and have AD trust available between primary and secondary sites.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Support for Upgrade from VMM 2012 SP1 to VMM 2012 R2&lt;/b&gt;: HRM service now supports upgrades from VMM 2012 SP1 to VMM 2012 R2.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Improved Scale&lt;/b&gt;: The UI and service has been enhanced for better scale support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please visit &lt;a href="http://www.windowsazure.com/en-us/services/recovery-manager/"&gt;Windows Azure web site&lt;/a&gt; for more information on Hyper-V Recovery Manager. You can also refer to &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/dn440569.aspx"&gt;additional product documentation&lt;/a&gt;. You can visit the HRM forum on &lt;a href="http://social.msdn.microsoft.com/Forums/en-US/hypervrecovmgr"&gt;MSDN&lt;/a&gt; for additional information and engage with other customers.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Mobile Services: Support for SenchaTouch&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce that in partnership with our friends at &lt;a href="http://www.sencha.com/" target="_blank"&gt;Sencha&lt;/a&gt;, we are today adding support for SenchaTouch to Windows Azure Mobile Services. SenchaTouch is a well know HTML/JavaScript-based development framework for building cross-platform mobile apps and web sites. With today&amp;rsquo;s addition, you can easily use Mobile Services with your SenchaTouch app.&lt;/p&gt;
&lt;p&gt;You can download Windows Azure extension for Sencha &lt;a href="https://market.sencha.com/extensions/sencha-touch-extensions-for-windows-azure"&gt;here&lt;/a&gt;, configure Sencha loader with the location of the azure extension, and add Azure package to your app.json file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;{ name : &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;"Basic"&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;, requires : [ &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;"touch-azure"&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;]}&lt;/span&gt;&lt;span style="font-family: consolas; color: black;"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once you have the Azure extension added to your Sencha project, you can connect your Sencha app to your Mobile Service simply by adding the following initialization code:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;Ext.application({ &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; name: &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;'Basic'&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;, &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; requires: [&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;'Ext.azure.Azure'&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;], &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; azure: { &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; appKey: &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;'myazureservice-access-key'&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;, &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; appUrl: &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: #a31515; mso-highlight: white;"&gt;'myazure-service.azure-mobile.net'&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }, &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; launch: &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: blue; mso-highlight: white;"&gt;function&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt; () { &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: green; mso-highlight: white;"&gt;// Call Azure initialization&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Ext.Azure.init(&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: blue; mso-highlight: white;"&gt;this&lt;/span&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;.config.azure); &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class="MsoNormal" style="margin-bottom: 0pt; line-height: normal;"&gt;&lt;span style="font-family: consolas; background: white; color: black; mso-highlight: white;"&gt;});&lt;/span&gt;&lt;span style="font-family: consolas; color: black;"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From here on you can data bind your data model to Azure Mobile Services, authenticate users and use push notifications. Follow this detailed &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/mobile-services-windows-store-get-started/"&gt;Getting Started tutorial&lt;/a&gt; to get started with SenchaTouch and Mobile Services. Read more detailed documentation at &lt;a href="http://www.windowsazure.com/en-us/develop/mobile/resources-sencha/"&gt;Mobile Services Sencha extension resources page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Windows Azure Now Validated for PCI DSS Compliance&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;We are very excited to announce that Windows Azure has been validated for compliance with the Payment Card Industry (PCI) Data Security Standards (DSS) by an independent Qualified Security Assessor (QSA).&lt;/p&gt;
&lt;p&gt;The PCI DSS is the global standard that any organization of any size must adhere to in order to accept payment cards, and to store, process, and/or transmit cardholder data. By providing PCI DSS validated infrastructure and platform services, Windows Azure delivers a compliant platform for you to run your own secure and compliant applications. You can now achieve PCI DSS certification for those applications using Windows Azure.&lt;/p&gt;
&lt;p&gt;To assist customers in achieving PCI DSS certification, Microsoft is making the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=389875" target="_blank"&gt;Windows Azure PCI Attestation of Compliance&lt;/a&gt; and &lt;a href="http://go.microsoft.com/fwlink/?LinkId=389876" target="_blank"&gt;Windows Azure Customer PCI Guide&lt;/a&gt; available for immediate download.&lt;/p&gt;
&lt;p&gt;Visit the &lt;a href="http://www.windowsazure.com/en-us/support/trust-center/" target="_blank"&gt;Trust Center&lt;/a&gt; for a full list of in scope features or for more information on Windows Azure security and compliance.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today&amp;rsquo;s release includes a bunch of great features that enable you to build even better cloud solutions.&amp;nbsp; If you don&amp;rsquo;t already have a Windows Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://www.windowsazure.com/en-us/documentation/"&gt;Windows Azure Documentation Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance&amp;g=https%3A//weblogs.asp.net/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Windows+Azure%3a+Staging+Publishing+Support+for+Web+Sites%2c+Monitoring+Improvements%2c+Hyper-V+Recovery+Manager+GA%2c+and+PCI+Compliance&amp;v3=ScottGu%27s%20Blog%20-%20Windows+Azure%3a+Staging+Publishing+Support+for+Web+Sites%2c+Monitoring+Improvements%2c+Hyper-V+Recovery+Manager+GA%2c+and+PCI+Compliance&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Thu, 16 Jan 2014 19:53:00 Z</pubDate></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/mcuBmhcTKMk/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</link><category>Browsers - Web Development</category><category>Tools</category><title>Two great Kickstarter projects ending soon: Durandal JavaScript framework and bitCommander File Manager</title><description>&lt;p&gt;I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/06/19/last-chance-to-back-the-agent-watch-kickatarter-first-chance-to-play-with-the-code-bonus-extra-credit-custom-device-emulator-with-screen-scaling.aspx"&gt;AGENT watch last June&lt;/a&gt; and was excited to see them hit 10x their goal - I'm really looking forward to getting my AGENT watch when they ship.&lt;/p&gt;  &lt;p&gt;Preemptive disclaimer: As I said, it's not a store. You're funding a project with goals and risks and target timelines. The average contribution amounts aren't that high and I fund projects that I want to support, so I'm okay with that. If you're not, Kickstarter's not your thing, and that's fine too.&lt;/p&gt;  &lt;p&gt;I wanted to help get the word out about two recent Kickstarter projects I've backed (and been tweeting about): &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014"&gt;Durandal&lt;/a&gt; and &lt;a href="http://www.kickstarter.com/projects/953554185/bitcommander"&gt;bitCommander&lt;/a&gt;. Both end soon (bitCommander ends on Jan 9, Durandal ends on Jan 10).&lt;/p&gt;  &lt;h2&gt;Durandal&lt;/h2&gt;  &lt;p&gt;&lt;a href="http://durandaljs.com/"&gt;Durandal&lt;/a&gt; is an open source JavaScript framework that helps you build full-featured single page applications. &lt;a href="http://neverindoubtnet.blogspot.com/2014/01/hooray-for-durandal-nextgen.html"&gt;Ward Bell summed up what's unique about Durandal pretty well&lt;/a&gt;:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;What’s so great about it? What’s distinctive about it? &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014/posts/703625"&gt;Rob has his inventory&lt;/a&gt; of laudable features (and its impressive). Here are some of the aspects of nextGen Durandal that I love … and that have no equal among alternative frameworks:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;Convention over configuration&lt;/strong&gt; – I hate writing and maintaining “switch board” code to connect FooViewModel to FooView and FooRoute etc. I want to say “Foo” and be done with it … until and unless I have a compelling reason to break convention. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Customizable conventions&lt;/strong&gt; – Rob makes good choices but I’m free to define my own. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Page life-cycle&lt;/strong&gt; – Durandal has baked in understanding of the birth and death of “pages” so I don’t have to make up my own hacks to ensure that new pages are initialized on creation and cleaned up on destruction. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Asynchrony throughout&lt;/strong&gt; – Need to wait for the user to confirm or cancel before moving off the page? That’s easy in Durandal because asynchrony is plumbed through the page life-cycle and everywhere else. Dynamically load optional modules on-demand? Easy. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Diagnostics&lt;/strong&gt; – With debug mode turned on the console tells me exactly what choices Durandal is making for me as they happen. I can tap into that logging pipeline with my own diagnostics. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Write less, do more&lt;/strong&gt; – You all know what I mean. We all want to write less code. That’s the motherhood and apple pie that every framework promises. They usually deliver something else. Check out the &lt;a href="http://vimeo.com/82601948"&gt;nextGen Durandal sample video&lt;/a&gt; and tell me what other technology is that clear and concise. &lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;We talked to Rob Eisenberg about what he wants to accomplish on the Durandal Kickstarter on Herding Code: &lt;a href="http://herdingcode.com/herding-code-182-durandal-kickstarter-with-rob-eisenberg/"&gt;Herding Code 182: Durandal Kickstarter with Rob Eisenberg&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Download / Listen:&lt;/p&gt; &lt;audio controls&gt; &lt;source src="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" type="audio/mpeg"&gt; &lt;a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3"&gt;http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3&lt;/a&gt; &lt;/audio&gt; &lt;/p&gt;  &lt;p&gt;One of the things that really stood out for me was what Rob's doing with cutting edge browser and JavaScript technologies for the Durandal nextGen. He's investing heavily in a module system that works with ES6 modules, AMD and CommonJS. He's building on HTML Templates and Web Components. In addition to light weight, modular code, he's seeing 2-3x performance benefits over AngularJS. And it's all polyfilled so it works in current browsers while waiting for these features to ship. The result is that this is a great investment not only in a great next-generation SPA framework, but in the web in general: by backing Rob, you're getting real-world implementation of these specs early so we can get them right the first time.&lt;/p&gt;  &lt;p&gt;The main benefit of backing this Kickstarter is that you free Rob up from consulting work so Durandal gets these amazing features faster. The secondary benefit for backers is that Rob will be producing some great training series - video and source code included.&lt;/p&gt;  &lt;p&gt;As of now, there's still a good way to go on getting this funded. Pitch in and tell someone else to do so, too!&lt;/p&gt;  &lt;h2&gt;bitCommander&lt;/h2&gt;  &lt;p&gt;bitCommander is a really interesting file manager for Windows. It's already hit its funding goal as I write this. If you beat the end of the Kickstarter campaign, you can get a discount on it, and if not you'll want to pay the full price for it because this thing is looking really cool. &lt;/p&gt;  &lt;p&gt;I like the recent changes to the Windows File Explorer in Windows 8 - the ribbon's really nice, and the file copy experience is vastly improved, for instance. But when you're doing things that involve multiple simultaneous views - like assembling a lot of files, for instance - having several instances of File Explorer open gets clunky.&lt;/p&gt;  &lt;p&gt;Check out how browsing in bitCommander looks (all images below from the &lt;a href="http://bit-commander.com/"&gt;bitCommander website&lt;/a&gt;): &lt;/p&gt;  &lt;p&gt;&lt;a title="2014-01-08_13h36_32" href="http://www.flickr.com/photos/36836555@N00/11843915706/"&gt;&lt;img border="0" alt="2014-01-08_13h36_32" src="http://farm6.static.flickr.com/5486/11843915706_d2ec789ccc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;You might think it's just &lt;a href="http://en.wikipedia.org/wiki/Miller_Columns"&gt;Miller columns&lt;/a&gt; (recently popularized as the OS X Finder columns view mode, but dates all the way back to 1980). That alone would be pretty nice, but there's a lot more to it. There are tons of other great features, but I think my favorite is the temp list and batch support.&lt;/p&gt;  &lt;p&gt;&lt;img src="http://bit-commander.com/GIF/bitcommander-batch2.gif" /&gt;&lt;/p&gt;  &lt;p&gt;There's a lot of other cool stuff, like tabs, nice thumbnail display (with details), intelligent filename shortening and more. I think what I like most about this is that it adds a lot of features but keep the design simple and focused. See what I mean on the &lt;a href="http://bit-commander.com/"&gt;bitCommander website&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Here's mockup of a possible additional feature that Milos is looking at adding: integrated command windows, sync'd to the current browsing directory:&lt;/p&gt;  &lt;p&gt;&lt;img src="http://bit-commander.com/Mockup-CommandLine.jpg" /&gt;&lt;/p&gt;  &lt;p&gt;Un-disclaimer: I backed both of these projects and don't get anything for talking about them. I just like them.&lt;/p&gt;  &lt;p&gt;Go back &lt;a href="http://www.kickstarter.com/projects/953554185/bitcommander"&gt;bitCommander&lt;/a&gt; and &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014"&gt;Durandal&lt;/a&gt;!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=mcuBmhcTKMk:kc_JprizpZg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/mcuBmhcTKMk" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 08 Jan 2014 22:01:12 Z</pubDate><enclosure url="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" type="audio/mpeg" length="20303638" /><media:content url="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" fileSize="20303638" type="audio/mpeg" xmlns:media="http://search.yahoo.com/mrss/"></media:content><itunes:explicit xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">no</itunes:explicit><itunes:subtitle xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the AGENT watch last June and was ex</itunes:subtitle><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the AGENT watch last June and was excited to see them hit 10x their goal - I'm really looking forward to getting my AGENT watch when they ship. Preemptive disclaimer: As I said, it's not a store. You're funding a project with goals and risks and target timelines. The average contribution amounts aren't that high and I fund projects that I want to support, so I'm okay with that. If you're not, Kickstarter's not your thing, and that's fine too. I wanted to help get the word out about two recent Kickstarter projects I've backed (and been tweeting about): Durandal and bitCommander. Both end soon (bitCommander ends on Jan 9, Durandal ends on Jan 10). Durandal Durandal is an open source JavaScript framework that helps you build full-featured single page applications. Ward Bell summed up what's unique about Durandal pretty well: What’s so great about it? What’s distinctive about it? Rob has his inventory of laudable features (and its impressive). Here are some of the aspects of nextGen Durandal that I love … and that have no equal among alternative frameworks: Convention over configuration – I hate writing and maintaining “switch board” code to connect FooViewModel to FooView and FooRoute etc. I want to say “Foo” and be done with it … until and unless I have a compelling reason to break convention. Customizable conventions – Rob makes good choices but I’m free to define my own. Page life-cycle – Durandal has baked in understanding of the birth and death of “pages” so I don’t have to make up my own hacks to ensure that new pages are initialized on creation and cleaned up on destruction. Asynchrony throughout – Need to wait for the user to confirm or cancel before moving off the page? That’s easy in Durandal because asynchrony is plumbed through the page life-cycle and everywhere else. Dynamically load optional modules on-demand? Easy. Diagnostics – With debug mode turned on the console tells me exactly what choices Durandal is making for me as they happen. I can tap into that logging pipeline with my own diagnostics. Write less, do more – You all know what I mean. We all want to write less code. That’s the motherhood and apple pie that every framework promises. They usually deliver something else. Check out the nextGen Durandal sample video and tell me what other technology is that clear and concise. We talked to Rob Eisenberg about what he wants to accomplish on the Durandal Kickstarter on Herding Code: Herding Code 182: Durandal Kickstarter with Rob Eisenberg Download / Listen: http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3 One of the things that really stood out for me was what Rob's doing with cutting edge browser and JavaScript technologies for the Durandal nextGen. He's investing heavily in a module system that works with ES6 modules, AMD and CommonJS. He's building on HTML Templates and Web Components. In addition to light weight, modular code, he's seeing 2-3x performance benefits over AngularJS. And it's all polyfilled so it works in current browsers while waiting for these features to ship. The result is that this is a great investment not only in a great next-generation SPA framework, but in the web in general: by backing Rob, you're getting real-world implementation of these specs early so we can get them right the first time. The main benefit of backing this Kickstarter is that you free Rob up from consulting work so Durandal gets these amazing features faster. The secondary benefit for backers is that Rob will be producing some great training series - video and source code included. As of now, there's still a good way to go on getting this funded. Pitch in and tell someone else to do so, too! bitCommander bitCommander is a really interesting file manager for Windows. It</itunes:summary><itunes:keywords xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Browsers - Web Development, Tools</itunes:keywords><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</feedburner:origLink></item><item><guid isPermaLink="false">d936b978-1ebe-4c5c-b3a5-811901f71040</guid><link>http://davidfowl.com/guess-whos-back/</link><title>Blogging again</title><description>&lt;p&gt;My old blog (&lt;a href='http://weblogs.asp.net/davidfowler' &gt;http://weblogs.asp.net/davidfowler&lt;/a&gt;) is being retired in favor of this new hipster blog.&lt;/p&gt;

&lt;h3 id="changes"&gt;Changes&lt;/h3&gt;

&lt;p&gt;This blog is running on Windows Azure using the new super simple blogging software &lt;a href='https://ghost.org/' &gt;ghost&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 03 Jan 2014 20:00:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Fowler</dc:creator></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/I5Yws3-E_U8</guid><link>https://www.youtube.com/watch?v=I5Yws3-E_U8&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials: Working with CSS Media Queries</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=I5Yws3-E_U8&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/I5Yws3-E_U8/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=I5Yws3-E_U8&amp;amp;feature=youtube_gdata"&gt;Web Essentials: Working with CSS Media Queries&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;New snippets and Intellisense is being added to Web Essentials for making it easier to work with CSS Media Queries&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
338&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;7
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;00:30&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 31 Dec 2013 04:28:56 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/I5Yws3-E_U8" /><a10:updated>2014-09-05T06:57:48Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/BH64h6Elz4o</guid><link>https://www.youtube.com/watch?v=BH64h6Elz4o&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Creating project templates with SideWaffle (Dec 2013)</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=BH64h6Elz4o&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/BH64h6Elz4o/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=BH64h6Elz4o&amp;amp;feature=youtube_gdata"&gt;Creating project templates with SideWaffle (Dec 2013)&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;In this video I&amp;#39;ll show you how to create a project template with Visual Studio using SideWaffle.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
268&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;2
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:39&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sat, 28 Dec 2013 00:21:26 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/BH64h6Elz4o" /><a10:updated>2013-12-30T14:48:27Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10483815</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/12/20/ef-6-1-alpha-1-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF 6.1 Alpha 1 Available</title><description>&lt;p&gt;Since the release of EF6 a couple of months ago our team has started working on the EF6.1 release. This is our next release that will include new features.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in Alpha 1&lt;/h2&gt;  &lt;p&gt;It’s still early days in the 6.1 release, so there aren’t many new features to try out just yet. Most of our work so far has been fixing bugs, improving performance, and laying groundwork for new features.&lt;/p&gt;  &lt;h3&gt;Runtime&lt;/h3&gt;  &lt;p&gt;The following items are included in Alpha 1 runtime&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;Handling of transaction commit failures&lt;/b&gt; provides the ability to detect and recover automatically when transient connection failures affect the acknowledgement of transaction commits. You can read more about this feature in the &lt;a href="https://entityframework.codeplex.com/wikipage?title=Handling%20of%20Transaction%20Commit%20Failures%20"&gt;specification on our CodePlex site&lt;/a&gt;.&lt;/li&gt;    &lt;li&gt;&lt;b&gt;&lt;a href="https://www.nuget.org/packages/EntityFramework.SqlServerCompact.Legacy/"&gt;EntityFramework.SqlServerCompact.Legacy&lt;/a&gt;&lt;/b&gt; is a new NuGet package (contributed by &lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;) that allows you to use Entity Framework 6 to target SQL Compact 3.5.&lt;/li&gt;    &lt;li&gt;&lt;b&gt;Bug fixes, minor features, and performance improvements &lt;/b&gt;included in the Alpha 1 release can be &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=%5BFixedIn6.1.0-alpha1%5D%20%5BAffectedLastRTM%5D&amp;amp;release=EF%206.1.0"&gt;viewed on our CodePlex site&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Tooling&lt;/h3&gt;  &lt;p&gt;Our 6.1 tooling code base isn’t ready for preview yet. We’ll be including the tooling in future previews of EF6.1.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Where do I get Alpha 1?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/"&gt;available on NuGet&lt;/a&gt;. If you are using Code First then there is no need to install the tooling. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; isn’t ready for preview yet, but you can use the EF6.1 Alpha 1 runtime with the existing &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=40762"&gt;EF6 Tooling for Visual Studio 2012 and 2013&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of features that will be available in the final release of EF6.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the entity-framework tag.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;We still have plenty of bugs to fix and some new features to add before we release EF6.1. There will be more previews over the coming months including previews of the EF6.1 Tooling.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10483815" width="1" height="1"&gt;</description><pubDate>Fri, 20 Dec 2013 15:06:21 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">22</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10483815</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/12/20/ef-6-1-alpha-1-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/MadsKristensen/Adding-subtitles-to-HTML-5-video</guid><link>http://channel9.msdn.com/Blogs/MadsKristensen/Adding-subtitles-to-HTML-5-video</link><title>Adding subtitles to HTML 5 video</title><description>&lt;p&gt;Web Essentials 2013 has a new feature for authoring subtitles in Visual Studio.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:12e4dc77607541428e4ea29a01086c5d"&gt;</description><pubDate>Fri, 20 Dec 2013 16:22:15 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt.mp4" type="video/mp4" length="46099484" /><comments>http://channel9.msdn.com/Blogs/MadsKristensen/Adding-subtitles-to-HTML-5-video</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Web Essentials 2013 has a new feature for authoring subtitles in Visual Studio. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">476</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt.mp3" expression="full" duration="476" fileSize="7618922" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt.mp4" expression="full" duration="476" fileSize="46099484" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt.webm" expression="full" duration="476" fileSize="16927662" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_high.mp4" expression="full" duration="476" fileSize="105084320" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/c3c2/9c5c2335-c122-431c-aac7-400808d1c3c2/webvtt_mid.mp4" expression="full" duration="476" fileSize="73192306" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/MadsKristensen/Adding-subtitles-to-HTML-5-video/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Gc1xyxV7K5M</guid><link>https://www.youtube.com/watch?v=Gc1xyxV7K5M&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio: Add subtitles to your HTML5 video</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Gc1xyxV7K5M&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Gc1xyxV7K5M/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Gc1xyxV7K5M&amp;amp;feature=youtube_gdata"&gt;Visual Studio: Add subtitles to your HTML5 video&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Visual Studio and Web Essentials makes it easy to add subtitles to HTML 5 video content using WebVTT&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
807&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_empty_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;7
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;07:57&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Fri, 20 Dec 2013 05:10:16 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Gc1xyxV7K5M" /><a10:updated>2015-01-22T00:59:34Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/CdR-O2tULS4</guid><link>https://www.youtube.com/watch?v=CdR-O2tULS4&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio: CSS Variables with Web Essentials</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=CdR-O2tULS4&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/CdR-O2tULS4/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=CdR-O2tULS4&amp;amp;feature=youtube_gdata"&gt;Visual Studio: CSS Variables with Web Essentials&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Support for &amp;quot;CSS Values and Units Module Level 3&amp;quot; is coming soon. More info: http://www.w3.org/TR/css3-values&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
703&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;7
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;00:17&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 17 Dec 2013 22:40:43 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/CdR-O2tULS4" /><a10:updated>2014-10-31T20:59:25Z</a10:updated></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10481988</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/12/13/ef6-0-2-rtm-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF6.0.2 RTM Available</title><description>&lt;p&gt;We recently shared &lt;a href="http://blogs.msdn.com/b/adonet/archive/2013/10/31/ef6-performance-issues.aspx"&gt;our plans to produce a 6.0.2 patch release&lt;/a&gt; to address some performance issues (and other bugs) in the 6.0.0 and 6.0.1 releases. Today we are making the 6.0.2 release available.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Getting EF6.0.2&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/"&gt;available on NuGet&lt;/a&gt;. If you are using Code First then there is no need to install the tooling. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and Visual Studio 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=40762"&gt;available on the Microsoft Download Center&lt;/a&gt;. You only need to install the tooling if you want to use Model First or Database First.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s in the 6.0.2 Patch&lt;/h2&gt;  &lt;p&gt;The 6.0.2 patch includes fixes to some performance and functional issues that were introduced in the 6.0.0 and 6.0.1 releases. You can view &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?status=Closed&amp;amp;release=EF%206.0.2&amp;amp;reasonClosed=Fixed"&gt;a full list of the issues on our CodePlex site&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What’s not in the 6.0.2 Patch&lt;/h2&gt;  &lt;p&gt;In addition to the issues fixed in the 6.0.2 patch our team is working on other performance improvements, bug fixes and features for the EF6.1 release. You can see a &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?release=EF%206.1.0"&gt;full list of what’s currently in this release on our CodePlex site&lt;/a&gt;. Note that this is not a final list and plans will change as we progress on the release. We’ll start providing pre-releases of EF6.1 in the near future.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10481988" width="1" height="1"&gt;</description><pubDate>Fri, 13 Dec 2013 17:28:19 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10481988</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/12/13/ef6-0-2-rtm-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Azure-Friday/Scott-Guthries-explains-SQL-Databases-in-Azure</guid><link>http://channel9.msdn.com/Shows/Azure-Friday/Scott-Guthries-explains-SQL-Databases-in-Azure</link><category>Azure</category><category>SQL</category><category>Windows Azure</category><title>Scott Guthrie explains SQL Databases in Azure </title><description>&lt;p&gt;Scott Guthrie tells Scott what SQL Databases in Azure can do, how backups work, what can be managed, exported, and moved to the cloud.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:94630e7252f543a6bc9fa274012f0b48"&gt;</description><pubDate>Fri, 13 Dec 2013 00:50:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.wmv" type="video/x-ms-wmv" length="18300071" /><comments>http://channel9.msdn.com/Shows/Azure-Friday/Scott-Guthries-explains-SQL-Databases-in-Azure</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Guthrie tells Scott what SQL Databases in Azure can do, how backups work, what can be managed, exported, and moved to the cloud. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">355</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://smooth.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.ism/manifest" expression="full" duration="355" fileSize="6086" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.mp3" expression="full" duration="355" fileSize="5689174" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.mp4" expression="full" duration="355" fileSize="34090466" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.webm" expression="full" duration="355" fileSize="17348305" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb.wmv" expression="full" duration="355" fileSize="18300071" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_high.mp4" expression="full" duration="355" fileSize="74295418" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_mid.mp4" expression="full" duration="355" fileSize="51932932" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/057d/4b372f9a-cc2b-461a-8efc-042b902c057d/scottguazuresqldb_Source.wmv" expression="full" duration="355" fileSize="58717453" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman, Scott Guthrie, Azure</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman, Scott Guthrie, Azure</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Azure-Friday/Scott-Guthries-explains-SQL-Databases-in-Azure/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates</guid><link>http://weblogs.asp.net/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates</link><category>.NET</category><category>Azure</category><category>Community News</category><title>Windows Azure: New Scheduler Service, Read-Access Geo Redundant Storage, and Monitoring Updates</title><description>&lt;p&gt;This morning we released another nice set of enhancements to Windows Azure.&amp;nbsp; Today&amp;rsquo;s new capabilities include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;: New Windows Azure Scheduler Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: New Read-Access Geo Redundant Storage Option&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Enhancements to Monitoring and Diagnostics for Azure services&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements are now available to use immediately (note that some features are still in preview).&amp;nbsp; Below are more details about them:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Scheduler: New Windows Azure Scheduler Service&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the preview of our new Windows Azure Scheduler service.&amp;nbsp; The Windows Azure Scheduler service allows you to schedule jobs that invoke HTTP/S endpoints or post messages to a storage queue on any schedule you define.&amp;nbsp; Using the Scheduler, you can create jobs that reliably call services either inside or outside of Windows Azure and run those jobs immediately, on a regular schedule, or set them to run at a future date.&lt;/p&gt;
&lt;p&gt;To get started with Scheduler, you first need to sign-up for the preview on the &lt;a href="https://account.windowsazure.com/PreviewFeatures"&gt;Windows Azure Preview&lt;/a&gt; page. Once you enroll in the preview, you can sign in to the Management Portal and start using it.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Creating a Schedule Job&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once you have the Schedule preview enabled on your subscription, you can easily create a new job following a few short steps:&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;New&lt;/strong&gt;-&amp;gt;&lt;b&gt;App Services&lt;/b&gt;-&amp;gt;&lt;b&gt;Scheduler&lt;/b&gt;-&amp;gt;&lt;b&gt;Custom Create&lt;/b&gt; within the Windows Azure Management Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_44AB781B.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_78DFA161.png" width="812" height="318" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Choose the Windows Azure Region where you want the jobs to run from, and then select an existing job collection or create a new one to add the job to:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_42054D1B.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_5D3DA61C.png" width="543" height="485" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can then define you job action. In this case, we are going to create an HTTP action that will do a GET request against a web site (you can also use other HTTP verbs as well as HTTPS):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_3120A92B.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_7A4654E4.png" width="541" height="482" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For processing longer requests or enabling a service to be invoked when offline, you may want to post a message to a storage queue rather than standing up and invoking a web service.&amp;nbsp; To post a message to a storage queue just choose Storage Queue as your action then create or select the storage account and queue to send a request to:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_07AC67EB.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_50D213A4.png" width="540" height="483" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve defined the job to perform, you&amp;rsquo;ll now want to setup the recurrence schedule for it. The recurrence can be as simple as run immediately (useful for testing), at a specific time in the future, or on a recurring schedule:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5718EA32.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_275DD264.png" width="538" height="479" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the job is created, the job will be listed in the jobs view:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_34C3E56A.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_16E56169.png" width="868" height="362" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The jobs view shows a summary status of failures/faults with any job &amp;ndash; you can then click the &lt;strong&gt;history&lt;/strong&gt; tab to get even more detailed status (including the HTTP response headers + body for any HTTP based job).&lt;/p&gt;
&lt;p&gt;I encourage you to try out the Scheduler &amp;ndash; I think you&amp;rsquo;ll find it a really useful way to automate jobs to happen in a reliable way.&amp;nbsp; The following links provide more information on how to use it (as well as how to automate the creation of tasks from the command-line or your own applications):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://go.microsoft.com/fwlink/p/?LinkID=328061"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;.NET API &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Scheduler/"&gt;NuGet Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://social.msdn.microsoft.com/Forums/en-US/azurescheduler"&gt;MSDN forum&lt;/a&gt; to find answers to all your Scheduler questions&lt;/li&gt;
&lt;li&gt;Feedback and ideas can be posted on the Scheduler &lt;a href="http://feedback.windowsazure.com/forums/230896-scheduler"&gt;feedback forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scheduler &lt;a href="http://www.windowsazure.com/en-us/pricing/details/scheduler/"&gt;Pricing Details&lt;/a&gt; page (note there is a free tier included for all subscriptions)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Storage: New Read-Access Geo Redundant Storage Option&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m excited to announce the preview release of our new Read-Access Geo Redundant Storage (RA-GRS) option. RA-GRS is a major improvement to our Windows Azure Storage Geo Replicated Storage offering.&amp;nbsp; Prior to today, our Geo-Replicated Storage option provided built-in support for automatically replicating your storage data (blobs, queues, tables) from one primary region to another (for example: US East to US West), but access to the secondary location data wasn&amp;rsquo;t provided except in a disaster scenario which necessitated a storage cluster failover.&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s update you can now always have read-access to your secondary storage replica.&amp;nbsp; This enables you to have immediate access to your data in the event of a temporary failure in your primary storage location (and to build-in support within your applications to handle the read fail-over automatically).&amp;nbsp; Today&amp;rsquo;s update also enables you to test and track the replication of your data so you can easily verify the replication (which happens asynchronously in the background).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Enabling Read Access&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In order to enable RA-GRS support, you will need to sign up to the Read Access Geo Redundant Storage Preview on the &lt;a href="https://account.windowsazure.com/PreviewFeatures"&gt;Windows Azure Preview&lt;/a&gt; page. Once you enroll in the preview, you can sign in to the Management Portal and simply navigate to the &lt;b&gt;Configure&lt;/b&gt; tab for your Storage Account to enable it on the Storage Account:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_0AE37135.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_54091CEE.png" width="869" height="492" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once enabled you can access your secondary storage endpoint location as &lt;em&gt;myaccountname&lt;/em&gt;-&lt;i&gt;secondary&lt;/i&gt;.&amp;lt;service&amp;gt;.core.windows.net.&amp;nbsp; You can use the same access keys for the the secondary storage location as the ones for your primary storage endpoint.&lt;/p&gt;
&lt;p&gt;For additional details on RA-GRS and examples of how to use it, read the storage blog post entry at &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/12/04/introducing-read-access-geo-replicated-storage-ra-grs-for-windows-azure-storage.aspx"&gt;http://blogs.msdn.com/b/windowsazurestorage/archive/2013/12/04/introducing-read-access-geo-replicated-storage-ra-grs-for-windows-azure-storage.aspx&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Monitoring: Enhancements to Monitoring and Diagnostics for Azure services&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today&amp;rsquo;s update includes several nice enhancements to our monitoring and diagnostics capabilities of Windows Azure:&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Monitoring metrics for Premium SQL Databases&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s update you can now monitor metrics for the CPU and IO activity of Premium SQL databases, and the storage activity of both &lt;a href="http://blogs.technet.com/b/dataplatforminsider/archive/2013/07/23/premium-preview-for-windows-azure-sql-database-now-live.aspx"&gt;Premium&lt;/a&gt; and Standard databases. You can find more details on &lt;a href="http://msdn.microsoft.com/en-us/library/dn269979%28v=sql.120%29.aspx"&gt;MSDN&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image002_75F47F72.jpg"&gt;&lt;img title="clip_image002" style="display: inline; border: 0px;" border="0" alt="clip_image002" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image002_thumb_3F1A2B2C.jpg" width="624" height="345" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Update to Web Site diagnostics&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Previously, you could select an existing blob container when configuring the storage location for your web server HTTP logs.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_5A52842D.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_27827DB9.png" width="600" height="162" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this release, you now can additionally create a new blob container to push your web server logs to in a single, consistent configuration experience within the Windows Azure Management Portal. You can do so by simply navigating to the &lt;b&gt;configure&lt;/b&gt; tab for your web site, clicking on the &lt;b&gt;manage storage&lt;/b&gt; button above, and selecting the option to &lt;b&gt;create a new blob container&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_10C33630.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3725197B.png" width="348" height="269" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Operation history support for Windows Azure Mobile Services&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Operation Logs feature of Windows Azure allows you to audit/log management operations performed on your Windows Azure Services.&amp;nbsp; You can review them be clicking on the Operating Logs tab within the Management Services extension of the Management Portal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_72787F39.png"&gt;&lt;img title="image" style="display: inline; border: 0px;" border="0" alt="image" src="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_thumb_3B9E2AF3.png" width="826" height="400" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With today&amp;rsquo;s update we have added more than 20 new log actions for Windows Azure Mobile Services that will now show up in the operation logs list.&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Summary&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Today&amp;rsquo;s release includes a bunch of great features that enable you to build even better cloud solutions.&amp;nbsp; If you don&amp;rsquo;t already have a Windows Azure account, you can sign-up for a &lt;a href="https://www.windowsazure.com/en-us/pricing/free-trial/" target="_blank"&gt;free trial&lt;/a&gt; and start using all of the above features today.&amp;nbsp; Then visit the &lt;a href="http://www.windowsazure.com/en-us/documentation/" target="_blank"&gt;Windows Azure Developer Center&lt;/a&gt; to learn more about how to build apps with it.&lt;/p&gt;
&lt;p&gt;Hope this helps,&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates&amp;g=https%3A//weblogs.asp.net/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Windows+Azure%3a+New+Scheduler+Service%2c+Read-Access+Geo+Redundant+Storage%2c+and+Monitoring+Updates&amp;v3=ScottGu%27s%20Blog%20-%20Windows+Azure%3a+New+Scheduler+Service%2c+Read-Access+Geo+Redundant+Storage%2c+and+Monitoring+Updates&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/windows-azure-new-scheduler-service-read-access-geo-redundant-storage-and-monitoring-updates&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Thu, 12 Dec 2013 20:41:00 Z</pubDate></item><item><guid isPermaLink="false">http://jeffhandley.com/archive/2013/12/09/nuget-package-restore-misconceptions.aspx</guid><link>http://feeds.jeffhandley.com/~r/JeffHandley/~3/BzKfMvQBMEY/nuget-package-restore-misconceptions.aspx</link><title>Common NuGet Misconceptions: Package Restore</title><description>&lt;p&gt;&lt;a href="http://docs.nuget.org/docs/reference/package-restore" target="_blank"&gt;Package Restore&lt;/a&gt; is one of NuGet’s most popular features.  This has been especially true since NuGet 2.7 introduced &lt;a href="http://docs.nuget.org/docs/reference/package-restore#Automatic_Package_Restore_in_Visual_Studio" target="_blank"&gt;Automatic Package Restore&lt;/a&gt; in Visual Studio and the &lt;a href="http://docs.nuget.org/docs/reference/package-restore#Command-Line_Package_Restore" target="_blank"&gt;nuget.exe restore command&lt;/a&gt; for simple command-line package restoration.  We hear many compliments about the feature and how it is transforming the way developers reference 3rd party libraries.  However, we also hear quite a few “bug reports” of Package Restore failing to perform a couple of expected functions that it will never do.  This post is to clear up the common misconceptions about package restore.&lt;/p&gt;  &lt;h2&gt;Content Files Are Not Restored&lt;/h2&gt;  &lt;p&gt;This is probably the number one misconception about NuGet all-up, let alone just Package Restore.  Many people think that NuGet Package Restore will bring back packages’ content files into their project folders when those content files have been omitted from source control.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;It won’t.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;Package Restore checks the solution’s /packages folder for all packages that have been referenced by the project(s) to ensure the packages exist in the /packages folder.  If they don’t, the package is downloaded and unpacked into the /packages folder.  That is all.  Package Restore has never checked the packages to see what &lt;strong&gt;&lt;em&gt;content&lt;/em&gt;&lt;/strong&gt; files they include to then copy those files into your project if the files are missing.  And it won’t.&lt;/p&gt;  &lt;h3&gt;Why Not?&lt;/h3&gt;  &lt;p&gt;There are several reasons.  To be brief, I’ll cover them tersely here:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Adding content files to your project is a design-time action, not a build-time action&lt;/li&gt;    &lt;li&gt;Some packages add content files that you’re expected to edit – while many packages’ contents files are not meant to be edited, NuGet doesn’t presently have a way to differentiate the two scenarios&lt;/li&gt;    &lt;li&gt;Some packages use the &lt;a href="http://docs.nuget.org/docs/creating-packages/configuration-file-and-source-code-transformations#Source_Code_Transformations" target="_blank"&gt;source code transformation&lt;/a&gt; feature of NuGet to replace tokens in the content files with project properties, which wouldn’t be possible during Package Restore&lt;/li&gt;    &lt;li&gt;Packages’ content files can vary by target framework – knowing which target framework’s content files to copy into your project requires inspecting the project to know its target framework, which is beyond the scope and capability of Package Restore&lt;/li&gt;    &lt;li&gt;Some packages use install.ps1 PowerShell scripts to further manipulate content files after NuGet initially adds them to the project, and PowerShell scripts aren’t run during Package Restore either&lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Long story short, manipulating project content files is beyond the scope of Package Restore.  With the frequency at which I’ve been hearing about this misconception recently, I expect we’ll end up adding a feature to restore content files into projects at some point.  It looks like &lt;a href="https://nuget.codeplex.com/workitem/1239" target="_blank"&gt;this issue on CodePlex&lt;/a&gt; is the best match if you’d like to upvote it.&lt;/p&gt;  &lt;h2&gt;PowerShell Scripts Aren’t Run&lt;/h2&gt;  &lt;p&gt;&lt;em&gt;Wait a second!  Up in #5 above, did you say that install.ps1 PowerShell scripts aren’t run during Package Restore either‽&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;I sure did.  Misconception number two about Package Restore is that people expect it to run PowerShell scripts (specifically install.ps1) when restoring packages.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;It won’t.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;As stated above, Package Restore simply downloads and unpacks any missing packages in the /packages folder.  That is all.  Package Restore has never executed PowerShell scripts for packages after restoring them.  And it won’t.&lt;/p&gt;  &lt;h3&gt;Why Not?&lt;/h3&gt;  &lt;p&gt;Again, there are several reasons.  And again, here they are in terse form:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Installing packages into a project is a design-time action, not a build-time action&lt;/li&gt;    &lt;li&gt;Install.ps1 scripts are meant to be run one time as a post-processing step of installing a package and aren’t meant to be run again&lt;/li&gt;    &lt;li&gt;Running an install.ps1 script requires that:&lt;/li&gt;    &lt;ol&gt;     &lt;li&gt;The project be loaded in Visual Studio&lt;/li&gt;      &lt;li&gt;The NuGet PowerShell Console has been initialized, creating a PowerShell workspace primed with NuGet’s PowerShell module from the Visual Studio extension&lt;/li&gt;      &lt;li&gt;Visual Studio’s DTE object is exposed in the PowerShell workspace as well, so that the install.ps1 can access it to manipulate the project (or anything else in Visual Studio)&lt;/li&gt;   &lt;/ol&gt; &lt;/ol&gt;  &lt;p&gt;Besides the points made by bullets 1 and 2, the requirements for bullet 3 won’t be met either.  At least not from the nuget.exe restore command-line Package Restore.  The requirement would be met for Automatic Package Restore in Visual Studio, but again with bullets 1 and 2, there’s no need to execute the install.ps1 script again.&lt;/p&gt;  &lt;p&gt;Now, there is a caveat around packages that contain an Init.ps1 script.  NuGet also doesn’t run any Init.ps1 scripts from packages after executing Package Restore in Visual Studio.  Instead, users have to re-open the solution to have the Init.ps1 scripts executed.  That is really just an oversight and a bug, and we plan to in NuGet 2.9.  &lt;a href="https://nuget.codeplex.com/workitem/3626" target="_blank"&gt;Here’s the issue&lt;/a&gt; on CodePlex for that.&lt;/p&gt;  &lt;h2&gt;Download and Unpack&lt;/h2&gt;  &lt;p&gt;NuGet Package Restore is in place to simply download and unpack any missing packages.  The primary reason for this is assemblies that have references added to them.  Take a really basic package, NuGet.Core for example.  This package includes NuGet.Core.dll in the \lib folder.  When installing the NuGet.Core package into a project, the project will end up with a reference to something like ../packages/NuGet.Core.2.7.2/lib/net40-Client/NuGet.Core.dll.  But if you decide to omit the /packages folder from source control, that reference will fail at build time.  To alleviate that, NuGet Package Restore runs before build to download and unpack NuGet.Core into the /packages folder, putting NuGet.Core.dll in place before msbuild goes looking for it.&lt;/p&gt;  &lt;p&gt;The end result is that your build-time reference needs are taken care of by Package Restore.  Project files are never modified.  Project contents are never touched or restored.  Install.ps1 scripts are never executed.  Your packages folder is simply rehydrated.  Nothing more.&lt;/p&gt;  &lt;div id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:3d9f96e5-4f05-424a-a08b-20425f682545" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;Technorati Tags: &lt;a href="http://technorati.com/tags/NuGet" rel="tag"&gt;NuGet&lt;/a&gt;,&lt;a href="http://technorati.com/tags/Package+Restore" rel="tag"&gt;Package Restore&lt;/a&gt;&lt;/div&gt;&lt;img src="http://jeffhandley.com/aggbug/298.aspx" width="1" height="1" /&gt;&lt;img src="//feeds.feedburner.com/~r/JeffHandley/~4/BzKfMvQBMEY" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 10 Dec 2013 00:09:02 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Handley</dc:creator><comments>http://jeffhandley.com/archive/2013/12/09/nuget-package-restore-misconceptions.aspx#feedback</comments><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://jeffhandley.com/comments/commentRss/298.aspx</wfw:commentRss><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://jeffhandley.com/archive/2013/12/09/nuget-package-restore-misconceptions.aspx</feedburner:origLink></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10480019</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/12/09/microsoft-sqlserver-types-nuget-package-spatial-on-azure.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Windows+Azure/">Windows Azure</category><title>Microsoft.SqlServer.Types NuGet Package (Spatial on Azure)</title><description>&lt;p&gt;Any application that uses Entity Framework’s spatial data type support to target SQL Server requires the ‘CLR Types for SQL Server’&lt;strong&gt; &lt;/strong&gt;to be available on the machine the application runs on. This also applies to applications that use SQL Server spatial data types directly, without using Entity Framework.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Deployment Issues&lt;/h2&gt;  &lt;p&gt;When developing your application the CLR Types for SQL Server are usually installed system-wide, since they are included in Visual Studio. Issues arise when you try to deploy to a machine that does not have the CLR Types for SQL Server installed. Initially you will get the following InvalidOperationException.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;Spatial types and functions are not available for this provider because the assembly 'Microsoft.SqlServer.Types' version 10 or higher could not be found.&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;If you were to find and deploy the Microsoft.SqlServer.Types assembly you’ll then get the following DllNotFoundException.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;Unable to load DLL 'SqlServerSpatial110.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;The Solution&lt;/h2&gt;  &lt;p&gt;If you have control over the server you can just install the CLR Types for SQL Server. The SQL Server 2012 SP1 version of the CLR Types can be &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=35580"&gt;downloaded here&lt;/a&gt;. SQLSysClrTypes.msi is the installer you want and there is an x86 (32 bit) and x64 (64 bit) version depending on the architecture of the machine you are deploying to.&lt;/p&gt;  &lt;p&gt;However, installing extra software on the target machine is not always an option – especially if you are deploying to a machine you don’t own (such as Windows Azure Web Sites). Fortunately the required assemblies can be deployed along with your application.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install the &lt;a href="https://www.nuget.org/packages/Microsoft.SqlServer.Types/"&gt;Microsoft.SqlServer.Types NuGet package&lt;/a&gt;.       &lt;br /&gt;      &lt;br /&gt;      &lt;div style="border-top: gray 4px solid; border-right: gray 4px solid; width: 550px; border-bottom: gray 4px solid; color: white; padding-bottom: 10px; padding-top: 10px; padding-left: 15px; border-left: gray 4px solid; background-color: black"&gt;PM&amp;gt; Install-Package &lt;span style="color: #ffffff; background-color: #000000"&gt;Microsoft.SqlServer.Types&lt;/span&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Ensure the appropriate version of the native &lt;strong&gt;SqlServerSpatial110.dll&lt;/strong&gt; assembly is copied to the output directory and deployed with your application. Steps on how to do this are included in a ReadMe.txt file that will open in Visual Studio when you install the package.&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;What the Microsoft.SqlServer.Types Package Does&lt;/h2&gt;  &lt;p&gt;The Microsoft.SqlServer.Types package gives you the two assemblies that need to be deployed along with your application:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Microsoft.SqlServer.Types.dll&lt;/strong&gt; – This is a .NET assembly that is added as a reference to your project. This assembly will be automatically copied to the output directory of you application and deployed for you. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;SqlServerSpatial110.dll&lt;/strong&gt; – This is a native assembly so it cannot be added as a project reference. Instead, installing the NuGet package will add the x86 and x64 version of this assembly as items in your project under a SqlServerTypes folder. You will need to ensure the appropriate version of this assembly is loaded at runtime. Steps on how to do this are included in a ReadMe file that will open in Visual Studio when you install the package. &lt;/li&gt; &lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10480019" width="1" height="1"&gt;</description><pubDate>Mon, 09 Dec 2013 17:44:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">23</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10480019</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/12/09/microsoft-sqlserver-types-nuget-package-spatial-on-azure.aspx#comments</comments></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th</guid><link>http://weblogs.asp.net/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th</link><category>.NET</category><category>ASP.NET</category><category>Azure</category><category>Community News</category><category>Talks</category><title>Presentations I’m doing in Dublin and London Dec 2nd-&gt;5th</title><description>&lt;p&gt;I&amp;rsquo;ll be in Ireland and the UK next week presenting at several events.&amp;nbsp; Below are details on the talks I&amp;rsquo;ll be doing if you want to come along and hear them:&lt;/p&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;Dublin: Monday Dec 2nd&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m doing two separate free events in Dublin on Monday:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032570638&amp;amp;Culture=en-IE&amp;amp;community=0" target="_blank"&gt;Windows Azure and the Cloud&lt;/a&gt; at &lt;strong&gt;Mon 1-3pm&lt;/strong&gt;.&amp;nbsp; This event is free to attend, and I&amp;rsquo;ll be doing a two hour keynote/overview session on Windows Azure as part of it.&amp;nbsp; This will be a great talk to attend if you are new to Windows Azure and are interested in learning more about what you can do with it.&amp;nbsp; Later sessions at the event also cover VS 2013, building iOS/Android apps with C# using Xamarin, and F# with Data and the Cloud.&amp;nbsp; Lean more &lt;a href="https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032570638&amp;amp;Culture=en-IE&amp;amp;community=0" target="_blank"&gt;here and sign-up for free&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eventbrite.ie/e/scott-guthrie-building-real-world-applications-using-windows-azure-tickets-9304059693" target="_blank"&gt;Building Real World Application using Windows Azure&lt;/a&gt; at &lt;strong&gt;Mon 6:00-9:00pm&lt;/strong&gt;.&amp;nbsp; This event is also free to attend, and during it I&amp;rsquo;ll walkthrough building a real world application using Windows Azure and discuss patterns and best practice techniques for building real world apps along the way.&amp;nbsp; The content is intermediate/advanced level (my goal is to melt your brain by the end) but doesn&amp;rsquo;t assume prior knowledge of Windows Azure.&amp;nbsp; Learn more &lt;a href="http://www.eventbrite.ie/e/scott-guthrie-building-real-world-applications-using-windows-azure-tickets-9304059693" target="_blank"&gt;here and sign-up for free&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no content overlap between the two talks &amp;ndash; so feel free to attend both if you want to!&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;span style="text-decoration: underline;"&gt;London: Wed Dec 4th and 5th&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m presenting at the &lt;a href="http://www.ndc-london.com/" target="_blank"&gt;NDC London Conference&lt;/a&gt; on Dec 4th and Dec 5th as well.&amp;nbsp; This is a great developer conference being hosted in the UK for the first time.&amp;nbsp; It has a great line up of speakers attending.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m presenting 2 separate two-part talks:&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ndclondon.oktaset.com/Agenda/wednesday" target="_blank"&gt;Introduction to Windows Azure (Part 1 and 2)&lt;/a&gt; at &lt;strong&gt;Wed from 1:30-4pm&lt;/strong&gt;.&amp;nbsp; This will be a great talk to attend if you are new to Windows Azure and are interested in learning more about what you can do with it.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ndclondon.oktaset.com/Agenda/Thursday" target="_blank"&gt;Building Real World Applications using Windows Azure (Part 1 and 2)&lt;/a&gt; at &lt;strong&gt;Thursday from 9am-11:20am&lt;/strong&gt;.&amp;nbsp; I&amp;rsquo;ll walkthrough building a real world application using Windows Azure and discuss patterns and best practice techniques for building real world apps along the way.&amp;nbsp; The content is intermediate/advanced level (my goal is to melt your brain by the end) but doesn&amp;rsquo;t assume prior knowledge of Windows Azure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope to see some of you there!&lt;/p&gt;
&lt;p&gt;Scott&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. In addition to blogging, I am also now using Twitter for quick updates and to share links. Follow me at: &lt;/em&gt;&lt;a href="http://www.twitter.com/scottgu"&gt;twitter.com/scottgu&lt;/a&gt;&lt;/p&gt; &lt;img src="https://microsoftsto.112.2o7.net/b/ss/msstoaspnetblogs/1/H.19.4/s3342130146455?AQB=1&amp;ndh=1&amp;ns=microsoftsto&amp;pageName=weblogs.asp.net/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th&amp;g=https%3A//weblogs.asp.net/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th&amp;r=https%3A//weblogs.asp.net/scottgu&amp;cc=USD&amp;ch=weblogs&amp;server=weblogs.asp.net&amp;events=event1&amp;c1=asp.net&amp;v1=asp.net&amp;c2=en-us&amp;v2=en-us&amp;c3=ScottGu%27s%20Blog%20-%20Presentations+I%e2%80%99m+doing+in+Dublin+and+London+Dec+2nd-%3e5th&amp;v3=ScottGu%27s%20Blog%20-%20Presentations+I%e2%80%99m+doing+in+Dublin+and+London+Dec+2nd-%3e5th&amp;c4=weblogs%3A%20scottgu&amp;v4=weblogs%3A%20scottgu&amp;c5=scottgu&amp;v5=scottgu&amp;c10=https%3A//weblogs.asp.net/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th&amp;c14=RSS&amp;v17=weblogs.asp.net/scottgu/presentations-i-m-doing-in-dublin-and-london-dec-2nd-gt-5th&amp;v44=37209679_03ca_403d_b3bc_299a962cf4ac&amp;c45=fpc&amp;v45=fpc&amp;s=1920x1080&amp;c=24&amp;j=1.6&amp;v=Y&amp;k=Y&amp;bw=1231&amp;bh=214&amp;p=&amp;AQE=1&amp;pid=weblogs.asp.net/scottgu" height="1" width="1" alt="omni" /&gt;</description><pubDate>Wed, 27 Nov 2013 06:39:00 Z</pubDate></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Decoupling-Large-Applications-with-the-Service-Gateway</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Decoupling-Large-Applications-with-the-Service-Gateway</link><category>Azure</category><category>Cloud Services</category><category>Windows Azure</category><category>websites</category><title>Decoupling Large Applications with the Service Gateway</title><description>&lt;p&gt;Join your guides&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://jaff.es/"&gt;Jaffe&amp;nbsp;Worley&lt;/a&gt;&amp;nbsp;as they talk to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This week we are joined by James Baker, from the Windows Azure Developer &amp;amp; Platform Evangelism team, who has been working on an extremely interesting and compelling project for Windows Azure Application Developers. The Service Gateway is a project built within DPE to help Cloud developers take back agility and maintainability of their large application deployments by adding the ability to decompose applications into many components instead of creating one monolithic application.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://sg.codeplex.com"&gt;Service Gateway on CodePlex&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.twitter.com/SyntaxC4"&gt;Follow Cory Fowler&lt;br&gt;&lt;/a&gt;&lt;a href="http://www.twitter.com/jaffe75"&gt;Follow Jaffe Worley&lt;br&gt;&lt;br&gt;&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:8f733806b62c455381b5a282018b78b8"&gt;</description><pubDate>Wed, 27 Nov 2013 17:40:22 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.wmv" type="video/x-ms-wmv" length="83981135" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Decoupling-Large-Applications-with-the-Service-Gateway</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guides Cory Fowler and Jaffe Worley as they talk to the product teams in Redmond as well as the web community. This week we are joined by James Baker, from the Windows Azure Developer &amp;amp; Platform Evangelism team, who has been working on an extremely interesting and compelling project for Windows Azure Application Developers. The Service Gateway is a project built within DPE to help Cloud developers take back agility and maintainability of their large application deployments by adding the ability to decompose applications into many components instead of creating one monolithic application. Show Links Service Gateway on CodePlex  Follow Cory FowlerFollow Jaffe Worley </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1160</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://smooth.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.ism/manifest" expression="full" duration="1160" fileSize="8958" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.mp3" expression="full" duration="1160" fileSize="18555908" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.mp4" expression="full" duration="1160" fileSize="112815242" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.webm" expression="full" duration="1160" fileSize="82418863" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway.wmv" expression="full" duration="1160" fileSize="83981135" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_high.mp4" expression="full" duration="1160" fileSize="245959538" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_mid.mp4" expression="full" duration="1160" fileSize="172528243" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/aea6/1fb7767e-25ee-409c-9252-61305b97aea6/DecouplingLargeApplicationsWithServiceGateway_Source.wmv" expression="full" duration="1160" fileSize="486815177" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, "The Jaffe"</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, "The Jaffe"</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Decoupling-Large-Applications-with-the-Service-Gateway/RSS</wfw:commentRss></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10471776</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/11/26/ef6-0-2-beta-1-available-on-nuget.aspx</link><title>EF6.0.2 Beta 1 Available on NuGet</title><description>&lt;p&gt;We recently shared &lt;a href="http://blogs.msdn.com/b/adonet/archive/2013/10/31/ef6-performance-issues.aspx"&gt;our plans to produce a 6.0.2 patch release&lt;/a&gt; to address some performance issues (and other bugs) in the 6.0.0 and 6.0.1 releases. Today we are making Beta 1 of the 6.0.2 release available.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Why the beta?&lt;/h2&gt;
&lt;p&gt;We were originally planning to go straight to RTM and have the 6.0.2 patch available in the month of November. Some of the fixes are proving harder to implement and test/verify than we expected, so we need a bit more time to finish the fixes and ensure that performance is improved. In order to keep our commitment to have a release available this month, we&amp;rsquo;ve opted to release the current code base &amp;ndash; which includes a number of improvements &amp;ndash; as a beta.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Can I use it in production?&lt;/h2&gt;
&lt;p&gt;Yes, with some caveats. The license does not prevent you from using the release in production. We&amp;rsquo;re still testing the changes we&amp;rsquo;ve made and there are more changes still to come. Microsoft does not guarantee any particular level of support on this beta.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Where do I get the beta?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.0.2-beta1"&gt;available on NuGet&lt;/a&gt;. If you are using Code First then there is no need to install the tooling. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=41180"&gt;available on the Microsoft Download Center&lt;/a&gt;. You only need to install the tooling if you want to use Model First or Database First.&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are installing the tools for Visual Studio 2012, you will need to uninstall the existing Entity Framework Tools for Visual Studio 2012 (via Add/Remove Programs)&amp;nbsp;before installing the new MSI. This is due to a temporary issue with the Beta 1 installer that will be fixed for RTM.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;When can I expect the RTM?&lt;/h2&gt;
&lt;p&gt;Getting the 6.0.2 patch release to RTM is our teams top priority. We expect to have it available during December.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;What if I find an issue in the beta?&lt;/h2&gt;
&lt;p&gt;Make sure it&amp;rsquo;s not &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=All&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.0.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=LastUpdatedDate&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All"&gt;something we already know about that is tracked to be fixed in 6.0.2&lt;/a&gt;. If it&amp;rsquo;s not, please &lt;a href="https://entityframework.codeplex.com/WorkItem/Create"&gt;file a new issue&lt;/a&gt; &amp;ndash; be sure to include detailed steps on how to reproduce it, preferably including source code.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;What&amp;rsquo;s in the beta?&lt;/h2&gt;
&lt;p&gt;Fixes to the following issues are included in Beta 1.&amp;nbsp;We haven&amp;rsquo;t finished verifying all these issues..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1778"&gt;[Performance] Startup time is bad with debugger attached&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;[&lt;a href="https://entityframework.codeplex.com/workitem/1828"&gt;Performance] Buffered queries are executed in non-sequential mode&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;[&lt;a href="https://entityframework.codeplex.com/workitem/1819"&gt;Performance] Revert buffering by default&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1801"&gt;[Performance] Remove calls to BufferedDataReader.AssertFieldIsReady&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1805"&gt;Memory leak in case of usage an external connection&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1777"&gt;&amp;ldquo;The given key was not present in the dictionary.&amp;rdquo; when adding Association to Entities - all mapped to Views&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1728"&gt;Code first stored procedure mapping fails when the stored procedures have more than 25 parameter mappings&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1742"&gt;EF6 regression: identity pattern not applied to key by convention in simple inheritance scenario&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1731"&gt;[UpForGrabs] Remove EF.PowerShell.dll from SqlServerCe package&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1843"&gt;Race condition in InitializeMappingViewCacheFactory&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1792"&gt;Migrating from EF5 to EF6: InversePropertyAttribute broken?&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1791"&gt;Code First: TPC with joins from base class to Identity ApplicationUser Fails&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1776"&gt;Moving from EF5 -&amp;gt; EF6: Invalid Column Name error&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1771"&gt;Having System.ComponentModel.DataAnnotations.MaxLength() applied to a string property leads to InvalidCastException exception&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1751"&gt;Unable to cast Anonymous Type from 'System.Linq.IQueryable' to 'System.Data.Entity.Core.Objects.ObjectQuery' &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1735"&gt;Designer: Can not reverse engineer EDMX when FKs in different order than PKs (composite keys)&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1698"&gt;EF Configuration Cause Null Reference Exception. &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/1643"&gt;Stored Procs :: Concurrency check on value types in conjunction with stored procedures doesn't work properly&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="text-decoration: underline;"&gt;&lt;a href="https://entityframework.codeplex.com/workitem/997"&gt;TypeLoadException thrown for a class nested in an internal class&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10471776" width="1" height="1"&gt;</description><pubDate>Tue, 26 Nov 2013 22:00:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10471776</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/11/26/ef6-0-2-beta-1-available-on-nuget.aspx#comments</comments></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Nug1S9vcR0I</guid><link>https://www.youtube.com/watch?v=Nug1S9vcR0I&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio: C# class Intellisense in JavaScript/TypeScript</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Nug1S9vcR0I&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Nug1S9vcR0I/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Nug1S9vcR0I&amp;amp;feature=youtube_gdata"&gt;Visual Studio: C# class Intellisense in JavaScript/TypeScript&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;A prototype of how a C# model class can be exposed through Intellisense in JavaScript and TypeScript&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4192&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;91
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:57&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 26 Nov 2013 20:05:41 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Nug1S9vcR0I" /><a10:updated>2015-02-07T20:08:57Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/LByZO2lvjRk</guid><link>https://www.youtube.com/watch?v=LByZO2lvjRk&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials - Bootstrap HTML validator</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=LByZO2lvjRk&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/LByZO2lvjRk/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=LByZO2lvjRk&amp;amp;feature=youtube_gdata"&gt;Web Essentials - Bootstrap HTML validator&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;The latest version of Web Essentials 2013 now also validates for incorrect use of Bootstrap CSS and FontAwesome&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
746&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;13
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:34&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 18 Nov 2013 00:38:03 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/LByZO2lvjRk" /><a10:updated>2014-10-31T22:11:48Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/ghc_EPhp-xo/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</link><title>A look at the new Visual Studio Online "Monaco" code editor</title><description>&lt;p&gt;One of the most interesting announcements at the Visual Studio 2013 Launch today was the Monaco editor in Visual Studio Online. &lt;/p&gt;  &lt;p&gt;I've seen little hints of this coming - for example, Scott Hanselman's post in August: &lt;a href="http://www.hanselman.com/blog/ARichNewJavaScriptCodeEditorSpreadingToSeveralMicrosoftWebSites.aspx"&gt;A rich new JavaScript code editor spreading to several Microsoft web sites&lt;/a&gt;. And if you looked around the command-line Kudu interface on an Azure Web Site (available at https://&amp;lt;SITENAME&amp;gt;.scm.azurewebsites.net) there's been a lightweight file editor available for a little while.&lt;/p&gt;  &lt;p&gt;After the announcement today, I dug up enough info to be dangerous and took it for a quick spin. Quick disclaimer: this is me playing around for a bit, it's not an official announcement.&lt;/p&gt;  &lt;h2&gt;Some top Monaco editor links&lt;/h2&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/b/somasegar/archive/2013/11/13/visual-studio-2013-launch-announcing-visual-studio-online.aspx"&gt;Visual Studio 2013 Launch: Announcing Visual Studio Online&lt;/a&gt; - Soma's announcement post gives a quick overview. More importantly, it links to a series of videos on Channel 9 which overview the Monaco editor and demonstrate using it in a few different scenarios.&lt;/p&gt;  &lt;p&gt;Channel 9 series: &lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco"&gt;Visual Studio Online &amp;quot;Monaco&amp;quot;&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/First-Steps"&gt;First Steps&lt;/a&gt; (2 minutes, 26 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Navigating-the-environment"&gt;Navigating the environment&lt;/a&gt; (4 minutes, 29 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Editor-Tips-and-Tricks"&gt;Editor Tips and Tricks&lt;/a&gt; (8 minutes, 45 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-ASPNET"&gt;Getting started with ASP.NET&lt;/a&gt; (2 minutes, 41 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-nodejs"&gt;Getting started with node.js&lt;/a&gt; (5 minutes, 33 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-PHP"&gt;Getting started with PHP&lt;/a&gt; (4 minutes, 10 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Using-LESS-in-nodejs"&gt;Using LESS in node.js&lt;/a&gt; (3 minutes, 15 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Debugging-nodejs"&gt;Debugging node.js&lt;/a&gt; (2 minutes, 52 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-TypeScript"&gt;Getting started with TypeScript&lt;/a&gt; (3 minutes, 48 seconds)&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I'll embed some of these videos at the end of the post - not here, or you'd get distracted and you'd never read the rest of the post, right?&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The big one&lt;/strong&gt;: &lt;a href="http://www.visualstudio.com/en-us/news/2013-nov-13-vso"&gt;Visual Studio Online updates&lt;/a&gt; post on the Visual Studio Online features timeline news feed thing. Can I call it a blog? I just don't know. But it's wonderful.&lt;/p&gt;  &lt;p&gt;Specifically, the &lt;strong&gt;Announcing Visual Studio Online “Monaco”&lt;/strong&gt; section shows how to turn it on and get started.&lt;/p&gt;  &lt;h2&gt;Walkthrough: Editing an ASP.NET site in the browser&lt;/h2&gt;  &lt;p&gt;&lt;em&gt;Full disclosure: I tried bumbling my way through this and made a mess, then went crying to &lt;a href="http://blog.davidebbo.com/"&gt;David Ebbo&lt;/a&gt; for help. He set me straight.&lt;/em&gt;&lt;/p&gt;  &lt;h3&gt;Step 1: Set up a Windows Azure Web Site with git deployment&lt;/h3&gt;  &lt;p&gt;First, I'm going to create a new ASP.NET site in Visual Studio 2013 and deploy it to git. Now, I could use Visual Studio Online's git hosting - of course it works well, and works with the Visual Studio Online Monaco editor. But you'd suspect some tricky business, so I'm going to use a GitHub repository.&lt;/p&gt;  &lt;p&gt;So, I'm creating a simple ASP.NET MVC 5 application (with no authentication so I don't need to deploy a database) and pushing it to a GitHub repository.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-11-13_11h21_09" href="http://www.flickr.com/photos/36836555@N00/10842274533/"&gt;&lt;img border="0" alt="2013-11-13_11h21_09" src="http://farm6.static.flickr.com/5539/10842274533_5e3352d0f6.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-11-13_11h22_11" href="http://www.flickr.com/photos/36836555@N00/10842282363/"&gt;&lt;img border="0" alt="2013-11-13_11h22_11" src="http://farm8.static.flickr.com/7396/10842282363_cc8aba40a7.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now I'm dropping in a standard .gitignore and initializing the repo, then pushing to GitHub.&lt;/p&gt;  &lt;pre&gt;
git init
git add .
git commit -m &amp;quot;Initial commit&amp;quot;
git remote add github https://github.com/jongalloway/PlayingWithMonacoEditor.git
git push -u github master&lt;/pre&gt;

&lt;p&gt;Now I'm going to create a new Windows Azure Web Site using that GitHub repo as the source. This has been available for a long time, but I'm showing the steps in case it's new to you.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h06_26" href="http://www.flickr.com/photos/36836555@N00/10847100516/"&gt;&lt;img border="0" alt="2013-11-13_18h06_26" src="http://farm4.static.flickr.com/3688/10847100516_a186f061c9_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h08_04" href="http://www.flickr.com/photos/36836555@N00/10847124636/"&gt;&lt;img border="0" alt="2013-11-13_18h08_04" src="http://farm4.static.flickr.com/3806/10847124636_413eaedb09_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h10_21" href="http://www.flickr.com/photos/36836555@N00/10847225454/"&gt;&lt;img border="0" alt="2013-11-13_18h10_21" src="http://farm4.static.flickr.com/3708/10847225454_8c0039eef4_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h16_54" href="http://www.flickr.com/photos/36836555@N00/10847160185/"&gt;&lt;img border="0" alt="2013-11-13_18h16_54" src="http://farm4.static.flickr.com/3760/10847160185_f615da3a8c_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 2: Set up for editing using Visual Studio Online&lt;/h3&gt;

&lt;p&gt;Okay, we've got a live repo and the site's deployed. Now we want to edit that source using Visual Studio Online.&lt;/p&gt;

&lt;p&gt;Here's the trick I learned from David Ebbo - you want to create another Windows Azure Web Site that's just associated with the source, not the deployment. So I head back into the portal and create a new Web Site just for source editing.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h20_03" href="http://www.flickr.com/photos/36836555@N00/10847696613/"&gt;&lt;img border="0" alt="2013-11-13_18h20_03" src="http://farm8.static.flickr.com/7338/10847696613_3e428aa7e3_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oops, I created it in Western Europe. Good thing the internets are fast.&lt;/p&gt;

&lt;p&gt;Now, in the new site, I head over to the Configure tab and enable &amp;quot;Edit in Visual Studio Online&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h41_38" href="http://www.flickr.com/photos/36836555@N00/10847775773/"&gt;&lt;img border="0" alt="2013-11-13_18h41_38" src="http://farm8.static.flickr.com/7301/10847775773_f4172f28ba_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you feel it? We're almost there. Promise.&lt;/p&gt;

&lt;p&gt;Now I head over to the Dashboard tab, and click on the &lt;em&gt;Edit in Visual Studio Online&lt;/em&gt; link. Like you, I can hardly contain my excitement! What will happen?&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_14h59_14" href="http://www.flickr.com/photos/36836555@N00/10844926085/"&gt;&lt;img border="0" alt="2013-11-13_14h59_14" src="http://farm6.static.flickr.com/5513/10844926085_277b3296cd_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh, a login prompt. Hmm.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_15h00_26" href="http://www.flickr.com/photos/36836555@N00/10844936995/"&gt;&lt;img border="0" alt="2013-11-13_15h00_26" src="http://farm3.static.flickr.com/2890/10844936995_0722c4a61e_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, I know my username and password. If you forget, you can reset your password in the portal, on the Dashboard tab. Okay, with that done, here's what we get:&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_15h04_13" href="http://www.flickr.com/photos/36836555@N00/10845320933/"&gt;&lt;img border="0" alt="2013-11-13_15h04_13" src="http://farm8.static.flickr.com/7379/10845320933_cd9b853311.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hooray! Yeah, science!&lt;/p&gt;

&lt;h3&gt;Step 3: Appeal to the hipster demographic&lt;/h3&gt;

&lt;p&gt;Wait, you're not impressed because I used IE, is that it? You wanted me to see if it worked in another browser?&lt;/p&gt;

&lt;p&gt;Yeah, maybe this is an opportunity to dust off that Mac Mini to see how it does there. Hold on, it's over here somewhere. Under the... oh, that bill's overdue. Hm. Behind the... oh, there it is. Okay!&lt;/p&gt;

&lt;p&gt;So I log back in to the Azure portal on click that same Edit In Visual Studio Online link. Hey, there it is again! I'll show this screenshot bigger this time.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h49_05" href="http://www.flickr.com/photos/36836555@N00/10847679524/"&gt;&lt;img border="0" alt="2013-11-13_18h49_05" src="http://farm3.static.flickr.com/2841/10847679524_1ec29b0ba0_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 4: Clone the repo&lt;/h3&gt;

&lt;p&gt;Now I click on the git icon on the left side and enter my git url, then hit clone.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h00_18" href="http://www.flickr.com/photos/36836555@N00/10847818554/"&gt;&lt;img border="0" alt="2013-11-13_19h00_18" src="http://farm8.static.flickr.com/7447/10847818554_2e9a9a7018_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here it goes...&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h01_58" href="http://www.flickr.com/photos/36836555@N00/10847681795/"&gt;&lt;img border="0" alt="2013-11-13_19h01_58" src="http://farm3.static.flickr.com/2807/10847681795_395d8a2fb5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, that looks really cool, and my code's visible on the left. Before I start editing, I want to make sure I can build it. In the console window, I'm going to type in &amp;quot;msbuild&amp;quot; and cross my fingers.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h09_25" href="http://www.flickr.com/photos/36836555@N00/10847835916/"&gt;&lt;img border="0" alt="2013-11-13_19h09_25" src="http://farm4.static.flickr.com/3791/10847835916_08b4c86ccc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, we couldn't expect it to work on the first shot, could we? I...&lt;/p&gt;

&lt;p&gt;Oh, it did work. Well, hey there.&lt;/p&gt;

&lt;p&gt;So, back on my Windows box, here's what the site looks like in IE11.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h47_36" href="http://www.flickr.com/photos/36836555@N00/10848500103/"&gt;&lt;img border="0" alt="2013-11-13_19h47_36" src="http://farm4.static.flickr.com/3732/10848500103_491593edbe_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 5: Do some editing. That's what started this whole mess, remember?&lt;/h3&gt;

&lt;p&gt;I'm going to head back over to the Mac and edit some code. To make this interesting, I'm going to edit C#, CSHTML, CSS and JavaScript. What could go wrong?&lt;/p&gt;

&lt;p&gt;First I edit the HomeController to add something to the ViewBag.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h04_39" href="http://www.flickr.com/photos/36836555@N00/10849250694/"&gt;&lt;img border="0" alt="2013-11-13_20h04_39" src="http://farm6.static.flickr.com/5489/10849250694_0ccb281c8f_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next I edit the CSHTML, adding in some HTML and C# changes.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h23_39" href="http://www.flickr.com/photos/36836555@N00/10849078575/"&gt;&lt;img border="0" alt="2013-11-13_21h23_39" src="http://farm4.static.flickr.com/3809/10849078575_8eb9efef42_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I make some CSS edits.&lt;/p&gt;

&lt;p&gt;I'm kind of rushing through this, but there's code completion and IntelliSense all along the way. For instance, when I start editing a CSS color, I get a dropdown with available colors.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h14_44" href="http://www.flickr.com/photos/36836555@N00/10849254236/"&gt;&lt;img border="0" alt="2013-11-13_20h14_44" src="http://farm6.static.flickr.com/5546/10849254236_02f57657ae_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I select a color, I can see what it will look like in the editor.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h15_02" href="http://www.flickr.com/photos/36836555@N00/10849257044/"&gt;&lt;img border="0" alt="2013-11-13_20h15_02" src="http://farm6.static.flickr.com/5543/10849257044_e690fef4ec_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I build to make sure it's all still good.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h50_22" href="http://www.flickr.com/photos/36836555@N00/10849447323/"&gt;&lt;img border="0" alt="2013-11-13_20h50_22" src="http://farm4.static.flickr.com/3750/10849447323_fca9e1d149_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 6: Deploy&lt;/h3&gt;

&lt;p&gt;And git push to deploy.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h51_44" href="http://www.flickr.com/photos/36836555@N00/10849273044/"&gt;&lt;img border="0" alt="2013-11-13_20h51_44" src="http://farm8.static.flickr.com/7389/10849273044_5b9d1e7cd5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 7: Full circle, with a pirouette and a lemon twist &lt;/h3&gt;

&lt;p&gt;And hopping back to my Windows / IE 11 browser, we can see that it works.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h22_15" href="http://www.flickr.com/photos/36836555@N00/10849502723/"&gt;&lt;img border="0" alt="2013-11-13_21h22_15" src="http://farm8.static.flickr.com/7401/10849502723_c08122e585_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What's the point?&lt;/h2&gt;

&lt;p&gt;Why did we do this? What did it buy us?&lt;/p&gt;

&lt;p&gt;Well, for one thing, we grabbed an ASP.NET repo from GitHub in a browser, on a Mac, made some code changes, and deployed it. If you've got a browser (free) and a Windows Azure account (free), you can edit and deploy an ASP.NET site. You could do it on an Android tablet, on an iPad, in a boat, with a goat.&lt;/p&gt;

&lt;p&gt;Even if you're on Windows, note that the Visual Studio Online experience didn't require me to sign up for or pay anything. Visual Studio Online is free for projects with five or fewer users, and didn't make me jump through any hoops to get going. That means you can get started using it. If you want more Visual Studio Online or Windows Azure services, you can get them, but there's no roadblock to creating / editing / deploying / maintaining a site right now.&lt;/p&gt;

&lt;p&gt;Oh, and this was ASP.NET MVC 5 - so, all the new stuff works out of the box. Yes, you'd expect that, but it's worth pointing out.&lt;/p&gt;

&lt;h2&gt;Recap and regrets&lt;/h2&gt;

&lt;p&gt;Yes, we've arrived. We deployed code to GitHub, pulled it into a Windows Azure Web Site, edited it in a browser, on a Mac (demo bingo, everyone drink), and saw it automatically deployed and running in a browser. Neat.&lt;/p&gt;

&lt;p&gt;What I didn't have time to show you was all the cool features in the Monaco editor.&lt;/p&gt;

&lt;p&gt;For instance, you can click on the settings gear in the upper right corner and switch to the Visual Studio dark theme, which is so much cooler.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h46_07" href="http://www.flickr.com/photos/36836555@N00/10849615443/"&gt;&lt;img border="0" alt="2013-11-13_21h46_07" src="http://farm8.static.flickr.com/7303/10849615443_b2a206e760_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I regret that we didn't have time to look at all of the cool editor features, like the editor commands shown when you hit ctrl+E.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h48_36" href="http://www.flickr.com/photos/36836555@N00/10849307605/"&gt;&lt;img border="0" alt="2013-11-13_21h48_36" src="http://farm4.static.flickr.com/3790/10849307605_ec7d9ffbe3_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wish we'd had time to look at the fancy IntelliSense features, including support for jQuery function overloads.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h50_33" href="http://www.flickr.com/photos/36836555@N00/10849320255/"&gt;&lt;img border="0" alt="2013-11-13_21h50_33" src="http://farm8.static.flickr.com/7426/10849320255_5f39bf2cac_b.jpg" width="379" height="64" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it would have been neat to cover the cool diff-on-commit view.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h52_46" href="http://www.flickr.com/photos/36836555@N00/10849680643/"&gt;&lt;img border="0" alt="2013-11-13_21h52_46" src="http://farm6.static.flickr.com/5514/10849680643_3c36815a82_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, alas, it was not to be.&lt;/p&gt;

&lt;p&gt;For those features, and many more, I recommend you check out the videos I referenced earlier. I'll even embed some of those in the next section, because this post wasn't quite long enough.&lt;/p&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;Neat Videos You Should Watch&lt;/h2&gt;

&lt;p&gt;All of the Monaco videos are good, but these are some of my favorite.&lt;/p&gt;

&lt;p&gt;First Steps&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/First-Steps/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Editor Tips And Tricks&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Editor-Tips-and-Tricks/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Getting Started With PHP&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-PHP/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Debugging node.js&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Debugging-nodejs/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;And last, but not least, Getting started with TypeScript. Why? Because the Monaco editor was written in TypeScript!&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-TypeScript/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=ghc_EPhp-xo:pKP-b0LEG0s:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/ghc_EPhp-xo" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 14 Nov 2013 06:00:11 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</feedburner:origLink></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10467638</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/11/13/6-0-2-nightly-builds-available.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF6.0.2 Nightly Builds Available</title><description>&lt;p&gt;We recently &lt;a href="http://blogs.msdn.com/b/adonet/archive/2013/10/31/ef6-performance-issues.aspx"&gt;blogged about our plans&lt;/a&gt; to publish a 6.0.2 patch release to address some issues in the 6.0.0 and 6.0.1 releases. The changes in this release will improve performance and fix some bugs introduced in the EF6 release.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Try out the nightly builds&lt;/h2&gt;  &lt;p&gt;Because this patch will go straight to RTM, we need your help to try out the nightly builds and let us know if the issues are fixed and/or if you encounter any new issues.&lt;/p&gt;  &lt;p&gt;We’ve started pushing 6.0.2 builds to the same MyGet feed we push nightly builds of our master branch to (currently the 6.1 code base that we are working on).&lt;/p&gt;  &lt;p&gt;Not all the fixes for 6.0.2 are checked in at the time this post was published. You can keep track of &lt;a href="https://entityframework.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=All&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=EF%206.0.2&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Id&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All"&gt;what issues we are planning to address in 6.0.2&lt;/a&gt; (and the state of the fix) on our CodePlex site.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Configuring NuGet&lt;/h2&gt;  &lt;p&gt;You need to configure NuGet to use the feed that contains nightly builds.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;In Visual Studio select &lt;strong&gt;Tools –&amp;gt; Library Package Manager –&amp;gt; Package Manager&lt;/strong&gt; &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;    &lt;li&gt;Select &lt;strong&gt;Package Sources &lt;/strong&gt;from the left pane &lt;/li&gt;    &lt;li&gt;Enter &lt;strong&gt;Nightly Builds &lt;/strong&gt;as the Name and &lt;strong&gt;&lt;a href="https://www.myget.org/F/aspnetwebstacknightly/"&gt;https://www.myget.org/F/aspnetwebstacknightly/&lt;/a&gt;&lt;/strong&gt; as the Source &lt;/li&gt;    &lt;li&gt;Click &lt;strong&gt;Add &lt;/strong&gt;and then&lt;strong&gt; OK&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/8130.NewFeed_5F00_30675A68.png"&gt;&lt;img title="NewFeed" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="NewFeed" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-68-19-metablogapi/0118.NewFeed_5F00_thumb_5F00_1DB260B1.png" width="640" height="374" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Using a Nightly Build&lt;/h2&gt;  &lt;p&gt;Once the nightly feed is configured you can add the latest build of the 6.0.2 NuGet package:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;In Visual Studio select &lt;strong&gt;Tools –&amp;gt; Library Package Manager –&amp;gt; Package Manager&lt;/strong&gt; &lt;strong&gt;Console&lt;/strong&gt;&lt;/li&gt;    &lt;li&gt;At the command prompt you can run the Install-Package command specifying a version that includes the current date. The format for this command is &lt;strong&gt;Install-Package EntityFramework –Pre –Version 6.0.2-nightly-2&amp;lt;two_digit_month&amp;gt;&amp;lt;two_digit_day&amp;gt;&lt;/strong&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;For example, today’s date is November-13 so you can run&lt;strong&gt; Install-Package EntityFramework –Pre –Version 6.0.2-nightly-21113 &lt;/strong&gt;to get today’s build&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;&lt;font color="#ff0000"&gt;&lt;strong&gt;&lt;em&gt;Note: &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;If you do not specify a version, or if you install via the NuGet UI, you will get the latest 6.1 build which includes fixes that will not be included in the 6.0.2 release.&lt;/em&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Nightly builds are typically available on MyGet by 10am PST each day, but from time to time things happen and they may be later.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10467638" width="1" height="1"&gt;</description><pubDate>Wed, 13 Nov 2013 22:24:17 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">20</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10467638</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/11/13/6-0-2-nightly-builds-available.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC105</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC105</link><category>web</category><title>​Introducing ASP.NET SignalR 2</title><description>&lt;p&gt;The first version of ASP.NET SignalR was released earlier this year and with it, ASP.NET developers have been adding amazing real-time Web functionality to their applications. In this video we’ll take a look at some of the improvements in the new version of SignalR included with Visual Studio 2013.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:67e3a588f1e94ec4a044a26f017afa1b"&gt;</description><pubDate>Wed, 13 Nov 2013 15:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/vs/launch2013/Introducing_ASP.NET_SignalR2.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC105</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The first version of ASP.NET SignalR was released earlier this year and with it, ASP.NET developers have been adding amazing real-time Web functionality to their applications. In this video we’ll take a look at some of the improvements in the new version of SignalR included with Visual Studio 2013. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">571</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC104</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC104</link><category>web</category><title>​Introducing ASP.NET Web API 2</title><description>&lt;p&gt;ASP.NET Web API 2 makes it easier than ever to build secure HTTP services that can be used from any client, including browsers and mobile devices. In this video, we’ll show you how you can secure access to your Web APIs using OAuth 2.0 and write portable code to call your Web APIs from native client applications.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d75dc7fefda749058fd0a26f017afa02"&gt;</description><pubDate>Wed, 13 Nov 2013 15:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/vs/launch2013/Introducing_ASP.NET_Web_API2.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC104</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web API 2 makes it easier than ever to build secure HTTP services that can be used from any client, including browsers and mobile devices. In this video, we’ll show you how you can secure access to your Web APIs using OAuth 2.0 and write portable code to call your Web APIs from native client applications. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">413</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC108</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC108</link><category>web</category><title>​Introducing Bootstrap for ASP.NET Web Development across Multiple Devices</title><description>&lt;p&gt;ASP.NET templates let you build a responsive Web site that looks good on mobile devices, tablets and PCs. The templates use the Bootstrap CSS Framework, which makes it really easy to build a responsive Web site and has great theming support. In this video, we'll show you how all of this works in Visual Studio 2013.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:aa004704c64a4259a1f5a26f017afa76"&gt;</description><pubDate>Wed, 13 Nov 2013 15:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/vs/launch2013/Introducing_Bootstrap_For_ASP.NET_Web_Developement_Across_Multiple_Devices.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC108</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET templates let you build a responsive Web site that looks good on mobile devices, tablets and PCs. The templates use the Bootstrap CSS Framework, which makes it really easy to build a responsive Web site and has great theming support. In this video, we'll show you how all of this works in Visual Studio 2013. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1039</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC107</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC107</link><category>web</category><title>​Introducing Enhanced Security &amp; Configuration Wizards for ASP.NET projects</title><description>&lt;p&gt;Web sites and Web Applications can often benefit from integration with existing identity providers that make it easier for users to authenticate with a system while not recreating their credentials. In this video we’ll review a new wizard in Visual Studio 2013 for configuring security around ASP.NET sites, show how easy it is to start working with identity providers such as Windows Azure Active Directory for organizational accounts or to implement Individual User Accounts for storing identities in a local SQL Server or using a social provider such as Facebook, Google, Microsoft Account, or Twitter.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:4b9aa3e2b4bf472da490a26f017afa4c"&gt;</description><pubDate>Wed, 13 Nov 2013 15:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/vs/launch2013/Introducing_Enhanced_Security_and_Configuration_Wizards_for_ASP.NET_Projects.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC107</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Web sites and Web Applications can often benefit from integration with existing identity providers that make it easier for users to authenticate with a system while not recreating their credentials. In this video we’ll review a new wizard in Visual Studio 2013 for configuring security around ASP.NET sites, show how easy it is to start working with identity providers such as Windows Azure Active Directory for organizational accounts or to implement Individual User Accounts for storing identities in a local SQL Server or using a social provider such as Facebook, Google, Microsoft Account, or Twitter. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">675</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC103</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC103</link><category>web</category><title>​Introducing  One ASP.NET - A New Unified Project System for Web Developers</title><description>&lt;p&gt;With the introduction of One ASP.NET in Visual Studio 2013 working with multiple frameworks in a single project is made significantly easier, enabling developers to combine Web Forms, MVC, Web API and other project templates together using an enhanced new project dialog. In this video we'll show you how the new approach works, how it integrates with a new security wizard and what MVC scaffolding can do once a web project is created.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:0ae124a093eb438a9e0da26f017af9ea"&gt;</description><pubDate>Wed, 13 Nov 2013 15:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/vs/launch2013/Introducing_One_ASP.NET_A_New_Unified_Project_System_for_Web_Developers.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/WC103</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">With the introduction of One ASP.NET in Visual Studio 2013 working with multiple frameworks in a single project is made significantly easier, enabling developers to combine Web Forms, MVC, Web API and other project templates together using an enhanced new project dialog. In this video we'll show you how the new approach works, how it integrates with a new security wizard and what MVC scaffolding can do once a web project is created. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">437</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Shows/Web+Camps+TV/Special-Movember-Episode-ASPNET-Authentication-Provider</guid><link>http://channel9.msdn.com/Shows/Web+Camps+TV/Special-Movember-Episode-ASPNET-Authentication-Provider</link><category>ASP.NET</category><category>Authentication</category><category>Identity</category><category>Security</category><title>Special Movember Episode - ASP.NET Authentication using ASP.NET Identity</title><description>&lt;p&gt;Join your guides&amp;nbsp;&lt;a href="http://blog.syntaxc4.net/"&gt;Cory Fowler&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://jaff.es/"&gt;Jaffe&amp;nbsp;Worley&lt;/a&gt;&amp;nbsp;as they talk to the product teams in Redmond as well as the web community.&lt;/p&gt;&lt;p&gt;This is a special week, Cory and Jaffe kick off &lt;a href="http://www.movember.com"&gt;Movember&lt;/a&gt; by shaving off their beards to help support men's health. Find out one of the best kept secrets of Windows Azure Web Sites during the Web Site Window with &lt;strong&gt;Amit Apple&lt;/strong&gt;. During the main segment, &lt;strong&gt;Pranav Rastogi&lt;/strong&gt;, takes us through an overview of the ASP.NET Authentication Provider enhancements known as ASP.NET Identity.&lt;/p&gt;&lt;p&gt;Big thanks to&amp;nbsp;&lt;a href="http://rudysbarbershop.com"&gt;Rudy's Barbershop&lt;/a&gt; in Redmond for helping us out with a shave!&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Show Links&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;em&gt;Movember Links&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://moustachedash.com/"&gt;Moustache Dash&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://us.movember.com/mospace/network/microsoft"&gt;Microsoft Movember Page&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://mobro.co/syntaxc4"&gt;Cory's Movember Page&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://ca.movember.com/mospace/7830909"&gt;Jaffe's Movember Page&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;em&gt;&lt;strong&gt;Technical Links&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/projectkudu"&gt;Project Kudu&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/identity"&gt;ASP.NET Identity&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/migrations/migrating-an-existing-website-from-sql-membership-to-aspnet-identity"&gt;Migrating an existing website from SQL Membership to ASP.NET Identity&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web&amp;#43;Camps&amp;#43;TV/Bootstrap-yourself-on-Boostrap-with-Pranav-Rastogi"&gt;WebCampsTV on Bootstrap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/asp.net-identity"&gt;Ask about ASP.NET Identity on StackOverflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/20/building-a-simple-todo-application-with-asp-net-identity-and-associating-users-with-todoes.aspx"&gt;Building a ToDo application with ASP.NET Identity&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://www.twitter.com/rustd"&gt;Follow Pranav Rastogi&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.twitter.com/amitapl"&gt;Follow Amit Apple&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.twitter.com/jaffe75"&gt;Follow Jaffe Worley&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.twitter.com/syntaxc4"&gt;Follow Cory Fowler&lt;/a&gt;&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Shows/Web+Camps+TV/feed&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:6efc63e35dc74f4486d3a2700154cc4a"&gt;</description><pubDate>Mon, 11 Nov 2013 16:16:34 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.wmv" type="video/x-ms-wmv" length="204976175" /><comments>http://channel9.msdn.com/Shows/Web+Camps+TV/Special-Movember-Episode-ASPNET-Authentication-Provider</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Join your guides Cory Fowler and Jaffe Worley as they talk to the product teams in Redmond as well as the web community. This is a special week, Cory and Jaffe kick off Movember by shaving off their beards to help support men's health. Find out one of the best kept secrets of Windows Azure Web Sites during the Web Site Window with Amit Apple. During the main segment, Pranav Rastogi, takes us through an overview of the ASP.NET Authentication Provider enhancements known as ASP.NET Identity. Big thanks to Rudy's Barbershop in Redmond for helping us out with a shave! Show Links         Movember Links Moustache DashMicrosoft Movember PageCory's Movember PageJaffe's Movember Page        Technical Links Project KuduASP.NET IdentityMigrating an existing website from SQL Membership to ASP.NET IdentityWebCampsTV on BootstrapAsk about ASP.NET Identity on StackOverflowBuilding a ToDo application with ASP.NET IdentityFollow Pranav RastogiFollow Amit AppleFollow Jaffe WorleyFollow Cory Fowler </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">2979</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://smooth.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.ism/manifest" expression="full" duration="2979" fileSize="6396" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.mp3" expression="full" duration="2979" fileSize="47670422" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.mp4" expression="full" duration="2979" fileSize="287817295" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.webm" expression="full" duration="2979" fileSize="185809237" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider.wmv" expression="full" duration="2979" fileSize="204976175" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_high.mp4" expression="full" duration="2979" fileSize="631262907" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_mid.mp4" expression="full" duration="2979" fileSize="441038436" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/9d7c/97a5aedc-4a80-4177-8912-b69cd4569d7c/MovemberASPNETIdentityReplacesMembershipProvider_Source.wmv" expression="full" duration="2979" fileSize="743950108" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Fowler, "The Jaffe"</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cory Fowler, "The Jaffe"</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Shows/Web+Camps+TV/Special-Movember-Episode-ASPNET-Authentication-Provider/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/What-s-New-for-Web-Developers-in-Visual-Studio-2013</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/What-s-New-for-Web-Developers-in-Visual-Studio-2013</link><title>What’s New for Web Developers in Visual Studio 2013</title><description>&lt;p&gt;There is a wide variety of new features in Visual Studio 2013 for Web developers. In this interview we'll talk to members of the team responsible for MVC, Web Forms, Web API, SignalR and much more.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6925670c37244d82a16aa26e0146e92f"&gt;</description><pubDate>Wed, 06 Nov 2013 19:51:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/efda/ba7cef0f-6aa0-4336-be79-6c7490d8efda/VSLaunch2013WhatsNewforWebDevelopers.wmv" type="video/x-ms-wmv" length="123341003" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Launch-2013/What-s-New-for-Web-Developers-in-Visual-Studio-2013</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">There is a wide variety of new features in Visual Studio 2013 for Web developers. In this interview we'll talk to members of the team responsible for MVC, Web Forms, Web API, SignalR and much more. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1481</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Scott Hunter, Mads Kristensen, Robert Green</dc:creator></item><item><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10463649</guid><link>http://blogs.msdn.com/b/adonet/archive/2013/11/04/ef-tools-open-source.aspx</link><category domain="http://blogs.msdn.com/b/adonet/archive/tags/Entity+Framework/">Entity Framework</category><category domain="http://blogs.msdn.com/b/adonet/archive/tags/What_2700_s+New/">What's New</category><title>EF Tools Open Source</title><description>&lt;h2&gt;EF &amp;amp; Open Source&lt;/h2&gt;  &lt;p&gt;As we began the EF6 release we moved to an open source development model, you can read more about this in our &lt;a href="http://blogs.msdn.com/b/adonet/archive/2012/07/19/entity-framework-and-open-source.aspx"&gt;open source announcement post&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;The move to open source proved very beneficial for the EF6 release. We got a lot of great feedback, bug reports on nightly builds and accepted a number of bug fixes and features from &lt;a href="https://entityframework.codeplex.com/wikipage?title=Contributors"&gt;our external contributors&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;EF Tools Now Open Source&lt;/h2&gt;  &lt;p&gt;Up until now, our open source repository has just included the EF runtime. We have now moved the EF Tooling code into the same open source repository. You can find instructions on &lt;a href="https://entityframework.codeplex.com/wikipage?title=Getting%20and%20Building%20EF%20Tools"&gt;how to work with the EF Tools code&lt;/a&gt; on our CodePlex site.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Nightly Builds&lt;/h2&gt;  &lt;p&gt;We don’t have nightly builds available just yet, but we’re working on it. Shortly, you’ll be able to download and install signed nightly builds of the tooling (you can already get &lt;a href="https://entityframework.codeplex.com/wikipage?title=Nightly%20Builds"&gt;signed nightly builds of the EF Runtime&lt;/a&gt;).&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Contributions&lt;/h2&gt;  &lt;p&gt;Yes. We’re accepting contributions for the tooling as well – just like we do for the runtime. Any contributions will be held to the same stringent quality bar we use for the runtime. You can find &lt;a href="https://entityframework.codeplex.com/wikipage?title=Contributing"&gt;more information about contributing&lt;/a&gt; on our CodePlex site.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Same Support, Same Developers, More Investment&lt;/h2&gt;  &lt;p&gt;We often get asked if moving to open source was about reducing our investment in EF, or if it impacts the support agreement from Microsoft. The short answer is no. Microsoft continues to ship official builds of Entity Framework as a fully supported Microsoft product both standalone as well as part of Visual Studio (the same as we always have). It continues to be staffed by the same Microsoft developers, and is supported through the same Microsoft support mechanisms. Our goal with open source has been to increase the development feedback loop, allowing us to deliver an even better product.&amp;#160; &lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10463649" width="1" height="1"&gt;</description><pubDate>Mon, 04 Nov 2013 23:21:10 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rowan Miller</dc:creator><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/adonet/rsscomments.aspx?WeblogPostID=10463649</wfw:commentRss><comments>http://blogs.msdn.com/b/adonet/archive/2013/11/04/ef-tools-open-source.aspx#comments</comments></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/webdev/Live-Bug-Triage-with-the-SignalR-Team</guid><link>http://channel9.msdn.com/Blogs/webdev/Live-Bug-Triage-with-the-SignalR-Team</link><category>Web Development</category><title>Live Bug Triage with the SignalR Team</title><description>&lt;p&gt;In this week's episode of the Web Development and Tooling TV show, we're going to go deep into the SignalR team room to watch the creators of SignalR, &lt;a href="https://twitter.com/damianedwards" target="_blank"&gt;Damian Edwards&lt;/a&gt; and &lt;a href="https://twitter.com/davidfowl" target="_blank"&gt;David Fowler&lt;/a&gt;, triaging bugs. Bug triage is a day-by-day activity at Microsoft. Since SignalR is an &lt;a href="https://github.com/SignalR/SignalR" target="_blank"&gt;open-source project managed on GitHub&lt;/a&gt; by the team, they have regular triage sessions to iterate over the issues being reported as bugs in the product. This team has a pretty animated style of triaging their issues, so we felt they'd be a great subject for the &amp;quot;how we do what we do each and every day here at Microsoft&amp;quot; aspect of this show. We hope you enjoy this behind-the-scenes look at how the web development teams here in Redmond do their work!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:eb9125991a114f769013a25b0104af92"&gt;</description><pubDate>Mon, 21 Oct 2013 12:00:36 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage.mp4" type="video/mp4" length="187980557" /><comments>http://channel9.msdn.com/Blogs/webdev/Live-Bug-Triage-with-the-SignalR-Team</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this week's episode of the Web Development and Tooling TV show, we're going to go deep into the SignalR team room to watch the creators of SignalR, Damian Edwards and David Fowler, triaging bugs. Bug triage is a day-by-day activity at Microsoft. Since SignalR is an open-source project managed on GitHub by the team, they have regular triage sessions to iterate over the issues being reported as bugs in the product. This team has a pretty animated style of triaging their issues, so we felt they'd be a great subject for the &amp;quot;how we do what we do each and every day here at Microsoft&amp;quot; aspect of this show. We hope you enjoy this behind-the-scenes look at how the web development teams here in Redmond do their work! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">1974</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage.mp3" expression="full" duration="1974" fileSize="31593048" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage.mp4" expression="full" duration="1974" fileSize="187980557" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage.webm" expression="full" duration="1974" fileSize="146890480" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_high.mp4" expression="full" duration="1974" fileSize="412218850" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/bb56/2079786f-205f-4f00-b291-a00f9aeebb56/BugTriage_mid.mp4" expression="full" duration="1974" fileSize="287816283" type="video/mp4" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen, Brady Gaster</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen, Brady Gaster</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/webdev/Live-Bug-Triage-with-the-SignalR-Team/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/yFekF0wq-UA</guid><link>https://www.youtube.com/watch?v=yFekF0wq-UA&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio 2013: The new HTML Editor</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=yFekF0wq-UA&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/yFekF0wq-UA/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=yFekF0wq-UA&amp;amp;feature=youtube_gdata"&gt;Visual Studio 2013: The new HTML Editor&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;A brief overview of the new features of the Visual Studio 2013 HTML editor&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
3805&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;15
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:23&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Fri, 18 Oct 2013 17:04:34 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/yFekF0wq-UA" /><a10:updated>2015-02-15T09:36:27Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/top-things-web-developers-should-know-about-the-visual-studio-2013-release</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/fuTNlQi-uU4/top-things-web-developers-should-know-about-the-visual-studio-2013-release</link><category>ASP.NET</category><category>ASP.NET MVC</category><category>ASP.NET Web API</category><category>Visual Studio</category><title>Top things web developers should know about the Visual Studio 2013 release</title><description>&lt;p&gt;ASP.NET and Web Tools for Visual Studio 2013 Release NotesASP.NET and Web Tools for Visual Studio 2013 Release NotesSummary for lazy readers:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Visual Studio 2013 is now available for &lt;a href="http://www.microsoft.com/visualstudio/eng/downloads"&gt;download on the Visual Studio site&lt;/a&gt; and on &lt;a href="http://msdn.microsoft.com/en-US/subscriptions/downloads/"&gt;MSDN subscriber downloads&lt;/a&gt;) &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 installs side by side with Visual Studio 2012 and supports round-tripping between Visual Studio versions, so you can try it out without committing to a switch &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 ships with the new version of ASP.NET, which includes ASP.NET MVC 5, ASP.NET Web API 2, Razor 3, Entity Framework 6 and SignalR 2.0 &lt;/li&gt;    &lt;li&gt;The new releases ASP.NET focuses on One ASP.NET, so core features and web tools work the same across the platform (e.g. adding ASP.NET MVC controllers to a Web Forms application) &lt;/li&gt;    &lt;li&gt;New core features include new templates based on Bootstrap, a new scaffolding system, and a new identity system &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 is an incredible editor for web files, including HTML, CSS, JavaScript, Markdown, LESS, Coffeescript, Handlebars, Angular, Ember, Knockdown, etc. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Top links:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Visual Studio 2013 content on the ASP.NET site are in the standard new releases area: &lt;a href="http://www.asp.net/vnext"&gt;http://www.asp.net/vnext&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes"&gt;ASP.NET and Web Tools for Visual Studio 2013 Release Notes&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Short intro videos on the new &lt;a href="http://www.asp.net/visual-studio/overview/2013"&gt;Visual Studio web editor features from Scott Hanselman and Mads Kristensen&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/announcing-release-of-asp-net-and-web-tools-for-visual-studio-2013.aspx"&gt;Announcing release of ASP.NET and Web Tools for Visual Studio 2013&lt;/a&gt; post on the official .NET Web Development and Tools Blog &lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/webdev/"&gt;.NET Web Development and Tools Blog&lt;/a&gt; has a lot of good post about the release&lt;/li&gt;    &lt;li&gt;Scott Guthrie's post: &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/10/17/announcing-the-release-of-visual-studio-2013-and-great-improvements-to-asp-net-and-entity-framework.aspx"&gt;Announcing the Release of Visual Studio 2013 and Great Improvements to ASP.NET and Entity Framework&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Scott Hanselman did a series of quick feature overview videos on the ASP.NET site. These are really, really well done. Watch them here: &lt;a href="http://www.asp.net/visual-studio/overview/2013"&gt;http://www.asp.net/visual-studio/overview/2013&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Okay, for those of you who are still with me, let's dig in a bit.&lt;/p&gt;  &lt;h2&gt;Quick web dev notes on downloading and installing Visual Studio 2013&lt;/h2&gt;  &lt;p&gt;I found Visual Studio 2013 to be a pretty fast install. According to Brian Harry's release post, &lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/10/17/visual-studio-2013-rtm-available.aspx"&gt;installing over pre-release versions of Visual Studio is supported&lt;/a&gt;.&amp;#160; I've installed the release version over pre-release versions, and it worked fine.&lt;/p&gt;  &lt;p&gt;If you're only going to be doing web development, you can speed up the install if you just select Web Developer tools.&lt;/p&gt;  &lt;p&gt;&lt;a title="Visual Studio 2013 installer" href="http://www.flickr.com/photos/36836555@N00/10329929544/"&gt;&lt;img border="0" alt="Visual Studio 2013 installer" src="http://farm4.static.flickr.com/3759/10329929544_4eaf8b4e42.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Of course, as a good Microsoft employee, I'll mention that you might also want to install some of those other features, like the Store apps for Windows 8 and the Windows Phone 8.0 SDK, but they do download and install a lot of other stuff (e.g. the Windows Phone SDK sets up Hyper-V and downloads several GB's of VM's). So if you're planning just to do web development for now, you can pick just the Web Developer Tools and install the other stuff later.&lt;/p&gt;  &lt;p&gt;If you've got a fast internet connection, I recommend using the web installer instead of downloading the ISO. The ISO includes all the features, whereas the web installer just downloads what you're installing.&lt;/p&gt;  &lt;p&gt;Visual Studio 2013 development settings and color theme&lt;/p&gt;  &lt;p&gt;When you start up Visual Studio, it'll prompt you to pick some defaults. These are totally up to you -whatever suits your development style - and you can change them later.&lt;/p&gt;  &lt;p&gt;&lt;a title="Visual Studio 2013 color theme" href="http://www.flickr.com/photos/36836555@N00/10330357344/"&gt;&lt;img border="0" alt="Visual Studio 2013 color theme" src="http://farm6.static.flickr.com/5505/10330357344_accd88b546.jpg" width="391" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;As I said, these are completely up to you. I recommend either the Web Development or Web Development (Code Only) settings. The only real difference is that Code Only hides the toolbars, and you can switch between them using Tools / Import and Export Settings / Reset.&lt;/p&gt;  &lt;h3&gt;Web Development settings&lt;/h3&gt;  &lt;p&gt;&lt;a title="Web Development settings" href="http://www.flickr.com/photos/36836555@N00/10330563935/"&gt;&lt;img border="0" alt="Web Development settings" src="http://farm8.static.flickr.com/7418/10330563935_af181417dc.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Web Development (code only) settings&lt;/p&gt;  &lt;p&gt;&lt;a title="Web Development (code only) settings" href="http://www.flickr.com/photos/36836555@N00/10330585416/"&gt;&lt;img border="0" alt="Web Development (code only) settings" src="http://farm6.static.flickr.com/5547/10330585416_596ffe6103.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Usually I've just gone with Web Development (code only) in the past because I just want to focus on the code, although the Standard toolbar does make it easier to switch default web browsers. More on that later.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h24_56" href="http://www.flickr.com/photos/36836555@N00/10330638714/"&gt;&lt;img border="0" alt="2013-10-17_09h24_56" src="http://farm8.static.flickr.com/7378/10330638714_965cb1a342.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Color theme&lt;/h3&gt;  &lt;p&gt;Sigh. Okay, everyone's got their favorite colors. I alternate between Light and Dark depending on my mood, and I personally like how the low contrast on the window chrome in those themes puts the emphasis on my code rather than the tabs and toolbars. I know some people got pretty worked up over that, though, and wanted the blue theme back. I personally don't like it - it reminds me of ancient versions of Visual Studio that I don't want to think about anymore.&lt;/p&gt;  &lt;p&gt;So here's the thing: if you install Visual Studio Ultimate, it defaults to Blue. The other versions default to Light. If you use Blue, I won't criticize you - out loud, that is. You can change themes really easily - either Tools / Options / Environment / General, or the smart way: ctrl+q for quick launch, then type Theme and hit enter.&lt;/p&gt;  &lt;h3&gt;Signing in&lt;/h3&gt;  &lt;p&gt;During the first run, you'll be prompted to sign in. You don't have to - you can click the &amp;quot;Not now, maybe later&amp;quot; link at the bottom of that dialog. I recommend signing in, though. It's not hooked in with licensing or tracking the kind of code you write to sell you components. It is doing good things, like&amp;#160; &lt;a href="http://msdn.microsoft.com/en-US/library/vstudio/dn135229(v=vs.120).aspx"&gt;syncing your Visual Studio settings between computers.&lt;/a&gt; More about that &lt;a href="http://blogs.msdn.com/b/visualstudio/archive/2013/06/28/welcome-sign-in-to-visual-studio.aspx"&gt;here&lt;/a&gt;. So, you don't have to, but I sure do.&lt;/p&gt;  &lt;h2&gt;Overview of shiny new things in ASP.NET land&lt;/h2&gt;  &lt;p&gt;There are a lot of good new things in ASP.NET. I'll list some of my favorite here, but you can &lt;a href="http://www.asp.net/vnext"&gt;read more on the ASP.NET site&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;One ASP.NET&lt;/h2&gt;  &lt;p&gt;You've heard us talk about this for a while. The idea is that options are good, but choice can be a burden. When you start a new ASP.NET project, why should you have to make a tough decision - with long-term consequences - about how your application will work? If you want to use ASP.NET Web Forms, but have the option of adding in ASP.NET MVC later, why should that be hard? It's all ASP.NET, right?&lt;/p&gt;  &lt;p&gt;Ideally, you'd just decide that you want to use ASP.NET to build sites and services, and you could use the appropriate tools (the green blocks below) as you needed them.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h56_49" href="http://www.flickr.com/photos/36836555@N00/10331262063/"&gt;&lt;img border="0" alt="2013-10-17_09h56_49" src="http://farm8.static.flickr.com/7378/10331262063_df982ef217.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;So, here it is.&lt;/p&gt;  &lt;p&gt;When you create a new ASP.NET application, you just create an ASP.NET application.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h59_58" href="http://www.flickr.com/photos/36836555@N00/10331142464/"&gt;&lt;img border="0" alt="2013-10-17_09h59_58" src="http://farm8.static.flickr.com/7457/10331142464_d1147a5268.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Next, you can pick from some templates to get you started... but these are different. They're not &amp;quot;painful decision&amp;quot; templates, they're just some starting pieces. And, most importantly, you can mix and match. I can pick a &amp;quot;mostly&amp;quot; Web Forms template, but include MVC and Web API folders and core references.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h05_27" href="http://www.flickr.com/photos/36836555@N00/10331394573/"&gt;&lt;img border="0" alt="2013-10-17_10h05_27" src="http://farm6.static.flickr.com/5488/10331394573_69edea75c6.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;If you've tried to mix and match in the past, you're probably aware that it was possible, but not pleasant. ASP.NET MVC project files contained special project type GUIDs, so you'd only get controller scaffolding support in a Web Forms project if you manually edited the csproj file. Features in one stack didn't work in others. Project templates were painful choices. That's no longer the case. Hooray! &lt;/p&gt;  &lt;p&gt;I just did a demo in a presentation last week where I created a new Web Forms + MVC + Web API site, built a model, scaffolded MVC and Web API controllers with EF Code First, add data in the MVC view, viewed it in Web API, then added a GridView to the Web Forms Default.aspx page and bound it to the Model. In about 5 minutes. Sure, it's a simple example, but it's great to be able to share code and features across the whole ASP.NET family.&lt;/p&gt;  &lt;h2&gt;Authentication&lt;/h2&gt;  &lt;p&gt;In the past, authentication was built into the templates. So, for instance, there was an ASP.NET MVC 4 Intranet Project template which created a new ASP.NET MVC 4 application that was preconfigured for Windows Authentication. All of that authentication stuff was built into each template, so they varied between the stacks, and you couldn't reuse them. You didn't see a lot of changes to the authentication options, since they required big changes to a bunch of project templates.&lt;/p&gt;  &lt;p&gt;Now, the new project dialog includes a common authentication experience. When you hit the Change Authentication button, you get some common options that work the same way regardless of the template or reference settings you've made. These options work on all ASP.NET frameworks, and all hosting environments (IIS, IIS Express, or OWIN for self-host)&lt;/p&gt;  &lt;p&gt;The default is Individual User Accounts:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h33_15" href="http://www.flickr.com/photos/36836555@N00/10331628534/"&gt;&lt;img border="0" alt="2013-10-17_10h33_15" src="http://farm3.static.flickr.com/2882/10331628534_a671108fd5.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;This is the standard &amp;quot;create a local account, using username / password or OAuth&amp;quot; thing; however, it's all built on the new Identity system. More on that in a second.&lt;/p&gt;  &lt;p&gt;The one setting that has some configuration to it is Organizational Accounts, which lets you configure authentication using Active Directory, Windows Azure Active Directory, or Office 365.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h46_50" href="http://www.flickr.com/photos/36836555@N00/10331817455/"&gt;&lt;img border="0" alt="2013-10-17_10h46_50" src="http://farm3.static.flickr.com/2886/10331817455_6a8587930d.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Identity&lt;/h2&gt;  &lt;p&gt;There's a new identity system. We've taken the best parts of the previous ASP.NET Membership and Simple Identity systems, rolled in a lot of feedback and made big enhancements to support important developer concerns like unit testing and extensiblity.&lt;/p&gt;  &lt;p&gt;I've written long posts about ASP.NET identity, and I'll do it again. Soon. This is not that post. The short version is that I think we've finally got just the right Identity system. Some of my favorite features:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;There are simple, sensible defaults that work well - you can File / New / Run / Register / Login, and everything works. &lt;/li&gt;    &lt;li&gt;It supports standard username / password as well as external authentication (OAuth, etc.). &lt;/li&gt;    &lt;li&gt;It's easy to customize without having to re-implement an entire provider. It's built using pluggable pieces, rather than one large monolithic system. &lt;/li&gt;    &lt;li&gt;It's built using interfaces like IUser and IRole that allow for unit testing, dependency injection, etc. &lt;/li&gt;    &lt;li&gt;You can easily add user profile data (e.g. URL, twitter handle, birthday). You just add properties to your ApplicationUser model and they'll automatically be persisted. &lt;/li&gt;    &lt;li&gt;Complete control over how the identity data is persisted. By default, everything works with Entity Framework Code First, but it's built to support changes from small (modify the schema) to big (use another ORM, store your data in a document database or in the cloud or in XML or in the EXIF data of your desktop background or whatever). &lt;/li&gt;    &lt;li&gt;It's configured via OWIN. More on OWIN and Katana later, but the fact that it's built using OWIN means it's portable. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can find out more in the &lt;a href="http://www.asp.net/aspnet/overview/authentication-and-identity"&gt;Authentication and Identity section of the ASP.NET site&lt;/a&gt; (and lots more content will be going up there soon).&lt;/p&gt;  &lt;h2&gt;New Bootstrap based project templates&lt;/h2&gt;  &lt;p&gt;The new project templates are built using Bootstrap 3. &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; (formerly Twitter Bootstrap) is a front-end framework that brings a lot of nice benefits:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;It's responsive, so your projects will automatically scale to device width using CSS media queries. For example, menus are full size on a desktop browser, but on narrower screens you automatically get a mobile-friendly menu. &lt;/li&gt;    &lt;li&gt;The built-in Bootstrap styles make your standard page elements (headers, footers, buttons, form inputs, tables etc.) look nice and modern. &lt;/li&gt;    &lt;li&gt;Bootstrap is themeable, so you can reskin your whole site by dropping in a new Bootstrap theme. Since Bootstrap is pretty popular across the web development community, this gives you a large and rapidly growing variety of templates (free and paid) to choose from. &lt;/li&gt;    &lt;li&gt;Bootstrap also includes a lot of very useful things: components (like progress bars and badges), useful &lt;a href="http://getbootstrap.com/components/#glyphicons"&gt;glyphicons&lt;/a&gt;, and some jQuery plugins for tooltips, dropdowns, carousels, etc.). &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Here's a look at how the responsive part works. When the page is full screen, the menu and header are optimized for a wide screen display:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h14_50" href="http://www.flickr.com/photos/36836555@N00/10333317854/"&gt;&lt;img border="0" alt="2013-10-17_12h14_50" src="http://farm8.static.flickr.com/7333/10333317854_1c4e65e969.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;When I shrink the page down (this is all based on page width, not useragent sniffing) the menu turns into a nice mobile-friendly dropdown:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h15_12" href="http://www.flickr.com/photos/36836555@N00/10333498983/"&gt;&lt;img border="0" alt="2013-10-17_12h15_12" src="http://farm4.static.flickr.com/3698/10333498983_cc37fdf536.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;For a quick example, I grabbed a new free theme off &lt;a href="http://bootswatch.com/"&gt;bootswatch.com&lt;/a&gt;. For simple themes, you just need to download the boostrap.css file and replace the /content/bootstrap.css file in your project.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h27_44" href="http://www.flickr.com/photos/36836555@N00/10333348956/"&gt;&lt;img border="0" alt="2013-10-17_12h27_44" src="http://farm6.static.flickr.com/5503/10333348956_d34447d214.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now when I refresh the page, I've got a new theme:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h27_33" href="http://www.flickr.com/photos/36836555@N00/10333327544/"&gt;&lt;img border="0" alt="2013-10-17_12h27_33" src="http://farm4.static.flickr.com/3700/10333327544_a506aa8e72.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Scaffolding&lt;/h2&gt;  &lt;p&gt;The big change in scaffolding is that it's one system that works across ASP.NET. You can create a new Empty Web project or Web Forms project and you'll get the Scaffold context menus.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h36_14" href="http://www.flickr.com/photos/36836555@N00/10333443175/"&gt;&lt;img border="0" alt="2013-10-17_12h36_14" src="http://farm4.static.flickr.com/3769/10333443175_5f83991f24_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;For release, we've got MVC 5 and Web API 2 controllers. We had a preview of Web Forms scaffolding in the preview releases, but they weren't fully baked for RTM. Look for them in a future update, expected pretty soon.&lt;/p&gt;  &lt;p&gt;This scaffolding system wasn't just changed to work across the ASP.NET frameworks, it's also built to enable future extensibility. That's not in this release, but should also hopefully be out soon.&lt;/p&gt;  &lt;h2&gt;Project Readme page&lt;/h2&gt;  &lt;p&gt;This is a small thing, but I really like it. When you create a new project, you get a Project_Readme.html page that's added to the root of your project and opens in the Visual Studio built-in browser.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_14h25_35" href="http://www.flickr.com/photos/36836555@N00/10335264663/"&gt;&lt;img border="0" alt="2013-10-17_14h25_35" src="http://farm4.static.flickr.com/3750/10335264663_304a16c2f9_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I love it.&lt;/p&gt;  &lt;p&gt;A long time ago, when you created a new project we just dumped it on you and left you scratching your head about what to do next. Not ideal.&lt;/p&gt;  &lt;p&gt;Then we started adding a bunch of Getting Started information to the new project templates. That told you what to do next, but you had to delete all of that stuff out of your website. It doesn't belong there. Not ideal.&lt;/p&gt;  &lt;p&gt;This is a simple HTML file that's not integrated into your project code at all. You can delete it if you want. But, it shows a lot of helpful links that are current for the project you just created. In the future, if we add new wacky project types, they can create readme docs with specific information on how to do appropriately wacky things.&lt;/p&gt;  &lt;p&gt;Side note: I really like that they used the internal browser in Visual Studio to show this content rather than popping open an HTML page in the default browser. I hate that. It's annoying. If you're doing that, I hope you'll stop. What if some unnamed person has 40 or 90 tabs saved in their browser session? When you pop open your &amp;quot;Thanks for installing my Visual Studio extension!&amp;quot; page, all eleventy billion tabs start up and I wish I'd never installed your thing. Be like these guys and pop stuff Visual Studio specific HTML docs in the Visual Studio browser.&lt;/p&gt;  &lt;h2&gt;ASP.NET MVC 5&lt;/h2&gt;  &lt;p&gt;The biggest change with ASP.NET MVC 5 is that it's no longer a separate project type. It integrates well with the rest of ASP.NET.&lt;/p&gt;  &lt;p&gt;In addition to that and the other common features we've already looked at (Bootstrap templates, Identity, authentication), here's what's new for ASP.NET MVC.&lt;/p&gt;  &lt;h3&gt;Attribute routing&lt;/h3&gt;  &lt;p&gt;ASP.NET MVC now supports attribute routing, thanks to a contribution by Tim McCall, the author of &lt;a href="http://attributerouting.net/"&gt;http://attributerouting.net&lt;/a&gt;. With attribute routing you can specify your routes by annotating your actions and controllers. This supports some pretty complex, customized routing scenarios, and it allows you to keep your route information right with your controller actions if you'd like.&lt;/p&gt;  &lt;p&gt;Here's a controller that includes an action whose method name is Hiding, but I've used AttributeRouting to configure it to /spaghetti/with-nesting/where-is-waldo&lt;/p&gt;  &lt;pre class="brush: csharp; auto-links: false;"&gt;public class SampleController : Controller
{

    [Route(&amp;quot;spaghetti/with-nesting/where-is-waldo&amp;quot;)]
    public string Hiding() 
    {
        return &amp;quot;You found me!&amp;quot;;
    }
}&lt;/pre&gt;

&lt;p&gt;I enable that in my RouteConfig.cs, and I can use that in conjunction with my other MVC routes like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class RouteConfig
{
    public static void RegisterRoutes(RouteCollection routes)
    {
        routes.IgnoreRoute(&amp;quot;{resource}.axd/{*pathInfo}&amp;quot;);

        routes.MapMvcAttributeRoutes();

        routes.MapRoute(
            name: &amp;quot;Default&amp;quot;,
            url: &amp;quot;{controller}/{action}/{id}&amp;quot;,
            defaults: new { controller = &amp;quot;Home&amp;quot;, action = &amp;quot;Index&amp;quot;, id = UrlParameter.Optional }
        );
    }
}&lt;/pre&gt;

&lt;p&gt;&lt;a title="2013-10-17_14h06_56" href="http://www.flickr.com/photos/36836555@N00/10334803914/"&gt;&lt;img border="0" alt="2013-10-17_14h06_56" src="http://farm6.static.flickr.com/5536/10334803914_bb41127fc4.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx"&gt;more about Attribute Routing in ASP.NET MVC 5 here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Filter enhancements&lt;/h3&gt;

&lt;p&gt;There are two new additions to filters: Authentication Filters and Filter Overrides.&lt;/p&gt;

&lt;p&gt;Authentication filters are a new kind of filter in ASP.NET MVC that run prior to authorization filters in the ASP.NET MVC pipeline and allow you to specify authentication logic per-action, per-controller, or globally for all controllers. Authentication filters process credentials in the request and provide a corresponding principal. Authentication filters can also add authentication challenges in response to unauthorized requests.&lt;/p&gt;

&lt;p&gt;Override filters let you change which filters apply to a given action method or controller. Override filters specify a set of filter types that should not be run for a given scope (action or controller). This allows you to configure filters that apply globally but then exclude certain global filters from applying to specific actions or controllers.&lt;/p&gt;

&lt;h2&gt;ASP.NET Web API 2&lt;/h2&gt;

&lt;p&gt;ASP.NET Web API 2 includes a lot of new features.&lt;/p&gt;

&lt;h3&gt;Attribute Routing&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API supports the same attribute routing system that's in ASP.NET MVC 5. You can read more about the Attribute Routing features in Web API in this &lt;a href="http://www.asp.net/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;OAuth 2.0&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API picks up OAuth 2.0 support, using security middleware running on OWIN (discussed below). This is great for features like authenticated Single Page Applications.&lt;/p&gt;

&lt;h3&gt;OData Improvements&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API now has full OData support. That required adding in some of the most powerful operators: $select, $expand, $batch and $value. You can read more about &lt;a href="http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/using-$select,-$expand,-and-$value"&gt;OData operator support in this article by Mike Wasson&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lots more&lt;/p&gt;

&lt;p&gt;There's a huge list of other features, including CORS (cross-origin request sharing), IHttpActionResult, IHttpRequestContext, and more. I think the best overview is in the &lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;OWIN and Katana&lt;/h2&gt;

&lt;p&gt;I've written about &lt;a href="weblogs.asp.net/jgalloway/archive/2013/05/30/getting-up-to-speed-with-katana.aspx"&gt;OWIN and Katana recently&lt;/a&gt;. I'm a big fan.&lt;/p&gt;

&lt;p&gt;OWIN is the Open Web Interfaces for .NET. It's a spec, like HTML or HTTP, so you can't install OWIN. The benefit of OWIN is that it's a community specification, so anyone who implements it can plug into the ASP.NET stack, either as middleware or as a host.&lt;/p&gt;

&lt;p&gt;Katana is the Microsoft implementation of OWIN. It leverages OWIN to wire up things like authentication, handlers, modules, IIS hosting, etc., so ASP.NET can host OWIN components and Katana components can run in someone else's OWIN implementation.&lt;/p&gt;

&lt;p&gt;Howard Dierking just wrote a cool article in MSDN magazine describing Katana in depth: &lt;a href="http://msdn.microsoft.com/en-us/magazine/dn451439.aspx"&gt;Getting Started with the Katana Project&lt;/a&gt;. He had an interesting example showing an OWIN based pipeline which leveraged SignalR, ASP.NET Web API and NancyFx components in the same stack.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.msdn.microsoft.com/dn451439.Dierking_Figure11_hires(en-us,MSDN.10).png" /&gt;&lt;/p&gt;

&lt;p&gt;If this kind of thing makes sense to you, that's great. If it doesn't, don't worry, but keep an eye on it. You're going to see some cool things happen as a result of ASP.NET becoming more and more pluggable.&lt;/p&gt;

&lt;h2&gt;Visual Studio Web Tools&lt;/h2&gt;

&lt;p&gt;Okay, this stuff's just crazy. Visual Studio has been adding some nice web dev features over the past few years, but they've really cranked it up for this release. &lt;/p&gt;

&lt;p&gt;Visual Studio is by far my favorite code editor for all web files: CSS, HTML, JavaScript, and lots of popular libraries. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stop thinking of Visual Studio as a big editor that you only use to write back-end code. Stop editing HTML and CSS in Notepad (or Sublime, Notepad++, etc.). Visual Studio starts up in under 2 seconds on a modern computer with an SSD. Misspelling HTML attributes or your CSS classes or jQuery or Angular syntax is stupid. It doesn't make you a better developer, it makes you a silly person who wastes time.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Browser Link&lt;/h3&gt;

&lt;p&gt;Browser Link is a real-time, two-way connection between Visual Studio and all connected browsers. It's only attached when you're running locally, in debug, but it applies to any and all connected browser, including emulators.&lt;/p&gt;

&lt;p&gt;You may have seen demos that showed the browsers refreshing based on changes in the editor, and I'll agree that's pretty cool. But it's really just the start. It's a two-way connection, and it's built for extensiblity. That means you can write extensions that push information from your running application (in IE, Chrome, a mobile emulator, etc.) back to Visual Studio. Mads and team have showed off some demonstrations where they enabled edit mode in the browser which updated the source HTML back on the browser. It's also possible to look at how the rendered HTML performs, check for compatibility issues, watch for unused CSS classes, the sky's the limit.&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Browser-Link/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;h3&gt;New HTML editor&lt;/h3&gt;

&lt;p&gt;The previous HTML editor had a lot of old code that didn't allow for improvements. The team rewrote the HTML editor to take advantage of the new(ish) extensibility features in Visual Studio, which then allowed them to &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/09/30/html-editing-features-in-visual-studio-2013-rc.aspx"&gt;add in all kinds of features&lt;/a&gt; - things like CSS Class and ID IntelliSense (so you type style=&amp;quot;&amp;quot; and get a list of classes and ID's for your project), smart indent based on how your document is formatted, JavaScript reference auto-sync, etc.&lt;/p&gt;

&lt;p&gt;Here's a 3 minute tour from Mads Kristensen.&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;h3&gt;Integrated Windows Azure Web Site creation and publishing&lt;/h3&gt;

&lt;p&gt;The &lt;a href="http://manage.windowsazure.com"&gt;Windows Azure portal&lt;/a&gt; is good as websites go, but it's another step to have to go to the portal to create a site, then download the publish profile, then import it into my site. It's like ten clicks or something and it just gets really fatiguing and sometimes I need a nap.&lt;/p&gt;

&lt;p&gt;They've updated the Server Explorer in Visual Studio 2013 so I can just right-click on the Windows Azure node to create a site. Then when I'm publishing, I can directly import the site publish profile and go. That means I can create a new Windows Azure Web Site, with a free 20 MB SQL Database, and publish it to Windows Azure all without leaving Visual Studio. That's really nice.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-10-17_15h56_26" href="http://www.flickr.com/photos/36836555@N00/10336195204/"&gt;&lt;img border="0" alt="2013-10-17_15h56_26" src="http://farm6.static.flickr.com/5504/10336195204_4ef39abec8_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More about that on this post: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/09/11/creating-new-windows-azure-web-site-from-visual-studio-2013-rc.aspx"&gt;Creating New Windows Azure Web Site from Visual Studio 2013 RC&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Lots more Visual Studio web dev features&lt;/h3&gt;

&lt;p&gt;That's just a sampling - there's a ton of great features for JavaScript editing, CSS editing, publishing, and Page Inspector (which shows real-time rendering of your page inside Visual Studio). &lt;a href="http://www.asp.net/visual-studio"&gt;Here are some more short videos&lt;/a&gt; showing those features.&lt;/p&gt;

&lt;p&gt;Lots, lots more&lt;/p&gt;

&lt;p&gt;Okay, that's just a summary, and it's still quite a bit. Head on over to &lt;a href="http://asp.net/vnext"&gt;http://asp.net/vnext&lt;/a&gt; for more information, and download Visual Studio 2013 now to get started!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=fuTNlQi-uU4:gjakaa3SaQs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/fuTNlQi-uU4" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 17 Oct 2013 21:36:03 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/top-things-web-developers-should-know-about-the-visual-studio-2013-release</feedburner:origLink></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML5</guid><link>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML5</link><category>HTML 5</category><category>Visual Studio 2013</category><title>Visual Studio 2013 Web Editor Features - HTML5</title><description>&lt;p&gt;Scott Hanselman overviews HTML5 features in the Visual Studio web developer tools.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:348dd8c9519b4e2eb235a25a0158903e"&gt;</description><pubDate>Thu, 17 Oct 2013 21:07:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5.wmv" type="video/x-ms-wmv" length="12490985" /><comments>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman overviews HTML5 features in the Visual Studio web developer tools. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">286</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5.mp3" expression="full" duration="286" fileSize="4581426" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5.mp4" expression="full" duration="286" fileSize="29489153" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5.webm" expression="full" duration="286" fileSize="12347994" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5.wmv" expression="full" duration="286" fileSize="12490985" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_high.mp4" expression="full" duration="286" fileSize="65061667" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_mid.mp4" expression="full" duration="286" fileSize="45543180" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/e725/84592157-6288-4822-88c3-bfa4436de725/visualstudio2013html5_Source.wmv" expression="full" duration="286" fileSize="13315329" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML5/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Page-Inspector</guid><link>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Page-Inspector</link><category>Visual Studio 2013</category><title>Visual Studio 2013 Web Editor Features - Page Inspector</title><description>&lt;p&gt;Scott Hansleman shows how the Page Inspector feature in Visual Studio 2013 allows you to work interactively with the rendered page markup, fully integrated with the source code that rendered it.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:4de754ea67f141eda4e1a258014ffb61"&gt;</description><pubDate>Thu, 17 Oct 2013 10:24:28 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector.wmv" type="video/x-ms-wmv" length="14379563" /><comments>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Page-Inspector</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hansleman shows how the Page Inspector feature in Visual Studio 2013 allows you to work interactively with the rendered page markup, fully integrated with the source code that rendered it. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">313</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector.mp3" expression="full" duration="313" fileSize="5019875" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector.mp4" expression="full" duration="313" fileSize="32852769" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector.webm" expression="full" duration="313" fileSize="14328927" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector.wmv" expression="full" duration="313" fileSize="14379563" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_high.mp4" expression="full" duration="313" fileSize="71606356" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_mid.mp4" expression="full" duration="313" fileSize="50298284" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/5aa1/1c0923d3-ccd7-4b02-b555-e792575b5aa1/vs2013pageinspector_Source.wmv" expression="full" duration="313" fileSize="16581745" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Page-Inspector/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor</guid><link>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor</link><category>HTML5</category><category>Visual Studio 2013</category><title>Visual Studio 2013 Web Editor Features - HTML Editor</title><description>&lt;p&gt;Mads Kristensen shows off HTML editor features in Visual Studio 2013, including full IntelliSense for HTML elements, all CSS classes and ID's in your project, HTML entities, rich snippets, drag and drop for media, support for modern libraries like AngularJS, KnockoutJS and Handlebars, and a variety of meta tags.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:86d02bb68a7d4d479774a25801561895"&gt;</description><pubDate>Wed, 16 Oct 2013 21:23:47 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor.wmv" type="video/x-ms-wmv" length="8498585" /><comments>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen shows off HTML editor features in Visual Studio 2013, including full IntelliSense for HTML elements, all CSS classes and ID's in your project, HTML entities, rich snippets, drag and drop for media, support for modern libraries like AngularJS, KnockoutJS and Handlebars, and a variety of meta tags. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">214</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor.mp3" expression="full" duration="214" fileSize="3433303" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor.mp4" expression="full" duration="214" fileSize="16363703" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor.webm" expression="full" duration="214" fileSize="6394332" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor.wmv" expression="full" duration="214" fileSize="8498585" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_high.mp4" expression="full" duration="214" fileSize="42887529" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_mid.mp4" expression="full" duration="214" fileSize="27166763" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/6108/d877339d-1c25-4e36-b1ba-a8dbc6086108/vs2013htmleditor_Source.wmv" expression="full" duration="214" fileSize="8034949" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Publishing</guid><link>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Publishing</link><category>Visual Studio 2013</category><title>Visual Studio 2013 Web Editor Features - Publishing</title><description>&lt;p&gt;Scott Hanselman overviews the web publishing features in Visual Studio 2013.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:298af46294ac466f9a89a258014d8a17"&gt;</description><pubDate>Wed, 16 Oct 2013 21:22:53 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing.wmv" type="video/x-ms-wmv" length="9610121" /><comments>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Publishing</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman overviews the web publishing features in Visual Studio 2013. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">214</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing.mp3" expression="full" duration="214" fileSize="3428279" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing.mp4" expression="full" duration="214" fileSize="21622586" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing.webm" expression="full" duration="214" fileSize="9127218" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing.wmv" expression="full" duration="214" fileSize="9610121" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_high.mp4" expression="full" duration="214" fileSize="51069576" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_mid.mp4" expression="full" duration="214" fileSize="35112094" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/b6a1/10305961-15e5-424c-a346-f8441ddcb6a1/vs2013publishing_Source.wmv" expression="full" duration="214" fileSize="11802119" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Publishing/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-JavaScript</guid><link>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-JavaScript</link><title>Visual Studio 2013 Web Editor Features - JavaScript</title><description>&lt;p&gt;Scott Hanselman explains the JavaScript editor features in Visual Studio 2013.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Glucose/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:40f66410ea2342a388c4a258014c6c02"&gt;</description><pubDate>Wed, 16 Oct 2013 21:22:39 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript.wmv" type="video/x-ms-wmv" length="9759545" /><comments>http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-JavaScript</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman explains the JavaScript editor features in Visual Studio 2013. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">218</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript.mp3" expression="full" duration="218" fileSize="3504530" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript.mp4" expression="full" duration="218" fileSize="21043017" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript.webm" expression="full" duration="218" fileSize="9891823" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript.wmv" expression="full" duration="218" fileSize="9759545" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_high.mp4" expression="full" duration="218" fileSize="45488233" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_mid.mp4" expression="full" duration="218" fileSize="32027576" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/99e1/dd20bebb-ff9f-4b6f-87f5-c4dd4a5599e1/vs2013javascript_Source.wmv" expression="full" duration="218" fileSize="12831195" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Scott Hanselman</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-JavaScript/RSS</wfw:commentRss></item><item><guid isPermaLink="true">http://channel9.msdn.com/Blogs/webdev/Intro</guid><link>http://channel9.msdn.com/Blogs/webdev/Intro</link><category>ASP.NET</category><category>Visual Studio</category><title>Introducing Web Development and Tooling TV</title><description>&lt;p&gt;Welcome to the ASP.NET and Visual Studio Web Tools team's new video section here on Channel9. In this episode we talk to Scott Hunter - the Principal Group Program Manager of the web team.&lt;/p&gt;&lt;p&gt;Please tell us what subjects you'd like us talk about in future episodes in the comments below.&lt;/p&gt;&lt;p&gt;Follow &lt;a href="https://twitter.com/coolcsh"&gt;Scott&lt;/a&gt; and &lt;a href="https://twitter.com/mkristensen"&gt;Mads&lt;/a&gt; on Twitter.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Niners/Mads Kristensen/Posts/RSS&amp;WT.dl=0&amp;WT.entryid=Entry:RSSView:b2eb2d057cac4faf91fea25401572ee6"&gt;</description><pubDate>Mon, 14 Oct 2013 10:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.wmv" type="video/x-ms-wmv" length="56123729" /><comments>http://channel9.msdn.com/Blogs/webdev/Intro</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Welcome to the ASP.NET and Visual Studio Web Tools team's new video section here on Channel9. In this episode we talk to Scott Hunter - the Principal Group Program Manager of the web team. Please tell us what subjects you'd like us talk about in future episodes in the comments below. Follow Scott and Mads on Twitter. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">614</itunes:duration><media:thumbnail url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_100.jpg" height="56" width="100" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_220.jpg" height="123" width="220" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_512.jpg" height="288" width="512" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_960.jpg" height="540" width="960" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:group xmlns:media="http://search.yahoo.com/mrss/">
        <media:content url="http://smooth.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.ism/manifest" expression="full" duration="614" fileSize="5996" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.mp3" expression="full" duration="614" fileSize="9819858" type="audio/mp3" medium="audio"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.mp4" expression="full" duration="614" fileSize="57876559" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.webm" expression="full" duration="614" fileSize="54960577" type="video/webm" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1.wmv" expression="full" duration="614" fileSize="56123729" type="video/x-ms-wmv" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_high.mp4" expression="full" duration="614" fileSize="127048070" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_mid.mp4" expression="full" duration="614" fileSize="88690575" type="video/mp4" medium="video"></media:content>
        <media:content url="http://video.ch9.ms/ch9/dc53/b0b958f1-9bee-48a3-98aa-10bf8733dc53/Episode1_Source.wmv" expression="full" duration="614" fileSize="125598973" type="video/x-ms-wmv" medium="video"></media:content>
      </media:group><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mads Kristensen</dc:creator><itunes:author xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mads Kristensen</itunes:author><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://channel9.msdn.com/Blogs/webdev/Intro/RSS</wfw:commentRss></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,77e46179-7ed7-4741-af4d-47148e9a74a1.aspx</guid><link>http://sedodream.com/2013/10/11/SideWaffleHowToCreateYourOwnVSTemplatePack.aspx</link><category>extensibility</category><category>SideWaffle</category><category>Visual Studio</category><category>Visual Studio 2012</category><category>VSIX</category><title>SideWaffle: How to create your own VS template pack</title><description>&lt;p&gt;
If you haven’t heard I’m working on a project with &lt;a href="http://madskristensen.net/"&gt;Mads
Kristensen&lt;/a&gt; called &lt;a href="http://sidewaffle.com/"&gt;SideWaffle&lt;/a&gt;. SideWaffle
is a Visual Studio Extension which contains many different Visual Studio Item and
Project Templates. This is a community effort and all open source at &lt;a href="https://github.com/ligershark/template-builder"&gt;https://github.com/ligershark/template-builder&lt;/a&gt;.
You can create your own Item Templates and Project Templates and send a Pull Request
for them to be included in the main repo. Check out the video below for more info
on SideWaffle.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;SideWaffle intro video&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;iframe height="315" src="//www.youtube.com/embed/bEt0MFksmpU" frameborder="0" width="420" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
Item Templates are used by VS developers to create files using the Add New Item dialog.
SideWaffle already contains a number of Item Templates such as; Angular Controller,
robots.txt, SignalR Hub and Client, etc. For more info on how to create Item Templates
with SideWaffle watch the 4 minute video below.
&lt;/p&gt;
&lt;iframe height="315" src="//www.youtube.com/embed/naY3jbBNNgY" frameborder="0" width="420" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Project Templates are the items that show up in the Add New Project dialog. They provide
a starting point for developers creating new projects. SideWaffle already has a few
project templates as well, such as a &lt;a href="http://www.youtube.com/watch?v=gX5RrCHNvgs"&gt;Google
Chrome Extension&lt;/a&gt;. You can learn more about how to create Project Templates in
this video.
&lt;/p&gt;
&lt;iframe height="315" src="//www.youtube.com/embed/NChUqnArTrI" frameborder="0" width="420" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Now that we’ve gotten the intro out of the way, let’s explore how you can create your
own SideWaffle.
&lt;/p&gt;
&lt;h3&gt;How to create your own SideWaffle
&lt;/h3&gt;
&lt;p&gt;
The idea behind SideWaffle is that we will have a shared VS extension for popular
VS Item and Project Templates. Instead of contributing to the main SideWaffle project
you may be interested in creating your own distribution that does not have the standard
templates. For example, I’ve heard from both the &lt;a href="http://orchard.codeplex.com"&gt;Orchard&lt;/a&gt; and &lt;a href="http://umbraco.com/"&gt;Umbraco&lt;/a&gt; that
they are interested in creating template packs for their communities. It wouldn’t
make much sense to include those templates in the main SideWaffle project. Instead
it would be best to create a separate distribution for each; OrchardWaffle and UmbracoWaffle.
&lt;/p&gt;
&lt;p&gt;
So how can you do this? It’s pretty easy actually. SideWaffle is built on top of a
NuGet package, TemplateBuilder, which is also open source at &lt;a href="https://github.com/ligershark/template-builder"&gt;https://github.com/ligershark/template-builder&lt;/a&gt;.
All the core functionality of SideWaffle is contained in that NuGet package. To create
your own SideWaffle follow these steps:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
If you don’t have it already download and install the Visual Studio SDK, here is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=30668"&gt;2012
version&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
Create a new Visual Studio Package project&lt;/li&gt;
&lt;li&gt;
From the package manager console execute &lt;strong&gt;Install-Package TemplateBuilder –pre&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
After you add the TemplateBuilder NuGet package a few things happen:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
The build process of the project is modified to support building Item and Project
templates&lt;/li&gt;
&lt;li&gt;
Your .vsixmanifest file is updated with two new Asset tags&lt;/li&gt;
&lt;li&gt;
An ItemTemplates folder is created with a sample Item Template&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
From here on you can build the project and after installing the generated .vsix you
can have users easily create instances of your item or project templates.
&lt;/p&gt;
&lt;p&gt;
You can add additional Item Templates, as well as create Project Templates in your
project. That’s pretty much all there is to getting started with your own Waffle pack. 
&lt;/p&gt;
&lt;p&gt;
Let me know if you have any issues or comments.
&lt;/p&gt;
&lt;p&gt;
Happy Waffleing!
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Fri, 11 Oct 2013 16:11:26 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=77e46179-7ed7-4741-af4d-47148e9a74a1</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,77e46179-7ed7-4741-af4d-47148e9a74a1.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
If you haven’t heard I’m working on a project with <a href="http://madskristensen.net/">Mads
Kristensen</a> called <a href="http://sidewaffle.com/">SideWaffle</a>. SideWaffle
is a Visual Studio Extension which contains many different Visual Studio Item and
Project Templates. This is a community effort and all open source at <a href="https://github.com/ligershark/template-builder">https://github.com/ligershark/template-builder</a>.
You can create your own Item Templates and Project Templates and send a Pull Request
for them to be included in the main repo. Check out the video below for more info
on SideWaffle.
</p>
        <p>
          <strong>
            <u>SideWaffle intro video</u>
          </strong>
        </p>
        <iframe height="315" src="//www.youtube.com/embed/bEt0MFksmpU" frameborder="0" width="420" allowfullscreen="allowfullscreen">
        </iframe>
        <p>
Item Templates are used by VS developers to create files using the Add New Item dialog.
SideWaffle already contains a number of Item Templates such as; Angular Controller,
robots.txt, SignalR Hub and Client, etc. For more info on how to create Item Templates
with SideWaffle watch the 4 minute video below.
</p>
        <iframe height="315" src="//www.youtube.com/embed/naY3jbBNNgY" frameborder="0" width="420" allowfullscreen="allowfullscreen">
        </iframe>
        <p>
 
</p>
        <p>
Project Templates are the items that show up in the Add New Project dialog. They provide
a starting point for developers creating new projects. SideWaffle already has a few
project templates as well, such as a <a href="http://www.youtube.com/watch?v=gX5RrCHNvgs">Google
Chrome Extension</a>. You can learn more about how to create Project Templates in
this video.
</p>
        <iframe height="315" src="//www.youtube.com/embed/NChUqnArTrI" frameborder="0" width="420" allowfullscreen="allowfullscreen">
        </iframe>
        <p>
 
</p>
        <p>
Now that we’ve gotten the intro out of the way, let’s explore how you can create your
own SideWaffle.
</p>
        <h3>How to create your own SideWaffle
</h3>
        <p>
The idea behind SideWaffle is that we will have a shared VS extension for popular
VS Item and Project Templates. Instead of contributing to the main SideWaffle project
you may be interested in creating your own distribution that does not have the standard
templates. For example, I’ve heard from both the <a href="http://orchard.codeplex.com">Orchard</a> and <a href="http://umbraco.com/">Umbraco</a> that
they are interested in creating template packs for their communities. It wouldn’t
make much sense to include those templates in the main SideWaffle project. Instead
it would be best to create a separate distribution for each; OrchardWaffle and UmbracoWaffle.
</p>
        <p>
So how can you do this? It’s pretty easy actually. SideWaffle is built on top of a
NuGet package, TemplateBuilder, which is also open source at <a href="https://github.com/ligershark/template-builder">https://github.com/ligershark/template-builder</a>.
All the core functionality of SideWaffle is contained in that NuGet package. To create
your own SideWaffle follow these steps:
</p>
        <ul>
          <li>
If you don’t have it already download and install the Visual Studio SDK, here is <a href="http://www.microsoft.com/en-us/download/details.aspx?id=30668">2012
version</a></li>
          <li>
Create a new Visual Studio Package project</li>
          <li>
From the package manager console execute <strong>Install-Package TemplateBuilder –pre</strong></li>
        </ul>
        <p>
After you add the TemplateBuilder NuGet package a few things happen:
</p>
        <ol>
          <li>
The build process of the project is modified to support building Item and Project
templates</li>
          <li>
Your .vsixmanifest file is updated with two new Asset tags</li>
          <li>
An ItemTemplates folder is created with a sample Item Template</li>
        </ol>
        <p>
From here on you can build the project and after installing the generated .vsix you
can have users easily create instances of your item or project templates.
</p>
        <p>
You can add additional Item Templates, as well as create Project Templates in your
project. That’s pretty much all there is to getting started with your own Waffle pack. 
</p>
        <p>
Let me know if you have any issues or comments.
</p>
        <p>
Happy Waffleing!
</p>
        <p>
 
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/QOdcMf3dg0Q/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</link><title>Free 6 hour online course - Developing ASP.NET MVC 4 Web Applications Jump Start</title><description>&lt;p&gt;&lt;strong&gt;The videos for the Developing ASP.NET MVC 4 Web Applications Jump Start Jump Start event are live on Microsoft Virtual Academy. This is an entire 9 session course, covering the official &lt;/strong&gt;&lt;a href="http://www.microsoft.com/learning/en-us/course.aspx?ID=20486B"&gt;&lt;strong&gt;ASP.NET MVC certification course material&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;. &lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;If you've been wanting to learn more about ASP.NET MVC - or are perhaps studying for the ASP.NET MVC 4 certification (&lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;70-486&lt;/a&gt;), this is a great way to get started.&lt;/p&gt;  &lt;p&gt;If you have friends or co-workers who are learning ASP.NET MVC, please share this with them.&lt;/p&gt;  &lt;p&gt;I had the privilege of working with &lt;a href="http://blog.geektrainer.com/p/about-christopher.html"&gt;Christopher Harrison&lt;/a&gt;, an actual professional trainer who knows this course material pretty well. I think the end result turned out really well - just as I was typing this post I heard from someone who told me how much they enjoyed it:&amp;#160; &lt;strong&gt;&lt;em&gt;&amp;quot;It's definitely a solid ramp up for people who are new (like myself) to MVC. Also, much more entertaining then most other tutorials I've seen around.&amp;quot;&lt;/em&gt;&lt;/strong&gt; That's exactly what we were hoping for - serious training that's fun to watch.&lt;/p&gt;  &lt;p&gt;For example, there were several surprise spaghetti awards given out by the video crew during the day.&lt;/p&gt;  &lt;p&gt;&lt;a title="Bonus spaghetti at MVA ASP.NET MVC 4 Jump Start" href="http://www.flickr.com/photos/36836555@N00/10175006723/"&gt;&lt;img border="0" alt="Bonus spaghetti at MVA ASP.NET MVC 4 Jump Start" src="http://farm3.static.flickr.com/2860/10175006723_8c21e761f8.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Take the course&lt;/h2&gt;  &lt;p&gt;The Microsoft Virtual Academy site has a nice system that tracks which modules you've completed, lets you download the slides for each course, etc. You can skip through the sessions as you want, and there's no big registration to go through to get started.&lt;/p&gt;  &lt;p&gt;So hop on over: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;What we covered&lt;/h2&gt;  &lt;p&gt;Here's a high level overview of what we covered:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Overview of ASP.NET MVC      &lt;ul&gt;       &lt;li&gt;What is ASP.NET MVC? &lt;/li&gt;        &lt;li&gt;How is ASP.NET MVC different from Web Forms? &lt;/li&gt;        &lt;li&gt;Why use ASP.NET MVC? &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Controllers and Models      &lt;ul&gt;       &lt;li&gt;Creating Controllers &lt;/li&gt;        &lt;li&gt;Adding Actions &lt;/li&gt;        &lt;li&gt;Creating MVC Models &lt;/li&gt;        &lt;li&gt;Working with Code First &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Views      &lt;ul&gt;       &lt;li&gt;Razor Syntax &lt;/li&gt;        &lt;li&gt;HTML Helpers &lt;/li&gt;        &lt;li&gt;Partial Views &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Integrating JavaScript and MVC      &lt;ul&gt;       &lt;li&gt;Using AJAX &lt;/li&gt;        &lt;li&gt;Using jQuery &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Implementing Web APIs      &lt;ul&gt;       &lt;li&gt;Developing Web API Controllers &lt;/li&gt;        &lt;li&gt;Calling HTTP Services from Client-Side Code &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Deploying ASP.NET MVC Site Walkthrough      &lt;ul&gt;       &lt;li&gt;Creating a site on Windows Azure Web Sites &lt;/li&gt;        &lt;li&gt;Deploying an ASP.NET MVC Application with Visual Studio Web Deploy &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;What’s Next and Resources      &lt;ul&gt;       &lt;li&gt;Sneak peak at Visual Studio 2013 (Preview) and ASP.NET MVC 5 tooling &lt;/li&gt;        &lt;li&gt;A look at real-time communications with SignalR &lt;/li&gt;        &lt;li&gt;Resources for keeping up with new ASP.NET releases &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Source Code&lt;/h2&gt;  &lt;p&gt;The source code for the session is available here: &lt;a href="http://sdrv.ms/1bHo6rU"&gt;sdrv.ms/1bHo6rU&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;No warranties&amp;#160; or anything on this - it's just what we built during the day. It is, however, based on the official ASP.NET MVC 4 course work, so if you do take the course it will be familiar.&lt;/p&gt;  &lt;h2&gt;Video from the course introduction&lt;/h2&gt;  &lt;p&gt;If you need a little more convincing, here's a video of the 30 minute introduction. &lt;/p&gt;  &lt;p&gt;&lt;em&gt;Disclaimer: This module starts with a quick introduction to ASP.NET MVC in general before we move systematically through the other components. Don't worry if it's too slow - or too fast - for you, &lt;/em&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;&lt;em&gt;the rest of the course&lt;/em&gt;&lt;/a&gt;&lt;em&gt; goes more slowly and in more depth through each topic. &lt;/em&gt;&amp;#160;&lt;/p&gt; &lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Dev-ASP-MVC4-WebApps/01/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;  &lt;h2&gt;Let us know!&lt;/h2&gt;  &lt;p&gt;Did you like this course? Want to see more, or something different? &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Please leave feedback on the course page - click the &amp;quot;Send feedback to the course owner&amp;quot; link&lt;/a&gt;.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=QOdcMf3dg0Q:Cs4WOpRpS3Q:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/QOdcMf3dg0Q" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 09 Oct 2013 20:17:34 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</feedburner:origLink></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/gX5RrCHNvgs</guid><link>https://www.youtube.com/watch?v=gX5RrCHNvgs&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Developing Google Chrome extensions with Visual Studio and SideWaffle</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=gX5RrCHNvgs&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/gX5RrCHNvgs/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=gX5RrCHNvgs&amp;amp;feature=youtube_gdata"&gt;Developing Google Chrome extensions with Visual Studio and SideWaffle&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video shows how you can easily develop Google Chrome Extensions with Visual Studio and SideWaffle&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
610&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_empty_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;3
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;04:13&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 08 Oct 2013 16:18:43 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/gX5RrCHNvgs" /><a10:updated>2015-02-10T18:42:07Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/bEt0MFksmpU</guid><link>https://www.youtube.com/watch?v=bEt0MFksmpU&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>What is SideWaffle Template Pack?</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=bEt0MFksmpU&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/bEt0MFksmpU/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=bEt0MFksmpU&amp;amp;feature=youtube_gdata"&gt;What is SideWaffle Template Pack?&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;Download SideWaffle Template Pack for Visual Studio 2012/2013 at http://sidewaffle.com&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
18320&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_half_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;24
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:45&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 07 Oct 2013 23:24:12 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/bEt0MFksmpU" /><a10:updated>2015-02-03T02:33:15Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/bM5oz_2OidI</guid><link>https://www.youtube.com/watch?v=bM5oz_2OidI&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials: Remove unused CSS</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=bM5oz_2OidI&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/bM5oz_2OidI/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=bM5oz_2OidI&amp;amp;feature=youtube_gdata"&gt;Web Essentials: Remove unused CSS&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;A preview of how we can easily identify and remove dead CSS code in our web projects&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
3915&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;22
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;03:09&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 07 Oct 2013 15:53:37 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/bM5oz_2OidI" /><a10:updated>2015-01-24T05:01:00Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/2wwfvQqHd7g</guid><link>https://www.youtube.com/watch?v=2wwfvQqHd7g&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials: Remote control mobile emulators</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=2wwfvQqHd7g&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/2wwfvQqHd7g/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=2wwfvQqHd7g&amp;amp;feature=youtube_gdata"&gt;Web Essentials: Remote control mobile emulators&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
454&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;7
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;01:43&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 02 Oct 2013 23:47:32 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/2wwfvQqHd7g" /><a10:updated>2014-01-19T02:07:55Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/kkKBqNJaylU</guid><link>https://www.youtube.com/watch?v=kkKBqNJaylU&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials: Browser tools integration</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=kkKBqNJaylU&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/kkKBqNJaylU/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=kkKBqNJaylU&amp;amp;feature=youtube_gdata"&gt;Web Essentials: Browser tools integration&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4780&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;41
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:14&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 02 Oct 2013 15:45:14 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/kkKBqNJaylU" /><a10:updated>2014-10-10T06:21:10Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/NChUqnArTrI</guid><link>https://www.youtube.com/watch?v=NChUqnArTrI&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to create a VS Project Template with SideWaffle</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=NChUqnArTrI&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/NChUqnArTrI/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=NChUqnArTrI&amp;amp;feature=youtube_gdata"&gt;How to create a VS Project Template with SideWaffle&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;*** This video is now OLD. Instead watch https://www.youtube.com/watch?v=z33jOo75CH4&amp;amp;list=UUwEinBp3Mx1UuAR52pzRcNw. 

This video shows how to create a new Visual Studio project template using SideWaffle&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4413&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;8
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:46&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 02 Oct 2013 21:38:17 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/NChUqnArTrI" /><a10:updated>2014-12-22T17:27:35Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/naY3jbBNNgY</guid><link>https://www.youtube.com/watch?v=naY3jbBNNgY&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>How to create a Visual Studio Item Templates SideWaffle</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=naY3jbBNNgY&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/naY3jbBNNgY/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=naY3jbBNNgY&amp;amp;feature=youtube_gdata"&gt;How to create a Visual Studio Item Templates SideWaffle&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video shows how to create an Item Template for Visual Studio using SideWaffle.

More info on SideWaffle at http://sidewaffle.com&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
4904&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;4
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;04:16&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 02 Oct 2013 21:21:44 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/naY3jbBNNgY" /><a10:updated>2014-11-01T15:01:52Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/p64xyAk0R9s</guid><link>https://www.youtube.com/watch?v=p64xyAk0R9s&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Essentials: Support for LoremPixel with ZenCoding</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=p64xyAk0R9s&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/p64xyAk0R9s/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=p64xyAk0R9s&amp;amp;feature=youtube_gdata"&gt;Web Essentials: Support for LoremPixel with ZenCoding&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This will be available in Web Essentials 2013 and hopefully 2012 as well. What do you think about this feature?&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2069&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;9
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:10&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 01 Oct 2013 18:16:45 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/p64xyAk0R9s" /><a10:updated>2014-11-11T11:04:57Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/94INFMu9ZbM</guid><link>https://www.youtube.com/watch?v=94INFMu9ZbM&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>VS2013: Use the HTML designer with static .html files</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=94INFMu9ZbM&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/94INFMu9ZbM/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=94INFMu9ZbM&amp;amp;feature=youtube_gdata"&gt;VS2013: Use the HTML designer with static .html files&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;You can still use the HTML designer in Visual Studio 2013, but it is not set up for it automatically. Here&amp;#39;s how you do that.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2800&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;17
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:25&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sun, 29 Sep 2013 14:41:33 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/94INFMu9ZbM" /><a10:updated>2015-02-10T15:58:16Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Uunhw75GJL8</guid><link>https://www.youtube.com/watch?v=Uunhw75GJL8&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Visual Studio 2013: Auto-sync JavaScript Intellisense</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Uunhw75GJL8&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Uunhw75GJL8/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Uunhw75GJL8&amp;amp;feature=youtube_gdata"&gt;Visual Studio 2013: Auto-sync JavaScript Intellisense&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
3902&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;20
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;02:58&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Sun, 29 Sep 2013 03:20:42 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/Uunhw75GJL8" /><a10:updated>2014-11-27T17:45:44Z</a10:updated></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,14e3bfc5-b31f-4994-917d-411e3c7d8240.aspx</guid><link>http://sedodream.com/2013/09/21/HowToExtendTheWebPublishProcessWithoutModifyingProjectContents.aspx</link><category>MSBuild</category><category>Visual Studio</category><category>Visual Studio 2012</category><category>web</category><category>Web Publishing Pipeline</category><title>How to extend the web publish process without modifying project contents</title><description>&lt;p&gt;
When automating web publishing for Visual Studio projects in many cases your first
step will be to create a publish profile for the project in VS. There are many cases
in which you cannot, or would not like to do this. In this post I’ll show you how
you can take an existing project and use an MSBuild file to drive the publish process.
In that I’ll also show how you can extend the publish process without modifying either
the project or any of its contents.
&lt;/p&gt;
&lt;p&gt;
Before we get too far into this, if you are not familiar with how to publish your
VS web projects from the command line you can read our docs at &lt;a href="http://www.asp.net/mvc/tutorials/deployment/visual-studio-web-deployment/command-line-deployment"&gt;ttp://www.asp.net/mvc/tutorials/deployment/visual-studio-web-deployment/command-line-deployment&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When you publish a project from the command line using a publish profile you typically
use the syntax below.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;msbuild .\MyProject.csproj /p:VisualStudioVersion=11.0 /p:DeployOnBuild=true /p:PublishProfile=&amp;lt;profile-name-or-path&amp;gt; 
&lt;/pre&gt;
&lt;p&gt;
In this snippet we are passing in a handful of properties. VisualStudioVersion dictates
which version of MSBuild targets are used during the build. See &lt;a href="http://sedodream.com/2012/08/19/VisualStudioProjectCompatabilityAndVisualStudioVersion.aspx"&gt;http://sedodream.com/2012/08/19/VisualStudioProjectCompatabilityAndVisualStudioVersion.aspx&lt;/a&gt; for
more details on that. DeployOnBuild=true injects the publish process at the end of
build. PublishProfile can either be the name of a publish profile which the project
contains &lt;strong&gt;or it can be the full path to a publish profile&lt;/strong&gt;. We will
use PublishProfile with that second option, the full path.
&lt;/p&gt;
&lt;p&gt;
So we need to pass in the full path to a publish profile, which typically is a .pubxml
file. A publish profile is just an MSBuild file. When you pass in PublishProfile and
DeployOnBuild=true, then the publish profile is Imported into the build/publish process.
It will supply the publish properties needed to perform the publish.
&lt;/p&gt;
&lt;p&gt;
Let’s see how that works. I have a sample project, MySite, which does not have any
publish profiles created for it. I have created a publish profile, ToFileSys.pubxml,
in another folder that will be used though. The contents of that file are below.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;ToFileSys.pubxml&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;&amp;lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&amp;gt;
  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;WebPublishMethod&amp;gt;FileSystem&amp;lt;/WebPublishMethod&amp;gt;
    &amp;lt;ExcludeApp_Data&amp;gt;False&amp;lt;/ExcludeApp_Data&amp;gt;
    &amp;lt;publishUrl&amp;gt;C:\temp\Publish\01&amp;lt;/publishUrl&amp;gt;
    &amp;lt;DeleteExistingFiles&amp;gt;False&amp;lt;/DeleteExistingFiles&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
This publish profile will publish to a local folder. I just created this file in VS
with a different project and then just copied it to the folder that I needed, and
removed properties which are only used for the inside of VS experience. We can publish
the MySite project using this profile with the command below.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;msbuild MySite.csproj 
            /p:VisualStudioVersion=11.0 
            /p:DeployOnBuild=true 
            /p:PublishProfile=C:\data\my-code\publish-samples\publish-injection\build\ToFileSys.pubxml 
&lt;/pre&gt;
&lt;p&gt;
When you execute this the file specified in PublishProfile will be included into the
build process.
&lt;/p&gt;
&lt;h3&gt;Taking it up a level
&lt;/h3&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/steps_2.jpg"&gt;&lt;img title="steps" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="steps" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/steps_thumb.jpg" width="644" height="445"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
Now let’s see how we can take this to the next level by having a single script that
will be used to publish more than one project using this technique.
&lt;/p&gt;
&lt;p&gt;
In the sample files (&lt;em&gt;which you can find links for at the end of the post&lt;/em&gt;).
I have a solution with two web projects, MySite and MyOtherSite. Neither of these
projects have any publish profiles created. I have created a script which will build/publish
these projects which you can find at &lt;em&gt;build\publish.proj&lt;/em&gt; in the samples. The
contents of the file are shown below.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;u&gt;publish.proj&lt;/u&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="BuildProjects"&amp;gt;
  &amp;lt;!-- 
  This file is used in two ways.
    1. Drive the build and publish process
    2. It is used by the publish process during the build of MySite to configure/extend publish
        Note: 1. Is kicked off by the use on the cmd line/build server. 2. Is invoked by this script itself.
              This file is injected into the publish process via the PublishProfile property.
  --&amp;gt;  
  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;VisualStudioVersion Condition=" '$(VisualStudioVersion)'=='' "&amp;gt;11.0&amp;lt;/VisualStudioVersion&amp;gt;
    &amp;lt;Configuration Condition=" '$(Configuration)'=='' "&amp;gt;Release&amp;lt;/Configuration&amp;gt;
    &amp;lt;!-- Location for build output of the project --&amp;gt;
    &amp;lt;OutputRoot Condition=" '$(OutputRoot)'=='' "&amp;gt;$(MSBuildThisFileDirectory)..\BuildOutput\&amp;lt;/OutputRoot&amp;gt;
    &amp;lt;!-- Root for the publish output --&amp;gt;
    &amp;lt;PublishFolder Condition=" '$(PublishFolder)'==''"&amp;gt;C:\temp\Publish\Output\&amp;lt;/PublishFolder&amp;gt;    
  &amp;lt;/PropertyGroup&amp;gt;
  
  &amp;lt;ItemGroup&amp;gt;
    &amp;lt;ProjectsToBuild Include="$(MSBuildThisFileDirectory)..\MySite\MySite.csproj"&amp;gt;
      &amp;lt;AdditionalProperties&amp;gt;
        VisualStudioVersion=$(VisualStudioVersion);
        Configuration=$(Configuration);
        OutputPath=$(OutputRoot);
        WebPublishMethod=FileSystem;
        publishUrl=$(PublishFolder)MySite\;
        DeployOnBuild=true;
        DeployTarget=WebPublish;
        PublishProfile=$(MSBuildThisFileFullPath)
      &amp;lt;/AdditionalProperties&amp;gt;
    &amp;lt;/ProjectsToBuild&amp;gt;

    &amp;lt;ProjectsToBuild Include="$(MSBuildThisFileDirectory)..\MyOtherSite\MyOtherSite.csproj"&amp;gt;
      &amp;lt;AdditionalProperties&amp;gt;
        VisualStudioVersion=$(VisualStudioVersion);
        Configuration=$(Configuration);
        OutputPath=$(OutputRoot);
        WebPublishMethod=FileSystem;
        publishUrl=$(PublishFolder)MyOtherSite\;
        DeployOnBuild=true;
        DeployTarget=WebPublish;
        PublishProfile=$(MSBuildThisFileFullPath)
      &amp;lt;/AdditionalProperties&amp;gt;
    &amp;lt;/ProjectsToBuild&amp;gt;
  &amp;lt;/ItemGroup&amp;gt;
  
  &amp;lt;Target Name="BuildProjects"&amp;gt;
    &amp;lt;MSBuild Projects="@(ProjectsToBuild)" /&amp;gt;
  &amp;lt;/Target&amp;gt;

  &amp;lt;!-- ***************************************************************************************
 The targets below will be called during the publish process.
 These targets are injected into the publish process for each web project.
 These targets will not have access to any new values for properties/items from
 the targets above this.
 *************************************************************************************** --&amp;gt;

  &amp;lt;Target Name="AfterWebPublish" AfterTargets="WebPublish"&amp;gt;
    &amp;lt;Message Text="Inside AfterWebPublish" Importance="high"/&amp;gt;
  &amp;lt;/Target&amp;gt;
  
&amp;lt;/Project&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
This file is pretty simple, it declares some properties which will be used for the
build/publish process. Then it declares the projects to be built with an item list
named &lt;em&gt;ProjectsToBuild&lt;/em&gt;. When declaring &lt;em&gt;ProjectsToBuild&lt;/em&gt; I use the
AdditionalProperties metadata to specify MSBuild properties to be used during the
build process for each project. Let’s take a closer look at those properties.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;&amp;lt;AdditionalProperties&amp;gt;
  VisualStudioVersion=$(VisualStudioVersion);
  Configuration=$(Configuration);
  OutputPath=$(OutputRoot);
  WebPublishMethod=FileSystem;
  publishUrl=$(PublishFolder)MySite\;
  DeployOnBuild=true;
  DeployTarget=WebPublish;
  PublishProfile=$(MSBuildThisFileFullPath)
&amp;lt;/AdditionalProperties&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
I’ll explain all the properties now. VisualStudioVersion, Configuration and OutputPath
are all used for the build process. The other properties are related to publishing.
If you want to publish from the file system those properties (&lt;em&gt;WebPublishMethod,
publishUrl, DeployOnBuild, and DeployTarget&lt;/em&gt;) must be set. The most important
property there is PublishProfile.
&lt;/p&gt;
&lt;p&gt;
PublishProfile is set to $(MSBuildThisFileFullPath) which is the full path to publish.proj.
This will instruct the build process of that project to import publish.proj when its
build/publish process is started. It’s important to note that a “new instance” of
the file will be imported. What that means is that the imported version of publish.proj
won’t have access to any dynamic properties/items created in publish.proj.
&lt;/p&gt;
&lt;p&gt;
The reason why PublishProfile is specified there is so that we can extend the publish
process from within publish.proj itself. publish.proj has a target, AfterWebPublish,
which will be executed after each project is executed. Let’s see how this works.
&lt;/p&gt;
&lt;p&gt;
We can execute the publish process with the command below.
&lt;/p&gt;
&lt;pre class="brush: xml;"&gt;msbuild .\build\publish.proj /p:VisualStudioVersion=11.0
&lt;/pre&gt;
&lt;p&gt;
After executing this command the tail end of the result is shown in the image below.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/image_thumb.png" width="893" height="463"&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
In the image above you can see that the MyOtherSite project is being publish to the
specified location in publish.proj and the AfterWebPublish target is executed as well.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
In this post we’ve seen how we can use an MSBuild file as a publish profile, and how
to extend the publish process using that same file.
&lt;/p&gt;
&lt;p&gt;
You can download the samples at &lt;a title="https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip" href="https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip"&gt;https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip&lt;/a&gt;.
You can find the latest version in my &lt;a href="https://github.com/sayedihashimi/publish-samples"&gt;publish-samples&lt;/a&gt; repository
at &lt;a href="https://github.com/sayedihashimi/publish-samples/tree/master/publish-injection"&gt;publish-injection&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Sat, 21 Sep 2013 18:57:03 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=14e3bfc5-b31f-4994-917d-411e3c7d8240</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,14e3bfc5-b31f-4994-917d-411e3c7d8240.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
When automating web publishing for Visual Studio projects in many cases your first
step will be to create a publish profile for the project in VS. There are many cases
in which you cannot, or would not like to do this. In this post I’ll show you how
you can take an existing project and use an MSBuild file to drive the publish process.
In that I’ll also show how you can extend the publish process without modifying either
the project or any of its contents.
</p>
        <p>
Before we get too far into this, if you are not familiar with how to publish your
VS web projects from the command line you can read our docs at <a href="http://www.asp.net/mvc/tutorials/deployment/visual-studio-web-deployment/command-line-deployment">ttp://www.asp.net/mvc/tutorials/deployment/visual-studio-web-deployment/command-line-deployment</a>.
</p>
        <p>
When you publish a project from the command line using a publish profile you typically
use the syntax below.
</p>
        <pre class="brush: xml;">msbuild .\MyProject.csproj /p:VisualStudioVersion=11.0 /p:DeployOnBuild=true /p:PublishProfile=&lt;profile-name-or-path&gt; 
</pre>
        <p>
In this snippet we are passing in a handful of properties. VisualStudioVersion dictates
which version of MSBuild targets are used during the build. See <a href="http://sedodream.com/2012/08/19/VisualStudioProjectCompatabilityAndVisualStudioVersion.aspx">http://sedodream.com/2012/08/19/VisualStudioProjectCompatabilityAndVisualStudioVersion.aspx</a> for
more details on that. DeployOnBuild=true injects the publish process at the end of
build. PublishProfile can either be the name of a publish profile which the project
contains <strong>or it can be the full path to a publish profile</strong>. We will
use PublishProfile with that second option, the full path.
</p>
        <p>
So we need to pass in the full path to a publish profile, which typically is a .pubxml
file. A publish profile is just an MSBuild file. When you pass in PublishProfile and
DeployOnBuild=true, then the publish profile is Imported into the build/publish process.
It will supply the publish properties needed to perform the publish.
</p>
        <p>
Let’s see how that works. I have a sample project, MySite, which does not have any
publish profiles created for it. I have created a publish profile, ToFileSys.pubxml,
in another folder that will be used though. The contents of that file are below.
</p>
        <p>
          <strong>
            <u>ToFileSys.pubxml</u>
          </strong>
        </p>
        <pre class="brush: xml;">&lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;PropertyGroup&gt;
    &lt;WebPublishMethod&gt;FileSystem&lt;/WebPublishMethod&gt;
    &lt;ExcludeApp_Data&gt;False&lt;/ExcludeApp_Data&gt;
    &lt;publishUrl&gt;C:\temp\Publish\01&lt;/publishUrl&gt;
    &lt;DeleteExistingFiles&gt;False&lt;/DeleteExistingFiles&gt;
  &lt;/PropertyGroup&gt;
&lt;/Project&gt;
</pre>
        <p>
This publish profile will publish to a local folder. I just created this file in VS
with a different project and then just copied it to the folder that I needed, and
removed properties which are only used for the inside of VS experience. We can publish
the MySite project using this profile with the command below.
</p>
        <pre class="brush: xml;">msbuild MySite.csproj 
            /p:VisualStudioVersion=11.0 
            /p:DeployOnBuild=true 
            /p:PublishProfile=C:\data\my-code\publish-samples\publish-injection\build\ToFileSys.pubxml 
</pre>
        <p>
When you execute this the file specified in PublishProfile will be included into the
build process.
</p>
        <h3>Taking it up a level
</h3>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/steps_2.jpg">
            <img title="steps" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="steps" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/steps_thumb.jpg" width="644" height="445"></img>
          </a>
        </p>
        <p>
Now let’s see how we can take this to the next level by having a single script that
will be used to publish more than one project using this technique.
</p>
        <p>
In the sample files (<em>which you can find links for at the end of the post</em>).
I have a solution with two web projects, MySite and MyOtherSite. Neither of these
projects have any publish profiles created. I have created a script which will build/publish
these projects which you can find at <em>build\publish.proj</em> in the samples. The
contents of the file are shown below.
</p>
        <p>
          <strong>
            <u>publish.proj</u>
          </strong>
        </p>
        <pre class="brush: xml;">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="BuildProjects"&gt;
  &lt;!-- 
  This file is used in two ways.
    1. Drive the build and publish process
    2. It is used by the publish process during the build of MySite to configure/extend publish
        Note: 1. Is kicked off by the use on the cmd line/build server. 2. Is invoked by this script itself.
              This file is injected into the publish process via the PublishProfile property.
  --&gt;  
  &lt;PropertyGroup&gt;
    &lt;VisualStudioVersion Condition=" '$(VisualStudioVersion)'=='' "&gt;11.0&lt;/VisualStudioVersion&gt;
    &lt;Configuration Condition=" '$(Configuration)'=='' "&gt;Release&lt;/Configuration&gt;
    &lt;!-- Location for build output of the project --&gt;
    &lt;OutputRoot Condition=" '$(OutputRoot)'=='' "&gt;$(MSBuildThisFileDirectory)..\BuildOutput\&lt;/OutputRoot&gt;
    &lt;!-- Root for the publish output --&gt;
    &lt;PublishFolder Condition=" '$(PublishFolder)'==''"&gt;C:\temp\Publish\Output\&lt;/PublishFolder&gt;    
  &lt;/PropertyGroup&gt;
  
  &lt;ItemGroup&gt;
    &lt;ProjectsToBuild Include="$(MSBuildThisFileDirectory)..\MySite\MySite.csproj"&gt;
      &lt;AdditionalProperties&gt;
        VisualStudioVersion=$(VisualStudioVersion);
        Configuration=$(Configuration);
        OutputPath=$(OutputRoot);
        WebPublishMethod=FileSystem;
        publishUrl=$(PublishFolder)MySite\;
        DeployOnBuild=true;
        DeployTarget=WebPublish;
        PublishProfile=$(MSBuildThisFileFullPath)
      &lt;/AdditionalProperties&gt;
    &lt;/ProjectsToBuild&gt;

    &lt;ProjectsToBuild Include="$(MSBuildThisFileDirectory)..\MyOtherSite\MyOtherSite.csproj"&gt;
      &lt;AdditionalProperties&gt;
        VisualStudioVersion=$(VisualStudioVersion);
        Configuration=$(Configuration);
        OutputPath=$(OutputRoot);
        WebPublishMethod=FileSystem;
        publishUrl=$(PublishFolder)MyOtherSite\;
        DeployOnBuild=true;
        DeployTarget=WebPublish;
        PublishProfile=$(MSBuildThisFileFullPath)
      &lt;/AdditionalProperties&gt;
    &lt;/ProjectsToBuild&gt;
  &lt;/ItemGroup&gt;
  
  &lt;Target Name="BuildProjects"&gt;
    &lt;MSBuild Projects="@(ProjectsToBuild)" /&gt;
  &lt;/Target&gt;

  &lt;!-- ***************************************************************************************
 The targets below will be called during the publish process.
 These targets are injected into the publish process for each web project.
 These targets will not have access to any new values for properties/items from
 the targets above this.
 *************************************************************************************** --&gt;

  &lt;Target Name="AfterWebPublish" AfterTargets="WebPublish"&gt;
    &lt;Message Text="Inside AfterWebPublish" Importance="high"/&gt;
  &lt;/Target&gt;
  
&lt;/Project&gt;
</pre>
        <p>
This file is pretty simple, it declares some properties which will be used for the
build/publish process. Then it declares the projects to be built with an item list
named <em>ProjectsToBuild</em>. When declaring <em>ProjectsToBuild</em> I use the
AdditionalProperties metadata to specify MSBuild properties to be used during the
build process for each project. Let’s take a closer look at those properties.
</p>
        <pre class="brush: xml;">&lt;AdditionalProperties&gt;
  VisualStudioVersion=$(VisualStudioVersion);
  Configuration=$(Configuration);
  OutputPath=$(OutputRoot);
  WebPublishMethod=FileSystem;
  publishUrl=$(PublishFolder)MySite\;
  DeployOnBuild=true;
  DeployTarget=WebPublish;
  PublishProfile=$(MSBuildThisFileFullPath)
&lt;/AdditionalProperties&gt;
</pre>
        <p>
I’ll explain all the properties now. VisualStudioVersion, Configuration and OutputPath
are all used for the build process. The other properties are related to publishing.
If you want to publish from the file system those properties (<em>WebPublishMethod,
publishUrl, DeployOnBuild, and DeployTarget</em>) must be set. The most important
property there is PublishProfile.
</p>
        <p>
PublishProfile is set to $(MSBuildThisFileFullPath) which is the full path to publish.proj.
This will instruct the build process of that project to import publish.proj when its
build/publish process is started. It’s important to note that a “new instance” of
the file will be imported. What that means is that the imported version of publish.proj
won’t have access to any dynamic properties/items created in publish.proj.
</p>
        <p>
The reason why PublishProfile is specified there is so that we can extend the publish
process from within publish.proj itself. publish.proj has a target, AfterWebPublish,
which will be executed after each project is executed. Let’s see how this works.
</p>
        <p>
We can execute the publish process with the command below.
</p>
        <pre class="brush: xml;">msbuild .\build\publish.proj /p:VisualStudioVersion=11.0
</pre>
        <p>
After executing this command the tail end of the result is shown in the image below.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/image_2.png">
            <img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="http://sedodream.com/content/binary/WindowsLiveWriter/Howtoextendthewebpublishprocesswithoutmo_9E9F/image_thumb.png" width="893" height="463"></img>
          </a>
        </p>
        <p>
In the image above you can see that the MyOtherSite project is being publish to the
specified location in publish.proj and the AfterWebPublish target is executed as well.
</p>
        <p>
 
</p>
        <p>
In this post we’ve seen how we can use an MSBuild file as a publish profile, and how
to extend the publish process using that same file.
</p>
        <p>
You can download the samples at <a title="https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip" href="https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip">https://dl.dropboxusercontent.com/u/40134810/blog/publish-injection.zip</a>.
You can find the latest version in my <a href="https://github.com/sayedihashimi/publish-samples">publish-samples</a> repository
at <a href="https://github.com/sayedihashimi/publish-samples/tree/master/publish-injection">publish-injection</a>.
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/t_TWJPZc8U8/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</link><title>Free online training event: Developing ASP.NET MVC 4 Web Applications Jump Start (Sep 17)</title><description>&lt;p&gt;&lt;b&gt;This course is now available online: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Join me and &lt;a href="http://blog.geektrainer.com/p/about-christopher.html"&gt;Christopher Harrison&lt;/a&gt; (&lt;a href="https://twitter.com/geektrainer"&gt;@geektrainer&lt;/a&gt;) for a free, full day online training event on Developing ASP.NET MVC4 Web Applications! There's still space available, so &lt;a href="http://www.microsoftvirtualacademy.com/liveevents/developing-asp-net-mvc4-web-applications-jump-start#fbid=MBmoibN1mwi"&gt;&lt;strong&gt;register now&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a title="MVA - ASP.NET MVC 4 Jump Start" href="http://www.microsoftvirtualacademy.com/liveevents/developing-asp-net-mvc4-web-applications-jump-start#fbid=X2Ekao9Tj7M"&gt;&lt;img style="float: none; margin-left: auto; display: block; margin-right: auto" border="0" alt="MVA - ASP.NET MVC 4 Jump Start" src="http://farm3.static.flickr.com/2849/9717628473_9847ce3137_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Microsoft Virtual Academy (MVA) runs great, high quality live training events. Earlier this year, I had the opportunity to participate in the &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/create-web-apps-with-asp-net#fbid=MBmoibN1mwi"&gt;Building Web Apps with ASP.NET Jump Start with Scott Hanselman and Damian Edwards&lt;/a&gt;. For that event, we overviewed the Microsoft web platform, including a lot of new and preview features.&lt;/p&gt;  &lt;p&gt;For this upcoming event, we're going to be sticking closer to the curriculum for the &lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;Developing ASP.NET MVC 4 Web Applications certification exam (70-486) curriculum&lt;/a&gt;. Christopher is a full time, professional instructor (MCT, MCPD, MCITP) who's helped people prepare for this exam, and we're going to be basing the Jump Start content on what you'd learn in a 70-486 certification course.&lt;/p&gt;  &lt;p&gt;Here's an overview of what we're planning to cover:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Overview of MVC      &lt;ul&gt;       &lt;li&gt;What is MVC? &lt;/li&gt;        &lt;li&gt;How is MVC different from Web Forms? &lt;/li&gt;        &lt;li&gt;Why use MVC? &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Controllers and Models      &lt;ul&gt;       &lt;li&gt;Creating Controllers &lt;/li&gt;        &lt;li&gt;Adding Actions &lt;/li&gt;        &lt;li&gt;Creating MVC Models &lt;/li&gt;        &lt;li&gt;Working with Code First &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Views      &lt;ul&gt;       &lt;li&gt;Razor Syntax &lt;/li&gt;        &lt;li&gt;HTML Helpers &lt;/li&gt;        &lt;li&gt;Partial Views &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Integrating JavaScript and MVC      &lt;ul&gt;       &lt;li&gt;Using AJAX &lt;/li&gt;        &lt;li&gt;Using jQuery &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Implementing Web APIs      &lt;ul&gt;       &lt;li&gt;Developing Web API Controllers &lt;/li&gt;        &lt;li&gt;Calling HTTP Services from Client-Side Code &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Deploying ASP.NET MVC Site Walkthrough      &lt;ul&gt;       &lt;li&gt;Creating a site on Windows Azure Web Sites &lt;/li&gt;        &lt;li&gt;Deploying an ASP.NET MVC Application with Visual Studio Web Deploy &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;What’s Next and Resources      &lt;ul&gt;       &lt;li&gt;Sneak peak at Visual Studio 2013 (Preview) and ASP.NET MVC 5 tooling &lt;/li&gt;        &lt;li&gt;A look at real-time communications with SignalR &lt;/li&gt;        &lt;li&gt;Resources for keeping up with new ASP.NET releases &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Note that this is a Jump Start to help you get started preparing for the certification exam, but with a one day event we're only covering a portion of the content that's on the exam. Don't expect to watch this and breeze through the exam... but it's a start.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;And if you're just new to ASP.NET MVC and want a full day (free!) day of training, this is a great opportunity.&lt;/strong&gt; We're working off some of the certification content, but you don't need to be working towards the certification to take or benefit from the class.&lt;/p&gt;  &lt;p&gt;To get you warmed up for it, here's the one hour introduction to ASP.NET MVC 4 from the Building Web Apps with ASP.NET Jump Start this past February.&lt;/p&gt; &lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Building-Web-Apps-with-ASP-NET-Jump-Start/Building-Web-Apps-with-ASPNET-Jump-Start-02-Building-and-Deploying-Websites-with-ASPNET-MVC-4/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=t_TWJPZc8U8:3wV5B8IbOaE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="//feeds.feedburner.com/~r/jongalloway/~4/t_TWJPZc8U8" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 10 Sep 2013 20:44:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</feedburner:origLink></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/h4VaORKgrOw</guid><link>https://www.youtube.com/watch?v=h4VaORKgrOw&amp;feature=youtube_gdata</link><a10:author><a10:name>Mads Kristensen</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/madskvistkristensen</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>SideWaffle for Visual Studio: Adding your own templates</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=h4VaORKgrOw&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/h4VaORKgrOw/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=h4VaORKgrOw&amp;amp;feature=youtube_gdata"&gt;SideWaffle for Visual Studio: Adding your own templates&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;SideWaffle on GitHub: https://github.com/ligershark/side-waffle/&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCyTzXVvOqE43nhCSGA2d-TQ"&gt;Mads Kristensen&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
2829&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;6
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;04:18&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Mon, 26 Aug 2013 00:52:17 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/madskvistkristensen/uploads/h4VaORKgrOw" /><a10:updated>2014-12-26T20:54:32Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360-R</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360-R</link><category>breakout</category><title>ASP.NET Web API: Web Services for Websites, Modern Apps, and Mobile Apps (repeated from 28 June, 8:30)</title><description>&lt;p&gt;The new release of Web API offers some great new features while maintaining the original direction towards making REST and HTTP services easier in Microsoft .NET. Have you created a few websites that make use of AJAX calls to Web API controllers and wondered if there was a way to use the same sort of approach in a modern app or a mobile app? Have a client who needs a mobile app that’s supported in all the major smartphone platforms? Want to use Web API in a Single-Page Application (SPA)? Need to add authentication to your existing Web API? These and other topics are explored in this intermediate session on Web API, which covers a variety of ways it can be used to expose your application’s data through a universally-supported (or endlessly extensible) protocols.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6749d6420ca94184a855a1e901519193"&gt;</description><pubDate>Wed, 26 Jun 2013 18:29:00 Z</pubDate><comments>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360-R</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The new release of Web API offers some great new features while maintaining the original direction towards making REST and HTTP services easier in Microsoft .NET. Have you created a few websites that make use of AJAX calls to Web API controllers and wondered if there was a way to use the same sort of approach in a modern app or a mobile app? Have a client who needs a mobile app that’s supported in all the major smartphone platforms? Want to use Web API in a Single-Page Application (SPA)? Need to add authentication to your existing Web API? These and other topics are explored in this intermediate session on Web API, which covers a variety of ways it can be used to expose your application’s data through a universally-supported (or endlessly extensible) protocols. </itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2013/3-502</guid><link>http://channel9.msdn.com/Events/Build/2013/3-502</link><category>asp.net</category><category>visual-studio</category><title>Scaling the Real-time Web with ASP.NET SignalR</title><description>SignalR made the real-time web incredibly simple for .NET programmers, but we’re not standing still. Version 1.1 brought improved performance and scale-out support via SQL Server, Redis and Windows Azure Service Bus. But there’s more to SignalR scale-out than just this. What are the best strategies based on your application type? Version 2.0 continues the trend of frequent improvements in the new “One ASP.NET” by adding new features in the .NET client, even better performance, and extending the reach to other mobile platforms. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:b88b0547924040df8dc2a1e80112c4ab"&gt;</description><pubDate>Tue, 25 Jun 2013 23:40:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0715/29fec521-8103-42c3-a1bd-3d9d1e860715/3-502.wmv" type="video/x-ms-wmv" length="138019601" /><comments>http://channel9.msdn.com/Events/Build/2013/3-502</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">SignalR made the real-time web incredibly simple for .NET programmers, but we’re not standing still. Version 1.1 brought improved performance and scale-out support via SQL Server, Redis and Windows Azure Service Bus. But there’s more to SignalR scale-out than just this. What are the best strategies based on your application type? Version 2.0 continues the trend of frequent improvements in the new “One ASP.NET” by adding new features in the .NET client, even better performance, and extending the reach to other mobile platforms.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3730</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2013/3-504</guid><link>http://channel9.msdn.com/Events/Build/2013/3-504</link><category>asp.net</category><category>web-api</category><category>rest</category><title>ASP.NET Web API 2 – Web Services for Websites, Modern Apps, and Mobile Apps</title><description>ASP.NET Web API 2 makes it even easier to build HTTP services for any client application, including websites and mobile applications. In this session you will see how to easily setup your Web API routes using integrated attribute routing. You will learn how to secure your Web APIs using OAuth 2.0, integrate with Windows Azure Active Directory and easily enable support for cross-origin requests using CORS. We will then discover how you can write portable Web API client code for Windows Phone and Windows Store applications and also how we have simplified writing unit tests for your Web APIs. Finally, you will learn how to write OData services that support $expand, $select and request batching and how you can now host your Web APIs on any OWIN-based host. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:e79f2d7e97e84bbcb50ba1e80112c6c3"&gt;</description><pubDate>Tue, 25 Jun 2013 23:40:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/bc7a/8f551a8a-25a5-418d-b36a-0451d7fcbc7a/3-504.wmv" type="video/x-ms-wmv" length="149220809" /><comments>http://channel9.msdn.com/Events/Build/2013/3-504</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web API 2 makes it even easier to build HTTP services for any client application, including websites and mobile applications. In this session you will see how to easily setup your Web API routes using integrated attribute routing. You will learn how to secure your Web APIs using OAuth 2.0, integrate with Windows Azure Active Directory and easily enable support for cross-origin requests using CORS. We will then discover how you can write portable Web API client code for Windows Phone and Windows Store applications and also how we have simplified writing unit tests for your Web APIs. Finally, you will learn how to write OData services that support $expand, $select and request batching and how you can now host your Web APIs on any OWIN-based host.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4095</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,40b8a140-f4d8-4780-844e-60973db5c68a.aspx</guid><link>http://sedodream.com/2013/06/08/IntroducingVsixCompressaNuGetPackageToCompressYourVisualStudioPackage.aspx</link><category>Extensibility</category><category>Visual Studio</category><category>VSIX</category><title>Introducing VsixCompress–a NuGet package to compress your Visual Studio Package</title><description>&lt;p&gt;
A few weeks ago I &lt;a href="http://sedodream.com/2013/05/13/HowToCompressAVisualStudioExtensionVSIXDuringBuild.aspx"&gt;blogged
about a Visual Studio extension&lt;/a&gt;, &lt;a href="http://visualstudiogallery.msdn.microsoft.com/33b0242d-7158-4d39-9a01-0a08cf7c28bd"&gt;Farticus&lt;/a&gt;,
which I’m working on with &lt;a href="http://madskristensen.net"&gt;Mads Kristensen&lt;/a&gt;.
In that post I described how the default compression of a .vsix (&lt;em&gt;the artifact
that is created for a Visual Studio Package&lt;/em&gt;) is not as small as it could be.
It’s better to get a fully compressed VSIX because when users install the component
the download time can be significantly reduced. In that post I described how you could
use the &lt;a href="http://www.msbuildextensionpack.com/help/4.0.5.0/html/f2118b59-554e-d745-5859-126a82b1df81.htm"&gt;Zip
task&lt;/a&gt; from the &lt;a href="http://msbuildextensionpack.codeplex.com/"&gt;MSBuild Extension
Pack&lt;/a&gt; to have a fully compressed .vsix file. I will now show you how I’ve simplified
this.
&lt;/p&gt;
&lt;a href="https://nuget.org/packages/VsixCompress/1.0.0.4"&gt; 
&lt;p&gt;
&lt;img alt="Icon for package VsixCompress" src="http://msbuildbook.com/images/vsix-compress.png"&gt;&lt;font size="7"&gt;VsixCompress&lt;/font&gt;
&lt;/p&gt;
&lt;/a&gt; 
&lt;p&gt;
Since my previous post I’ve created a NuGet package, &lt;a href="https://nuget.org/packages/VsixCompress/1.0.0.4"&gt;VsixCompress&lt;/a&gt; which
simplifies this greatly. If you have an existing Visual Studio package and want to
have a fully compressed .vsix file then all you need to do is install the &lt;a href="https://nuget.org/packages/VsixCompress/1.0.0.4"&gt;VsixCompress&lt;/a&gt; package.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://sedodream.com/content/binary/Windows-Live-Writer/Introducing-VsixCompress_F242/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://sedodream.com/content/binary/Windows-Live-Writer/Introducing-VsixCompress_F242/image_thumb.png" width="728" height="75"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
After you install this package the following happens.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
NuGet package is downloaded and installed to the packages folder&lt;/li&gt;
&lt;li&gt;
The project is edited to include an import for a new .targets file&lt;/li&gt;
&lt;li&gt;
The build process is extended to compress the .vsix file automatically&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
After installing this package once you build the generated .vsix is much smaller than
before. In the default case where you select to create a new C# VS Package the created
.vsix is 17kb. After adding VsixCompress the resulting .vsix is only 9kb. That’s almost
half the size. That’s all you need to know for local development. If you have a build
server setup then there are a couple of additional steps. Let’s go over those now.
&lt;/p&gt;
&lt;h3&gt;Build Server Support
&lt;/h3&gt;
&lt;p&gt;
I have blogged before about issues of shipping build updates in NuGet. To briefly
summarize, when leveraging &lt;a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages"&gt;NuGet
Package Restore&lt;/a&gt; you have to be careful if any of those NuGet packages have build
updates. When using Package Restore the NuGet packages which contain the imported
.targets file(s) are restored after the build starts. What this means is that the
.targets files will never be imported (&lt;em&gt;or an old copy is imported in the case
the file exists from a previous build&lt;/em&gt;). The only way to work around this is to
restore the packages before the .sln/.csproj file themselves are built. You can read
the full details at &lt;a href="http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx"&gt;http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx&lt;/a&gt;.
I have a NuGet package, &lt;a href="https://nuget.org/packages/PackageRestore/"&gt;PackageRestore&lt;/a&gt;,
which can help here. Take a look at my previous post &lt;a href="http://sedodream.com/2013/06/06/HowToSimplifyShippingBuildUpdatesInANuGetPackage.aspx"&gt;&lt;strong&gt;How
to simplify shipping build updates in a NuGet package&lt;/strong&gt;&lt;/a&gt;. Now that we’ve
discussed all the details that you need let’s discuss what my plans are going forward
with this.
&lt;/p&gt;
&lt;h3&gt;Plans going forward
&lt;/h3&gt;
&lt;p&gt;
I’m hoping to add the following features over the course of the next few weeks.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/sayedihashimi/vsix-compress/issues/3"&gt;Automatically bump
version number when building in VS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sayedihashimi/vsix-compress/issues/1"&gt;Add an option to
accept the compression level as an MSBuild property&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sayedihashimi/vsix-compress/issues/2"&gt;Add an option to
opt in/out of compressing the VSIX as an MSBuild property&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
FYI VsixCompress is open source so you can take a look at the code, or better yet
contribute at &lt;a href="https://github.com/sayedihashimi/vsix-compress"&gt;https://github.com/sayedihashimi/vsix-compress&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please let me know what you think of this!
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Sat, 08 Jun 2013 00:42:57 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=40b8a140-f4d8-4780-844e-60973db5c68a</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,40b8a140-f4d8-4780-844e-60973db5c68a.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
A few weeks ago I <a href="http://sedodream.com/2013/05/13/HowToCompressAVisualStudioExtensionVSIXDuringBuild.aspx">blogged
about a Visual Studio extension</a>, <a href="http://visualstudiogallery.msdn.microsoft.com/33b0242d-7158-4d39-9a01-0a08cf7c28bd">Farticus</a>,
which I’m working on with <a href="http://madskristensen.net">Mads Kristensen</a>.
In that post I described how the default compression of a .vsix (<em>the artifact
that is created for a Visual Studio Package</em>) is not as small as it could be.
It’s better to get a fully compressed VSIX because when users install the component
the download time can be significantly reduced. In that post I described how you could
use the <a href="http://www.msbuildextensionpack.com/help/4.0.5.0/html/f2118b59-554e-d745-5859-126a82b1df81.htm">Zip
task</a> from the <a href="http://msbuildextensionpack.codeplex.com/">MSBuild Extension
Pack</a> to have a fully compressed .vsix file. I will now show you how I’ve simplified
this.
</p>
        <a href="https://nuget.org/packages/VsixCompress/1.0.0.4">
          <p>
            <img alt="Icon for package VsixCompress" src="http://msbuildbook.com/images/vsix-compress.png"></img>
            <font size="7">VsixCompress</font>
          </p>
        </a>
        <p>
Since my previous post I’ve created a NuGet package, <a href="https://nuget.org/packages/VsixCompress/1.0.0.4">VsixCompress</a> which
simplifies this greatly. If you have an existing Visual Studio package and want to
have a fully compressed .vsix file then all you need to do is install the <a href="https://nuget.org/packages/VsixCompress/1.0.0.4">VsixCompress</a> package.
</p>
        <p>
          <a href="http://sedodream.com/content/binary/Windows-Live-Writer/Introducing-VsixCompress_F242/image_2.png">
            <img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://sedodream.com/content/binary/Windows-Live-Writer/Introducing-VsixCompress_F242/image_thumb.png" width="728" height="75"></img>
          </a>
        </p>
        <p>
 
</p>
        <p>
After you install this package the following happens.
</p>
        <ol>
          <li>
NuGet package is downloaded and installed to the packages folder</li>
          <li>
The project is edited to include an import for a new .targets file</li>
          <li>
The build process is extended to compress the .vsix file automatically</li>
        </ol>
        <p>
After installing this package once you build the generated .vsix is much smaller than
before. In the default case where you select to create a new C# VS Package the created
.vsix is 17kb. After adding VsixCompress the resulting .vsix is only 9kb. That’s almost
half the size. That’s all you need to know for local development. If you have a build
server setup then there are a couple of additional steps. Let’s go over those now.
</p>
        <h3>Build Server Support
</h3>
        <p>
I have blogged before about issues of shipping build updates in NuGet. To briefly
summarize, when leveraging <a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages">NuGet
Package Restore</a> you have to be careful if any of those NuGet packages have build
updates. When using Package Restore the NuGet packages which contain the imported
.targets file(s) are restored after the build starts. What this means is that the
.targets files will never be imported (<em>or an old copy is imported in the case
the file exists from a previous build</em>). The only way to work around this is to
restore the packages before the .sln/.csproj file themselves are built. You can read
the full details at <a href="http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx">http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx</a>.
I have a NuGet package, <a href="https://nuget.org/packages/PackageRestore/">PackageRestore</a>,
which can help here. Take a look at my previous post <a href="http://sedodream.com/2013/06/06/HowToSimplifyShippingBuildUpdatesInANuGetPackage.aspx"><strong>How
to simplify shipping build updates in a NuGet package</strong></a>. Now that we’ve
discussed all the details that you need let’s discuss what my plans are going forward
with this.
</p>
        <h3>Plans going forward
</h3>
        <p>
I’m hoping to add the following features over the course of the next few weeks.
</p>
        <ul>
          <li>
            <a href="https://github.com/sayedihashimi/vsix-compress/issues/3">Automatically bump
version number when building in VS</a>
          </li>
          <li>
            <a href="https://github.com/sayedihashimi/vsix-compress/issues/1">Add an option to
accept the compression level as an MSBuild property</a>
          </li>
          <li>
            <a href="https://github.com/sayedihashimi/vsix-compress/issues/2">Add an option to
opt in/out of compressing the VSIX as an MSBuild property</a>
          </li>
        </ul>
        <p>
FYI VsixCompress is open source so you can take a look at the code, or better yet
contribute at <a href="https://github.com/sayedihashimi/vsix-compress">https://github.com/sayedihashimi/vsix-compress</a>.
</p>
        <p>
Please let me know what you think of this!
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="false">http://sedodream.com/PermaLink,guid,c932b651-2652-451e-bd8d-a39dd444dd16.aspx</guid><link>http://sedodream.com/2013/06/06/HowToSimplifyShippingBuildUpdatesInANuGetPackage.aspx</link><category>MSBuild</category><category>nuget</category><category>PackageRestore</category><title>How to simplify shipping build updates in a NuGet package</title><description>&lt;p&gt;
Have you ever wanted to ship build updates in a NuGet package? If so then you may
have noticed that there are issues if you need to import a .targets file which is
contained in a NuGet package. To be brief, the issue is that by the time the .targets
file is being restored with NuGet it’s already too late because the build has already
started. So we need an easy way to invoke NuGet package restore for a given project
before the build for the solution/project starts. In this entry you will see how we
can use a generated build script to help with this.
&lt;/p&gt;
&lt;p&gt;
A few months back I discovered this issue and blogged about it at &lt;a href="http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx"&gt;SlowCheetah
build server support updated&lt;/a&gt;. The solution that I implemented was to create a
new build script, packageRestore.proj, which is placed in the root of the project
when the &lt;a href="http://nuget.org/packages/SlowCheetah/"&gt;SlowCheetah NuGet package&lt;/a&gt; is
installed. If you want to invoke the package restore from a build server then you
can just add packageRestore.proj to the list of items to build before the .sln/.csproj
file which you are intending to build. I’ve now refactored this into its own NuGet
package, &lt;a href="https://nuget.org/packages/PackageRestore"&gt;PackageRestore&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Here is how you can try it out.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
Create a new project&lt;/li&gt;
&lt;li&gt;
Add a few NuGet packages to the project&lt;/li&gt;
&lt;li&gt;
Enable NuGet package restore&lt;/li&gt;
&lt;li&gt;
Add the PackageRestore package (&lt;em&gt;the command you can use is &lt;strong&gt;Install-Package
PackageRestore –pre&lt;/strong&gt;&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;
Close solution&lt;/li&gt;
&lt;li&gt;
Delete packages folder&lt;/li&gt;
&lt;li&gt;
Execute the command msbuild.exe packageRestore.proj&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
After executing the command you will see that the packages folder along with all its
content will be restored. For CI servers when you define your build script all you
do is build packageRestore.proj before you build the target .sln/.csproj file.
&lt;/p&gt;
&lt;p&gt;
If you are shipping build updates through NuGet and want to be able to enable package
restore in a similar way a &lt;a href="http://visualstudiogallery.msdn.microsoft.com/69023d00-a4f9-4a34-a6cd-7e854ba318b5"&gt;SlowCheetah&lt;/a&gt; then
when you create your NuGet package add PackageRestore as a dependency.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
This is an open source project so you can view the source, and help contribute, at &lt;a href="https://github.com/sayedihashimi/package-restore"&gt;https://github.com/sayedihashimi/package-restore&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
Sayed Ibrahim Hashimi | &lt;a href="http://msbuildbook.com"&gt;http://msbuildbook.com&lt;/a&gt; | &lt;a href="https://twitter.com/sayedihashimi"&gt;@SayedIHashimi&lt;/a&gt;
&lt;/p&gt;</description><pubDate>Thu, 06 Jun 2013 05:57:37 Z</pubDate><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://sedodream.com/Trackback.aspx?guid=c932b651-2652-451e-bd8d-a39dd444dd16</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://sedodream.com/PermaLink,guid,c932b651-2652-451e-bd8d-a39dd444dd16.aspx</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ibrahim</dc:creator><body xmlns="http://www.w3.org/1999/xhtml">
        <p>
Have you ever wanted to ship build updates in a NuGet package? If so then you may
have noticed that there are issues if you need to import a .targets file which is
contained in a NuGet package. To be brief, the issue is that by the time the .targets
file is being restored with NuGet it’s already too late because the build has already
started. So we need an easy way to invoke NuGet package restore for a given project
before the build for the solution/project starts. In this entry you will see how we
can use a generated build script to help with this.
</p>
        <p>
A few months back I discovered this issue and blogged about it at <a href="http://sedodream.com/2012/12/24/SlowCheetahBuildServerSupportUpdated.aspx">SlowCheetah
build server support updated</a>. The solution that I implemented was to create a
new build script, packageRestore.proj, which is placed in the root of the project
when the <a href="http://nuget.org/packages/SlowCheetah/">SlowCheetah NuGet package</a> is
installed. If you want to invoke the package restore from a build server then you
can just add packageRestore.proj to the list of items to build before the .sln/.csproj
file which you are intending to build. I’ve now refactored this into its own NuGet
package, <a href="https://nuget.org/packages/PackageRestore">PackageRestore</a>.
</p>
        <p>
 
</p>
        <p>
Here is how you can try it out.
</p>
        <ol>
          <li>
Create a new project</li>
          <li>
Add a few NuGet packages to the project</li>
          <li>
Enable NuGet package restore</li>
          <li>
Add the PackageRestore package (<em>the command you can use is <strong>Install-Package
PackageRestore –pre</strong></em>)</li>
          <li>
Close solution</li>
          <li>
Delete packages folder</li>
          <li>
Execute the command msbuild.exe packageRestore.proj</li>
        </ol>
        <p>
After executing the command you will see that the packages folder along with all its
content will be restored. For CI servers when you define your build script all you
do is build packageRestore.proj before you build the target .sln/.csproj file.
</p>
        <p>
If you are shipping build updates through NuGet and want to be able to enable package
restore in a similar way a <a href="http://visualstudiogallery.msdn.microsoft.com/69023d00-a4f9-4a34-a6cd-7e854ba318b5">SlowCheetah</a> then
when you create your NuGet package add PackageRestore as a dependency.
</p>
        <p>
 
</p>
        <p>
This is an open source project so you can view the source, and help contribute, at <a href="https://github.com/sayedihashimi/package-restore">https://github.com/sayedihashimi/package-restore</a>.
</p>
        <p>
 
</p>
        <p>
Sayed Ibrahim Hashimi | <a href="http://msbuildbook.com">http://msbuildbook.com</a> | <a href="https://twitter.com/sayedihashimi">@SayedIHashimi</a></p>
      </body></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360</link><category>breakout</category><title>ASP.NET Web API: Web Services for Websites, Modern Apps, and Mobile Apps</title><description>The new release of Web API offers some great new features while maintaining the original direction towards making REST and HTTP services easier in Microsoft .NET. Have you created a few websites that make use of AJAX calls to Web API controllers and wondered if there was a way to use the same sort of approach in a modern app or a mobile app? Have a client who needs a mobile app that’s supported in all the major smartphone platforms? Want to use Web API in a Single-Page Application (SPA)? Need to add authentication to your existing Web API? These and other topics are explored in this intermediate session on Web API, which covers a variety of ways it can be used to expose your application’s data through a universally-supported (or endlessly extensible) protocols. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:633e18c9000c4ef6ac2fa1b700b7fb57"&gt;</description><pubDate>Tue, 07 May 2013 18:09:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/8036/74a45851-8755-460a-acdc-53d855328036/DEV-B360.wmv" type="video/x-ms-wmv" length="162172055" /><comments>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B360</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The new release of Web API offers some great new features while maintaining the original direction towards making REST and HTTP services easier in Microsoft .NET. Have you created a few websites that make use of AJAX calls to Web API controllers and wondered if there was a way to use the same sort of approach in a modern app or a mobile app? Have a client who needs a mobile app that’s supported in all the major smartphone platforms? Want to use Web API in a Single-Page Application (SPA)? Need to add authentication to your existing Web API? These and other topics are explored in this intermediate session on Web API, which covers a variety of ways it can be used to expose your application’s data through a universally-supported (or endlessly extensible) protocols.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4303</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B355</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B355</link><category>breakout</category><title>Web Deployment Done Right</title><description>&lt;p&gt;With virtually every method of deployment available to you for publishing your site to Windows Azure – Team Foundation Services integration, GitHub.com integration, CodePlex, FTP, Web Deploy, even DropBox – it’s never been easier to get your site up and running. In addition to the simple deployment model, Windows Azure Web Sites makes it easier than ever to set up multiple environments for testing and production, and integrates fabulously with the deployment models to streamline your process of multi-environment deployment and maintenance. In this session, get a glimpse of all of these methods and see how the Kudu Project allows for further customization of your build process by enabling custom functionality that’s executed during deployments.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:7a4eefdad49f4d6b9dafa1b201220bd4"&gt;</description><pubDate>Fri, 03 May 2013 00:36:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/f3ae/cbafe2d9-6950-4023-bc4d-c71146c0f3ae/DEV-B355.wmv" type="video/x-ms-wmv" length="160211189" /><comments>http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B355</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">With virtually every method of deployment available to you for publishing your site to Windows Azure – Team Foundation Services integration, GitHub.com integration, CodePlex, FTP, Web Deploy, even DropBox – it’s never been easier to get your site up and running. In addition to the simple deployment model, Windows Azure Web Sites makes it easier than ever to set up multiple environments for testing and production, and integrates fabulously with the deployment models to streamline your process of multi-environment deployment and maintenance. In this session, get a glimpse of all of these methods and see how the Kudu Project allows for further customization of your build process by enabling custom functionality that’s executed during deployments. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4180</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B314</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B314</link><category>breakout</category><title>Microsoft ASP.NET, Web, and Cloud Tools Preview</title><description>&lt;p&gt;One ASP.NET and Visual Studio 2012.2 includes some amazing new tooling enhancements for HTML5, CSS3 and JavaScript. We're marching forward with even more great stuff. There’s powerful features like Model Binding &amp;#43; Friendly URLs. ASP.NET Web Forms allows you to build an application with all the bells and whistles of an MVC 4 application with all the productivity of Web Forms. ASP.NET Web Forms are also “DRYer” than ever with Models &amp;#43; Model Validation &amp;#43; Model Binding &amp;#43; Clean URLs &amp;#43; Mobile support. ASP.NET Web Pages along with ASP.NET Web API plus HTML5, JavaScript and modern development techniques makes development fun again. Join Damian as he shows you how it works together and where we're going tomorrow!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:027d10a7ebd542888c9aa1ab01316e76"&gt;</description><pubDate>Fri, 26 Apr 2013 01:32:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d0f5/d0004792-d294-487e-bbfc-d618be80d0f5/DEV-B314.wmv" type="video/x-ms-wmv" length="173646659" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B314</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">One ASP.NET and Visual Studio 2012.2 includes some amazing new tooling enhancements for HTML5, CSS3 and JavaScript. We're marching forward with even more great stuff. There’s powerful features like Model Binding &amp;#43; Friendly URLs. ASP.NET Web Forms allows you to build an application with all the bells and whistles of an MVC 4 application with all the productivity of Web Forms. ASP.NET Web Forms are also “DRYer” than ever with Models &amp;#43; Model Validation &amp;#43; Model Binding &amp;#43; Clean URLs &amp;#43; Mobile support. ASP.NET Web Pages along with ASP.NET Web API plus HTML5, JavaScript and modern development techniques makes development fun again. Join Damian as he shows you how it works together and where we're going tomorrow! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4418</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B302</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B302</link><category>breakout</category><title>Microsoft ASP.NET SignalR: The Real-Time Web Made Simple</title><description>&lt;p&gt;SignalR is one of the latest components to the ASP.NET runtime, but it can do a lot more than just web. Come learn how you can build a real-time web application with minimal heavy lifting, without needing to learn another large framework. Then, take those lessons and use nearly identical syntax to give Modern Apps, Windows Azure Worker Roles running in the cloud, and other types of applications real-time HTTP functionality. The SignalR abstraction is a shift in how you think about web programming and in what’s possible across a multitude of platforms and environments, and this talk gets you started quickly with simple demonstrations that walk you through all the major capabilities of the #1 most followed open-source C# project on GitHub that grew to become the latest trick in the ASP.NET developer tool chest.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d994c8b2dc084d328cdea195007617e4"&gt;</description><pubDate>Wed, 03 Apr 2013 14:09:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d0db/7d9da897-84d9-468b-a462-2771e3cfd0db/DEV-B302.wmv" type="video/x-ms-wmv" length="153481331" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B302</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">SignalR is one of the latest components to the ASP.NET runtime, but it can do a lot more than just web. Come learn how you can build a real-time web application with minimal heavy lifting, without needing to learn another large framework. Then, take those lessons and use nearly identical syntax to give Modern Apps, Windows Azure Worker Roles running in the cloud, and other types of applications real-time HTTP functionality. The SignalR abstraction is a shift in how you think about web programming and in what’s possible across a multitude of platforms and environments, and this talk gets you started quickly with simple demonstrations that walk you through all the major capabilities of the #1 most followed open-source C# project on GitHub that grew to become the latest trick in the ASP.NET developer tool chest. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4034</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B209</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B209</link><category>breakout</category><title>Serious Web Services: Windows Communication Foundation (WCF), Web API, OData, and More</title><description>&lt;p&gt;Are you confused by the various framework offerings available for building web services on Microsoft .NET? Are you trying to decide whether you want to build SOAP or RESTful services? Are you evaluating which framework to use to build your HTTP services? Are you considering building OData services but you’re not sure if it’s right for you? Then come to this session and walk through the many options available to you for building powerful services on .NET and how to decide when to use what.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:b4550155d25b41399d32a1950076171b"&gt;</description><pubDate>Wed, 03 Apr 2013 14:09:00 Z</pubDate><enclosure url="http://video.ch9.ms/sessions/teched/na/2013/DEV-B209.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B209</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Are you confused by the various framework offerings available for building web services on Microsoft .NET? Are you trying to decide whether you want to build SOAP or RESTful services? Are you evaluating which framework to use to build your HTTP services? Are you considering building OData services but you’re not sure if it’s right for you? Then come to this session and walk through the many options available to you for building powerful services on .NET and how to decide when to use what. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4567</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B308</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B308</link><category>breakout</category><title>Building OData Services with ASP.NET Web API</title><description>&lt;p&gt;ASP.NET Web API is a framework for building HTTP services and that includes OData services too! This session shows you how you can use ASP.NET Web API OData to build OData services over any data source, whether you have a query provider or not. It also demonstrates how you can easy enable support for the OData query syntax, while maintaining control over exactly which queries you want to support. ASP.NET Web API OData is based on ODataLib and includes support for the new light weight OData JSON format. Finally, we explore how you how you can support basic CRUD operations, custom OData actions, server-side paging, and much more!&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d4aae7c450da4ced8cdaa1950076193f"&gt;</description><pubDate>Wed, 03 Apr 2013 14:09:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/8a4f/aef7882d-0836-4d42-918e-e035a3198a4f/DEV-B308.wmv" type="video/x-ms-wmv" length="166080935" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B308</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web API is a framework for building HTTP services and that includes OData services too! This session shows you how you can use ASP.NET Web API OData to build OData services over any data source, whether you have a query provider or not. It also demonstrates how you can easy enable support for the OData query syntax, while maintaining control over exactly which queries you want to support. ASP.NET Web API OData is based on ODataLib and includes support for the new light weight OData JSON format. Finally, we explore how you how you can support basic CRUD operations, custom OData actions, server-side paging, and much more! </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4400</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2013/WAD-B327</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2013/WAD-B327</link><category>windows-azure</category><category>breakout</category><category>windows-azure-web</category><title>Windows Azure Web Sites and On-Premises Connectivity</title><description>Windows Azure Web Sites is a great platform for hosting web applications and APIs written in Microsoft ASP.NET, Node.js, PHP, and Python. Customers who want to move into cloud technology a step at a time find great success when initiating their move to cloud by standing up their website presence using Windows Azure Web Sites. Many developers who aim to move to the cloud want to do so in phases. For these situations, many questions arise around how to connect a website back to an on-premises enterprise or even to connect to a Microsoft Office 365 site. In this session, various techniques of connecting a Windows Azure Web Site to an on-premises enterprise architecture are discussed. Through a series of deep-dive demonstrations using Service Bus, SignalR, data marts, and Windows Azure Active Directory, you are introduced to the opportunities that enable communication between Windows Azure Web Sites and your enterprise environment. If you've been wanting to get started with Web Sites but have been unable to conceptualize how you can set up a hybrid environment using Windows Azure, this session will clear the air and give you some ideas of what's possible. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/pranav-rastogi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:9db01aa6e2e54bb3a7a5a195007402d1"&gt;</description><pubDate>Wed, 03 Apr 2013 14:02:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/4fb5/493d006b-537d-4885-b28b-b9af3e294fb5/WAD-B327.wmv" type="video/x-ms-wmv" length="157276871" /><comments>http://channel9.msdn.com/Events/TechEd/Europe/2013/WAD-B327</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Windows Azure Web Sites is a great platform for hosting web applications and APIs written in Microsoft ASP.NET, Node.js, PHP, and Python. Customers who want to move into cloud technology a step at a time find great success when initiating their move to cloud by standing up their website presence using Windows Azure Web Sites. Many developers who aim to move to the cloud want to do so in phases. For these situations, many questions arise around how to connect a website back to an on-premises enterprise or even to connect to a Microsoft Office 365 site. In this session, various techniques of connecting a Windows Azure Web Site to an on-premises enterprise architecture are discussed. Through a series of deep-dive demonstrations using Service Bus, SignalR, data marts, and Windows Azure Active Directory, you are introduced to the opportunities that enable communication between Windows Azure Web Sites and your enterprise environment. If you've been wanting to get started with Web Sites but have been unable to conceptualize how you can set up a hybrid environment using Windows Azure, this session will clear the air and give you some ideas of what's possible.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4163</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pranav Rastogi</dc:creator></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/Fn5FIv5bT08</guid><link>https://www.youtube.com/watch?v=Fn5FIv5bT08&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Tools 2012.2 - Web Site Publishing</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=Fn5FIv5bT08&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/Fn5FIv5bT08/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=Fn5FIv5bT08&amp;amp;feature=youtube_gdata"&gt;Web Tools 2012.2 - Web Site Publishing&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video shows some recent updates to the Visual Studio web publish process. This video covers the new support for Web Site publishing.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
481&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;2
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;04:44&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 19 Feb 2013 09:12:57 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/Fn5FIv5bT08" /><a10:updated>2013-12-05T16:17:16Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/HdPK8mxpKEI</guid><link>https://www.youtube.com/watch?v=HdPK8mxpKEI&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Tools 2012.2 - web.config transforms</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=HdPK8mxpKEI&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/HdPK8mxpKEI/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=HdPK8mxpKEI&amp;amp;feature=youtube_gdata"&gt;Web Tools 2012.2 - web.config transforms&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video shows some recent updates to the Visual Studio web publish process. This video covers the profile specific web.config transforms as well as other related features.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
3179&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;11
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;07:29&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 19 Feb 2013 09:10:01 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/HdPK8mxpKEI" /><a10:updated>2015-01-16T11:01:53Z</a10:updated></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/7epl4GI80aU</guid><link>https://www.youtube.com/watch?v=7epl4GI80aU&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Web Tools 2012.2 - Quick Publish</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=7epl4GI80aU&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/7epl4GI80aU/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=7epl4GI80aU&amp;amp;feature=youtube_gdata"&gt;Web Tools 2012.2 - Quick Publish&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This video shows some recent updates to the Visual Studio web publish process. This video covers the Quick Publishing features.&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1156&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;1
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;08:09&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=28"&gt;Science &amp;amp; Technology&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Tue, 19 Feb 2013 08:53:19 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/7epl4GI80aU" /><a10:updated>2014-02-04T14:14:35Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/What-s-new-in-ASP-NET-Web-Forms-4-5</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/What-s-new-in-ASP-NET-Web-Forms-4-5</link><category>modern+apps</category><category>web+and+cloud</category><title>What’s new in ASP.NET Web Forms 4.5</title><description>&lt;p&gt;ASP.NET Web Forms lets you build dynamic websites using a familiar drag-and-drop, event-driven model. See how new data-binding features make data-centric applications easier to write than ever while also generating cleaner client-side code with Unobtrusive Validation.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:90e1a2e2306f425197e8a1410189a83e"&gt;</description><pubDate>Thu, 10 Jan 2013 10:28:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/d70a/94f456b6-5497-49ed-bd3a-ef2c1b8ed70a/EdwardsASPNET.wmv" type="video/x-ms-wmv" length="20787089" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/What-s-new-in-ASP-NET-Web-Forms-4-5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web Forms lets you build dynamic websites using a familiar drag-and-drop, event-driven model. See how new data-binding features make data-centric applications easier to write than ever while also generating cleaner client-side code with Unobtrusive Validation. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">522</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Getting-started-with-ASP-NET-Web-API-in-ASP-NET-MVC-4</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Getting-started-with-ASP-NET-Web-API-in-ASP-NET-MVC-4</link><category>modern+apps</category><category>web+and+cloud</category><title>Getting started with ASP.NET Web API in ASP.NET MVC 4</title><description>&lt;p&gt;The last few years have seen the rise of Web APIs - services exposed over plain HTTP rather than through a more formal service contract (like SOAP or WS*). ASP.NET Web API is the new framework that ships with ASP.NET MVC 4 for building HTTP services that can reach a broad range of clients, including browsers and mobile devices. It's also a great platform for building RESTful services.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:f835ead2cde8426588c1a141018a2a1e"&gt;</description><pubDate>Thu, 10 Jan 2013 10:30:29 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/4ec0/92fc3392-3049-423d-a66d-6adb7c344ec0/RothASPNET.wmv" type="video/x-ms-wmv" length="23626241" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Getting-started-with-ASP-NET-Web-API-in-ASP-NET-MVC-4</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">The last few years have seen the rise of Web APIs - services exposed over plain HTTP rather than through a more formal service contract (like SOAP or WS*). ASP.NET Web API is the new framework that ships with ASP.NET MVC 4 for building HTTP services that can reach a broad range of clients, including browsers and mobile devices. It's also a great platform for building RESTful services. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">614</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Publishing-ASP-NET-applications-and-databases-to-the-Cloud-with-Visual-Studio-2012</guid><link>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Publishing-ASP-NET-applications-and-databases-to-the-Cloud-with-Visual-Studio-2012</link><category>modern+apps</category><category>web+and+cloud</category><title>Publishing ASP.NET applications and databases to the Cloud with Visual Studio 2012</title><description>&lt;p&gt;Taking your ASP.NET app to the cloud has gotten even easier. While, Visual Studio 2010 included the introduction of the web publish dialog, in Visual Studio 2012 this capability has been significantly enhanced, making web publishing better than it has ever been. Learn about the latest updates for streamlining web and database publishing.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:ea04850629a540d09192a141018b370f"&gt;</description><pubDate>Thu, 10 Jan 2013 10:30:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/8d84/3ef91ad1-f94c-4c39-986a-a97afabb8d84/HashimiASPNET.wmv" type="video/x-ms-wmv" length="30983945" /><comments>http://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2012-Virtual-Launch/Publishing-ASP-NET-applications-and-databases-to-the-Cloud-with-Visual-Studio-2012</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Taking your ASP.NET app to the cloud has gotten even easier. While, Visual Studio 2010 included the introduction of the web publish dialog, in Visual Studio 2012 this capability has been significantly enhanced, making web publishing better than it has ever been. Learn about the latest updates for streamlining web and database publishing. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">822</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC3</guid><link>http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC3</link><title>Creating HTML5 Applications with jQuery</title><description>&lt;p&gt;There is a massive array of new tags that provide support for video, audio, embedded fonts, data binding, and in-browser data persistence. When coupled with advancements in JavaScript technology like jQuery and the myriad of jQuery plugins available for free, the ability to create truly dynamic client experiences is limited only by your imagination. Add to that the new Single Page Application template using Knockout.js, and you've got a whole new web of opportunities to blow your users' minds.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:825ed81268864f59b3afa11d014d356d"&gt;</description><pubDate>Tue, 04 Dec 2012 20:13:13 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/850d/f346cd1b-9471-4690-b160-e564b40a850d/VWC3.wmv" type="video/x-ms-wmv" length="196081661" /><comments>http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC3</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">There is a massive array of new tags that provide support for video, audio, embedded fonts, data binding, and in-browser data persistence. When coupled with advancements in JavaScript technology like jQuery and the myriad of jQuery plugins available for free, the ability to create truly dynamic client experiences is limited only by your imagination. Add to that the new Single Page Application template using Knockout.js, and you've got a whole new web of opportunities to blow your users' minds. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3604</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC1</guid><link>http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC1</link><title>What’s New in ASP.NET 4.5</title><description>&lt;p&gt;Jon Galloway&amp;nbsp;shows&amp;nbsp;how easy it is to take advantage of some seriously powerful features in ASP.NET 4.5 and Visual Studio 2012.&amp;nbsp;He covers top new features of the latest releases (and some sneak peeks at some unreleased ones, too!) and shows how they all fit together into a cohesive, comprehensive web development toolkit that provides you with both ease of use and extreme flexibility.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:40206e0f36694d65bda4a11d014be0c2"&gt;</description><pubDate>Tue, 04 Dec 2012 20:08:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/dae6/8b7d6301-315b-4ad1-90b7-99c45108dae6/VWC1.wmv" type="video/x-ms-wmv" length="189507653" /><comments>http://channel9.msdn.com/Events/Web-Camps/Vancouver/VWC1</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Jon Galloway shows how easy it is to take advantage of some seriously powerful features in ASP.NET 4.5 and Visual Studio 2012. He covers top new features of the latest releases (and some sneak peeks at some unreleased ones, too!) and shows how they all fit together into a cohesive, comprehensive web development toolkit that provides you with both ease of use and extreme flexibility. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3536</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2012/3-034</guid><link>http://channel9.msdn.com/Events/Build/2012/3-034</link><category>visual-studio</category><category>.net</category><category>asp.net</category><title>Building Real-time Web Apps with ASP.NET SignalR</title><description>Websockets is introducing web developers to a whole new world of real-time programming but that isn’t the end of the story. SignalR gives ASP.NET developers the ability to build real-time web apps that work both with and without websockets and with an API so easy to use it almost seems like magic (really). You want scale too? No problem; SignalR scales out with your application. Come and see why web programing will never be the same again. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a2d84d3c108647139e2ca0f90022b7d4"&gt;</description><pubDate>Mon, 29 Oct 2012 09:06:24 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/ebeb/1a0ad9e5-5abb-4263-bb11-4259f743ebeb/3-034.wmv" type="video/x-ms-wmv" length="143934971" /><comments>http://channel9.msdn.com/Events/Build/2012/3-034</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Websockets is introducing web developers to a whole new world of real-time programming but that isn’t the end of the story. SignalR gives ASP.NET developers the ability to build real-time web apps that work both with and without websockets and with an API so easy to use it almost seems like magic (really). You want scale too? No problem; SignalR scales out with your application. Come and see why web programing will never be the same again.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3585</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2012/3-036</guid><link>http://channel9.msdn.com/Events/Build/2012/3-036</link><category>visual-studio</category><category>windows-store-apps</category><category>.net</category><category>asp.net</category><title>Building Services for Any Client with ASP.NET Web API</title><description>There are more exciting client platforms available to run your applications than ever before. Whether you are targeting your application at phones, tablets, or browsers virtually every great client application needs a great backend. Come see how ASP.NET Web API, a new framework for creating HTTP services, can help you reach any device. In this talk you’ll see how to support multiple formats, including JSON, XML and even OData. You’ll see how to add rich query semantics over your data using the OData query syntax. You’ll see how to secure your web APIs using a variety of protocols including OAuth. Every public web API needs great developer documentation and I’ll show you how ASP.NET Web API makes generating rich help pages easy. I’ll show you how ASP.NET Web API works great for building backend services for your Windows 8 apps and gives you the power and flexibility to build your web APIs your way. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:3d50eca0f1cf4074898fa0f90022bccc"&gt;</description><pubDate>Mon, 29 Oct 2012 09:06:28 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/fb7e/17692a04-3832-4472-8944-c66e7254fb7e/3-036.wmv" type="video/x-ms-wmv" length="160845179" /><comments>http://channel9.msdn.com/Events/Build/2012/3-036</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">There are more exciting client platforms available to run your applications than ever before. Whether you are targeting your application at phones, tablets, or browsers virtually every great client application needs a great backend. Come see how ASP.NET Web API, a new framework for creating HTTP services, can help you reach any device. In this talk you’ll see how to support multiple formats, including JSON, XML and even OData. You’ll see how to add rich query semantics over your data using the OData query syntax. You’ll see how to secure your web APIs using a variety of protocols including OAuth. Every public web API needs great developer documentation and I’ll show you how ASP.NET Web API makes generating rich help pages easy. I’ll show you how ASP.NET Web API works great for building backend services for your Windows 8 apps and gives you the power and flexibility to build your web APIs your way.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4269</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/2012/3-028</guid><link>http://channel9.msdn.com/Events/Build/2012/3-028</link><category>visual-studio</category><category>.net</category><category>asp.net</category><title>Bleeding edge ASP.NET:  See what is next for MVC, Web API, SignalR and more…</title><description>&lt;p&gt;After shipping ASP.NET 4.5, we were already hard at work on the next version. Come learn about some of the awesome new features coming in our next release. We will show how to write Facebook apps, how to build real time apps, how to host your application in Windows Azure supporting your local Active Directory, enhancements to Web API with OData support and more….&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6f7754d6571743ed80dba0f90022c3fa"&gt;</description><pubDate>Mon, 29 Oct 2012 09:06:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0b40/e9c98dbc-8ef3-4e1d-a59d-0d3f03c80b40/3-028.wmv" type="video/x-ms-wmv" length="155941481" /><comments>http://channel9.msdn.com/Events/Build/2012/3-028</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">After shipping ASP.NET 4.5, we were already hard at work on the next version. Come learn about some of the awesome new features coming in our next release. We will show how to write Facebook apps, how to build real time apps, how to host your application in Windows Azure supporting your local Active Directory, enhancements to Web API with OData support and more…. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3706</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway, Scott Hanselman</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-MVC-4-Mobile</guid><link>http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-MVC-4-Mobile</link><title>ASP.NET MVC 4 Mobile</title><description>&lt;p&gt;ASP.NET MVC 4 offers a variety of options when it comes to mobile browsers. We'll talk about responsive design, display modes (including cusom modes), and mobile-only development using jQuery mobile.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:adc9b32698224b41b3dfa0950141e584"&gt;</description><pubDate>Wed, 01 Aug 2012 02:12:57 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/4957/5e66441f-52e2-41fc-9361-6576160e4957/aspConfMvc4Mobile.wmv" type="video/x-ms-wmv" length="164023523" /><comments>http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-MVC-4-Mobile</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET MVC 4 offers a variety of options when it comes to mobile browsers. We'll talk about responsive design, display modes (including cusom modes), and mobile-only development using jQuery mobile. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4121</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/aspConf/aspConf/Advanced-ASP-NET-Web-Forms-4-5</guid><link>http://channel9.msdn.com/Events/aspConf/aspConf/Advanced-ASP-NET-Web-Forms-4-5</link><title>Advanced ASP.NET Web Forms 4.5</title><description>&lt;p&gt;Learn techniques to enhance your Web Forms development experience. See how you can improve your code's maintainability and testability and your site's performance. Leverage new features in ASP.NET Web Forms 4.5 to reduce the amount of UI &amp;quot;yuck&amp;quot; code and focus on your application's logic. Which open source frameworks improve your Web Forms application.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:81cd3047c60140459817a0980112de6a"&gt;</description><pubDate>Tue, 24 Jul 2012 21:01:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/ebec/29a5b5a3-c3a2-4db7-84c8-5abea8e3ebec/aspConfAdvancedWebForms.wmv" type="video/x-ms-wmv" length="144764202" /><comments>http://channel9.msdn.com/Events/aspConf/aspConf/Advanced-ASP-NET-Web-Forms-4-5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Learn techniques to enhance your Web Forms development experience. See how you can improve your code's maintainability and testability and your site's performance. Leverage new features in ASP.NET Web Forms 4.5 to reduce the amount of UI &amp;quot;yuck&amp;quot; code and focus on your application's logic. Which open source frameworks improve your Web Forms application. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4470</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/aspConf/aspConf/Ask-The-Experts</guid><link>http://channel9.msdn.com/Events/aspConf/aspConf/Ask-The-Experts</link><title>Ask the Experts</title><description>&lt;p&gt;Here's your chance to get answers to your deep technical questions about SignalR, MVC, Web API! With Damian Edwards, Brad Wilson and Marcin Dobosz.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:059b0b4563e545b88689a08d0168cb3b"&gt;</description><pubDate>Fri, 13 Jul 2012 21:55:51 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/93f4/7eec3cf0-a0e5-4a2f-a0fb-bd86fcda93f4/AspConfAsktheExperts.wmv" type="video/x-ms-wmv" length="944544329" /><comments>http://channel9.msdn.com/Events/aspConf/aspConf/Ask-The-Experts</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Here's your chance to get answers to your deep technical questions about SignalR, MVC, Web API! With Damian Edwards, Brad Wilson and Marcin Dobosz. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4474</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Brad Wilson, Marcin Dobosz</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-Beyond-Visual-Studio-2012-and-NET-4-5</guid><link>http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-Beyond-Visual-Studio-2012-and-NET-4-5</link><title>ASP.NET - Beyond Visual Studio 2012 and .NET 4.5 </title><description>&lt;p&gt;What happens after ASP.NET 4.5, ASP.NET MVC 4, ASP.NET Web Pages 2, and Visual 2012? Hear straight from Scott Hunter and team talk about where ASP.NET and Visual Studio are going next.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:786f7927d17e4d109c0ea08d01671b32"&gt;</description><pubDate>Fri, 13 Jul 2012 21:55:36 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/26c4/5e86eaf1-2164-4b2a-8b07-b4f5e0fe26c4/ASPNETBeyondVisualStudio2012andNet45.wmv" type="video/x-ms-wmv" length="479117827" /><comments>http://channel9.msdn.com/Events/aspConf/aspConf/ASP-NET-Beyond-Visual-Studio-2012-and-NET-4-5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">What happens after ASP.NET 4.5, ASP.NET MVC 4, ASP.NET Web Pages 2, and Visual 2012? Hear straight from Scott Hunter and team talk about where ASP.NET and Visual Studio are going next. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4057</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Europe/2012/DEV306</guid><link>http://channel9.msdn.com/Events/TechEd/Europe/2012/DEV306</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Developing on Windows Azure: Cloud-Enable Your Microsoft ASP.NET Applications </title><description>Cloud enabling your ASP.NET applications is more than simply hosting your app on Azure. Azure provides many services that applications can leverage to ensure they can scale with the demands of your customers. This talk will discuss how you can develop ASP.NET applications for the cloud and recent changes in Azure that make developing for the cloud easier, and better, than ever. And finally, learn what you need to know in order to publish your ASP.NET application to Azure. We will walk you through services such as BLOB (binary large object) storage, SQL Azure, Service Bus, Caching, and more. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a3aed48c10004354abfda07a01716a6b"&gt;</description><pubDate>Sun, 24 Jun 2012 20:25:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/3dd5/ec24d219-361c-41c1-8fa2-276409683dd5/DEV306.wmv" type="video/x-ms-wmv" length="194094506" /><comments>http://channel9.msdn.com/Events/TechEd/Europe/2012/DEV306</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cloud enabling your ASP.NET applications is more than simply hosting your app on Azure. Azure provides many services that applications can leverage to ensure they can scale with the demands of your customers. This talk will discuss how you can develop ASP.NET applications for the cloud and recent changes in Azure that make developing for the cloud easier, and better, than ever. And finally, learn what you need to know in order to publish your ASP.NET application to Azure. We will walk you through services such as BLOB (binary large object) storage, SQL Azure, Service Bus, Caching, and more.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4171</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV305</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV305</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Microsoft ASP.NET and the Realtime Web</title><description>Users want to see results, and they want them right now. As the options for real-time applications grow, so does the demand and the need for you, the developer, to understand the variety of tools available to give users the experience they expect and deserve. This session introduces you to the real-time web techniques available to ASP.NET developers. We take a deep dive into the groundbreaking open source project known as SignalR and demonstrate how it provides a great abstraction to lower level transports like WebSockets, which will be supported natively by IIS 8. Together with the Windows Azure Service Bus, SignalR and the cloud allow for huge scaling possibilities so your users can have collaborative, real-time web, cloud, and distributed applications that work cohesively to offer real-time user experiences. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:5312c2f665524c2eb6efa06a00d81204"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/759d/0b600190-fa8d-4e67-93cb-45a3c944759d/DEV305.wmv" type="video/x-ms-wmv" length="221615496" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV305</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Users want to see results, and they want them right now. As the options for real-time applications grow, so does the demand and the need for you, the developer, to understand the variety of tools available to give users the experience they expect and deserve. This session introduces you to the real-time web techniques available to ASP.NET developers. We take a deep dive into the groundbreaking open source project known as SignalR and demonstrate how it provides a great abstraction to lower level transports like WebSockets, which will be supported natively by IIS 8. Together with the Windows Azure Service Bus, SignalR and the cloud allow for huge scaling possibilities so your users can have collaborative, real-time web, cloud, and distributed applications that work cohesively to offer real-time user experiences.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4336</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV304</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV304</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>ASP.NET for Mobile and Tablet Development</title><description>Mobile traffic on the web is exploding. Are you ready? Microsoft ASP.NET MVC 4 includes new mobile-friendly templates, a focus on responsive design, as well as dedicated mobile templates that leverage jQuery and jQuery mobile. The speaker shows what you can do today and tomorrow to make your site friendly on a mobile device. When should your mobile site become a mobile application? Should you use CSS3 media queries, or go “all in” and use jQuery mobile or another mobile framework? &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:c0b167dd79d346b0a5d5a06a00d81201"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/41fb/e7df5358-44c0-4289-98fa-8e3e529d41fb/DEV304.wmv" type="video/x-ms-wmv" length="241215760" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV304</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Mobile traffic on the web is exploding. Are you ready? Microsoft ASP.NET MVC 4 includes new mobile-friendly templates, a focus on responsive design, as well as dedicated mobile templates that leverage jQuery and jQuery mobile. The speaker shows what you can do today and tomorrow to make your site friendly on a mobile device. When should your mobile site become a mobile application? Should you use CSS3 media queries, or go “all in” and use jQuery mobile or another mobile framework?</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4379</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV303</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV303</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>ASP.NET Loves HTML5</title><description>HTML5 is a game changer for the entire industry and opens up new and exciting possibilities for web developers. Come join us for a talk about how Microsoft ASP.NET 4.5 and Visual Studio 2012 makes building web applications using HTML 5, EcmaScript 5 and CSS 3 easier than ever. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:526312834e324891ae7ea06a00d811fe"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/846a/c232481b-2d2b-4c7b-b418-d49a6a78846a/DEV303.wmv" type="video/x-ms-wmv" length="201852544" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV303</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">HTML5 is a game changer for the entire industry and opens up new and exciting possibilities for web developers. Come join us for a talk about how Microsoft ASP.NET 4.5 and Visual Studio 2012 makes building web applications using HTML 5, EcmaScript 5 and CSS 3 easier than ever.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3843</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV326</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV326</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>What’s New in Windows Communication Foundation in Microsoft .NET Framework 4.5</title><description>Come and see how we have enabled new scenarios with Windows Communication Foundation (WCF) in .NET 4.5. Learn how you can use the new WCF support for WebSockets and UDP. See how you can leverage WCF from your Windows applications. Also, see how we’ve simplified WCF across the board including simplified configuration, streaming enhancements, and support for Task-based asynchronous programming. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:50b64c1e987c4be6a1b7a06a00d8123f"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/a0bc/096b1688-d3a6-4081-aeac-531941a9a0bc/DEV326.wmv" type="video/x-ms-wmv" length="182221348" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV326</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Come and see how we have enabled new scenarios with Windows Communication Foundation (WCF) in .NET 4.5. Learn how you can use the new WCF support for WebSockets and UDP. See how you can leverage WCF from your Windows applications. Also, see how we’ve simplified WCF across the board including simplified configuration, streaming enhancements, and support for Task-based asynchronous programming.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3977</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV309</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV309</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Building HTTP Services with ASP.NET Web API</title><description>ASP.NET Web API is a new framework in ASP.NET MVC 4 for creating and consuming HTTP services that can reach a broad set of clients, including browser and mobile devices. ASP.NET Web API gives you a first-class HTTP programming model that is symmetrically supported on both client and server. This session shows you how easy it is to create web APIs that implement the uniform interface of HTTP resources. Learn how you can support a wide range of formats (JSON, XML, form URL encoded, custom) and allow clients to specify acceptable response formats using HTTP content negotiation. Learn how to test your web APIs, enable security, diagnose problems, and generate help page information. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:fc098fafab9b4d60a187a06a00d81211"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/20a7/518e2fbb-c669-4ed4-946b-3db4462b20a7/DEV309.wmv" type="video/x-ms-wmv" length="281679951" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV309</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET Web API is a new framework in ASP.NET MVC 4 for creating and consuming HTTP services that can reach a broad set of clients, including browser and mobile devices. ASP.NET Web API gives you a first-class HTTP programming model that is symmetrically supported on both client and server. This session shows you how easy it is to create web APIs that implement the uniform interface of HTTP resources. Learn how you can support a wide range of formats (JSON, XML, form URL encoded, custom) and allow clients to specify acceptable response formats using HTTP content negotiation. Learn how to test your web APIs, enable security, diagnose problems, and generate help page information.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4411</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV306</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV306</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Developing on Windows Azure: Cloud-Enable Your Microsoft ASP.NET Applications</title><description>Cloud enabling your ASP.NET applications is more than simply hosting your app on Azure. Azure provides many services that applications can leverage to ensure they can scale with the demands of your customers. This session discusses how you can develop ASP.NET applications for the cloud and recent changes in Azure that make developing for the cloud easier and better than ever. And finally, learn what you need to know in order to publish your ASP.NET application to Azure. We walk you through services such as BLOB (binary large object) storage, SQL Azure, Service Bus, Caching, and more. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/sayed-hashimi&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d10521b187b445b292fba06a00d81208"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/269f/5b4bef62-a91d-4693-87b2-641fb11d269f/DEV306.wmv" type="video/x-ms-wmv" length="146457916" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV306</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Cloud enabling your ASP.NET applications is more than simply hosting your app on Azure. Azure provides many services that applications can leverage to ensure they can scale with the demands of your customers. This session discusses how you can develop ASP.NET applications for the cloud and recent changes in Azure that make developing for the cloud easier and better than ever. And finally, learn what you need to know in order to publish your ASP.NET application to Azure. We walk you through services such as BLOB (binary large object) storage, SQL Azure, Service Bus, Caching, and more.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3405</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sayed Hashimi</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV302</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV302</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>What&amp;#39;s New in Visual Studio 2012 for Web Developers</title><description>Building websites has become more and more important for most businesses worldwide, and with the introduction of HTML 5 we now have more possibilities than ever. Join us on a journey through the features of the upcoming version of Microsoft ASP.NET and Visual Studio to get a sneak peek on the new abilities and tools needed to build modern websites.  &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:49159bf7046c463d90a3a06a00d811fa"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/0775/ca100e7a-76f6-44c1-bf20-d7f2e8490775/DEV302.wmv" type="video/x-ms-wmv" length="193468424" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV302</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Building websites has become more and more important for most businesses worldwide, and with the introduction of HTML 5 we now have more possibilities than ever. Join us on a journey through the features of the upcoming version of Microsoft ASP.NET and Visual Studio to get a sneak peek on the new abilities and tools needed to build modern websites. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3823</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV301</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV301</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>ASP.NET Roadmap: One ASP.NET – Web Forms, MVC, Web API, and more</title><description>Interesting new solutions to internet problems continue to emerge. Realtime, Web APIs, mobile, Gmail-style apps in a single page, and hybrids are the norm. Time to abandon .NET? Let's look at what Microsoft ASP.NET brings to today's Worldwide Web. Microsoft .NET is unquestionably and demonstrably able to scale to monster heights, but can it compete in a realtime and JavaScript heavy world? How will your ASP.NET applications change and what about your existing stuff? Join us as we break down the technologies that you - the ASP.NET developer - have in your toolbox and how to solve today's problems while still having fun and not selling your soul. Does it all fit together into One ASP.NET? &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:e228cc5716cc44ca9cdea06a00d811f7"&gt;</description><pubDate>Fri, 08 Jun 2012 20:06:41 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/316e/257cf698-87f2-4aa1-9d52-12aa2cff316e/DEV301.wmv" type="video/x-ms-wmv" length="221038392" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV301</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Interesting new solutions to internet problems continue to emerge. Realtime, Web APIs, mobile, Gmail-style apps in a single page, and hybrids are the norm. Time to abandon .NET? Let's look at what Microsoft ASP.NET brings to today's Worldwide Web. Microsoft .NET is unquestionably and demonstrably able to scale to monster heights, but can it compete in a realtime and JavaScript heavy world? How will your ASP.NET applications change and what about your existing stuff? Join us as we break down the technologies that you - the ASP.NET developer - have in your toolbox and how to solve today's problems while still having fun and not selling your soul. Does it all fit together into One ASP.NET?</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">4151</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="false">http://gdata.youtube.com/feeds/base/videos/-LvUJFI8CzM</guid><link>https://www.youtube.com/watch?v=-LvUJFI8CzM&amp;feature=youtube_gdata</link><a10:author><a10:name>Sayed Hashimi</a10:name><a10:uri>https://gdata.youtube.com/feeds/base/users/sayedihashimi</a10:uri></a10:author><category domain="http://schemas.google.com/g/2005#kind">http://gdata.youtube.com/schemas/2007#video</category><title>Package-web demo</title><description>&lt;div style="color: #000000;font-family: Arial, Helvetica, sans-serif;     font-size:12px; font-size: 12px; width: 555px;"&gt;
&lt;table cellspacing="0" cellpadding="0" border="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width="140" valign="top" rowspan="2"&gt;&lt;div style="border: 1px solid #999999; margin: 0px 10px 5px 0px;"&gt;&lt;a href="https://www.youtube.com/watch?v=-LvUJFI8CzM&amp;amp;feature=youtube_gdata"&gt;&lt;img alt="" src="https://i.ytimg.com/vi/-LvUJFI8CzM/0.jpg"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td width="256" valign="top"&gt;&lt;div style="font-size: 12px; font-weight: bold;"&gt;&lt;a style="font-size: 15px; font-weight: bold;                  font-decoration: none;" href="https://www.youtube.com/watch?v=-LvUJFI8CzM&amp;amp;feature=youtube_gdata"&gt;Package-web demo&lt;/a&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size: 12px; margin: 3px 0px;"&gt;&lt;span&gt;This shows how you can create a web package in Visual Studio and easily publish it to different destinations by leveraging Package-Web (https://nuget.org/packages/PackageWeb)&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; line-height: 1.4em; padding-left: 20px;             padding-top: 1px;" width="146" valign="top"&gt;&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;From:&lt;/span&gt;
&lt;a href="https://www.youtube.com/channel/UCwEinBp3Mx1UuAR52pzRcNw"&gt;Sayed Hashimi&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Views:&lt;/span&gt;
1649&lt;/div&gt;
&lt;div style="white-space: nowrap;text-align: left"&gt;&lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt; &lt;img style="border: 0px none; margin: 0px; padding: 0px;                    vertical-align: middle; font-size: 11px;" align="top" alt="" src="https://gdata.youtube.com/static/images/icn_star_full_11x11.gif"&gt;&lt;/div&gt;
&lt;div style="font-size: 11px;"&gt;2
&lt;span style="color: #666666; font-size: 11px;"&gt;ratings&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;Time:&lt;/span&gt;
&lt;span style="color: #000000; font-size: 11px; font-weight: bold;"&gt;05:40&lt;/span&gt;&lt;/td&gt;
&lt;td style="font-size: 11px; padding-left: 20px;"&gt;&lt;span style="color: #666666; font-size: 11px;"&gt;More in&lt;/span&gt;
&lt;a href="https://www.youtube.com/videos?c=22"&gt;People &amp;amp; Blogs&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><pubDate>Wed, 14 Mar 2012 05:56:55 Z</pubDate><a10:link rel="self" type="application/atom+xml" href="https://gdata.youtube.com/feeds/base/users/sayedihashimi/uploads/-LvUJFI8CzM" /><a10:updated>2013-12-01T09:51:06Z</a10:updated></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/BUILD2011/TOOL-906T</guid><link>http://channel9.msdn.com/Events/Build/BUILD2011/TOOL-906T</link><category>.net+framework</category><category>asp.net</category><title>Create rich, data-driven Web apps with ASP.NET 4.5 Web Forms</title><description>Data has always been important for Web apps and there are increasingly a myriad of technologies available to work with data. Come join us to discuss different data paradigms life Database First, Model First and Code First, and how the tooling and framework features support them. We’ll dive into the powers of new data-related improvements in ASP.NET 4.5 Web Forms like model binders and data annotations. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:87febfe4327d4f9bb9469f5d00bc8efc"&gt;</description><pubDate>Tue, 13 Sep 2011 18:26:31 Z</pubDate><enclosure url="http://video.ch9.ms/build/2011/wmv/906.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/Build/BUILD2011/TOOL-906T</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Data has always been important for Web apps and there are increasingly a myriad of technologies available to work with data. Come join us to discuss different data paradigms life Database First, Model First and Code First, and how the tooling and framework features support them. We’ll dive into the powers of new data-related improvements in ASP.NET 4.5 Web Forms like model binders and data annotations.</itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3738</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/Build/BUILD2011/SAC-804T</guid><link>http://channel9.msdn.com/Events/Build/BUILD2011/SAC-804T</link><category>async</category><category>scalability</category><category>.net+framework</category><category>asp.net</category><title>CANCELLED: Building IIS and ASP.NET apps with the power of async</title><description>It’s well established from both theory and practice that Web sites and Web services achieve scale through asynchrony. If a dedicated thread is required per client connection to a server, scalability becomes limited by the number of threads the server system can support, which is typically far fewer than business requirements demand. Unfortunately, it’s also been difficult historically for developers to write asynchronous apps, due to the myriad of callbacks that have been necessary to program asynchrony successfully. Thus, businesses scale by investing in many more machines rather than by making better use of the ones they already have or the few they’re paying for use of in the cloud. All that changes with the next release of Visual Studio and .NET. New features in managed languages make writing asynchronous code as simple as writing synchronous code, thereby enabling both developer productivity and good return on investments. In this code-heavy session, learn how you can be the hero of your organization, building efficient and scalable server apps that best utilize your company’s resources. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:bf9185deda4d4b95bb6c9f5d00bc84b0"&gt;</description><pubDate>Tue, 13 Sep 2011 18:26:22 Z</pubDate><comments>http://channel9.msdn.com/Events/Build/BUILD2011/SAC-804T</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">It’s well established from both theory and practice that Web sites and Web services achieve scale through asynchrony. If a dedicated thread is required per client connection to a server, scalability becomes limited by the number of threads the server system can support, which is typically far fewer than business requirements demand. Unfortunately, it’s also been difficult historically for developers to write asynchronous apps, due to the myriad of callbacks that have been necessary to program asynchrony successfully. Thus, businesses scale by investing in many more machines rather than by making better use of the ones they already have or the few they’re paying for use of in the cloud. All that changes with the next release of Visual Studio and .NET. New features in managed languages make writing asynchronous code as simple as writing synchronous code, thereby enabling both developer productivity and good return on investments. In this code-heavy session, learn how you can be the hero of your organization, building efficient and scalable server apps that best utilize your company’s resources.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phil Haack, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/mvcConf/Japan/mvcConf-Japan/Video5</guid><link>http://channel9.msdn.com/Events/mvcConf/Japan/mvcConf-Japan/Video5</link><category>japan</category><category>mvc</category><category>mvcconf</category><category>asp.net</category><title>Video Message: Damian Edwards</title><description> &lt;p&gt;mvcConf @:Japan 開催にあたって、デミアン エドワーズ (Damian Edwards) 氏より日本の開発者の皆様へメッセージをいただきました。&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:a6282c016b324303a7b29f0600c174e8"&gt;</description><pubDate>Wed, 22 Jun 2011 04:00:00 Z</pubDate><enclosure url="http://video.ch9.ms/ch9/74e8/a6282c01-6b32-4303-a7b2-9f0600c174e8/mvcConfJapanVideo5DamianEdwards_ch9.wmv" type="video/x-ms-wmv" length="17653911" /><comments>http://channel9.msdn.com/Events/mvcConf/Japan/mvcConf-Japan/Video5</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> mvcConf @:Japan 開催にあたって、デミアン エドワーズ (Damian Edwards) 氏より日本の開発者の皆様へメッセージをいただきました。 </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">80</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV353</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV353</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Pragmatic JavaScript,jQuery and AJAX with Microsoft ASP.NET</title><description>&lt;p&gt;JQuery turned the world on its ear. Do we still write JavaScript or do we just write jQuery? Damian answers that question with new JavaScript techniques and AJAX as well as some jQuery plugin surprises up his sleeve. What are the best libraries and practices for using jQuery and JavaScript with ASP.NET? How should balanced applications be designed to make the best use of the power of the server and the power of the client?&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:ac90336eb42e474cbab99ee8008f2925"&gt;</description><pubDate>Thu, 19 May 2011 15:41:00 Z</pubDate><enclosure url="http://video.ch9.ms/teched/na/2011/wmv/DEV353.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV353</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">JQuery turned the world on its ear. Do we still write JavaScript or do we just write jQuery? Damian answers that question with new JavaScript techniques and AJAX as well as some jQuery plugin surprises up his sleeve. What are the best libraries and practices for using jQuery and JavaScript with ASP.NET? How should balanced applications be designed to make the best use of the power of the server and the power of the client? </itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV352</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV352</link><category>developer+tools</category><category>languages+-and-+frameworks</category><title>Web Forms: Reports of My Death Are Greatly Exaggerated</title><description>Microsoft ASP.NET is greater than WebForms,just as ASP.NET is greater than ASP.NET MVC. As MVC evolves so does WebForms. Join Damian Edwards for a tour of new features in the next version of ASP.NET WebForms,some of which you might recognize as friends of the ASP.NET MVC world. Learn more about Routing,Model Binding,optimizing CSS and JavaScript,advanced control templating techniques,and new thinking around how to structure applications using your favorite Web Framework. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:5eefcf01ff7141b19be29ee7001f39b8"&gt;</description><pubDate>Wed, 18 May 2011 08:53:41 Z</pubDate><enclosure url="http://video.ch9.ms/teched/na/2011/wmv/DEV352.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV352</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Microsoft ASP.NET is greater than WebForms,just as ASP.NET is greater than ASP.NET MVC. As MVC evolves so does WebForms. Join Damian Edwards for a tour of new features in the next version of ASP.NET WebForms,some of which you might recognize as friends of the ASP.NET MVC world. Learn more about Routing,Model Binding,optimizing CSS and JavaScript,advanced control templating techniques,and new thinking around how to structure applications using your favorite Web Framework.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/MID314</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/MID314</link><category>middleware+-and-+integration</category><title>Services Made Easy with WCF 4,Microsoft Visual Studio 2010 and Windows Server AppFabric</title><description>Windows Communication Foundation (WCF) is a flexible and powerful platform for building service-oriented applications. With the improvements to WCF made in Microsoft .NET Framework 4 and Visual Studio 2010,creating and consuming services is a snap! Add in the management capabilities of Windows Server AppFabric and you have a winning combination for developers and IT administrators. Come find out how you can best leverage WCF and Windows Server AppFabric to author,configure,manage and troubleshoot your service-oriented applications. Learn about the future investment we are making in further improving service developer experience. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/daniel-roth&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:827b97820b844f0f8e519ee600809e3d"&gt;</description><pubDate>Tue, 17 May 2011 11:48:17 Z</pubDate><enclosure url="http://video.ch9.ms/teched/na/2011/wmv/MID314.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/MID314</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Windows Communication Foundation (WCF) is a flexible and powerful platform for building service-oriented applications. With the improvements to WCF made in Microsoft .NET Framework 4 and Visual Studio 2010,creating and consuming services is a snap! Add in the management capabilities of Windows Server AppFabric and you have a winning combination for developers and IT administrators. Come find out how you can best leverage WCF and Windows Server AppFabric to author,configure,manage and troubleshoot your service-oriented applications. Learn about the future investment we are making in further improving service developer experience.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roth</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/MIX/MIX11/FRM12</guid><link>http://channel9.msdn.com/Events/MIX/MIX11/FRM12</link><category>jquery</category><category>asp.net</category><title>Pragmatic JavaScript, jQuery &amp; AJAX with ASP.NET</title><description>&lt;p&gt;JQuery turned the world on its ear. Do we still write JavaScript or do we just write jQuery? Damian will answer that question with new JavaScript techniques and AJAX as well as some jQuery plugin surprises up his sleeve. What are the best libraries and practices for using jQuery and JavaScript with ASP.NET? How should balanced applications be designed to make the best use of the power of the server and the power of the client?&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:3db916ac95e745448dcc9eaf0092fab4"&gt;</description><pubDate>Wed, 23 Mar 2011 15:55:00 Z</pubDate><enclosure url="http://files.ch9.ms/mix/2011/wmv/FRM12.wmv" type="video/x-ms-wmv" length="453191685" /><comments>http://channel9.msdn.com/Events/MIX/MIX11/FRM12</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">JQuery turned the world on its ear. Do we still write JavaScript or do we just write jQuery? Damian will answer that question with new JavaScript techniques and AJAX as well as some jQuery plugin surprises up his sleeve. What are the best libraries and practices for using jQuery and JavaScript with ASP.NET? How should balanced applications be designed to make the best use of the power of the server and the power of the client? </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3647</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/MIX/MIX11/FRM15</guid><link>http://channel9.msdn.com/Events/MIX/MIX11/FRM15</link><category>asp.net</category><category>web+forms</category><title>Web Forms: Reports of my Death are Greatly Exaggerated</title><description>&lt;p&gt;ASP.NET is greater than WebForms, just as ASP.NET is greater than ASP.NET MVC. As MVC evolves so does WebForms. Join Damian Edwards for a tour of new features in the next version of ASP.NET WebForms, some of which you might recognize as friends of the ASP.NET MVC world. Learn more about Routing, Model Binding, optimizing CSS and JavaScript, advanced control templating techniques, and new thinking around how to structure applications using your favorite Web Framework.&lt;/p&gt; &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:265c553be5104b2e8fbd9eaf0092fbb9"&gt;</description><pubDate>Wed, 23 Mar 2011 15:55:00 Z</pubDate><enclosure url="http://files.ch9.ms/mix/2011/wmv/FRM15.wmv" type="video/x-ms-wmv" length="417510203" /><comments>http://channel9.msdn.com/Events/MIX/MIX11/FRM15</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET is greater than WebForms, just as ASP.NET is greater than ASP.NET MVC. As MVC evolves so does WebForms. Join Damian Edwards for a tour of new features in the next version of ASP.NET WebForms, some of which you might recognize as friends of the ASP.NET MVC world. Learn more about Routing, Model Binding, optimizing CSS and JavaScript, advanced control templating techniques, and new thinking around how to structure applications using your favorite Web Framework. </itunes:summary><itunes:duration xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">3401</itunes:duration><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/PDC/PDC10/FT50</guid><link>http://channel9.msdn.com/Events/PDC/PDC10/FT50</link><title>Deep Dive into Razor</title><description>Razor is the new syntax for building web applications in both ASP.NET Web Pages and ASP.NET MVC. It has a very concise syntax that blurs the transition between code and markup. We will start with a deep dive showing how to program the web using Razor which will include building reusable components called helpers that can share both markup and code in a very natural way. Next we will demonstrate how Razor’s extensibility can be used to use it outside of typical web scenario’s by writing some code using the Razor syntax to send rich emails that contain both text, markup and code. You should walk away knowing how to program that web with Razor and how Razor can be used outside the web to increase your productivity as a rich templating engine. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:124499499e4b4935a85d9eb4018a7e02"&gt;</description><pubDate>Wed, 27 Oct 2010 11:00:00 Z</pubDate><enclosure url="http://files.ch9.ms/pdc10/vod/downloads/vod/FT50_AndrewNurse/FT50_AndrewNurse_PDC_WMV_Low_640x360_1000k.wmv" type="video/x-ms-wmv" length="286242629" /><comments>http://channel9.msdn.com/Events/PDC/PDC10/FT50</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Razor is the new syntax for building web applications in both ASP.NET Web Pages and ASP.NET MVC. It has a very concise syntax that blurs the transition between code and markup. We will start with a deep dive showing how to program the web using Razor which will include building reusable components called helpers that can share both markup and code in a very natural way. Next we will demonstrate how Razor’s extensibility can be used to use it outside of typical web scenario’s by writing some code using the Razor syntax to send rich emails that contain both text, markup and code. You should walk away knowing how to program that web with Razor and how Razor can be used outside the web to increase your productivity as a rich templating engine.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Andrew Nurse</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX304</guid><link>http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX304</link><category>CloudComputingOnlineServices</category><title>Building Great Standards Based Websites with ASP.NET 4.0 and Silverlight 3</title><description>In this session, Damian Edwards will share his experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They'll show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, as well as coding techniques like the Model-View-Presenter pattern to improve maintainability and testing. Along the way, there'll be plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as an early peek at some of the new features coming in ASP.NET 4.0 and VS 2010.

Following this Andrew Tokeley will show you how it is possible to build highly accessible web applications by leveraging the accessibility features of Silverlight and discusses using Silverlight under the New Zealand e-Government Web Guidelines. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:0032352927e347d48f479ed700fc1139"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:47 Z</pubDate><enclosure url="http://e.msteched.com/public/nz/WUX304.wmv" type="video/x-ms-wmv" length="184284059" /><comments>http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX304</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this session, Damian Edwards will share his experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They'll show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, as well as coding techniques like the Model-View-Presenter pattern to improve maintainability and testing. Along the way, there'll be plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as an early peek at some of the new features coming in ASP.NET 4.0 and VS 2010.

Following this Andrew Tokeley will show you how it is possible to build highly accessible web applications by leveraging the accessibility features of Silverlight and discusses using Silverlight under the New Zealand e-Government Web Guidelines.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Andrew Tokeley, Mark Wilson-Thomas</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX303</guid><link>http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX303</link><category>DeveloperToolsLanguagesFrameworks</category><title>Building Rich Web Experiences with jQuery</title><description>Hate the thought of writing JavaScript? Get frustrated by cross-browser DOM quirks? Ever wondered how those spiffy sites do that animation without Flash or Silverlight? Think that JavaScript isn't a real programming language? Well come and see how jQuery makes writing JavaScript fun again. Microsoft is now shipping and supporting jQuery, an open-source JavaScript library, with ASP.NET and Visual Studio. jQuery is fast, lean, simple and hugely expandable, to enable you to build the most compelling web applications quickly and easily. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6051f8f540074500968a9ed700fc293d"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:45 Z</pubDate><enclosure url="http://e.msteched.com/public/nz/WUX303.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NewZealand/2009/WUX303</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Hate the thought of writing JavaScript? Get frustrated by cross-browser DOM quirks? Ever wondered how those spiffy sites do that animation without Flash or Silverlight? Think that JavaScript isn't a real programming language? Well come and see how jQuery makes writing JavaScript fun again. Microsoft is now shipping and supporting jQuery, an open-source JavaScript library, with ASP.NET and Visual Studio. jQuery is fast, lean, simple and hugely expandable, to enable you to build the most compelling web applications quickly and easily.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Morrison, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK117</guid><link>http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK117</link><category>CloudComputingOnlineServices</category><title>ASP.NET MVC vs ASP.NET Webforms - will webforms be replaced by MVC?</title><description>ASP.NET MVC is currently the technology flavour of the season. ASP.NET webforms has been a dominant development platform for a long time but MVC is receiving a lot of focus and is the choice of architetecural purists. Does this signal the demise of ASP.NET webforms? Should we be choosing MVC for all future projects?  &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:92f082e98ba949eb9a8d9ed700c675e3"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:42 Z</pubDate><enclosure url="http://e.msteched.com/public/au/TTK117.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK117</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET MVC is currently the technology flavour of the season. ASP.NET webforms has been a dominant development platform for a long time but MVC is receiving a lot of focus and is the choice of architetecural purists. Does this signal the demise of ASP.NET webforms? Should we be choosing MVC for all future projects? </itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tatham Oddie, Damian Edwards, Paul Glavich</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB306</guid><link>http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB306</link><category>CloudComputingOnlineServices</category><title>Building Fast, Standards Compliant ASP.NET sites</title><description>In this demo-packed session, Damian Edwards (MVP) and Tatham Oddie (MVP) will share their experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They'll show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, coding techniques like the Model-View-Presenter pattern to improve maintainability and testing, as well as both client and server side performance. Along the way, there'll be plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as an early peek at some of the new features coming in ASP.NET 4 and VS 2010. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:f8effad3a6ac4cf6963d9ed700c6c55b"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:42 Z</pubDate><enclosure url="http://e.msteched.com/public/au/WEB306.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB306</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this demo-packed session, Damian Edwards (MVP) and Tatham Oddie (MVP) will share their experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They'll show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, coding techniques like the Model-View-Presenter pattern to improve maintainability and testing, as well as both client and server side performance. Along the way, there'll be plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as an early peek at some of the new features coming in ASP.NET 4 and VS 2010.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tatham Oddie, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK113</guid><link>http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK113</link><category>CloudComputingOnlineServices</category><title>Building Fast, Public Websites</title><description>Building public websites can be hard at the best of times. Making them fast can be even harder. What makes a website faster? What makes it appear faster to users? How can you leverage features of ASP.NET to get the best experience for your users? Tune in to hear two ASP.NET MVPs share some of the problems they had to solve while rebuilding Australia's largest e-commerce site. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:1eecb9569b164ed8bf3b9ed700c6779e"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:39 Z</pubDate><enclosure url="http://e.msteched.com/public/au/TTK113.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/Australia/2009/TTK113</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Building public websites can be hard at the best of times. Making them fast can be even harder. What makes a website faster? What makes it appear faster to users? How can you leverage features of ASP.NET to get the best experience for your users? Tune in to hear two ASP.NET MVPs share some of the problems they had to solve while rebuilding Australia's largest e-commerce site.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tatham Oddie, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB301</guid><link>http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB301</link><category>CloudComputingOnlineServices</category><title>ASP.NET MVC: Building for the web (and even mobile) with ASP.NET MVC</title><description>In this session, ASP.NET MVP Damian Edwards will demonstrate why ASP.NET MVC is a great platform upon which to build modern web experiences. Learn how to create optimised interfaces for different devices from a common code base and how ASP.NET MVC can help you to meet the challenges of building for the web. Also discover how the web design theory of progressive enhancement can be applied to help create great user experiences on a wide range of browsers. Finally, learn tips to optimise your web applications to help make them fly.

 &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d6aee725fe5f41f6b0aa9ed700c5d6a3"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:37 Z</pubDate><enclosure url="http://e.msteched.com/public/au/WEB301.wmv" type="video/x-ms-wmv" length="240160153" /><comments>http://channel9.msdn.com/Events/TechEd/Australia/2009/WEB301</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this session, ASP.NET MVP Damian Edwards will demonstrate why ASP.NET MVC is a great platform upon which to build modern web experiences. Learn how to create optimised interfaces for different devices from a common code base and how ASP.NET MVC can help you to meet the challenges of building for the web. Also discover how the web design theory of progressive enhancement can be applied to help create great user experiences on a wide range of browsers. Finally, learn tips to optimise your web applications to help make them fly.

</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/Australia/2009/PAN72</guid><link>http://channel9.msdn.com/Events/TechEd/Australia/2009/PAN72</link><category>Virtualization</category><title>Rich vs Reach - should we develop apps for the lowest common denominator?</title><description> &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:5cf7e5ad75194e70b4a79ed700c614bd"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:37 Z</pubDate><enclosure url="http://e.msteched.com/public/au/PAN72.wmv" type="video/x-ms-wmv" length="114478385" /><comments>http://channel9.msdn.com/Events/TechEd/Australia/2009/PAN72</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"></itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Jordan Knight, Andrew Coates, Michael Kordahi, Shane Morris, Joseph Cooney</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX304</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX304</link><category>CloudComputingOnlineServices</category><title>Building Rich Business Clients in WPF: New Tools and Controls for Windows Presentation Foundation</title><description>Business applications live on data. In this demo-focused talk, learn how you can get productive quickly building data-centric line-of-business applications in WPF using the new DataGrid, Ribbon, and Calendar/DatePicker controls. As we build the application, we highlight how building data-bound applications, and making them look great with resources, will be significantly easier in Microsoft Visual Studio 2010.

 &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:c65338f73cda4a4b84d69ed7010fe70f"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:24 Z</pubDate><enclosure url="http://e.msteched.com/public/us/WUX304.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX304</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Business applications live on data. In this demo-focused talk, learn how you can get productive quickly building data-centric line-of-business applications in WPF using the new DataGrid, Ribbon, and Calendar/DatePicker controls. As we build the application, we highlight how building data-bound applications, and making them look great with resources, will be significantly easier in Microsoft Visual Studio 2010.

</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards, Andrew Tokeley, Mark Wilson-Thomas</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX303</guid><link>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX303</link><category>CloudComputingOnlineServices</category><title>Building Data-Driven RIAs with Microsoft ASP.NET and Microsoft Silverlight</title><description>Two-tier applications have long been the source of inflexibility and brittleness because data access logic is intermingled with the UI. Using the N-tier pattern has been a known solution to this problem for many years. So why do we still have data and UI mixed, even in new applications? Primarily because it is too complex to avoid it.  The .NET Business Logic Layer provides a lightweight pattern that makes it easy to write and test your business logic, provides a non-leaky abstraction of the Data Access layer, and makes it a joy to consume directly from the client--whether across a network boundary as with Silverlight or in the space process as with ASP.NET. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:9520fdb09adb4a85b3719ed7010fec48"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:22 Z</pubDate><enclosure url="http://e.msteched.com/public/us/WUX303.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/NorthAmerica/2009/WUX303</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Two-tier applications have long been the source of inflexibility and brittleness because data access logic is intermingled with the UI. Using the N-tier pattern has been a known solution to this problem for many years. So why do we still have data and UI mixed, even in new applications? Primarily because it is too complex to avoid it.  The .NET Business Logic Layer provides a lightweight pattern that makes it easy to write and test your business logic, provides a non-leaky abstraction of the Data Access layer, and makes it a joy to consume directly from the client--whether across a network boundary as with Silverlight or in the space process as with ASP.NET.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Morrison, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/TechEd/MiddleEast/2009/WEB301</guid><link>http://channel9.msdn.com/Events/TechEd/MiddleEast/2009/WEB301</link><category>CloudComputingOnlineServices</category><title>Windows Azure for Developers</title><description>An overview of the Windows Azure Services Platform, this session focuses on the developer experience and how to get started with Windows Azure as a developer.
 &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:5df4c812c47a4920a3bb9ed700f7b647"&gt;</description><pubDate>Thu, 03 Jun 2010 02:00:07 Z</pubDate><enclosure url="http://e.msteched.com/public/online/WEB301.wmv" type="video/x-ms-wmv" length="1" /><comments>http://channel9.msdn.com/Events/TechEd/MiddleEast/2009/WEB301</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">An overview of the Windows Azure Services Platform, this session focuses on the developer experience and how to get started with Windows Azure as a developer.
</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/MIX/MIX10/EX20</guid><link>http://channel9.msdn.com/Events/MIX/MIX10/EX20</link><title>Building Great Standards-Based Websites for the Big Wide World with Microsoft ASP.NET 4</title><description>In this session, two ASP.NET MVPs share their experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, as well as coding techniques like the Model-View-Presenter pattern to improve maintainability and testing. Along the way, there is plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as a good look at some of the new features in ASP.NET 4 and Microsoft Visual Studio 2010. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Damian-Edwards&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:399df59d5d9e469bb8a69ea20115b255"&gt;</description><pubDate>Tue, 26 Jan 2010 23:14:24 Z</pubDate><enclosure url="http://video.ch9.ms/ecn/mix/10/wmv/EX20.wmv" type="video/x-ms-wmv" length="154507782" /><comments>http://channel9.msdn.com/Events/MIX/MIX10/EX20</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">In this session, two ASP.NET MVPs share their experiences from building Australia's largest e-commerce site with ASP.NET Web Forms. They show you how to be a good web citizen by covering standards compliance (properly!), cross browser and accessibility considerations, non-JavaScript support, as well as coding techniques like the Model-View-Presenter pattern to improve maintainability and testing. Along the way, there is plenty of discussion of the differences between Web Forms and ASP.NET MVC in each area, as well as a good look at some of the new features in ASP.NET 4 and Microsoft Visual Studio 2010.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tatham Oddie, Damian Edwards</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/MIX/MIX10/FT03</guid><link>http://channel9.msdn.com/Events/MIX/MIX10/FT03</link><title>Tips and Tricks for Making Web Forms Shine with Microsoft ASP.NET 4</title><description>Learn how Web Forms continue to evolve in ASP.NET 4, and how they can be used to rapidly build rich and highly performing applications. We cover some great tips and tricks to improve your Web Forms applications with lean, standards compliant markup, rich interactivity with ASP.NET AJAX, and more. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:bafcdcafa0d24689bd929ea201160095"&gt;</description><pubDate>Tue, 26 Jan 2010 23:14:30 Z</pubDate><enclosure url="http://video.ch9.ms/ecn/mix/10/wmv/FT03.wmv" type="video/x-ms-wmv" length="134001806" /><comments>http://channel9.msdn.com/Events/MIX/MIX10/FT03</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Learn how Web Forms continue to evolve in ASP.NET 4, and how they can be used to rapidly build rich and highly performing applications. We cover some great tips and tricks to improve your Web Forms applications with lean, standards compliant markup, rich interactivity with ASP.NET AJAX, and more.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/MIX/MIX10/WKSP04</guid><link>http://channel9.msdn.com/Events/MIX/MIX10/WKSP04</link><title>Microsoft ASP.NET MVC Boot Camp</title><description>ASP.NET MVC enables you to build powerful, testable websites that are web standards-friendly. If you're kind of new to ASP.NET MVC, or want to take your MVC skills to the next level, join us for a bootcamp that (probably) won't require any pushups. We start with an overview of ASP.NET MVC and the reference Nerd Dinner sample, and we update it to leverage cool new features in MVC 2, including the new DisplayTemplates, EditorTemplates, validation features, and areas. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Jon-Galloway&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:f078bb70a29e402493ce9ea20113deff"&gt;</description><pubDate>Tue, 08 Dec 2009 13:37:23 Z</pubDate><comments>http://channel9.msdn.com/Events/MIX/MIX10/WKSP04</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET MVC enables you to build powerful, testable websites that are web standards-friendly. If you're kind of new to ASP.NET MVC, or want to take your MVC skills to the next level, join us for a bootcamp that (probably) won't require any pushups. We start with an overview of ASP.NET MVC and the reference Nerd Dinner sample, and we update it to leverage cool new features in MVC 2, including the new DisplayTemplates, EditorTemplates, validation features, and areas.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Galloway</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/PDC/PDC09/FT58</guid><link>http://channel9.msdn.com/Events/PDC/PDC09/FT58</link><title>What’s New in Microsoft ASP.NET 4 Web Forms and Dynamic Data</title><description>Come hear how to improve productivity while getting more control over building web applications including handling element id’s, using CSS styling, getting finer control over ViewState and controlling the markup.  Also hear how to improve SEO by creating friendly URLs.  See examples of the many advances that make data access simpler including how to enable automatic validation in data controls with a single line of code, how to use the new QueryExtender to easily filter data, and many advances in rapid application development with Dynamic Data. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:d751a43b80d24617aaa49eb400e54eb5"&gt;</description><pubDate>Tue, 10 Nov 2009 10:01:10 Z</pubDate><enclosure url="http://video.ch9.ms/ecn/pdc09/wmv/FT58.wmv" type="video/x-ms-wmv" length="104027527" /><comments>http://channel9.msdn.com/Events/PDC/PDC09/FT58</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Come hear how to improve productivity while getting more control over building web applications including handling element id’s, using CSS styling, getting finer control over ViewState and controlling the markup.  Also hear how to improve SEO by creating friendly URLs.  See examples of the many advances that make data access simpler including how to enable automatic validation in data controls with a single line of code, how to use the new QueryExtender to easily filter data, and many advances in rapid application development with Dynamic Data.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter</dc:creator></item><item><guid isPermaLink="true">http://channel9.msdn.com/Events/PDC/PDC09/FT18</guid><link>http://channel9.msdn.com/Events/PDC/PDC09/FT18</link><title>Microsoft ASP.NET Futures</title><description>ASP.NET has evolved a lot in the last few years with the addition of ASP.NET MVC and Dynamic Data, as well as the continuous improvement of WebForms and ASP.NET AJAX. This session will provide a roadmap of the changes that are coming with ASP.NET 4 and VS 2010 and include demo’s of future directions the team is exploring.  Come to this talk to hear about the future directions of ASP.NET. &lt;img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&amp;dcsuri=http://channel9.msdn.com/Events/Speakers/Scott-Hunter&amp;WT.dl=0&amp;WT.entryid=Session:RSSView:6e535f27e8b04b05bd199eb400e67f91"&gt;</description><pubDate>Thu, 10 Sep 2009 21:41:27 Z</pubDate><enclosure url="http://video.ch9.ms/ecn/pdc09/wmv/FT18.wmv" type="video/x-ms-wmv" length="121423140" /><comments>http://channel9.msdn.com/Events/PDC/PDC09/FT18</comments><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">ASP.NET has evolved a lot in the last few years with the addition of ASP.NET MVC and Dynamic Data, as well as the continuous improvement of WebForms and ASP.NET AJAX. This session will provide a roadmap of the changes that are coming with ASP.NET 4 and VS 2010 and include demo’s of future directions the team is exploring.  Come to this talk to hear about the future directions of ASP.NET.</itunes:summary><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hunter, Jonathan Carter</dc:creator></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/gitbit</guid><link>http://www.bradygaster.com/post/gitbit</link><a10:author><a10:name /></a10:author><title>GitBit - Connecting GitHub and littleBits</title><description>&lt;p&gt;A few months back I was out with my sons at the Bellevue Mall. They were shopping for &lt;a href="http://www.lego.com/en-us/"&gt;Lego&lt;/a&gt;, which is ironic considering my discovery that morning. As we passed the &lt;a href="http://marblesthebrainstore.com"&gt;Marbles the Brain Store&lt;/a&gt; around the corner from the Lego store, I noticed the &lt;a href="http://littlebits.cc/"&gt;littleBits&lt;/a&gt; &lt;a href="http://littlebits.cc/kits/synth-kit"&gt;Synth Kit&lt;/a&gt; sitting on the shelf. See, littleBits are like the Lego of microcontrollers, and they'd just introduced the Synth Kit, which gives you the ability to create any range or combination of modular synthesizer built out of the very same "bits" - the Lego of microcontrollers - that littleBits had already rolled into their maker-inspired product line. &lt;/p&gt; &lt;p&gt;As the video below demonstrates, littleBits makes it child's play to create a synthesizer and to play your own original music on it. Gabriel puts together an itty-bitty little synth keyboard in moments on our kitchen countertop, and smiles with satisfaction as he tinkers away. &lt;/p&gt; &lt;p&gt;&lt;iframe height="315" src="//www.youtube.com/embed/Epv25ZRl7aY" frameborder="0" width="420" allowfullscreen=""&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;For Christmas, my brother-in-law picked up a &lt;a href="http://littlebits.cc/bits/cloudbit"&gt;cloudBit™&lt;/a&gt; module for me, so I've been able to play with more of the littleBits modules unrelated to music. These devices are more appropriate for makers, for folks who are fans of LEDs and BLE, but targeted at folks who don't want to go deep with soldering or programming. At the same time, littleBits aren't toys; they've got servo and motor modules, light modules, dimmers, relays, a logic control sensors. In the project case below you'll see a few different things from littleBits: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://littlebits.cc/bits/cloudbit"&gt;A cloudBit™ bit&lt;/a&gt;  &lt;li&gt;&lt;a href="http://littlebits.cc/bits/usb-power"&gt;A USB charging cable and bit&lt;/a&gt;  &lt;li&gt;&lt;a href="http://littlebits.cc/bits/long-led"&gt;A long LED bit&lt;/a&gt;  &lt;li&gt;&lt;a href="http://littlebits.cc/bits/wire-bit"&gt;Two connecting wires&lt;/a&gt;  &lt;li&gt;&lt;a href="http://littlebits.cc/accessories/mounting-board"&gt;A mounting board&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;I also made use of a project box I picked up from Radio Shack and previously drilled holes through, apparently. Which came in handy for this project. &lt;/p&gt; &lt;p&gt;&lt;a href="http://bradygaster.com/posts/files/9ef6258f-3bf7-4d71-b05e-aae71bdc88ce.png"&gt;&lt;img title="clip_image001" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image001" src="http://bradygaster.com/posts/files/4bcdbe3e-c0f4-4ab1-987c-d319e89a13ca.png" width="644" height="399"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;My favorite part is that littleBits also gives opportunities to up-and-coming shops who decide to build awesome new bits the community can use. There's a &lt;a href="http://littlebits.cc/bitlab"&gt;bitLab&lt;/a&gt; section on the littleBits web site you can go to vote for and commit to buying new bits when they're released. The community littleBits has been able to build is enthusiastic, motivated, and young-at-heart. Most importantly, they're contributing back to littleBits and improving the product. It's awesome to see, as it is awesome to see some of the great press littleBits has received in the media and at CES recently. &lt;/p&gt; &lt;p&gt;Once I got my mounting board loaded with bits I plugged it into the USB power supply and put the top back on the box, being careful to pull the long LED through one of the pre-drilled holes and the USB power through another. Then, I stuck the long LED into the ceramic skull I recently made with Gabe at &lt;a href="http://www.paintawaynow.com/"&gt;Paint Away&lt;/a&gt;, and made the notification light a little more interesting-looking (especially when the red power LED lights up in the inside of the skull). &lt;/p&gt; &lt;p&gt;&lt;a href="http://bradygaster.com/posts/files/961f4b88-6017-45b4-b135-974386725bc6.png"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image002" src="http://bradygaster.com/posts/files/07435ee2-fc4b-43be-96af-7a66fb198428.png" width="517" height="484"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;So then I turned on a camera and my screen-recording software and took a video of GitBit working with the skull. You could come up with something else, but once you wire up your cloudBit™ you're ready. If you have a GitHub repository you can administer, you're ready to send messages to your littleBit circuit or invention. &lt;/p&gt; &lt;p&gt;&lt;iframe height="315" src="//www.youtube.com/embed/BK2xcqQn2aw" frameborder="0" width="560" allowfullscreen=""&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Would you use something like this? I've seen a lot of cloudBit™ users popping up over the holidays, so I'm assuming at least a few of those net cloudBit™ owners are using .NET, so I'd be curious to see if anyone's tried the client library. If you do, let me know in GitHub what you think, and let's support littleBits growing community in the .NET development space. &lt;/p&gt; &lt;h4&gt;GitBit - the REST-based Repository Obsessive's Toy&lt;/h4&gt; &lt;p&gt;If you anyone who has a cloudBit™ and uses GitHub, we'd be interested in their review of this idea and the setup process, so give &lt;a href="http://gitbit.azurewebsites.net/"&gt;GitBit&lt;/a&gt; a shot. We came up with this idea and are just putting it out there for cloudBit™ owners who code to try out. The &lt;a href="http://gitbit.azurewebsites.net/"&gt;GitBit&lt;/a&gt; website's UI is below. It's pretty simple, doesn't do much, but what it does well gives folks an endless set of ideas they can implement. &lt;/p&gt; &lt;p&gt;These are some of my first tinkerings into the world of littleBits, and I'm really enjoying it. I'd have to say that with the increased simplicity and time to first result, littleBits is the best microcontroller prototyping idea I've seen in years. I've submitted a project to their community using the Azure Scheduler with their REST API so look for that, but keep checking this space as well. I'm going to write a few more posts on littleBits and Azure together, as I see a lot of ideas and potential use cases. Most fun, some complex, and of course, some that are just darned silly. &lt;/p&gt;</description><a10:updated>2015-01-09T09:12:59Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/the-deploy-to-azure-button</guid><link>http://www.bradygaster.com/post/the-deploy-to-azure-button</link><a10:author><a10:name /></a10:author><title>The Deploy to Azure Button</title><description>&lt;p&gt;&lt;b&gt;Update:&lt;/b&gt;&amp;nbsp;Two awesome developers from the Azure Websites team, &lt;a href="http://blog.davidebbo.com/"&gt;David Ebbo&lt;/a&gt;&amp;nbsp;and &lt;a href="http://azure.microsoft.com/blog/author/ellhamai/"&gt;Elliott Hamai&lt;/a&gt;, took the idea of Deploy to Azure, looked at the code, laughed and pointed at me, and used all kinds of new APIs in Azure to bring the idea to life in a manner that will provide far more value than I'd imagined. Keep reading to learn about the prototype I built, but make sure to &lt;a href="http://azure.microsoft.com/blog/2014/11/13/deploy-to-azure-button-for-azure-websites-2/"&gt;learn about the real thing&lt;/a&gt;, and &lt;a href="https://github.com/Tuesdaysgreen/HelloWorlddemo"&gt;try it out&lt;/a&gt; yourself.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Over the weekend I received an email from my friend and colleague &lt;a href="http://www.devinrader.info/"&gt;Devin Rader&lt;/a&gt;. In the email he directed me to a neat feature Heroku offers, called the &lt;a href="https://blog.heroku.com/archives/2014/8/7/heroku-button"&gt;Heroku Button&lt;/a&gt;, and asked me if there was anything in the works like this for Azure. I wasn't aware of anything that was in the works at the time, and given that I'm one of the program managers on the Azure SDK team who builds the &lt;a href="https://www.nuget.org/packages?q=microsoft.azure.management"&gt;Azure Management Libraries&lt;/a&gt;, I figured this was a challenge for which I'd be well-suited. So I replied to Devin to let him know I was inspired by the idea and wanted to build it myself. This blog post will introduce you to the idea of the Deploy to Azure Button. My good buddy &lt;a href="http://www.cloudidentity.com/blog/" target="_blank"&gt;Vittorio Bertocci&lt;/a&gt; has a &lt;a href="http://www.cloudidentity.com/blog/2014/10/09/the-use-of-azure-ad-behind-deploy-to-azure/" target="_blank"&gt;complementary post&lt;/a&gt; on how the identity flow works in Deploy to Azure, as he and I consulted on the idea, so make sure to check that out too.&amp;nbsp;&amp;nbsp; &lt;/p&gt;&lt;h2&gt;What is the Deploy to Azure Button?&lt;/h2&gt; &lt;p&gt;The idea of the Deploy to Azure button is to make it dirt simple for owners of pre-packaged web applications to make it dirt simple for their potential customers to deploy their applications to Azure. As a web application's author, I could place a button in my GitHub repository's readme file to give users a visual cue that one-click deployment is possible. Here's a screen shot of the Deploy to Azure button being used in a demonstration repository I created for an early demo of Azure Websites, the "&lt;a href="https://github.com/bradygaster/helloallworlds" target="_blank"&gt;Hello All Worlds&lt;/a&gt;" demo.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/52c55e24-cd3c-4cf4-9382-22443465392b.png"&gt;&lt;img title="clip_image001" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image001" src="http://www.bradygaster.com/posts/files/ad8ab5c8-be1d-4837-807f-40bc0f6c2c45.png" width="640" height="437"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;See that gorgeous blue button? If I click that button, the GitHub repository page URL will be passed as the HTTP referrer and the associated Git repository URI can pretty easily be guessed. Here's the Deploy to Azure site with this GitHub repository as it's referring URL. Note the Git repository URL is pre-populated into the form.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/3047be79-ffb9-4317-95af-e7a921c33af4.png"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image002" src="http://www.bradygaster.com/posts/files/302b996a-28cf-46e2-9a2b-60f83b561b58.png" width="640" height="315"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Once I provide a name for my site and select a region, the site name is verified as one that's available. If it isn't I'm informed as such.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/4095e032-5163-4eeb-a057-6a067f78c090.png"&gt;&lt;img title="clip_image003" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image003" src="http://www.bradygaster.com/posts/files/ca3eb487-1a3a-44b5-a412-224d5821bd50.png" width="640" height="315"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Once I find a site name I like, and that is available, clicking the "Deploy to Azure" button will submit the form. The form's data is collected and posted back to a Web API controller, which in turn bubbles up status information about the process of cloning the code, creating the site, and then deploying the site's code via &lt;a href="http://signalr.net/" target="_blank"&gt;SignalR&lt;/a&gt;. As the site's deployed I'm provided real-time status.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/96bf3de4-ea93-4c3f-89ee-7ac1b5b1c1c0.png"&gt;&lt;img title="clip_image004" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image004" src="http://www.bradygaster.com/posts/files/1336c79d-02d6-418d-abf8-7e9dfe077dc3.png" width="640" height="315"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Once the site's been deployed, a button is added to the form that I can use to pop open the new site in a new tab or browser window.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/97b47786-df87-4c3f-a9c4-3bf239fa8a4d.png"&gt;&lt;img title="clip_image005" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image005" src="http://www.bradygaster.com/posts/files/ad7e0b24-e076-4e3c-b6c1-bdf67cb5b893.png" width="640" height="315"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;I've also added a Deploy to Azure button to &lt;a href="https://github.com/bradygaster/miniblog" target="_blank"&gt;my fork&lt;/a&gt; of my good buddy &lt;a href="http://madskristensen.net/" target="_blank"&gt;Mads'&lt;/a&gt; &lt;a href="http://github.com/madskristensen/miniblog" target="_blank"&gt;MiniBlog source code&lt;/a&gt;, which I've frequently used as a test case for the idea of enabling SaaS with the Management Libraries.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/8ae2a0b6-b4de-45d1-91c2-88b506421fee.png"&gt;&lt;img title="clip_image006" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image006" src="http://www.bradygaster.com/posts/files/a1771964-2373-4d08-b472-21e30a995669.png" width="640" height="262"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Video is so much more effective at conveying the idea of the Deploy to Azure button, so I've created 3-minute video walking through it on YouTube and embedded it below. &lt;/p&gt;&lt;iframe width="560" height="315" src="//www.youtube.com/embed/s54Mo2TTOpg" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;&lt;h2&gt;Want to use the Deploy to Azure Button?&lt;/h2&gt; &lt;p&gt;Feel free! The app is live and working at &lt;a href="http://deployto.azurewebsites.net"&gt;http://deployto.azurewebsites.net&lt;/a&gt;, and will accept requests today. I'd encourage you to grab the button below or use the direct link to the button in your own GitHub repositories. Just put the button below on your repository, and link over to the URL above and the app will do the rest.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ebe6994b-f83e-4393-9bff-51363a75f87a.png"&gt;&lt;img title="clip_image007" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image007" src="http://www.bradygaster.com/posts/files/905daa30-7d58-4867-95b1-5f56ad0376a9.png" width="144" height="34"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Below I describe how Deploy to Azure works, as well as put forth a few caveats of the app in its current state, so keep reading to understand some of the limitations of Deploy to Azure, as well as some of the plans we have for its future.  &lt;/p&gt;&lt;h2&gt;How it Works&lt;/h2&gt; &lt;p&gt;There are a lot of ideas we could build out of the Deploy to Azure idea, but the code isn't too elegant just yet. The idea was to prove how easy it'd be to enable a one-click deployment story directly from a public repository. Now that we're there, we're seeing a lot of other ideas popping up.  &lt;/p&gt;&lt;p&gt;For the time being I'm doing some really simple Git tricks on the server side and then some even simpler tricks on the deployment side. I'll go into the identity stuff later, but the Deploy to Azure code base started with &lt;a href="https://github.com/AzureADSamples/WebApp-WebAPI-MultiTenant-OpenIdConnect-DotNet"&gt;Vittorio's sample on using the new OWIN middleware with Open IDC and multi-tenancy&lt;/a&gt;.  &lt;/p&gt;&lt;p&gt;The workflow of Deploy to Azure is pretty simple. I'll walk through it at a very high level in this post, then dive a little deeper into the code of the site to explain how it works. The code for the site is open-source, too, so feel free to check out the &lt;a href="https://github.com/bradygaster/deploytoazure" target="_blank"&gt;GitHub repository where the code for Deploy to Azure is stored&lt;/a&gt; if you'd like to see more. Feel free to submit a pull request, too, if you feel you can make it better.  &lt;/p&gt;&lt;ol&gt; &lt;li&gt;A user is authenticated to their Azure account during the AAD handshake, driven by the OpenId Connect OWIN middleware &lt;/li&gt;&lt;li&gt;The OWIN middleware hands over an authentication code to ADAL, which uses it to obtain a new AAD token for accessing the Azure Management API &lt;/li&gt;&lt;li&gt;Once a token is obtained, MAML clients can be used to communicate with the Azure management APIs &lt;/li&gt;&lt;li&gt;The list of regions available to a user's subscription are retrieved and displayed in the form's menu &lt;/li&gt;&lt;li&gt;When a user submits the form the data is sent to a Web API controller &lt;/li&gt;&lt;li&gt;The Web API controller clones the Git repository down to a new folder on the server side &lt;/li&gt;&lt;li&gt;The Web API controller creates an instance of the Web Site Management Client and a site is created &lt;/li&gt;&lt;li&gt;The site's publish profiles are pulled &lt;/li&gt;&lt;li&gt;The site is deployed via Web Deploy back up to Azure Websites&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The diagram below demonstrates this process visually.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/85c0de03-096d-466f-bd4d-e910592df9d8.png"&gt;&lt;img title="clip_image008" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image008" src="http://www.bradygaster.com/posts/files/f95b3370-d79c-47e2-b909-91fda6fe5b57.png" width="640" height="172"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;This code isn't perfect, though, and Deploy to Azure should be considered a beta release. We have some ideas on how to make it better. New APIs are being released frequently, and during my discussions of this prototype with &lt;a href="http://blog.davidebbo.com/"&gt;David Ebbo&lt;/a&gt; I learned of some upcoming APIs that will mitigate some of this functionality and add some features to the Deploy to Azure application. For now, consider Deploy to Azure a prototype of something awesome that we might push to the next level in the upcoming weeks.  &lt;/p&gt;&lt;h2&gt;Deploy to Azure is in Beta&lt;/h2&gt; &lt;p&gt;As I mention above, Deploy to Azure has a few caveats. I'll cut to the chase real quick and break down some of the limitations of Deploy to Azure. I know you're excited and you want to start using the button, but first I feel I must clarify a few of the limitations it has in this first iteration.  &lt;/p&gt;&lt;h3&gt;Authentication&lt;/h3&gt; &lt;p&gt;Deploy to Azure uses a multi-tenant Active Directory application. This way, users can allow the application access to their own Azure subscriptions and allow it to spin up new sites on their behalf. Since Deploy to Azure uses the multi-tenancy functionality of Azure Active Directory and isn't an official Microsoft application the login functionality is limited to Azure Active Directory users. This means you can't log in using your live.com, hotmail.com, or outlook.com accounts. Instead, you have to create an Active Directory user who is a Global Administrator of your Active Directory domain. Below I got into a little more detail on the identity aspect of Deploy to Azure and link off to a complementary post Vittorio Bertocci wrote up to describe how that portion of Deploy to Azure works.  &lt;/p&gt;&lt;h3&gt;No Solution Builds&lt;/h3&gt; &lt;p&gt;Since the code for Deploy to Azure just clones the repository for a site and then publishes it, everything you want to deploy must be in your repository. Whereas &lt;a href="https://github.com/projectkudu/kudu"&gt;Kudu&lt;/a&gt; will facilitate the solution build prior to publishing, which pulls in your NuGet packages, Deploy to Azure simply clones and publishes. This is one area where Mr. Ebbo and I are joining forces and working together to augment Deploy to Azure with more Kudu-like functionality in a later release.  &lt;/p&gt;&lt;h3&gt;Customizing Deployments&lt;/h3&gt; &lt;p&gt;That said, it is highly probably that a Git repository might contain a site and other stuff unrelated to the site. In the case of MiniBlog, for instance, the actual web site that is MiniBlog is contained in a sub folder called "Website." Given this, if I simply re-publish the entire repository up to Azure, the site obviously won't work. For this reason, I've given users of the Deploy to Azure button a JSON file that the server-side code checks during deployments. In the screen shot below from my MiniBlog fork, you'll see two things highlighted. One is the Website folder, which contains the MiniBlog site source code.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/afc06364-501c-4bd7-965c-94adb400b69f.png"&gt;&lt;img title="clip_image009" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image009" src="http://www.bradygaster.com/posts/files/b8891139-f38d-4f96-9356-f7cce3d674c0.png" width="640" height="272"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;See the arrow in the screen shot above? That arrow points to the file named deploytoazure.json. This file has a specific property in it that the Deploy to Azure code checks at run-time. The screen shot below shows this file in GitHub.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/c7439e2c-89bb-454e-852e-5fd2944f8242.png"&gt;&lt;img title="clip_image010" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image010" src="http://www.bradygaster.com/posts/files/6ab73ba8-bec6-44c8-a7dd-0298dfcea0a7.png" width="640" height="207"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;Once the Git repository has been cloned, I check for the presence of the deploytoazure.json file in the root of the cloned source. If the file exists, I open it up and check the value of the subdirectoryWithWebsite property. Then, I use the value of that property to determine which folder I'll publish up to the site. This gives developers a little more control over how the deployment works.  &lt;/p&gt;&lt;p&gt;I'd imagine a later iteration of Deploy to Azure including other settings and flags in this file, but for now, the path to the web site code was really all I needed.  &lt;/p&gt;&lt;h2&gt;The Identity Component&lt;/h2&gt; &lt;p&gt;One of the components about my own product I'd not really mastered was to work through some complex customer scenarios where the Azure Management Libraries would be used. Repeatedly customers asked me for server-side examples using ADAL and MAML together. The Deploy to Azure button was a perfect scenario for me to learn more about the code our customers would need to author to take advantage of these two together. I knew multi-tenancy would be crucial to Deploy to Azure- I'll host it in one subscription, but users of other (or multiple) subscriptions will want to deploy web applications into their own subscriptions, not into mine. So Deploy to Azure would have to allow for multi-tenant authorization, and I'd need to be able to get the user's AAD token in my code, since the Management Libraries' &lt;a href="https://github.com/Azure/azure-sdk-for-net/blob/902f56987d3c04be68dc6416b8dcd6eee25acb80/src/Common/Credentials/TokenCloudCredentials.cs" target="_blank"&gt;TokenCloudCredential class&lt;/a&gt; needs a bearer token at construction.  &lt;/p&gt;&lt;p&gt;I spent the weekend learning some more about Azure Active Directory. By learning more about AAD, I really meant to say "emailing my colleague &lt;a href="http://www.cloudidentity.com/blog/" target="_blank"&gt;Vittorio Bertocci&lt;/a&gt;." Vittorio and I are working on a lot of things together now - the Azure Management Libraries, Java, Visual Studio, and basically everywhere else where the notion of identity is important in the conversation. Vittorio was interested in supporting my little project some support. My first question - how to get the token on the server side once a user was authenticated via AAD - was answered via &lt;a href="https://github.com/AzureADSamples/WebApp-WebAPI-MultiTenant-OpenIdConnect-DotNet"&gt;Vittorio's excellent sample using the new OWIN middleware with Open IDC and multi-tenancy&lt;/a&gt;. The code in this repository was the starting point, in fact, for Deploy to Azure. I just added the functionality once I knew all the identity bits were wired up properly and I could grab the token.  &lt;/p&gt;&lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ea9c8ee0-e072-461b-8317-1121422e263f.png"&gt;&lt;img title="clip_image011" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image011" src="http://www.bradygaster.com/posts/files/0e0d0210-e13c-47bf-bb9b-75fef1d871bc.png" width="640" height="392"&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;As Deploy to Azure evolved and became a reality and the eventual creation of this blog post arose, Vittorio offered to write a complementary post explaining the details of the AAD-related functionality in Deploy to Azure. &lt;a href="http://www.cloudidentity.com/blog/2014/10/09/the-use-of-azure-ad-behind-deploy-to-azure/"&gt;His post explains the entire end-to-end of the identity flow in the Deploy to Azure button process really well&lt;/a&gt;. I encourage you to continue reading over at Vittorio's post on the topic.  &lt;/p&gt;&lt;h2&gt;Next Steps&lt;/h2&gt; &lt;p&gt;As I pointed out above, Deploy to Azure began as an idea and evolved pretty quickly. It has been a lot of fun to build, and in so doing I've successfully created an example of how you could use the ADAL library along with the Azure Management Libraries on the server side. We're discussing more features and ideas to add to Deploy to Azure. I'll post another, more technical post that walks through the code in more detail, but this post's purpose is to introduce you to the idea of the button and to invite you to try it out. Feel free to fork the code, too, and submit a pull request or issues that you run into as you're using it. &lt;/p&gt;</description><a10:updated>2014-12-24T16:18:46Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/announcing-the-general-availability-of-the-microsoft-azure-management-libraries-for-net</guid><link>http://www.bradygaster.com/post/announcing-the-general-availability-of-the-microsoft-azure-management-libraries-for-net</link><a10:author><a10:name /></a10:author><title>Announcing the General Availability of the Microsoft Azure Management Libraries for .NET</title><description>&lt;p&gt;I’d like to &lt;em&gt;officially &lt;/em&gt;introduce you to the 1.0 release of the Microsoft Azure Management Libraries. The official announcement of the libraries came out a few days ago on the &lt;a href="http://azure.microsoft.com/en-us/updates/management-libraries-for-net-release-announcement/" target="_blank"&gt;Microsoft Azure Service Updates&lt;/a&gt; blog. &lt;strong&gt;Update: &lt;/strong&gt;Jeff Wilcox wrote up am &lt;a href="http://www.jeff.wilcox.name/2014/04/wamlmaml/" target="_blank"&gt;excellent piece introducing the Management Libraries&lt;/a&gt;, in which he covers a lot of ground.&amp;nbsp; &lt;/p&gt; &lt;p&gt;As I was busy travelling and presenting at the //build conference in San Francisco and enjoying my son Gabriel’s 6th birthday, I was a little tied up and unable to get this post out, but it gave me time to shore up a few little things, publish the code, and prepare a surprise for you that I’ll describe below in this post. Let’s just say I wanted to make it as easy as possible for you to get up and running with the 1.0 bits, since I’m so proud of all the work our teams have put into it. This week at the //build/ 2014 conference I presented a session with my buddy &lt;a href="https://twitter.com/Jodoglevy" target="_blank"&gt;Joe Levy&lt;/a&gt; on many new automation &lt;em&gt;stack &lt;/em&gt;we’ve added to Microsoft Azure. You can watch &lt;a href="http://channel9.msdn.com/Events/Build/2014/3-621" target="_blank"&gt;our //build/ session on Channel 9&lt;/a&gt;, which covers all of the topics from the slide image below. Joe and I talked about the Automation Stack in Microsoft Azure, from the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Common/" target="_blank"&gt;SDK Common NuGet package&lt;/a&gt; up through the &lt;a href="http://www.nuget.org/packages?q=Microsoft.WindowsAzure.Management" target="_blank"&gt;Microsoft Azure Management Libraries for .NET&lt;/a&gt; and into &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/" target="_blank"&gt;PowerShell&lt;/a&gt; and how the new Microsoft Azure Automation Service sits atop all of it for true PowerShell-as-a-service automation that you can use for just about anything. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/41dc6715-7d5b-4341-8393-cb0b756bda77.png"&gt;&lt;img title="automation-stack" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="automation-stack" src="http://www.bradygaster.com/posts/files/42e299df-d526-409a-a98c-8e0a016ccc11.png" width="644" height="364"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;&lt;/h2&gt; &lt;h2&gt;Demonstrating the Management Libraries&lt;/h2&gt; &lt;p&gt;My part of the session was primarily focused on how developers can make use of the Management Libraries (&lt;em&gt;MAML,&lt;/em&gt; for short) for various scenarios. I’ve created 2 GitHub projects where the code for these demos, and I also have another surprise I’ll discuss later in the post. First, the demos!&lt;/p&gt; &lt;h3&gt;Integration Testing&lt;/h3&gt; &lt;p&gt;One scenario in which I think MAML has a lot to offer is to enable integration testing. Imagine having a Web Site that talks to a Storage Account to display data to the user in HTML. Pretty common scenario that can have all sorts of problems. Connection string incorrectness, a dead back-end, misconfiguration – you never know what could happen. Good integration tests offer more confidence that “at least the environment is right and everything is configured properly.” This scenario is represented by the code in the &lt;a href="https://github.com/bradygaster/build2014-MAML-IntegrationTesting" target="_blank"&gt;MAML Integration Testing code repository&lt;/a&gt;. Using &lt;a href="https://github.com/xunit/xunit" target="_blank"&gt;xunit&lt;/a&gt; tests and MAML together, I was able to automate the entire process of:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Creating a web site  &lt;li&gt;Publishing the web site’s code  &lt;li&gt;Creating a storage account  &lt;li&gt;Getting that storage account’s connection string  &lt;li&gt;Saving data to the storage account that I intend on displaying on the web site  &lt;li&gt;Configuring the web site’s connection string so that it can find the storage account and pull the data for display  &lt;li&gt;Hit the web site and verify it displays the correct information  &lt;li&gt;Delete the storage account  &lt;li&gt;Delete the web site&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;If this sounds like a common practice for your Microsoft Azure web apps, you might get some value from this demo, as it could streamline your entire process of integration testing. Here’s the best part – if you’re not really an Azure storage person, and your typical scenario involves a non-cloud-hosted ASP.NET web site that talks to SQL Server, you could still make use of MAML for your own integration tests. Simply use the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Sql" target="_blank"&gt;SQL Management Client&lt;/a&gt; to fire up a Microsoft Azure SQL Database, insert a few records, and do basically the rest of the integration testing “stuff” but set up your page to read from the database instead of the storage account. Then, whether you’re deploying your production site to Microsoft Azure or not, you can make sure it all works using a scorched-earth testing environment. &lt;/p&gt; &lt;h3&gt;Enabling SaaS&lt;/h3&gt; &lt;p&gt;Cloud is a great place for software-as-a-service vendors. In typical SaaS situations, a customer can hit a web site, provide some information, and &lt;em&gt;voila’&lt;/em&gt;, their newly-customized web site is all ready. The final demonstration I did during the //build/ session was geared towards these sorts of scenarios. In my demo at //build/, I demonstrated this sort of scenario by creating an MVC application I called &lt;em&gt;MiniBlogger&lt;/em&gt;, for it generates live MiniBlog sites running in Microsoft Azure. When the user clicks the button, a Web API controller is invoked using JavaScript. The controller code makes a few calls out to the Microsoft Azure REST API using MAML. It first verifies the site name is available and if not, the user is provided a subtle visual cue that their requested site name isn’t available:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/dc46aea1-619c-446e-95b4-d907b03ccf34.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/2726d4f8-b6fc-424d-9e4f-c8b228864675.png" width="644" height="316"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When the user finds a name they like that’s also not already in use, they can create the site. As the API controller iterates over each step of the process it sends messages to a SignalR Hub (yes, I can work SignalR in &lt;em&gt;anywhere&lt;/em&gt;), and the user is provided real-time status on the process of the site being created and deployed. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/02d13340-7681-4c9d-8961-a5cf01c51093.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/6301c0fd-14ec-4089-8117-7fff23427050.png" width="644" height="416"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the deployment is complete, the site pops up in a new browser, all ready for use. &lt;a href="https://github.com/bradygaster/build2014-MAML-EnablingSaaS" target="_blank"&gt;The code for this demo is also on GitHub, so fork it and party&lt;/a&gt;. &lt;/p&gt; &lt;h2&gt;Get Your Very Own MAML Project Template (the surprise)&lt;/h2&gt; &lt;p&gt;In this session I made use of &lt;a href="https://twitter.com/sayedihashimi" target="_blank"&gt;Sayed&lt;/a&gt; and &lt;a href="https://twitter.com/mkristensen" target="_blank"&gt;Mads’&lt;/a&gt; work on &lt;a href="http://www.sidewaffle.com/" target="_blank"&gt;SideWaffle&lt;/a&gt; and &lt;a href="https://github.com/ligershark/template-builder" target="_blank"&gt;Template Builder&lt;/a&gt; to create a Visual Studio Extension that makes it easy to get up and running with MAML. Sayed and Mads have long thought SideWaffle would be great for coming up with canned presentations, and this was my first attempt at delivering on their goal. I asked them both tons of questions throughout the process, so first and foremost, thanks to them for SideWaffle and their patience as I fumbled through aspects of getting the hang of using it.&lt;/p&gt; &lt;p&gt;You can get the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/07c3e25f-970f-4bce-ba62-28b6e876188c" target="_blank"&gt;Microsoft Azure Management Libraries&lt;/a&gt; extension now in the Visual Studio Extensions Gallery. I’ve also created &lt;a href="https://www.youtube.com/watch?v=hG6a8oyxynA&amp;amp;feature=youtu.be" target="_blank"&gt;a little YouTube video demonstrating its usage&lt;/a&gt;. In five minutes, you can have a running Console Application that creates Virtual Machines in Microsoft Azure. &lt;/p&gt; &lt;p&gt;This Visual Studio Extension I created contains a few elements. First, it has a project template that references all of the MAML NuGet packages and the &lt;a href="http://www.nuget.org/packages/Microsoft.IdentityModel.Clients.ActiveDirectory/" target="_blank"&gt;Active Directory Authentication Library NuGet package&lt;/a&gt;, which are dependencies for the demonstration. When you install the extension you’ll get a new project template like the one highlighted below.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f02ff431-72bc-41b0-b461-f9521b938ac2.png"&gt;&lt;img title="SNAGHTMLae8a6c3" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTMLae8a6c3" src="http://www.bradygaster.com/posts/files/8d03bf9c-9e82-4dd2-9341-af3fa9588e69.png" width="644" height="354"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The project is a basic Console Application, but with all the MAML/ADAL NuGets referenced. Also contained within the extension are five item templates and 6 code snippets that walk you through the process of authoring code that will result in the following workflow:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Authenticate to Microsoft Azure using Azure Active Directory  &lt;li&gt;Retrieve a list of Microsoft Azure subscriptions that the authenticated user can access  &lt;li&gt;Find a specific subscription and associate the AAD token with that subscription  &lt;li&gt;Create a new Cloud Service in the subscription  &lt;li&gt;Create a new Storage Account in the subscription  &lt;li&gt;Get the list of Virtual Machine images containing a filter (this is provided in the snippets as a parameter)  &lt;li&gt;Create a Virtual Machine running in the newly-created Cloud Service container, using the VHD of the image selected earlier  &lt;li&gt;Deploy the Virtual Machine and start it up&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The screen shot below is from my own instance of Visual Studio testing out the item templates. I’m on step 2 in this screen shot, about to add the class that facilitates the subscription-selection process described above. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/04a35ea8-541c-4701-a286-4528d373742e.png"&gt;&lt;img title="SNAGHTMLaf38d3a" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTMLaf38d3a" src="http://www.bradygaster.com/posts/files/9f108f7a-f91b-458b-a7fe-4e3cb906f9b3.png" width="644" height="387"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Likewise, here’s my code being edited during step 2. Note how the snippet is really doing the work, and the comments provide guidance. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/14ab51a7-8966-4ab9-bcf0-38991e8cd2d1.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/dedaa8e1-9952-4655-9c7b-8bc41ddc9f93.png" width="644" height="339"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Each step of the process is pretty-well documented. I tried really hard to think of the easiest way to help the Microsoft Azure community get up and running with MAML following our 1.0 release, and this extension seemed to be the best answer I could come up with. I hope you find it as helpful as I think you’ll find it, but I welcome any feedback you may have on the extension and how it could be improved. Same thing for MAML – we’re all about taking feedback, so let us know what we can do to make the future better for you as you automate everything in Microsoft Azure. &lt;/p&gt; &lt;h2&gt;Congrats to the Team&lt;/h2&gt; &lt;p&gt;I’d definitely like to congratulate my team, and &lt;strong&gt;all the teams &lt;/strong&gt;in Microsoft Azure who brought their awesome in full force this year in preparation for //build/. We had some great releases, amazing announcements, and heard great things from the community. Happy coding!&lt;/p&gt;</description><a10:updated>2015-01-27T13:35:03Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/rebuilding-the-sitemonitr-using-windows-azure-webjobs</guid><link>http://www.bradygaster.com/post/rebuilding-the-sitemonitr-using-windows-azure-webjobs</link><a10:author><a10:name /></a10:author><title>Rebuilding the SiteMonitR using Windows Azure WebJobs SDK</title><description>&lt;p&gt;Some time back, I created the &lt;a href="http://www.bradygaster.com/post/sitemonitr" target="_blank"&gt;SiteMonitR&lt;/a&gt; &lt;a title="MSDN Sample Page" href="http://code.msdn.microsoft.com/SiteMonitR-dd4fcf77" target="_blank"&gt;sample&lt;/a&gt; to demonstrate how SignalR could be used to tie together a Web Site and a Cloud Service. Since then Windows Azure has evolved quite rapidly, as have the ASP.NET Web API and SignalR areas. One recent addition to the arsenal of tools available to application developers in Azure is &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/web-sites-create-web-jobs/" target="_blank"&gt;WebJobs&lt;/a&gt;. Similar to the traditional Worker Role, a WebJob allows for the continuous or triggered execution of program logic. The main difference between a Worker Role and a WebJob is that the latter runs not in the context of a separate Cloud Service, but as a resource of a Web Site. WebJobs also simplify development of these routine middleware programs, too, since the only requirement on the developer is to reference the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs.Host" target="_blank"&gt;WebJobs NuGet package&lt;/a&gt;. Developers can write basic console applications with methods that, when decorated with properties resident in the WebJobs SDK, will execute at appropriate times or on schedules. You can learn more about the basics of WebJobs via the &lt;a href="http://www.windowsazure.com/en-us/documentation/articles/web-sites-create-web-jobs/" target="_blank"&gt;introductory article&lt;/a&gt;, the &lt;a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs" target="_blank"&gt;WebJobs SDK documentation&lt;/a&gt;, or from &lt;a href="http://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx" target="_blank"&gt;Hanselman’s blog post&lt;/a&gt; on the topic. &lt;/p&gt; &lt;p&gt;In this blog post, I’m going to concentrate on how I’ve used WebJobs and some of my other favorite technologies together to re-create the SiteMonitR sample. I’ve forked the original GitHub repository into my own account to provide you with access to the &lt;a href="https://github.com/bradygaster/SiteMonitR" target="_blank"&gt;new SiteMonitR code&lt;/a&gt;. Once I wrap up this post I’ll also update the &lt;a href="http://code.msdn.microsoft.com/SiteMonitR-dd4fcf77" target="_blank"&gt;MSDN Code Sample for SiteMonitR&lt;/a&gt;, so if you prefer a raw download you’ll have that capability. I worked pretty closely with &lt;a href="https://twitter.com/rustd" target="_blank"&gt;Pranav Rastogi&lt;/a&gt;, &lt;a href="http://blogs.msdn.com/b/jmstall/" target="_blank"&gt;Mike Stall&lt;/a&gt; and the rest of the WebJobs team as I worked through this re-engineering process. They’ve also recorded &lt;a href="http://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK" target="_blank"&gt;an episode of Web Camps TV on the topic&lt;/a&gt;, so check that out if you’re interested in more details. Finally, &lt;a href="http://sedodream.com/" target="_blank"&gt;Sayed&lt;/a&gt; and &lt;a href="http://madskristensen.net/" target="_blank"&gt;Mads&lt;/a&gt; have developed a &lt;a href="http://visualstudiogallery.msdn.microsoft.com/f4824551-2660-4afa-aba1-1fcc1673c3d0" target="_blank"&gt;prototype of some tooling features that could make developing and deploying WebJobs&lt;/a&gt; easier. Take a look at this extension and give us all feedback on it, as we’re trying to conceptualize the best way to surface WebJobs tooling and we’d love to have your input on how to make the whole process easier.&amp;nbsp; &lt;/p&gt; &lt;h2&gt;Application Overview&lt;/h2&gt; &lt;p&gt;SiteMonitR is a very simple application written for a very simple situation. I wanted to know the status of my web sites during a period where my [non-cloud] previous hosting provider wasn’t doing so well with keeping my sites live. I wrote this app up and had a monitor dedicated to it, and since then the app has served as proving ground for each new wave of technology I’d like to learn. This implementation of the application obviously makes use of WebJobs to queue up various points in the work flow of site-monitoring and logging. During this workflow the code also updates a SignalR-enabled dashboard to provide constant, real-time visibility into the health of a list of sites. The workflow diagram below represents how messages move throughout SiteMonitR. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/219db993-9590-454f-931e-1e5a69277822.png"&gt;&lt;img title="01" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="01" src="http://www.bradygaster.com/posts/files/42c46012-2c29-495a-973b-aca3d1805fed.png" width="474" height="415"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The goal for the UX was to keep it elegant and simple. Bootstrap made this easy in the last version of the application, and given the newest release of Boostrap, the templates Pranav and his team made available to us in Visual Studio 2013, it seemed like a logical choice for this new version of SiteMonitoR. I didn’t change much from the last release aside from making it even &lt;em&gt;more &lt;/em&gt;simple than before. I’ve been listening to the team, and the community, rave about &lt;a href="http://angularjs.org/" target="_blank"&gt;AngularJS&lt;/a&gt; but I’d not &lt;strike&gt;had&lt;/strike&gt; made the time to learn it, so this seemed like a great opportunity. I found I really love AngularJS from reworking this app from Knockout in the previous version. I’ve tried a lot of JavaScript frameworks, and I’m pretty comfortable saying that right now I’m in love with AngularJS. It really is simple, and fun to use. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/c258e904-ad68-41fb-a6a4-afe9999cc7a2.png"&gt;&lt;img title="06" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="06" src="http://www.bradygaster.com/posts/files/3f37cc46-2e17-4886-8149-e10e0b7a2d80.png" width="644" height="388"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The entire solution is comprised of 4 projects. Two of these projects are basic console applications I use as program logic for the WebJobs. One is [duh] a Web Application, and the last is a Common project that has things like helper methods, constants, and configuration code. Pretty basic structure, that when augmented with a few NuGet packages and some elbow grease, makes for a relatively small set of code to have to understand. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/4ba2c1fc-b749-467e-9746-b47263ae322a.png"&gt;&lt;img title="02" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="02" src="http://www.bradygaster.com/posts/files/e417ca6a-3c1f-4599-bbb3-eb95cc7539d8.png" width="271" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With a quick high-level introduction to the application out of the way, I’ll introduce the WebJob methods, and walk through the code and how it works. &lt;/p&gt; &lt;h2&gt;Code for Harnessing WebJobs&lt;/h2&gt; &lt;p&gt;One of the goals for WebJobs was to provide ASP.NET developers a method of reaching in and doing things with Windows Azure’s storage features without requiring developers to learn much about how Windows Azure storage actually works. The team’s architects thought (rightfully) that via the provision of convenience attributes that referred to abstract use-cases facilitated in many common Windows Azure scenarios, more developers would have the basic functionality they need to use storage without actually needing to learn how to use storage. Sometimes the requirement of having to learn a new API to use a feature mitigates that feature’s usefulness (I know, it sounds crazy, right?). &lt;/p&gt; &lt;p&gt;So, Mike and Pranav and the rest of the team came up with a series of attributes that are explained pretty effectively in their SDK documentation. I’m going to teach via demonstration here, so let’s just dive in and look at the first method. This method, &lt;strong&gt;CheckSitesFunction&lt;/strong&gt;, lives in the executable code for a WebJob that will be executed &lt;strong&gt;on a schedule. &lt;/strong&gt;Whenever the scheduler service wakes up this particular job, the method below will execute with two parameters being passed in. The first parameter references a table of &lt;strong&gt;SiteRecord&lt;/strong&gt; objects, the second is a storage queue into which the code will send messages. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/738eaf97-55a6-4b6c-a60c-d8b4d6428122.png"&gt;&lt;img title="07" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="07" src="http://www.bradygaster.com/posts/files/fe129dc9-1f97-472a-95a1-3a1ee1a83fa6.png" width="644" height="376"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You could’ve probably guessed what I’m going to do next. Iterate over all the records in the table, grab the URL of the site that needs to be pinged, then ping it and send the results to a storage queue. The &lt;strong&gt;out &lt;/strong&gt;parameter in this method is actually a queue itself. So the variable &lt;strong&gt;resultList&lt;/strong&gt; below is literally going to represent the list of messages I’m planning on sending into that storage queue. &lt;/p&gt; &lt;p&gt;Now, if you’re obsessive like me you’ll probably have that extra monitor set up just to keep tabs on all your sites, but that’s not the point of this WebJob. As the code executes, I’m also going to call out to the Web API controller in the web site via the &lt;strong&gt;UpdateDashboard&lt;/strong&gt; method. I’ll cover that in more detail later, but that’s mainly to provide the user with real-time visibility into the health of the sites being checked. Realistically all that &lt;em&gt;really matters&lt;/em&gt; is the log data for the site health, which is why I’m sending it to a queue to be processed. I don’t want to slow down the iterative processing by needing to wait for the whole process so I queue it up and let some other process handle it. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/e3044250-cb23-46a8-82cc-1b8e0d94abd7.png"&gt;&lt;img title="08" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="08" src="http://www.bradygaster.com/posts/files/8c846a60-8093-4990-9fdb-3edf252199fb.png" width="510" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In addition to a scheduled WebJob, there’s another one that will run on events. Specifically, these WebJobs will wake up whenever messages land into specific queues being observed by this WebJob. The method signatures with appropriately-decorated attributes specifying which queues to watch and tables to process, are shown in the code below. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f11520b4-3918-47b7-bee7-3671404bb2ee.png"&gt;&lt;img title="09" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="09" src="http://www.bradygaster.com/posts/files/cafcdd3c-1059-48c5-b9e8-5a63130817ae.png" width="461" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;One method in particular, &lt;strong&gt;AddSite, &lt;/strong&gt;runs whenever a user event sends a message into a queue used to receive requests to add sites to the list of sites being watched. The user facilitates this use-case via the SiteMonitR dashboard, a message is sent to a queue containing a URL, and then, this method just &lt;strong&gt;wakes up and executes&lt;/strong&gt;. Whenever a user sends a message containing a string URL value for the site they’d like to monitor, the message is then saved to the storage table provided in the second parameter. As you can see from the method below &lt;strong&gt;there’s no code that makes explicit use of the storage API or SDK&lt;/strong&gt;, but rather, it’s just an instance of an &lt;strong&gt;IDictionary&lt;/strong&gt; implementer to which I’m just adding items. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/28d768b3-7603-4d7e-8f5e-69a3708b07d6.png"&gt;&lt;img title="10" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="10" src="http://www.bradygaster.com/posts/files/58f576f9-0c21-4823-b494-eb903d52891e.png" width="644" height="330"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;SaveSiteLogEntry&lt;/strong&gt; method below is similar to the &lt;strong&gt;AddSite&lt;/strong&gt; method. It has a pair of parameters. One of these parameters represents the incoming queue watched by this method, the second represents a table into which data will be stored. In this example, however, the first parameter isn’t a primitive type, but rather a custom type I wrote within the SiteMonitR code. This variation shows the richness of the WebJob API; when methods land on this queue they can be deserialized into object instances of type &lt;strong&gt;SiteResult&lt;/strong&gt; that are then handled by this method. This is a lot easier than needing to write my own polling mechanism to sit between my code and the storage queue. The WebJob service takes care of that for me, and all I need to worry about is &lt;strong&gt;how I handle incoming messages&lt;/strong&gt;. That removes a good bit of the ceremony of working with the storage SDK; of course, the trade-off is that I have little no no control over the inner workings of the storage functionality. &lt;/p&gt; &lt;p&gt;That’s the beauty of it. In a lot of application code, the plumbing doesn’t really matter in the beginning. All that matters is that all the pieces work together. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/3ec82472-6b59-44f8-a1f2-8a7da812158f.png"&gt;&lt;img title="12" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="12" src="http://www.bradygaster.com/posts/files/d452518b-7635-47ba-a981-246333e7ca05.png" width="644" height="355"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Finally, there’s one more function that deletes sites. This function, like the others, takes a first parameter decorated by the &lt;strong&gt;QueueInput&lt;/strong&gt; attribute to represent a queue that’s being watched by the program. The final parameters in the method represent &lt;strong&gt;two different tables from which data will be deleted&lt;/strong&gt;. First, the site record is deleted, then the logs for that site that’ve been stored up are deleted. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/8d62de46-e334-4ea9-be10-33d11037d978.png"&gt;&lt;img title="11" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="11" src="http://www.bradygaster.com/posts/files/0d7bdfc0-b763-4a5c-9678-031c182ec5d5.png" width="572" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;The SiteMonitR Dashboard&lt;/h2&gt; &lt;p&gt;The UX of SiteMonitR is built using Web API, SignalR, and AngularJS. This section will walk through this part of the code and provide some visibility into how the real-time updates work, as well as how the CRUD functionality is exposed via a Web API Controller. This controller’s add, delete, and list methods are shown below. Note, in this part of the code I’ll actually be using the Storage SDK via a utility class resident in the Web Project. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/b70cfc6b-9cee-4748-89ea-ea370627eb5d.png"&gt;&lt;img title="14" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="14" src="http://www.bradygaster.com/posts/files/06a3680b-1b90-4bc4-97be-4f9c3062b565.png" width="364" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Remember the scheduled WebJob from the discussion earlier? During that section I mentioned the Web API side of the equation and how it would be used with SignalR to provide real-time updates to the dashboard &lt;em&gt;from &lt;/em&gt;the WebJob code running in a process external to the web site itself. In essence, the WebJob programs simply make HTTP GET/POST calls over to the Web API side to the methods below. Both of these methods are pretty simple; they just hand off the information they obtained during the HTTP call from the WebJob up to the UX via bubbling up events through SignalR. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/2cd5cf64-7935-43ac-a6b2-e63fb805183e.png"&gt;&lt;img title="15" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="15" src="http://www.bradygaster.com/posts/files/f1def7ba-7428-40fa-aac0-b54264271e4c.png" width="644" height="379"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The SignalR Hub being called actually has no code in it. It’s just a Hub the Web API uses to bubble events up to the UX in the browser. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/fa799d77-a53b-40ee-bd21-a423689bb7b1.png"&gt;&lt;img title="16" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="16" src="http://www.bradygaster.com/posts/files/17602576-fe90-4301-bf9a-19b6ca4038ec.png" width="644" height="226"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The code the WebJobs use to call the Web API make use of a client I’ll be investigating in more detail in the next few weeks. I’ve been so busy in my own project work I’ve had little time to keep up with some of the awesome updates coming from the Web API team recently. So I was excited to have time to tinker with the &lt;a href="https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Client" target="_blank"&gt;Web API Client NuGet’s latest release&lt;/a&gt;, which makes it dirt simple to call out to a Web API from client code. In this case, my client code is running in the scheduled WebJob. The utility code the WebJob calls that then calls to the Web API Controller is below. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/75005812-56e3-4653-b7be-5a2118b00025.png"&gt;&lt;img title="13" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="13" src="http://www.bradygaster.com/posts/files/d4c3d5f1-289c-4083-a4bc-fe72036d19f9.png" width="562" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As I mentioned, I’m using AngularJS in the dashboard’s HTML code. I love how similar AngularJS’s templating is to Handlebars. I didn’t have to learn a whole lot here, aside from how to use the &lt;strong&gt;ng-class&lt;/strong&gt; attribute with potential multiple values. The data-binding logic on that line defines the color of the box indicating the site’s status. I love this syntax and how easy it is to update UX elements when models change using AngularJS. I don’t think I’ve ever had it so easy, and have really enjoyed the logical nature of AngularJS and how everything just seemed to work. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/9f23dd47-0c87-412d-81d1-64e5382998a3.png"&gt;&lt;img title="17" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="17" src="http://www.bradygaster.com/posts/files/50388f7a-694d-4136-9579-0b96806cf331.png" width="586" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Another thing that is nice with AngularJS is well-explained by &lt;a href="http://sravi-kiran.blogspot.com/2013/09/ABetterWayOfUsingAspNetSignalRWithAngularJs.html" target="_blank"&gt;Ravi on his blog on a Better Way of Using ASP.NET SignalR with AngularJS&lt;/a&gt;. Basically, since services in AngularJS are Singletons and since AngularJS has a few great ways it does injection, one can easily dial in a service that connects to the SignalR Hub. Then, this wrapper service can fire JavaScript methods that can be handled by Angular controllers on the client. This approach felt very much like DI/IoC acts I’ve taken for granted in C# but never really used too much in JavaScript. The nature of service orientation in JavaScript and how things like abstracting a SignalR connection are really elegant when performed with AngularJS. The code below shows the service I inject into my Angular controller that does just this: it handles SignalR events and bubbles them up in the JavaScript code on the client. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/bb0571b6-552c-40f3-b11e-81a6dad889a3.png"&gt;&lt;img title="18" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="18" src="http://www.bradygaster.com/posts/files/8a62be04-80e6-4d63-9b4d-88df9638d247.png" width="644" height="430"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Speaking of my AngularJS controller, here it is. This first code is how the Angular controller makes HTTP calls to the Web API running on the server side. Pretty simple. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/d475a696-4c2b-4739-bc06-e98ef905e6b3.png"&gt;&lt;img title="19" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="19" src="http://www.bradygaster.com/posts/files/84e64a76-9e28-463f-9952-b3be3df9f3fb.png" width="467" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here’s how the Angular controller handles the events bubbled up from the Angular service that abstracts the SignalR connection back to the server. Whenever events fire from within that service they’re handled by the controller methods, which re-bind the HTML UX and keep the user up-to-date in real-time on what’s happening with their sites. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/3b8d1b85-e60f-46ab-b1ad-d828b88ff21d.png"&gt;&lt;img title="20" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="20" src="http://www.bradygaster.com/posts/files/7a0b56be-ec1d-431d-9d2c-c15cdaf8a8eb.png" width="644" height="416"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With that terse examination of the various moving parts of the SiteMonitR application code out of the way the time has come to learning how it can be deployed. &lt;/p&gt; &lt;h2&gt;Deploying SiteMonitR&lt;/h2&gt; &lt;p&gt;There are three steps in the deployment process for getting the site and the WebJobs running in Windows Azure, and the whole set of code can be configured in one final step. The first step should be self-explanatory; the site needs to be published to Windows Azure Web Sites. I won’t go through the details of publishing a web site in this post. There are literally hundreds of resources out there on the topic, from Web Camps TV episodes to Sayed’s blog, as well as demo videos on AzureConf, //build/ keynotes, and so on. Save it to say that &lt;strong&gt;publishing and remote debugging ASP.NET sites in Windows Azure Web Sites is pretty simple&lt;/strong&gt;. Just right-click, select Publish, and follow the steps. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ca8849de-00dc-402d-ae39-785f3ecaa664.png"&gt;&lt;img title="21" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="21" src="http://www.bradygaster.com/posts/files/1109e3ce-18ed-435e-a041-e28e1ea75885.png" width="366" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the code is published the two WebJob executables need to be zipped up and deployed. First, I’ll pop out of Visual Studio to the bin/Release folder of my event-driven WebJob. Then I’ll select all the required files, right-click them, and zip them up into a single zip file. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/da4fc0b5-7fca-4bc4-a97c-ec5ba1c5773c.png"&gt;&lt;img title="25" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="25" src="http://www.bradygaster.com/posts/files/93be4eec-aaac-4abd-8521-9b18582291c3.png" width="540" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then in the portal’s widget for the SiteMonitR web site I’ll click the WebJobs tab in the navigation bar to get started creating a new WebJob. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/478a8a03-00c1-43cc-821e-24f620ede11d.png"&gt;&lt;img title="26" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="26" src="http://www.bradygaster.com/posts/files/41df8d32-50cf-4b4e-88dc-16428dab7bc1.png" width="644" height="374"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I’ll give the WebJob a name, then select the zip file and specify how the WebJob should run. I’ll select &lt;strong&gt;Run Continuously&lt;/strong&gt; for the event-driven WebJob. It has code in it that will halt the process in wait for incoming queue messages, so this selection will be adequate. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/2203a527-479f-4532-890e-bf48e3066e65.png"&gt;&lt;img title="27" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="27" src="http://www.bradygaster.com/posts/files/0f2f0c8f-32a3-4131-8c0f-1d9f6ea894c0.png" width="644" height="458"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Next I’ll zip up the output of the scheduled WebJob’s code. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/6af4e257-ad32-48b2-af11-05d0a3deede5.png"&gt;&lt;img title="24" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="24" src="http://www.bradygaster.com/posts/files/58cb7ed5-27f3-4fae-a77c-aff28cf4cdff.png" width="558" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This time, when I’m uploading the zip file containing the WebJob, I’ll select the &lt;strong&gt;Run on a Schedule&lt;/strong&gt; option from the &lt;strong&gt;How to Run&lt;/strong&gt; drop-down. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/bb36f4ee-767d-4ccb-93e6-24b1f984cc75.png"&gt;&lt;img title="29" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="29" src="http://www.bradygaster.com/posts/files/1173947b-2e5a-4505-9815-b0e54b9b9154.png" width="644" height="380"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then I’ll set up the schedule for my WebJob. In this example I’m going to be a little obsessive and run the process to check my sites every fifteen minutes. So, every fifteen minutes the scheduled task, which is responsible for checking the sites, will wake up, check all the sites, and enqueue the results of each check so that the results can be logged. If a user were sitting on the dashboard they’d observe this check happen every 15 minutes for each site. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/00dbd3b3-06aa-49c5-9b48-9790eea518ea.png"&gt;&lt;img title="30" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="30" src="http://www.bradygaster.com/posts/files/9dfc343e-6110-4731-831b-684dff105df5.png" width="644" height="380"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The two WebJobs are listed in the portal once they’re created. Controls for executing manual or scheduled WebJobs as well as stopping those currently or continuously running appear at the bottom of the portal. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/b8ccb9f6-f82b-4cf5-bd06-1bfc306b99e1.png"&gt;&lt;img title="31" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="31" src="http://www.bradygaster.com/posts/files/db2d5570-e033-4074-a0d0-455db20a21eb.png" width="644" height="380"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Configuration&lt;/h2&gt; &lt;p&gt;The final step in deployment (like always) is configuration. SiteMonitR was built for Windows Azure, so it can be entirely configured from within the portal. The first step in configuring SiteMonitR is to create a Storage Account for it to use for storing data in tables and for the queue being used to send and receive messages. An existing storage account could be used, and each object created in the storage account is prefixed with the &lt;strong&gt;sitemonitr&lt;/strong&gt; phrase. That said, it could be better for some to have an isolated storage account. If so, create a storage account in the portal. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/170304d3-8ddb-4c53-9ad4-e935b5dab5de.png"&gt;&lt;img title="28" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="28" src="http://www.bradygaster.com/posts/files/295fc7ec-dd69-4a31-bc8c-17281d933d23.png" width="644" height="396"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the storage account has been created, copy the name and either primary or secondary keys so that you can build a storage account connection string. That connection string needs to be used, as does the URL of my site (in this case, &lt;a href="http://sitemonitr.azurewebsites.net" target="_blank"&gt;sitemonitr.azurewebsites.net&lt;/a&gt;, which is in fact a live instance of this code) as connection strings and an appSetting (respectively). See below on how to configure these items right from within the Windows Azure portal. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/cadfc643-d8c6-45df-800c-2d0a49081012.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/06a941cc-b688-48e3-9f7e-db590fb35830.png" width="644" height="371"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once these values are configured, the site should be ready to run. &lt;/p&gt; &lt;h2&gt;Running SiteMonitR&lt;/h2&gt; &lt;p&gt;To test it out, open the site in another browser instance, then go to the WebJobs tab of the site and select the scheduled task. Then, run it from within the portal and you should see the HTML UX reacting as the sites are checked and their status sent back to the dashboard from the WebJob code. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ac24622c-5839-448f-bef6-0b7320fe6389.png"&gt;&lt;img title="33" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="33" src="http://www.bradygaster.com/posts/files/4985fdee-557d-4f51-99e8-e42ff9bf2ae3.png" width="644" height="297"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Speaking of dashboards, the WebJobs feature itself has a nice dashboard I can use to check on the status of my WebJobs and their history. I’ll click the &lt;strong&gt;Logs&lt;/strong&gt; link in the WebJobs tab to get to the dashboard. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f4de0d89-d88c-4a81-824c-2ccc0b215b0c.png"&gt;&lt;img title="35" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="35" src="http://www.bradygaster.com/posts/files/b11ccc17-5155-4a09-9695-5959e4986ca4.png" width="644" height="192"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The WebJobs Dashboard shows all of my jobs running, or the history for those that’ve already executed. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/960135b8-9814-4792-a8be-6280350dc9e2.png"&gt;&lt;img title="34" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="34" src="http://www.bradygaster.com/posts/files/9bb7092b-5d03-49e4-90fc-0361cc6b0b86.png" width="644" height="401"&gt;&lt;/a&gt;&lt;/p&gt;   &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;I’m really enjoying my time spent with WebJobs up to this point. At the original time of this post, WebJobs was in the first Alpha release stage. so they’re still pretty preview. I’m seeing huge potential for WebJobs, where customers who have a small middle-tier or scheduled &lt;em&gt;thing &lt;/em&gt;that needs to happen. In those cases a Worker Role could be quite overkill, so WebJobs is a great middle-of-the-road approach to giving web application owners and developers these sorts of scheduled or event-driven programs that enable a second or multiple tiers running. I’ve really enjoyed playing with WebJobs, learning the SDK, and look forward to more interesting things coming out in this space. &lt;/p&gt;</description><a10:updated>2014-10-30T13:55:16Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/writing-a-windows-phone-8-application-that-uses-the-windows-azure-management-libraries-for-on-the-go-cloud-management</guid><link>http://www.bradygaster.com/post/writing-a-windows-phone-8-application-that-uses-the-windows-azure-management-libraries-for-on-the-go-cloud-management</link><a10:author><a10:name /></a10:author><title>Writing a Windows Phone 8 Application that uses the Windows Azure Management Libraries for on-the-go Cloud Management</title><description>&lt;p&gt;Since the initial release of the &lt;a href="http://www.nuget.org/packages?q=Microsoft.WindowsAzure.Management&amp;amp;prerelease=true&amp;amp;sortOrder=relevance" target="_blank"&gt;Windows Azure Management Libraries (WAML)&lt;/a&gt; as &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/gg597391(v=vs.110).aspx" target="_blank"&gt;Portable Class Libraries&lt;/a&gt; (PCL, or &lt;em&gt;pickles&lt;/em&gt; as I like to call them) we’ve had tons of questions from community members like &lt;a href="https://twitter.com/pvandorp" target="_blank"&gt;Patriek&lt;/a&gt; asking how Windows Phone applications can be written that make use of the cloud management functionality WAML offers. At first glance it would seem that WAML is “unsupported on Windows Phone,” but the reality is that WAML is fully supported via it being a PCL, but some external factors made it seem just shy of impossible to be able to glue our PCL framework to each of the targeted client platforms. In the case of Phone, there are two blockers: &lt;/p&gt; &lt;ol&gt; &lt;li&gt;Since the &lt;em&gt;X509Certificate2 &lt;/em&gt;class is unsupported on Windows Phone developers can’t make use of the certificate-based method of authenticating against the Azure REST API  &lt;li&gt;Since there’s no &lt;a href="https://www.nuget.org/packages/Microsoft.IdentityModel.Clients.ActiveDirectory/1.0.0" target="_blank"&gt;ADAL&lt;/a&gt; implementation that targets Phone there’s no way to use ADAL’s slick functionality to get my authentication token. The assumption here is that some creative coding is going to have to be done to go deeper into the OAuth stack. Sounds nasty. &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;Well, that’s never stopped any motivated coder before, right? Armed with some code from Patriek, a problem statement, and a pretty &lt;a href="http://www.cloudidentity.com/blog/2013/04/29/fun-with-windows-azure-ad-calling-rest-services-from-a-windows-phone-8-app/" target="_blank"&gt;informative blog post written by none other than Vittorio on how he had some fun tying Phone to REST Services using AAD&lt;/a&gt;, I set out to start at ground zero to get some code working on my phone that would enable me to see what’s happening in my Azure subscription, across all my sites, services, and data stores. I set out to create a new type of phone app that will give me complete control over everything I’ve got published to my Azure cloud subscription. This post will walk through the code I worked up to get a baseline Windows Phone mobile cloud management app running. &lt;/p&gt; &lt;h2&gt;Creating and Configuring the Phone App&lt;/h2&gt; &lt;p&gt;First, a little background is required here. As Vittorio’s post makes very clear, the OAuth dance the WP8 code is going to be doing is pretty interesting, challenging, and results with a great set of functionality and an even greater starting point if this app gives you some ideas on what you could make it do next. In fact, if you’re into that whole &lt;strong&gt;social coding&lt;/strong&gt; thing, the code in this post &lt;a href="https://github.com/bradygaster/wamlphone" target="_blank"&gt;has a GitHub repository right here&lt;/a&gt;. The code in the repository contains the project I created in this screen shot in more detail.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/70a1d71b-31b9-4907-9ddb-62e3d9fb3e2b.png"&gt;&lt;img title="01" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="01" src="http://www.bradygaster.com/posts/files/aaf43352-d2e0-42ed-9e16-6c4e7458fca7.png" width="644" height="446"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The first step is to pull down the NuGet pacakges I’ll need to write this application. In this particular case I’m kind of thinking of writing a Windows Phone app that I’ll use to management my Azure Web Sites, Cloud Services, SQL Databases, Storage Accounts, and everything in between. So I’ll right-click my Phone project and select the correct packages in next step.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/6656ab00-3bb9-4856-938d-a0e15f8e774d.png"&gt;&lt;img title="02" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="02" src="http://www.bradygaster.com/posts/files/f39f9d54-50a7-4c59-b8cd-ea4194ee97fc.png" width="451" height="403"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I’ll go ahead and pull down the entire WAML NuGet set, so I can manage and view all of my asset types throughout the my Azure platform subscription. By selecting the &lt;a href="http://www.nuget.org/packages?q=Microsoft.WindowsAzure.Management.Libraries&amp;amp;prerelease=true&amp;amp;sortOrder=relevance" target="_blank"&gt;Microsoft.Windows Azure.Management.Libraries&lt;/a&gt; package, all of the SDK Common and WAML platform NuGets will all be pulled down for this application to use. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ee2fb65a-5042-487e-8e1d-f80ded5f9e0f.png"&gt;&lt;img title="03" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="03" src="http://www.bradygaster.com/posts/files/f9dae242-7047-4291-b8c9-0a404aebf763.png" width="644" height="395"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Common SDK, shown below in the project’s references window, provides the baseline HTTP, Parsing, and Tracing functionality that all the higher-order WAML components need to function. Next to that is the newest member of the Common SDK tools, the Common Windows Phone reference, which is new in the latest release of the Common SDK package. This new addition provides the high-level functionality for taking token credentials from within the Windows Phone client and being able to attach those credentials to the SDK client code so that calls made to the Azure REST API from a phone are authenticated properly. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/fc9fb807-60dc-4fe2-9646-532d923f5c0c.png"&gt;&lt;img title="04" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="04" src="http://www.bradygaster.com/posts/files/cf4b608f-9f2d-4eee-ae5b-171bf9f94acf.png" width="414" height="281"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you read &lt;a href="http://www.bradygaster.com/post/using-windows-azure-active-directory-to-authenticate-the-management-libraries" target="_blank"&gt;my last blog post on using WAAD and WAML&lt;/a&gt; together to authenticate WAML-based client applications, there are a few important steps in that post about working through the process of adding an application that can authenticate on behalf of your WAAD tenant. &lt;a href="http://www.bradygaster.com/post/using-windows-azure-active-directory-to-authenticate-the-management-libraries" target="_blank"&gt;Take a look at that post here&lt;/a&gt; to get the values for the App Resources dialog in the screen shot below. In a sense, you’ll be setting application settings here that you can get from the Azure portal. You’ll need to create an application, then get that app’s client id, and your subscription and active directory tenant id or domain name, and place those values into the code’s resources file, as shown below. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/fc13fe92-f708-447b-8678-681ec042453d.png"&gt;&lt;img title="06" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="06" src="http://www.bradygaster.com/posts/files/f048abda-e074-42c3-a8f7-0e6b9f045935.png" width="568" height="377"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;The Login View&lt;/h2&gt; &lt;p&gt;The first view shows a built-in web browser control. This web browser will be used to direct the user to the login page. From there, the browser’s behavior and events will be intercepted. The authentication data the form contains will then be used to manually authenticate the application directly to AAD. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Reminder – &lt;a href="http://www.cloudidentity.com/blog/2013/04/29/fun-with-windows-azure-ad-calling-rest-services-from-a-windows-phone-8-app/" target="_blank"&gt;As Vittorio’s post pointed out&lt;/a&gt;, you might not want to use this exact code in your production app. This is a prototype to demonstrate putting it all together in the lack of important resources. Something better will come along soon. For now the OAuth dance is sort of up to me. &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Note the web browser control has already been event-bound to a method named &lt;em&gt;webBrowser_Navigating&lt;/em&gt;, so each time the browser tries to make a request this method handler will run first, and allow my code to intercept the response coming back to the browser. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/99af6517-6bad-4c80-8764-b72863c267e1.png"&gt;&lt;img title="05" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="05" src="http://www.bradygaster.com/posts/files/9f40508b-d293-40d3-af6d-6e25e1677f37.png" width="644" height="390"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the login page loads up, I’ll presume a login is in order, so I’ll go ahead and navigate to the login page, passing in a few of my own configuration parameters to make sure I’m hitting my own AAD tenant. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5734b47b-d479-4760-8c5a-76cb0d228680.png"&gt;&lt;img title="07" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="07" src="http://www.bradygaster.com/posts/files/781ed1e0-5952-42b1-9718-53fc0107ead1.png" width="551" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Vittorio deep-dives on the workflow of this code a lot better than I’ll try to do here. The basic idea is that the browser flow is being intercepted. Once the code realizes that AAD has authenticated me it hands back a URL beginning with the string I set for the &lt;strong&gt;redirectUrl&lt;/strong&gt; property of this application in the portal. When my code sees my &lt;strong&gt;redirectUrl&lt;/strong&gt; come through, I just run the &lt;strong&gt;GetToken()&lt;/strong&gt; method to perform the authentication. It posts some data over the wire again, and this time, the response activity is handled by the &lt;strong&gt;RetrieveTokenEndpointResponse()&lt;/strong&gt; event handler.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/cc2e9a27-eebc-4ad6-94c8-ba067f5e2dab.png"&gt;&lt;img title="08" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="08" src="http://www.bradygaster.com/posts/files/3f801bfd-02bd-4863-b7a8-97cc0d3786d3.png" width="493" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once this handler wakes up to process the HTTP response I’ve received from the AAD authentication workflow (that we did via the OAuth dance), my access token is pulled out of the response. The subscription id value is then persisted via one of my App’s properties, and the next view in the application is shown. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/382cbb3c-f870-46e5-8116-9be4d924ea9c.png"&gt;&lt;img title="09" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="09" src="http://www.bradygaster.com/posts/files/bfe6171d-c4ec-459f-ae61-312f39ff9304.png" width="644" height="340"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When the user first opens the app, the obvious first step is visible. We need to show the user the AAD login site, and allow the user to manually enter in their email address and password. In this window. I could use a Microsoft (Live/Hotmail/etc.) account or an organizational account. The latter, so long as they’ve been marked as Azure subscription co-admins, would be able to log in and make changes, too. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/729d70ef-9eff-4d68-acf7-4b0a5504d3d1.png"&gt;&lt;img title="16" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="16" src="http://www.bradygaster.com/posts/files/f65bb720-ec25-4906-9a61-85708de322b1.png" width="332" height="599"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the user logs in they’ll be shown a list of their subscriptions, so let’s take a look at how the code in the subscriptions view is constructed. &lt;/p&gt; &lt;h2&gt;Selecting a Subscription&lt;/h2&gt; &lt;p&gt;The subscription selection view just shows a list of subscriptions to the user in a long scrolling list. This list is data-bound to the results of a REST API call made via the &lt;strong&gt;SubscriptionClient&lt;/strong&gt; class, which goes out and gets the list of subscriptions a user can view. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Note – even though I can see my full list of subscriptions, I’ve only installed the Application into one AAD tenant in one of my subscriptions. If I click any of the other subscriptions, things won’t work so well. A subscription and a tenant are tied together. Unless your application gets special permission (it does happen from time to time, I &lt;em&gt;hear&lt;/em&gt;) your application can only access Azure assets in the same subscription. If you wanted to work across subscription you’d have a little more work to do. &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;The XAML code below shows how the list of subscriptions will be data-bound to the view. I may eventually go into this code and add some view/hide logic that would show only those subscriptions I could impact using the application settings I’ve got running in this app. Point is, I can see all of the subscriptions I can manage and conceptually manage them with some additional coding. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/1ecfbb56-f6d6-4e33-96af-92f2b0ce8807.png"&gt;&lt;img title="10" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="10" src="http://www.bradygaster.com/posts/files/244e769f-368e-4ee5-99e5-90b2c400057e.png" width="644" height="337"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The code below is what executes to log a user in with their stored access token and subscription id, when the &lt;strong&gt;TokenCloudCredentials&lt;/strong&gt; class is used to wrap their credentials up as a single construction parameter to most of the management client. Since I was able to get a token from the OAuth dance with AAD, and since I know which subscription ID I want to affect, I’ve got everything I need to start working against the rest of the service management REST API endpoints. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/beeedfc7-3409-4de4-a7f0-34e658a2f01d.png"&gt;&lt;img title="11" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="11" src="http://www.bradygaster.com/posts/files/4ce6f5b4-8115-466b-97b8-150a6932748f.png" width="644" height="438"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When the subscriptions page loads, it gives me the chance to select the subscription I want to manage. &lt;strong&gt;Note: &lt;/strong&gt;I just need to &lt;em&gt;be cautious &lt;/em&gt;and &lt;em&gt;only click the subscription that matches the subscription where my AAD tenant is set up&lt;/em&gt;. In my case, I’ve got the application installed into my AAD tenant that lives in the subscription named &lt;strong&gt;Windows Azure MSDN – Visual Studio Ultimate&lt;/strong&gt;. If I were to select any of my other subscriptions I’d get an exception. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;To have true parity across all subscriptions you’d need to have an application setup in each of your directories and some additional configuration, &lt;em&gt;or &lt;/em&gt;you’d have to allow other tenants set up &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/dn151789.aspx" target="_blank"&gt;multi-tenancy&lt;/a&gt; with your AAD tenant. &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5a7e58db-419b-47aa-a8e7-60c67c0a7a9f.png"&gt;&lt;img title="17" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="17" src="http://www.bradygaster.com/posts/files/982d4e5b-eef2-4c83-9869-6f46f0ade5e2.png" width="336" height="603"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the subscription list is data-bound the user can select a subscription to work with. Selection of a subscription item in the list fires the following code. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/e4f60cb3-b4ee-48e7-9fe5-bd05739d7666.png"&gt;&lt;img title="12" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="12" src="http://www.bradygaster.com/posts/files/0ef9f94c-d837-4165-8e20-d5b79a502fad.png" width="644" height="214"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It persists the subscription id of the subscription the user selected, and then navigates the user to the &lt;strong&gt;AssetListView &lt;/strong&gt;page, which will show more details on what’s in a user’s Azure subscription.&lt;/p&gt; &lt;h2&gt;Viewing Cloud Assets via Mobile Phone&lt;/h2&gt; &lt;p&gt;To provide a simple method of being able to scroll through various asset types rather than emulate the Azure portal, I made use of the &lt;strong&gt;LongListSelector&lt;/strong&gt; and &lt;strong&gt;Pivot&lt;/strong&gt; controls. In each Pivot I display the type of Azure asset being represented by that face of the pivot control. Web Sites, &lt;em&gt;slide&lt;/em&gt;, Storage, &lt;em&gt;slide&lt;/em&gt;, SQL, &lt;em&gt;slide&lt;/em&gt;, Cloud Services… and so on. The idea for the phone prototype was to show how WAML could be used to load ViewModel classes that would then be shown in a series of views to make it easy to get right to a particular asset in your Azure architecture to see details about it in a native Phone interface. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f0b23429-1fab-47d0-b947-986a38c66ec3.png"&gt;&lt;img title="13" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="13" src="http://www.bradygaster.com/posts/files/81b8da6a-2ef3-42be-b256-52240b8ca9c3.png" width="644" height="481"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Since the assets list page is primarily just a logically-grouped series of lists for each of the types of assets one can own in their Azure stack, the ViewModel class’s main purpose is to expose everything that will be needed on the view. It exposes Observable Collections of each type of Azure asset the app can display. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/78c64ff5-6fb9-4146-9956-485b9edf2b64.png"&gt;&lt;img title="14" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="14" src="http://www.bradygaster.com/posts/files/3908ff72-5734-4a99-89ea-4179345fa7fc.png" width="644" height="477"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What would be better as controller functionality, the code in the codebehind of the view ends up doing most of the data-acquisition from the Azure REST APIs via WAML calls. In the code sample below the &lt;strong&gt;GetWebSites&lt;/strong&gt; method is highlighted, but the others – &lt;strong&gt;GetSqlDatabases, GetStorageAccounts, and GetHostedServices&lt;/strong&gt; – all do the same sorts of things. Each method creates instances of appropriate management client classes, retrieves asset lists, and data-binds the lists so that the assets are all visible in the Windows Phone client. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ed957f28-59fb-480c-bf51-0a7373729363.png"&gt;&lt;img title="15" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="15" src="http://www.bradygaster.com/posts/files/f0b959b7-5b56-4120-8f83-bf4ce48bf5d3.png" width="482" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The web sites pivot is shown below. I’m thinking of adding a deeper screen here, one that would show site statistics over the last &lt;em&gt;N &lt;/em&gt;days, maybe add an appSetting and connectionString editor page, or something else. Have any ideas? &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/8975f3c3-9d42-462f-937b-56abaad5fbda.png"&gt;&lt;img title="18" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="18" src="http://www.bradygaster.com/posts/files/88c80b2d-3e94-445a-9ffd-5cf14766fe1d.png" width="332" height="599"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here’s a list of my cloud services – 2 empty PaaS instances and 1 newly set-up VM instance. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/43468368-63a7-4a8d-91a0-51c8ea7c20c8.png"&gt;&lt;img title="19" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="19" src="http://www.bradygaster.com/posts/files/c0a4d78d-4ee6-43cd-af29-59e2f372b16b.png" width="332" height="599"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Though the OAuth dance has a few drawbacks and the code is a little less elegant than when I could make use of ADAL in my previous example, it works. Once I have the token information I need from the browser, I can run with that information by creating an instance of a TokenCloudCredential, passing in the token I received from the OAuth dance to get to authenticate WAML and therefore, make calls out to the Azure Service Management API to automate my asset management. Since WAML is a PCL package, and as a result of the introduction of support for the Windows Phone platform into the SDK Common NuGet package, the community can now freely experiment with solutions combining Windows Phone and the Management Libraries. &lt;/p&gt; &lt;p&gt;Happy Coding!&lt;/p&gt;</description><a10:updated>2014-10-17T07:13:28Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/using-windows-azure-active-directory-to-authenticate-the-management-libraries</guid><link>http://www.bradygaster.com/post/using-windows-azure-active-directory-to-authenticate-the-management-libraries</link><a10:author><a10:name /></a10:author><title>Using Windows Azure Active Directory to Authenticate the Management Libraries</title><description>&lt;p&gt;Integration with Windows Azure Active Directory was one of the main features we wanted to get into the 1.0 release of the Windows Azure Management Libraries. Since Visual Studio and even the PowerShell Cmdlets (which use WAML, in fact) already have support for AAD, it was really important to all of us on the team that we have a method of providing authentication directly via AAD from within C# code using WAML. This makes for a synonymous login experience across all three of these (and more) areas. Most importantly, it makes it easy for Windows Azure users to be able to manage all their subscription assets when they only need to login using their username/password portal credentials rather than go through the process of creating and uploading management certificates. This blog post will answer some of the questions and requests we’ve had from the community on how to tie AAD and WAML together, to create AAD-authenticated applications code that can be used to manage your Windows Azure account assets. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This won’t be a deep-dive into how AAD works, but more a short examination on how it and WAML can be used together. &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;I worked quite a bit with the AAD team, especially &lt;a href="http://www.cloudidentity.com/blog/" target="_blank"&gt;Vittorio Bertocci&lt;/a&gt;, on this post. Our teams have a regular meeting so we’re on the same page, but the guys on their team spent some additional cycles with us spelunking, coming up with features, and so on. As we talked about ideas, the AAD team gave me some great resources, like &lt;a href="http://code.msdn.microsoft.com/AAL-Native-Application-to-fd648dcf" target="_blank"&gt;this post which walks through the process of setting up a client app so that it can be authenticated using AAD&lt;/a&gt;. Vittorio’s site has a series of &lt;a title="Protecting a self-hosted Web API with AAD" href="http://www.cloudidentity.com/blog/2013/12/10/protecting-a-self-hosted-api-with-microsoft-owin-security-activedirectory/" target="_blank"&gt;great&lt;/a&gt; &lt;a title="ASP.NET and AAD Organizational Accounts" href="http://www.cloudidentity.com/blog/2013/12/11/setting-up-an-asp-net-project-with-organizational-authentication-requires-an-organizational-account/" target="_blank"&gt;examples&lt;/a&gt; on how to go deeper with AAD. I won’t go too deep into the inner-working of AAD in this post, so keep check out those great resources if you want more information. Thanks to the AAD team for all your help and patience and supporting our team!&lt;/p&gt; &lt;h2&gt;Create a client app for managing Windows Azure assets&lt;/h2&gt; &lt;p&gt;The code for this sample application won’t be too complicated. I’m actually going to retrofit a small command line app I wrote the other day when asked by a peer in another team who wanted to export the list of Virtual Machine images in the gallery. The code for this itty-bitty application’s beginnings is below, which makes use of the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Compute" target="_blank"&gt;Compute Management Management Library&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/4b076ee9-f664-4c1c-91ad-05b7cc0b85f7.png"&gt;&lt;img title="waad-waml-03" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-03" src="http://www.bradygaster.com/posts/files/34a3e11e-c586-48b4-9781-7dafcdc00223.png" width="559" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With this code already working using my Management Certificate, and with it being a relatively simple app, it seemed like a great case for demonstrating how easy it is to switch out the &lt;strong&gt;CertificateCloudCredentials&lt;/strong&gt; for the &lt;strong&gt;TokenCloudCredentials&lt;/strong&gt; class once the AAD infrastructure is set up and ready. Speaking of that, this would be a good time to walk through the process using the Windows Azure portal to set up an AAD application in my AAD directory that I can develop that will use the Management Libraries to manage my subscription. &lt;/p&gt; &lt;h2&gt;Setting up an AAD application using the portal&lt;/h2&gt; &lt;p&gt;To authenticate using AAD I first need to create an application in my Windows Azure subscription’s existing Active Directory tenant. To do this I go to my AAD tenant page in the portal and click the &lt;strong&gt;Applications&lt;/strong&gt; tab at the top. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f975a342-4946-458d-8321-e4fc9d49afb5.png"&gt;&lt;img title="waad-waml-05" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-05" src="http://www.bradygaster.com/posts/files/f9cf2f99-887d-46b5-a562-fd2bde613ad3.png" width="644" height="446"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I currently have no applications authenticating against my directory so I’ll click the &lt;strong&gt;Add&lt;/strong&gt; button at the bottom of the portal. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/2f5917dd-78cd-476b-9e5c-08489fe40100.png"&gt;&lt;img title="waad-waml-06" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-06" src="http://www.bradygaster.com/posts/files/b75fc0e5-e524-4e2e-9c55-1ea24eef0c24.png" width="644" height="261"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Selecting the second option in this list presents me with a huge list of existing applications with which AAD can integrate. Since I’m interested in authenticating an application I’m writing, I’ll click the first option.&amp;nbsp; &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/9e356bf0-deaf-43cf-bd30-7a205132d93b.png"&gt;&lt;img title="waad-waml-07" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-07" src="http://www.bradygaster.com/posts/files/55da8e44-69be-47f4-9442-3b818ae160b3.png" width="644" height="307"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The application I’m writing is a small console application, not a web app. Hence I’ll select the second option – &lt;strong&gt;Native Client Application&lt;/strong&gt; - in the &lt;strong&gt;Add Application&lt;/strong&gt; dialog, shown below. If I’d wanted to put an ASP.NET Web API up in the cloud that would use AAD on the back end for authentication, I’d select the top option, &lt;strong&gt;Web Application and/or Web API.&lt;/strong&gt; The API my client app will need to access is the actual Windows Azure Service Management API, which AAD has a special provision for in the portal that will be examined in a moment. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5e88606e-9330-4423-b245-7dcb7ff2ad0f.png"&gt;&lt;img title="waad-waml-08" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-08" src="http://www.bradygaster.com/posts/files/bf91fd0c-2c20-40dc-ad18-b8960c89feb7.png" width="644" height="306"&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Next, I’ll need to provide a redirect URI. Even though the application I’m writing is a native app, I still need to provide this URI to give AAD more details on the specific application that will be authenticating. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ffb360e1-8e2d-4a01-aa7c-79e9e374741e.png"&gt;&lt;img title="waad-waml-09" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-09" src="http://www.bradygaster.com/posts/files/af03a99e-444e-419b-a216-f431808790b5.png" width="644" height="306"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once these settings are made, I can see the application’s &lt;strong&gt;client id&lt;/strong&gt; in the portal, along with the information I provided during the application’s creation process. The MSDN code site article I mentioned above, written by the AAD team, &lt;a href="http://code.msdn.microsoft.com/AAL-Native-Application-to-fd648dcf" target="_blank"&gt;walks through more details&lt;/a&gt; of how the client application authentication workflow functions and offers more details, so definitely check out that sample if you need more information on these settings. For now, what’s important to remember from this window are the &lt;strong&gt;client id &lt;/strong&gt;text box and the &lt;strong&gt;redirect URI&lt;/strong&gt; created below. Those two strings make up 2 of the 3 strings I’ll need to authenticate a WAML application with AAD. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/27bd2bd4-1ee1-40d8-a32c-61d422e7595c.png"&gt;&lt;img title="waad-waml-10" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-10" src="http://www.bradygaster.com/posts/files/945a74fb-0815-4a9d-bafe-ff428b7f181a.png" width="644" height="348"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The final piece of information is the AAD tenant id, which can be found by clicking the &lt;strong&gt;View Endpoints&lt;/strong&gt; button in the portal when on the page for the directory I wish to use to authenticate users. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/588694b5-ef50-415f-9732-45d60d58c9f4.png"&gt;&lt;img title="waad-waml-11" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-11" src="http://www.bradygaster.com/posts/files/632b01d3-3d81-4f01-9769-323f57ae1d8c.png" width="644" height="343"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;The URI provided in each of the text boxes in the resultant dialog contain a GUID. This GUID is the tenant id, so it’ll need to be copied out for use in my code. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/1565e13c-ffc5-4944-b299-b30ce28563f2.png"&gt;&lt;img title="waad-waml-12" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-12" src="http://www.bradygaster.com/posts/files/66bb6d18-9cf4-4a9e-b800-4b4f7e27a911.png" width="644" height="348"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Changing the WAML code to perform AAD authentication&lt;/h2&gt; &lt;p&gt;Back in Visual Studio I’m ready to change the code to make use of AAD authentication. The first step is to reference the required NuGet package, the &lt;a href="http://www.nuget.org/packages/Microsoft.IdentityModel.Clients.ActiveDirectory/" target="_blank"&gt;Active Directory Authentication Library (ADAL)&lt;/a&gt;. This will enable my project the ability of prompting the user with a login dialog, into which they can enter their Microsoft account username and password. It will also add all sorts of goodness from the AAD folks that you can make use of in your client applications. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/42f7639e-c6d4-4f26-99c8-20bef7740726.png"&gt;&lt;img title="waad-waml-01" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-01" src="http://www.bradygaster.com/posts/files/21c248df-a4af-4479-9de9-21838345ac95.png" width="644" height="395"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the code I’ll add a method called &lt;strong&gt;GetAuthorizationHeader&lt;/strong&gt; that will take my tenant id as a parameter. I’ll presume the calling code might want to make use of the common tenant, but will give callers the ability to pass in their own tenant GUID identifying their custom Active Directory tenant. Take note that within this method I’m making use of the application’s settings, the redirect URL and the client id property from the portal. As well. I’m passing the base URI of the Windows Azure REST API as the value for the &lt;strong&gt;resource &lt;/strong&gt;parameter to the &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.identitymodel.clients.activedirectory.authenticationcontext.acquiretoken.aspx" target="_blank"&gt;AuthenticationContext.AcquireToken&lt;/a&gt; method. &lt;a href="http://www.cloudidentity.com/blog/2013/09/12/active-directory-authentication-library-adal-v1-for-net-general-availability/" target="_blank"&gt;Vittorio has a great blog post introducing ADAL&lt;/a&gt; and what you can do with it, so if you’re looking to dive deeper on this topic head on over to &lt;a href="http://www.cloudidentity.com/blog/" target="_blank"&gt;CloudIdentity.com&lt;/a&gt; and check it out. In a more practical implementation I should probably be setting those values up as &lt;em&gt;appSetting&lt;/em&gt; variables, but for this demonstration code sheer pasting in the values is sufficient.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/847e4fe2-95a1-4b83-9856-c8d6eecf77c9.png"&gt;&lt;img title="waad-waml-04" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-04" src="http://www.bradygaster.com/posts/files/05522f35-317a-4386-94df-5dd0a287aad9.png" width="644" height="440"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;The final step in the code is to comment out the old authentication mechanism, where I was using the &lt;a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2(v=vs.110).aspx" target="_blank"&gt;X509Certificate2&lt;/a&gt; class to authenticate using a management certificate. In place of this code, which creates an instance of a new CertificateCloudCredentials class, I’ll make a call to the new GetAuthorizationHeader method to get my token, then use that token as a parameter to an instance of the &lt;a href="https://github.com/WindowsAzure/azure-sdk-for-net/blob/master/src/Common/Credentials/TokenCloudCredentials.cs" target="_blank"&gt;TokenCloudCredentials&lt;/a&gt; class. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/28af4606-cd0e-4de0-864b-bb4dbcfb20d8.png"&gt;&lt;img title="waad-waml-15" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-15" src="http://www.bradygaster.com/posts/files/d3593f5d-429b-425d-9825-c719076e651a.png" width="644" height="289"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Authorizing access to the Windows Azure Service Management API to my client application&lt;/h2&gt; &lt;p&gt;At this point the code &lt;em&gt;almost &lt;/em&gt;works. However, when I run it I get an error that pretty clearly indicates what’s wrong in the exception message. Clearly, this application hasn’t been granted access to the service management API. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/c4116092-8344-41c0-8d10-20ff91fc1c99.png"&gt;&lt;img title="waad-waml-19" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-19" src="http://www.bradygaster.com/posts/files/cf82d004-65d5-4245-9cf6-06c02386f290.png" width="644" height="396"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;A recently-added (okay, a personally recently-&lt;em&gt;discovered&lt;/em&gt;) feature within the portal allows me to specify which applications I’m going to allow access to this client application. Since I’ve not yet created any APIs that also use AAD as an authentication mechanism I’ll only see the two default items in this drop-down menu (the Graph Explorer and the Service Management API). By selecting the option &lt;strong&gt;Windows Azure Service Management API&lt;/strong&gt;, I effectively grant my client application access to any of the REST API URLs available under &lt;strong&gt;https://management.core.windows.net&lt;/strong&gt;. Once I save this setting, the code should run and give me back the list of Virtual Machine images from the gallery. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/54270861-8db9-4e9e-bd05-6af40e4d83a3.png"&gt;&lt;img title="waad-waml-20" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-20" src="http://www.bradygaster.com/posts/files/930a6b98-ad19-4fc3-934c-2fb81e03dcef.png" width="644" height="302"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When I run the code this time, it works as expected. I’m prompted for my credentials, thanks to some of the functionality provided in the ADAL package. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5520cb9f-1a15-4281-bb13-ad15f6bd1050.png"&gt;&lt;img title="waad-waml-16" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-16" src="http://www.bradygaster.com/posts/files/5169043b-10c7-4e9b-b214-ebc55c55938a.png" width="341" height="267"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once I log in using my subscription’s credentials, WAML can authenticate and pull down the list of virtual machines. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/533dd96e-74ee-4830-a386-08321f8639ad.png"&gt;&lt;img title="waad-waml-17" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="waad-waml-17" src="http://www.bradygaster.com/posts/files/2f0fd929-8d49-41d7-948e-0c181712243e.png" width="624" height="407"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;From here, I could use the rest of the functionality available in WAML to do whatever I need. Now that I’m able to authenticate using AAD, I won’t need to create, upload, configure, and track my management certificates. Rather, my applications can just make use of Active Directory to log in and manage my subscription’s assets. &lt;/p&gt; &lt;p&gt;I hope you find this to be an exciting new option available in the Windows Azure Management Libraries. I’ve been looking forward to showing this feature off, as I think it shows two awesome areas of the client developer experience – AAD via ADAL and the REST API via WAML – being used together to create some amazing client-side magic against the Windows Azure cloud. Thanks again to the AAD folks for lending a hand from time to time with some of the details and fine tuning! &lt;/p&gt;</description><a10:updated>2015-01-26T12:19:14Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/managing-web-sites-from-web-sites-using-the-windows-azure-management-libraries-for-net</guid><link>http://www.bradygaster.com/post/managing-web-sites-from-web-sites-using-the-windows-azure-management-libraries-for-net</link><a10:author><a10:name /></a10:author><title>Managing Web Sites from Web Sites using the Windows Azure Management Libraries for .NET</title><description>&lt;p&gt;I received an email from Hanselman this week, a forward of an email he received after posting his [much-appreciated and far too kind] &lt;a href="http://www.hanselman.com/blog/PennyPinchingInTheCloudAutomatingEverythingWithTheWindowsAzureManagementLibrariesAndNET.aspx" target="_blank"&gt;blog post&lt;/a&gt; on WAML. The email was from a community member experiencing a behavior when trying to use WAML to create web sites (or manage their existing sites) from code running on the server side from another Windows Azure Web Site. I can imagine lots of user stories when a Web Site could be used with WAML:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I’m a software-as-a-service application business owner. I want to give users a form that, once filled out and submitted, will take user input and create a new web site and copy my application’s code into their web site  &lt;li&gt;My web application needs to create a storage account when it first starts up  &lt;li&gt;My web application needs to create a SQL Database when it first starts up&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Automation isn’t limited to the desktop. With WAML you can pick and choose which areas you need to offer and install the appropriate NuGets and get up and running quickly. There are a few caveats, however, mostly deliberate design decisions based on the basic ideas of cryptography and data integrity. I spent a few hours this week talking to my good friends in the Web Sites team, along with my own awesome team in Azure Developer Experience, to work through some certificate-loading problems I was seeing in Web Sites. The ability to use a management certificate is &lt;strong&gt;pretty important&lt;/strong&gt; when programming against WAML (yes, AAD support is coming soon in WAML). I’ve seen a &lt;a href="http://stackoverflow.com/questions/18959418/site-in-azure-websites-fails-processing-of-x509certificate2" target="_blank"&gt;few&lt;/a&gt; &lt;a href="http://social.msdn.microsoft.com/Forums/windowsazure/en-US/29b30f25-eea9-4e8e-8292-5ac8085fd42e/access-to-certificates-in-azure-web-sites?forum=windowsazurewebsitespreview" target="_blank"&gt;different&lt;/a&gt; forums mention similar issues. Given WAML makes use of certs, and sometimes using certs on the server side in the Web Site can be a little tricky, I thought a walk-through was in order.&lt;/p&gt; &lt;h3&gt;How Meta. A Web Site that Makes Web Sites.&lt;/h3&gt; &lt;p&gt;I’ve created a Visual Studio 2013 solution, with an ASP.NET project in the solution, that I’ll be using for this blog post. &lt;a href="https://github.com/bradygaster/WamlAndWaws" target="_blank"&gt;The code for this site is on GitHub&lt;/a&gt;, so go grab that first. The code in the single MVC controller shows you a list of the sites you have in your subscription. It also gives you the ability to create a new site. The results of this look like the code below. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/80afcb2f-5247-4474-adf4-14d091220106.png"&gt;&lt;img title="SNAGHTML2c3c0b1" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML2c3c0b1" src="http://www.bradygaster.com/posts/files/da307491-8124-41d5-9947-843562295d80.png" width="601" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here’s a snapshot of the code I’m using in an MVC controller to talk to the Windows Azure REST API using WAML. &lt;/p&gt; &lt;p&gt;There are a few areas that you’ll need to configure, but I’ve made all three of them &lt;em&gt;appSettings&lt;/em&gt; so it should be relatively easy to do. The picture below shows all of these variables. Once you edit these and work through the certificate-related setup steps below, you’ll have your very own web site-spawning web site. You probably already have the first of these variables but if you don’t, &lt;a href="http://www.windowsazure.com/en-us/pricing/free-trial/" target="_blank"&gt;what are you waiting for&lt;/a&gt;?&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/469554a2-7c11-42bc-b31b-69d8239bb958.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/59dafa5f-07cb-44ff-88c7-e30efd03867e.png" width="644" height="114"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once your Azure subscription ID is pasted in you’ll need to do a little magic with certificates. Before we get to all the crypto-magic, here’s the method that the controller calls that prepare WAML for usage by setting up an &lt;strong&gt;X509Certificate&lt;/strong&gt;. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/876e7b41-c551-4d3a-8ad9-7b0456613fae.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/24366bb2-970a-4986-91cc-69037450a947.png" width="644" height="392"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I’d been using a base 64 encoded string representation of the certificate, but that wouldn’t work on top of Web Sites. Web Sites needs a real physical certificate &lt;strong&gt;file&lt;/strong&gt;.Which makes sense – you want for access to your subscription to be a difficult thing to fake, so this configuration you have to go through once to secure the communication? It’s worth it. The code below then takes that credential and runs some calls to the WebSiteManagementClient object, which is a client class in the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.WebSites" target="_blank"&gt;Web Sites Management Package&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/59832c25-3881-45f2-be40-01d01ac9d822.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/830b88be-259a-48f8-8a47-fbd256abb93f.png" width="608" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This next part is all about cryptography, certificates, and moving things around properly. It’s not too complicated or deep into the topics, just a few steps you should know just in case you need to do this again. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Don’t worry. If it were complicated, you wouldn’t be reading about it here. &lt;/p&gt;&lt;/blockquote&gt; &lt;h3&gt;Creating a Self-Signed Cert and Using the PFX and CER Files Properly with Web Sites&lt;/h3&gt; &lt;p&gt;I’ll run through these steps pretty quickly, with pictures. There are &lt;a href="http://technet.microsoft.com/en-us/library/cc753127(v=ws.10).aspx" target="_blank"&gt;many&lt;/a&gt; &lt;a href="http://www.selfsignedcertificate.com/" target="_blank"&gt;other&lt;/a&gt; &lt;a title="There is an inside joke to this." href="http://www.bradygaster.com/post/running-ssl-with-windows-azure-web-sites" target="_blank"&gt;great&lt;/a&gt; &lt;a href="http://msdn.microsoft.com/en-us/library/bfsktky3(v=vs.110).aspx" target="_blank"&gt;resources&lt;/a&gt; online on how to create certificates so I’m not going to go into great detail. This section has three goals:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a self-signed certificate  &lt;li&gt;Create a *.CER file that I can use to upload to the Windows Azure portal as a management certificate  &lt;li&gt;Use the *.PFX file I created on the way to creating my *.CER file on my web site&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;To create the self-signed cert open up IIS Manager (some would prefer to do this using &lt;a href="http://msdn.microsoft.com/en-us/library/bfsktky3(v=vs.110).aspx" target="_blank"&gt;makecert.exe&lt;/a&gt;) and click the &lt;strong&gt;Server Certificates &lt;/strong&gt;feature. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/27196139-b381-4404-849c-f11ec5308530.png"&gt;&lt;img title="SNAGHTML2649c9d" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML2649c9d" src="http://www.bradygaster.com/posts/files/90c8b240-2a1d-4585-a816-165184c31a42.png" width="644" height="337"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then, click the &lt;strong&gt;Create Self-Signed Certificate&lt;/strong&gt; action link. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f04ce707-4756-45e2-8432-2e31f9dc4362.png"&gt;&lt;img title="SNAGHTML267808a" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML267808a" src="http://www.bradygaster.com/posts/files/73d41b16-344f-41cc-86cb-db29317551cb.png" width="644" height="325"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You get to walk through a wizard:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5d030a1e-dc44-4dad-a796-ee423f555090.png"&gt;&lt;img title="SNAGHTML269d26a" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML269d26a" src="http://www.bradygaster.com/posts/files/d5e06328-49ab-4118-bfb8-e1b69ec2f64a.png" width="637" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then the new certificate will appear in the list:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/6e723760-305e-43ab-a420-480f396f37f3.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/7270f81f-8412-44fe-89c2-789bf4a2078e.png" width="461" height="359"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select it and click the &lt;strong&gt;Export&lt;/strong&gt; action link:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/1869d7ef-a5eb-45e6-a502-83dcec07ba86.png"&gt;&lt;img title="SNAGHTML26c6682" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML26c6682" src="http://www.bradygaster.com/posts/files/c9b809da-7b87-4a96-965f-9007bc633469.png" width="644" height="325"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now that you’ve got the PFX file exported, it’d be a good time to drop that into the web site. Drop the PFX file into the &lt;strong&gt;App_Data &lt;/strong&gt;folder…&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/b4d57aab-417c-42a5-af0a-64f4db62c272.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/eed5822c-b88f-4906-b493-150b0734460f.png" width="644" height="419"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the .PFX is in the App_Data folder, copy it’s location into the &lt;strong&gt;Web.Config&lt;/strong&gt; or in the portal’s &lt;strong&gt;configure &lt;/strong&gt;tab. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/e25d2ca6-1004-4794-95e8-861c20b8674d.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/2d6c276f-6727-4726-b489-75155202916a.png" width="644" height="333"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Double-click the PFX file. Run through the subsequent steps needed to import the PFX into the personal certificate store. Once the wizard completes you’ll have the certificate installed, so the final step will be to export it. Open up your user certificates tile. I always find mine using the new Modern Tiles method.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/89c97bed-6f68-43db-a33e-968ac2fbd7ca.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/bfdfc0b3-b4a8-4c9d-9d89-b1273e5daca8.png" width="347" height="234"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Open up the file in the user certificate manager, and select the new certificate just created. Select the &lt;strong&gt;Export&lt;/strong&gt; context menu.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/76817d2b-d866-46ed-9d6a-847f93f656d7.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/705c6685-4c0a-433b-a544-e8b8a8f6ffdf.png" width="644" height="267"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select the DER option. This is when you’ll output a CER file that can be used as your management certificate in the next step. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/9fe5b3df-670a-4f91-9997-590a728e786b.png"&gt;&lt;img title="SNAGHTML28b0253" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML28b0253" src="http://www.bradygaster.com/posts/files/63b5d8d3-438f-4c43-8db5-414288353c6d.png" width="497" height="484"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Save the output *.CER file on your desktop. With the PFX file set up in the web site and this file created, we’re almost finished.&lt;/p&gt; &lt;h3&gt;Uploading the Management Cert to the Portal&lt;/h3&gt; &lt;p&gt;With the CER file ready, all one needs to do to upload it is to go to the Management Portal. So long as the web site you’re running WAML &lt;strong&gt;in&lt;/strong&gt; is trying to access resources in the same subscription, everything should work. Go to the management portal, select &lt;strong&gt;Settings &lt;/strong&gt;from the navigation bar, and then select the &lt;strong&gt;Management Certificates&lt;/strong&gt; navigation bar.Click the Upload button to upload the &lt;strong&gt;*.CER file only. &lt;em&gt;NOT &lt;/em&gt;the PFX, yet!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/0d5d1ac6-0141-4e00-9fd6-ded0c112fadc.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/18ca6bc6-006c-443a-a130-858d4cfe85e0.png" width="244" height="85"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the CER is uploaded it’ll appear in the list of management certificates.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/f332c1a6-0231-4401-afa2-61cb5e285d15.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/2014cab4-8e75-4e6c-a791-0f42d5adb2b1.png" width="644" height="324"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With those configuration changes in place, I can finish the configuration by adding the password for the PFX to the Web.Config file. This part isn’t perfect, but it’s just to get you started with the difficult connecting-of-the-dots that can occur when embarking on a new feature or prototype. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/2c5ac274-4da7-4672-a041-adf612eafd8b.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/b99a0f0b-d111-4c82-bb20-5b4a4b3b51f5.png" width="644" height="114"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Deploying the Site&lt;/h3&gt; &lt;p&gt;The last step, following the configuration and certificates being set up, is to deploy the site. I can do that from right within Visual Studio using the publish web features. Here, I’m just creating a new site. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/75e81a90-2ad5-4121-b8bc-1dcc762d4c0c.png"&gt;&lt;img title="SNAGHTML2a45cae" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML2a45cae" src="http://www.bradygaster.com/posts/files/82078571-9c9a-439b-a7fc-c7a95a0bdf62.png" width="484" height="332"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once the site deploys and loads up in a browser, you can see what capabilities it’ll offer – the simple creation of other Azure Web Sites. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/9add6f22-4989-46e3-8329-a422d24203cc.png"&gt;&lt;img title="SNAGHTML2c01155" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML2c01155" src="http://www.bradygaster.com/posts/files/b1da4ac4-6a13-42d3-bcdd-fd2d3efcdc05.png" width="562" height="485"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;/h3&gt; &lt;h3&gt;Summary&lt;/h3&gt; &lt;p&gt;This article covers more how to prepare a web site with the proper certificate setup and contains code that explains the actual functional code. I’d welcome you to take a look at the repository, submit questions in the comments below, or even fork the repository and come up with a better way, or to add features, whatever you think of. Have fun, and happy coding!&lt;/p&gt;</description><a10:updated>2014-12-14T19:05:26Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/keep-outlook-open-but-keep-it-quiet</guid><link>http://www.bradygaster.com/post/keep-outlook-open-but-keep-it-quiet</link><a10:author><a10:name /></a10:author><title>Keep Outlook Open, but Keep it Quiet</title><description>&lt;p&gt;The stories you hear about working at Microsoft and how we send and receive lots of email is true. It is more true than you could imagine. I’ve been an &lt;strike&gt;addicted&lt;/strike&gt; avid user of Outlook since I’ve had a job but there are some features I’ve not explored with any depth. Even with software, I sometimes strive to live a more Buddhist lifestyle and deny myself the investigation for features that I fear I will not find. That whole &lt;strong&gt;expecting it to be there and being disappointed when it isn’t&lt;/strong&gt; thing is too depressing for me to go through, so I choose to minimize my expectations and not go hunting for features my life would benefit from having. No, really. I’m just lazy. No but seriously, &lt;strong&gt;I have this obsessive rule about not seeing a scrollbar in my Inbox. &lt;/strong&gt;Each day when the little scrollbar icon appears, shortening the width of my Inbox by 20 (or so) pixels, I cringe. I hate having more-than-a-scroll emails in my Inbox. &lt;/p&gt; &lt;p&gt;The feature I’ve wanted (ever since I got the feature of not having to refresh my inbox) is to tell my inbox to stop auto-refreshing. I’d never gone hunting for it. Tonight, I did, and I found it in 5 minutes. I like this feature so much I’m going to show it off. You’ve probably seen this already, but get this – &lt;strong&gt;you can leave Outlook open and prevent it from checking your mail. &lt;/strong&gt;That way, you can clean out your Inbox while simultaneously preventing it from refilling itself as you try to clean it out. &lt;/p&gt; &lt;p&gt;Here’s the trick. On your Outlook ribbon in any of the modes – email, calendar, tasks, whatever – click the &lt;strong&gt;Send/Receive&lt;/strong&gt; ribbon. Then, toggle the &lt;strong&gt;Work Offline&lt;/strong&gt; feature. I’ve highlighted my favorite part of the feature – the “if you do not want to receive new mail” message. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/c6e676c8-07fe-49fc-b6dc-27fb18e77a4c.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/7e68f239-8b6c-40f7-a7b3-a678f849bf12.png" width="644" height="258"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As soon as you do this, Outlook will stop checking your email for you. The status bar reflects my newfound joy, knowing I can keep my old friend open but quiet as I prune away towards inbox-zero Nirvana. In the status bar, I can see that I’m working offline. That way, once I get jittery in 15 minutes after not having received any new email, I can just look down and see why no one’s emailing me. I’ve temporarily put the incoming world on hold. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5281d626-2722-4526-882c-8ef2f8095b75.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/f030aefa-7a60-47e4-8aaa-e530d70f88af.png" width="770" height="26"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Whenever I’m ready to stop being anti-social, I can go back to the Send/Receive tab and see that I’m hiding via the greyed-out Work Offline toggle button. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/2066f26e-03f1-4616-847e-1ff8d8ef93e3.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/0dbc7b1f-f196-487e-9c87-cf8f0c3bd6b7.png" width="579" height="257"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once I click that, Outlook connects and starts updating my folders…&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/6c280b85-fa00-4d86-96bc-ce3cd10ad405.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/74d5be4f-e52b-442d-ad4e-e9cd89227803.png" width="673" height="26"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After a few seconds everything is updated and I’m back online, with new fresh email to read…&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/e65dd82b-36f0-45cc-bcc6-cbc493d2f2d3.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/7e061ccc-cd3d-42af-ac03-5d4f513e84da.png" width="669" height="26"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You probably already knew about this feature, but I’m so excited I had to share it. Thanks, Outlook team, for being awesome. &lt;/p&gt;</description><a10:updated>2014-11-11T02:57:50Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/managing-windows-azure-sql-databases-using-the-management-libraries-for-net</guid><link>http://www.bradygaster.com/post/managing-windows-azure-sql-databases-using-the-management-libraries-for-net</link><a10:author><a10:name /></a10:author><title>Managing Windows Azure SQL Databases Using the Management Libraries for .NET</title><description>&lt;p&gt;The Windows Azure SDK team has been working hard to finish up more of the Windows Azure Management Libraries so you can use .NET code to manage your Windows Azure resources, and today’s blog will highlight one of the newest additions to the WAML stack. Today I’ll introduce you to the &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.Sql" target="_blank"&gt;Windows Azure SQL Database Management Library&lt;/a&gt;. We released the SQL Management Library this week, and it’s loaded with features for managing your Windows Azure SQL Databases. Like the rest of the management libraries, the SQL library provides most of the functionality you’d previously only been able to do using the Windows Azure portal, so you’ll be able to write .NET code to do pretty much any level of automation against your SQL databases and servers. &lt;/p&gt; &lt;p&gt;Here’s a list of some of the features supported by the new SQL library:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create, update, delete, and list your Windows Azure SQL Servers  &lt;li&gt;Create, update, delete, and list your Windows Azure SQL Databases  &lt;li&gt;Create, update, delete, and list your Windows Azure SQL Servers’ Firewall Rules  &lt;li&gt;Import and Export SQL databases to &amp;amp; from Windows Azure Blob Storage&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Let’s dive in to some of these features by exploring their usage in the sample code I’ve written to demonstrate all these cool new WAML features. &lt;a href="https://github.com/bradygaster/WindowsAzureManagementLibraries.Demos" target="_blank"&gt;I’ve put this code up in GitHub&lt;/a&gt; so you can fork it, add your own functionality and test cases, and &lt;strong&gt;[please, feel free]&lt;/strong&gt; spruce up the UX if you’re so inclined. The code for this demonstration includes the demonstrations from my previous blog posts on WAML, so if you’ve been wanting to see that code, you can dive in as of this latest installment in the blog series. &lt;/p&gt; &lt;p&gt;The WPF app shown below sums up today’s code demonstration for using the SQL management library. Once I select my publish settings file and select the subscription in which I want to work WAML makes a REST call out to Windows Azure to retrieve the list of database servers in my subscription. I data-bind a list view in the WPF app with the list of servers. Next to each you’ll find buttons to allow for convenient access to the databases residing on the servers, as well as a button giving you access to the servers’ firewall rules. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/12567c75-14bb-4d9c-8a90-2bde28584948.png"&gt;&lt;img title="SNAGHTML1a48f73" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="SNAGHTML1a48f73" src="http://www.bradygaster.com/posts/files/5b97831e-b9fe-4043-a9a4-5d537f044d34.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Creating the SQL Management Client&lt;/h3&gt; &lt;p&gt;As with the other demonstrations, the first step is to create an instance of the &lt;strong&gt;SqlManagementClient&lt;/strong&gt; class using a subscription ID and an X509 Certificate, both of which are available in my publish settings file. The code below is similar to the manner in which the other management clients (Compute, Infrastructure, Storage, and so on) are created. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/888d74d5-9c23-4079-998a-bdbc68d98e51.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/dd043dcb-df67-4b33-b9af-7d0a0fe649fc.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;SQL Server Operations&lt;/h3&gt; &lt;p&gt;The code below shows how, in two lines of code, I can get back the list of servers from my subscription. Once I’ve got the list, I set a property that’s data-bound in the WPF app equal to the list of servers the REST API returned for my subscription. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/088407c6-a4a0-4f2d-a3cd-39a8f59257fe.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/0d27bf16-1fb7-4fc9-9a88-4e726b2fc807.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Database Operations&lt;/h3&gt; &lt;p&gt;Once a user clicks the “Databases” button in one of the server lines in the WPF app a subsequent call is made out to the Windows Azure REST API to pull back the list of databases running on the selected server.&amp;nbsp; &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/96f32afa-c577-4b29-aef4-c86c2a0d443f.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/62f62191-7157-4cf8-b6e2-4c4c9ddc58d0.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can do more than just list databases using the SQL management library – you have full control over the creation and deletion of databases, too, using the easily-discoverable syntax. Below, you’ll see how easy it is to figure out using nothing more than the Intellisense features of Visual Studio to figure out how to create a new database. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/944b78d8-2b77-42c1-a676-4d3ef95696f8.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/a9fc744e-187a-4e0f-b63b-f11b20a8c7e3.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Firewall Rules&lt;/h3&gt; &lt;p&gt;You no longer need to load up a server in the portal to manage your firewall rules – you can do that using the SQL management library, too. The code below demonstrates how easy it is to retrieve the list of firewall rules for a particular SQL Servers. When the user hits the “Firewall Rules” button in the WPF app, this code runs and loads up the rules in the UX. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/9050ab5c-3dda-4884-8ac3-0cae31446d70.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.bradygaster.com/posts/files/395b0df7-668b-4e56-9475-00cc43086b69.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In addition to the SQL library, we’ve also released the preview libraries for &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.MediaServices" target="_blank"&gt;Media Services&lt;/a&gt; and &lt;a href="http://www.nuget.org/packages/Microsoft.WindowsAzure.Management.ServiceBus/" target="_blank"&gt;Service Bus&lt;/a&gt;, too. We’re continuing to improve the landscape of WAML every day, and have some convenience features we’re adding into the overall WAML functionality set, too. Keep watching this blog for more announcements and tutorials on the Windows Azure Management Libraries. As always, if you have any suggestions or ideas you’d like to see bubble up in the management libraries, feel free to post a comment below. &lt;/p&gt; &lt;p&gt;Happy Coding!&lt;/p&gt;</description><a10:updated>2014-11-06T08:22:50Z</a10:updated></item><item xml:base="http://www.bradygaster.com/"><guid isPermaLink="true">http://www.bradygaster.com/post/using-publish-settings-files-to-authenticate-the-management-libraries</guid><link>http://www.bradygaster.com/post/using-publish-settings-files-to-authenticate-the-management-libraries</link><a10:author><a10:name /></a10:author><title>Using Publish Settings Files to Authenticate the Management Libraries</title><description>&lt;p&gt;I am not very good at cryptography, even the most fundamental basic aspects of it. I’m humble enough to be willing to admit this (or smart enough to put it out there so folks don’t ask me questions about it, take your pick). That said, the idea of working with X509 Certificates in my code is something I obviously don’t relish doing. It’s a necessary thing, however, when working with various authentication paradigms, like the traditional method of attaching certificates to individual requests I’d like to make to the Windows Azure API. Since the first implementation of the credential-passing logic with the Management Libraries use X509 certificates, I needed to come up with an easy way of testing my code with management certificates. Luckily, the *.publishsettings files one can download from Windows Azure via techniques like the PowerShell cmdlets’ &lt;a href="http://msdn.microsoft.com/en-us/library/dn408501.aspx" target="_blank"&gt;Get-AzurePublishSettingsFile&lt;/a&gt; command provides a Base-64 encoded representation of an X509 Certificate. This post will walk through how I use the information in a publish settings file to authenticate my requests with the management libraries. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;You won’t want to put your publish settings files onto a web server, store the information in these files in your code, or anything like that. This is just for demonstration purposes, and makes the assumption you’re working on your own machine, controlled by you, while you’re logged into it in a nice and secure fashion. If some nefarious villain gets ahold of your publish settings file they could theoretically authenticate as you. Point is, be careful with these files and with the strings embedded into them. Keep them somewhere safe and secure when you’re not using them. &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Once you’ve downloaded a publish settings file to your computer, you can write code that will open the files up and parse them. Don’t worry, this is pretty easy, as the files are just normal XML files. So, you can use XLinq or any other XML-parsing techniques to read the values out of the file. In my example code for this and the other posts I’m writing on the topic, you’ll notice that I’ve provided a menu you can use to open up a publish settings file. A screen shot of this application running is below:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/ece4dea4-ccb7-476f-9d7e-59e085271c58.png"&gt;&lt;img title="Selecting the publish settings file" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Selecting the publish settings file" src="http://www.bradygaster.com/posts/files/7d003e7d-e103-46bd-b53f-3f7892209422.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When the user clicks this menu, I simply throw open a new Open File Dialog object and allow the user to select a *.publishsettings file from their machine. The screen shot below demonstrates this. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/70261b7b-d46d-4549-82ca-07ddd272e507.png"&gt;&lt;img title="Opening the file" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Opening the file" src="http://www.bradygaster.com/posts/files/98a9b6f7-9315-47d5-beb7-4909353535b3.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When the user selects the file the code does just what you’d expect – it opens the file up, parses out the XML, and builds an array of subscription models the rest of my code will use when it needs to make calls out the API via the management libraries. The section of the code below that’s highlighted is doing something pretty simple – just building a list of a model type known as &lt;strong&gt;PublishSettingsSubscriptionItem&lt;/strong&gt; to which I’ll data-bind a list of child menu items in my form. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/026f6f96-014a-42fa-a998-a002f704763e.png"&gt;&lt;img title="Loading up the subscriptions" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Loading up the subscriptions" src="http://www.bradygaster.com/posts/files/bbe7877b-c815-4364-864b-7c29cc37c9fb.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The XAML code that does this data-binding logic is below. This sample code (which will soon be available for your viewing pleasure) shown below does the data-binding magic. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/a80e6eca-8f9f-416e-a217-0c7792b4a1c0.png"&gt;&lt;img title="Data-binding the list of subscriptions" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Data-binding the list of subscriptions" src="http://www.bradygaster.com/posts/files/cbf4e75e-fcaf-4b9d-a271-ff172538c0f8.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once this code is in place and I select a publish settings file, the menu will be augmented with the list of subscriptions found in that publish settings file.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/cb90a1b8-ee51-4405-916e-4a768cf1386d.png"&gt;&lt;img title="The data-bound list" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="The data-bound list" src="http://www.bradygaster.com/posts/files/6bc1f2f2-054a-4964-b9e3-d755f90bcf41.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Since I’ve got my XAML wired up in a nice command-like manner, selecting any of those items will fire the &lt;strong&gt;SelectSubscriptionCommand&lt;/strong&gt; method in my form’s view model class. That method in turn sets the current selected subscription so that it can be used later on by management library client classes that need the information. The code below, which is the handler method for that command, does this magic. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/7998200f-204d-4d6a-be92-46747751fb8d.png"&gt;&lt;img title="Setting the selected subscription" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Setting the selected subscription" src="http://www.bradygaster.com/posts/files/818b004b-78e5-4bb3-b6e6-aae4a80f8bdf.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now, whenever I need to run any management library code that reaches out to the Windows Azure REST API, I can use the properties of my selected subscription to set up the two elements of data each client needs – the subscription ID and the Base-64 encoded management certificate. The code below does exactly this to make a call out to the REST API to get the list of supported regions in the Windows Azure fabric. &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.bradygaster.com/posts/files/5684cfe4-04a0-4c43-9ff3-9b983edb4e89.png"&gt;&lt;img title="Using the selected subscription" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Using the selected subscription" src="http://www.bradygaster.com/posts/files/6f1c0fcd-a5fa-4bc5-98b6-9de76081872a.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Thanks to my good buddy and evil coding genius &lt;a href="https://twitter.com/mlorbetske" target="_blank"&gt;Mike Lorbetske&lt;/a&gt; for MVVM-ifying this code so the demos can be easily added to support the upcoming blog posts in this series. I was mixing MVVM techniques and nasty, old-fashioned codebehind brutality together, and Mike came in just in time and helped me make this code a little more robust using MEF and some other tricks. &lt;/p&gt;</description><a10:updated>2014-04-27T23:52:30Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20150203/package-signing</guid><title>Package Signing</title><description>&lt;p&gt;Package signing has been a major discussion point for a long time in the NuGet ecosystem. However, the NuGet Team didn’t want to rush into an implementation and end up creating something that restricted the ecosystem unnecessarily. Well, we now think we are ready to begin a process to introduce Package Signing, and we want to share our plans with the community so you can see what we’re thinking and give us feedback.&lt;/p&gt;

&lt;h2 id="goals"&gt;Goals&lt;/h2&gt;

&lt;p&gt;Up until now, the transfer of packages was secured from NuGet.org down to your machine, and from publisher’s machines up to NuGet.org using TLS/SSL. This has served us fairly well so far, but it suffers from a few issues:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It is dependent upon the NuGet server providing a secure connection. NuGet.org does so, but others may not.&lt;/li&gt;
  &lt;li&gt;It is dependent upon the security of NuGet.org itself. If NuGet.org is compromised, all bets are off and verification becomes very difficult (&lt;a href="http://blog.rubygems.org/2013/01/31/data-verification.html"&gt;RubyGems had an issue like this recently&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;If you use a server or file share which mirrors packages from NuGet.org, you must rely on the security of that server.&lt;/li&gt;
  &lt;li&gt;There is no way for a publisher to easily communicate to users that their credentials have been compromised and their packages should no longer be trusted.&lt;/li&gt;
  &lt;li&gt;The “multi-source” model in NuGet means packages can be downloaded from any of your configured sources. Nothing ensures that the package you download is from the same source you initially installed it from.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Given these issues, we came up with a few goals for a Package Signing system:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;After a package consumer installs a package, we want the system to be able to ensure that all future downloads of that package come from the same publisher.&lt;/li&gt;
  &lt;li&gt;When a consumer updates a package, we want the same assurance: That the new version is from the same publisher.&lt;/li&gt;
  &lt;li&gt;These assurances should be made external to the server hosting the package, meaning the package can be downloaded from any server and the assurance can still be verified.&lt;/li&gt;
  &lt;li&gt;Create a signing infrastructure that doesn’t restrict us from adding richer functionality later.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An important &lt;strong&gt;non-goal&lt;/strong&gt;: Once the package is on your local hard drive, we don’t think package signatures should play a role in future usage of that package. The contents of NuGet packages can already be signed using Authenticode and operating system policies can be applied to prevent the usage of unsigned or untrusted binaries. We are only trying to secure the transmission of the physical &lt;code&gt;.nupkg&lt;/code&gt; file from the author to your local drive.&lt;/p&gt;

&lt;h2 id="what-were-actually-trying-to-do"&gt;What we’re actually trying to do&lt;/h2&gt;

&lt;p&gt;It’s important here to stop for a second and clarify what we’re actually trying to do. We are not trying to provide a system that makes any claims as to the &lt;em&gt;authenticity&lt;/em&gt; of a package. We are only making assertions about the &lt;em&gt;identity&lt;/em&gt; of a package.&lt;/p&gt;

&lt;p&gt;This signing system is not trying to tell you that NuGet can verify that a package is the right version of Newtonsoft.Json, from James Newton-King. Instead, we can say that it’s Newtonsoft.Json from someone in control of the private key for some certificate &lt;em&gt;X&lt;/em&gt;. Actually verifying that James Newton-King is in control of that certificate is a secondary process that we are not providing here. That may be something we can add to this system later, but it is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; a primary goal of the system at the moment. More importantly, once you’ve gotten the package and verified that it works for your scenarios, you can be assured that future versions are from the same source.&lt;/p&gt;

&lt;p&gt;Our goal is to give package consumers the tools they need to make those identity decisions, and to ensure that once they have chosen to trust a particular package, we always deliver them the package they expect.&lt;/p&gt;

&lt;h2 id="implementation"&gt;Implementation&lt;/h2&gt;

&lt;p&gt;An easy technical solution to all of our goals would be to use &lt;a href="http://msdn.microsoft.com/en-us/library/ie/ms537359%28v=vs.85%29.aspx"&gt;Authenticode&lt;/a&gt; to sign NuGet packages. This would solve most of the problems above (and would even solve some of the authenticity issues above), and is likely a good solution for large corporate publishers like Microsoft. Unfortunately, it is not suitable for Open-Source developers (who are a major part of our ecosystem) due to the prohibitive financial cost of Code Signing certificates. Also, Authenticode is a system designed for use on Microsoft Windows platforms, and we are targetting cross-platform audiences using ASP.NET 5. It is possible to implement Authenticode on those platforms, but given the other issues, it seems like Authenticode is not the ideal solution here. Instead, we developed our own system (inspired by Authenticode) that is a little more tailored to the unique aspects of the NuGet ecosystem.&lt;/p&gt;

&lt;p&gt;First, we will provide tools to allow publishers to manage their own signing certificates, without requiring Root CAs. If you have, or want to get, a certificate from a real Code Signing CA, you can use it with this system. However, you are not required to do so. We will provide tools to manage these certificates and use them to sign packages.&lt;/p&gt;

&lt;p&gt;We will also provide tools to generate signatures for NuGet packages using a signing certificate. The signature itself will be stored in a separate file and can be transferred up to NuGet servers compatible with API v3 as well as file shares. We use the &lt;a href="https://tools.ietf.org/html/rfc5652"&gt;CMS&lt;/a&gt; format for encoding the digital signature. The signature is computed over the entire package ZIP file, including the nuspec and all metadata. This does mean that editing a signed package’s metadata (description, etc.) becomes more complicated, but we have some ideas for allowing authors to “re-sign” modified packages.&lt;/p&gt;

&lt;p&gt;When a user installs a signed package using the NuGet Dialog, the signature will be verified against the file. This verification is minimal, we will just be checking that the hashes actually match up, nothing about the certificates will be verified during this process. Assuming that verification completes, we will write the package into project.json/packages.config as before, but we will include some additional data about the certificates used to sign the package (this is based on the &lt;a href="https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning"&gt;Public Key Pinning&lt;/a&gt; technique commonly used in SSL). The exact format is described in the spec, linked at the end of this post.&lt;/p&gt;

&lt;p&gt;In the future, whenever NuGet downloads that package for that project, it will do the following verification:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the signature for the package NuGet downloaded cannot be found, it will be rejected and an error will be raised.&lt;/li&gt;
  &lt;li&gt;If the signature for the package NuGet downloaded is invalid (hashes don’t match), it will be rejected and an error will be raised.&lt;/li&gt;
  &lt;li&gt;If the package NuGet downloaded is not signed by the same publisher, it will be rejected and an error will be raised.
    &lt;ol&gt;
      &lt;li&gt;Note: We say “publisher” here not “key”. The publisher can, and should, rotate keys frequently as good security practice. See the spec, linked at the end of this post, for more details on how we do this securely.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;If the package NuGet downloaded is was signed by a certificate that was revoked or expired at the time it was signed, it will be rejected and an error will be raised
    &lt;ol&gt;
      &lt;li&gt;Note: The time the signature was &lt;strong&gt;&lt;em&gt;made&lt;/em&gt;&lt;/strong&gt; is used here, &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; the time of verification. You won’t have to reissue old packages just because your certificate expired. We will encourage the use of &lt;a href="http://en.wikipedia.org/wiki/Trusted_timestamping"&gt;Trusted Timestamping&lt;/a&gt;, which is a service provided for free by most issuers of code-signing certificates, to record the time of signing. This is very similar to how Authenticode deals with the same problem.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This will also happen when NuGet updates the package. If the publisher has changed, the user warned about the change and given the option to approve it (similar to the way an SSH client presents the server’s public key to the user for approval). As a NuGet publisher, it will be your responsibility to safeguard your key. If you lose your root certificate key, users will have to uninstall and reinstall your package when you release a new version with a new key. We will provide guidance and tools to backup your key in a secure manner.&lt;/p&gt;

&lt;h2 id="this-seems-familiar"&gt;This seems familiar…&lt;/h2&gt;

&lt;p&gt;Ok, we’re entering slightly more controversial territory here :). If you think this system sounds a little like &lt;a href="http://msdn.microsoft.com/en-us/library/wd40t7ad%28v=vs.110%29.aspx"&gt;Strong-Named Assemblies&lt;/a&gt;, well… you’d be right. Signing a package means effectively adding a piece of identity to the package. It is also true that in order to be truely confident about the identity of the packages you have installed, a package &lt;em&gt;should&lt;/em&gt; embed the full cryptographic identity for the packages it depends on (much like how Strong Named assemblies can only reference other Strong Named assemblies). After all, you are only as secure as your weakest link. However, I think what we’ve come up with is a more appropriate solution for the NuGet ecosystem. Let’s start by going over some of the issues customers have encountered with Strong Names, then I will cover why we think this solution is more appropriate.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Assemblies with the same name but different Public Keys are generally considered to be completely different Assemblies. This is intentional, and occasionally useful, but most of the time it’s not what the user expects.&lt;/li&gt;
  &lt;li&gt;It is &lt;em&gt;extremely&lt;/em&gt; difficult (if not impossible) to substitute an assembly deep in your dependency graph with a different copy that uses a different key.&lt;/li&gt;
  &lt;li&gt;Strong Named assemblies may only depend on other Strong Named assemblies.&lt;/li&gt;
  &lt;li&gt;Strong Naming is deeply embedded in the runtime and prevents applications from running. There is almost nothing you can do (short of turning verification off entirely) to force an assembly to load when it is not properly strong-named. Also, the processes used to force an assembly to load are usually machine-level and are difficult to synchronize across developers in a team.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here’s where we think our system differs:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Under our proposed system, two packages with the same package ID are &lt;strong&gt;always&lt;/strong&gt; expected to be the same package, &lt;strong&gt;regardless&lt;/strong&gt; of the signature. Two packages that differ by signature are interpreted as being different &lt;em&gt;variants&lt;/em&gt; of the same package, not different packages entirely.&lt;/li&gt;
  &lt;li&gt;Because of the way NuGet packages are referenced, it is ALWAYS possible to override a “signed” dependency with a package that is signed with a different key, or even unsigned. In ASP.NET 5, if you depend on &lt;code&gt;Foo&lt;/code&gt; which depends on a signed copy of &lt;code&gt;Bar&lt;/code&gt;, you can just add a direct dependency on &lt;code&gt;Bar&lt;/code&gt; (with any key you want, or even no key at all) and the dependency further down the graph will be overridden by the top-level explicit dependency. Similarly, in packages.config, the indirect dependencies are listed right alongside direct dependencies and you can always remove or change the signature requirement on a specific package reference.&lt;/li&gt;
  &lt;li&gt;We will not be enforcing that signed packages depend solely on other signed packages. This does decrease the security of the system, but as with the previous point, you can always use an explicit dependency to enforce the signature restriction on a normally unsigned package. We will likely warn publishers when they are signing packages if they depend on unsigned packages, but this won’t restrict their ability to publish.&lt;/li&gt;
  &lt;li&gt;This system only affects the download of the &lt;code&gt;.nupkg&lt;/code&gt; file. Once the package is on disk, signatures don’t matter. This means that in the absolute worst case, if you want to just drop a &lt;code&gt;.nupkg&lt;/code&gt; on disk yourself, it &lt;strong&gt;will&lt;/strong&gt; load successfully, regardless of signatures.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We think that as a package consumer, it is extremely useful for you to have some kind of externally-verifiable statement of identity for a package. A package signature gives you that ability (specifically the ability to know: “This is Newtonsoft.Json, as produced by the owner of the private key matching public key X”). Similarly, it is useful for consumers to be able to say “I only want to receive updates for this package from the owner of the private key matching public key X.” However, the main lesson we feel we have learned from the concerns around Strong Naming is that we need to empower the consumer of a package to choose the identities they want to use for all packages in their dependency graph. That’s what we’re trying to achieve with this system. As a developer, you are always in control of the identities of &lt;strong&gt;all&lt;/strong&gt; of your dependencies and can override them &lt;strong&gt;as you see fit&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We are hopeful that we can provide a system in which every NuGet publisher will be willing and easily able to give a cryptographically-sound identity to their packages. Other package management systems such as Maven actually &lt;a href="http://central.sonatype.org/pages/requirements.html"&gt;&lt;em&gt;require&lt;/em&gt; signatures&lt;/a&gt; like these in order to publish to their central repositories. We see the potential for this system to become similarly prolific and if you don’t think you would sign your packages, we really want to know why!&lt;/p&gt;

&lt;h2 id="timeline"&gt;Timeline&lt;/h2&gt;

&lt;p&gt;The main timeline for this feature is ASP.NET 5. We are hoping to have something concrete for use with ASP.NET 5 projects when that platform releases it’s 1.0 version. Support for use in packages.config and the more traditional NuGet workflow will likely come shortly after (but &lt;em&gt;will&lt;/em&gt; come!). Also, we expect that our first pass at this feature will only run on Windows. We are still working out the cross-platform story for signing and verifying packages. Most of the cryptography code we are using right now is implemented &lt;em&gt;inside&lt;/em&gt; the Windows kernel, so we’ll need to work out exactly how we will do it on Mac and Linux (but we &lt;em&gt;will&lt;/em&gt; be supporting those platforms post-RTM).&lt;/p&gt;

&lt;h2 id="spec-and-feedback"&gt;Spec and Feedback&lt;/h2&gt;

&lt;p&gt;A detailed specification of our plan is available &lt;a href="https://github.com/aspnet/Signing/blob/dev/Spec.md"&gt;on the aspnet/Signing repository&lt;/a&gt;, since the initial work is happening in the ASP.NET 5 platform. Please review that as well if you have concerns because they may have been answered there! We really want your feedback here, so please don’t hesitate to comment on this post or in CodePlex!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20150203/package-signing.html" /><a10:updated>2015-02-03T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141203/Introducing-the-powershell-commands-survey</guid><title>Introducing the NuGet PowerShell Commands Survey</title><description>&lt;p&gt;You’ve probably seen the cool announcements from Microsoft about the new &lt;a href="http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community"&gt;Community Edition of Visual Studio&lt;/a&gt; and the upcoming &lt;a href="http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs"&gt;Visual Studio 2015&lt;/a&gt; release in the new year.  We at the NuGet team have been ramping up our tools to support the new Visual Studio with a better visual experience and a better command-line experience.  We’ve also released some information about our upcoming v3 release of our protocol based on &lt;a href="http://json-ld.org/"&gt;JSON-LD&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now we want to do something to stay true to the open-source license of our tool.  We want to ask you for your input about our PowerShell capabilities.  We will review all feedback and make decisions about the future direction of the NuGet PowerShell commands based on the results of this survey. This is an important artifact for us to ensure that we continue to deliver a package manager tool that provides significant value to you.  I promise that we will share the results of the survey and introduce how they fit into our planned roadmap for 2015 and beyond.&lt;/p&gt;

&lt;p&gt;So.. What are you waiting for? Make some clicky clicky noises with your mouse and take our survey at the following location:
&lt;a href="http://www.surveymonkey.com/s/C792HKX"&gt;http://www.surveymonkey.com/s/C792HKX&lt;/a&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141203/Introducing-the-powershell-commands-survey.html" /><a10:updated>2014-12-03T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141112/nuget-3.0-preview</guid><title>NuGet 3.0 Preview</title><description>&lt;p&gt;On November 12, 2014, as part of the Visual Studio 2015 Preview release, we released NuGet 3.0 Preview. This is a big release for us (albeit a preview), and we’re excited to start getting feedback on our changes.&lt;/p&gt;

&lt;h2 id="visual-studio-2012"&gt;Visual Studio 2012+&lt;/h2&gt;

&lt;p&gt;This NuGet 3.0 Preview is included in Visual Studio 2015 Preview. We are working to get preview drops out for Visual Studio 2012 and Visual Studio 2013 very soon. We previously shared our intent to &lt;a href="http://blog.nuget.org/20141002/visual-studio-2010.html"&gt;discontinue updates for Visual Studio 2010&lt;/a&gt;, and we did make that difficult decision.&lt;/p&gt;

&lt;h2 id="brand-new-ui"&gt;Brand New UI&lt;/h2&gt;

&lt;p&gt;The first thing you’ll notice about NuGet 3.0 Preview is our brand new UI. It’s no longer a modal dialog; it’s now a full Visual Studio document window. This allows you to open the UI for multiple projects (and/or the solution) at once, tear the window off to another monitor, dock it however you’d like, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/new-ui.png" alt="The new NuGet UI" /&gt;&lt;/p&gt;

&lt;p&gt;Beyond the usability differences because of abandoning the modal dialog, we also have lots of new features in the new UI.&lt;/p&gt;

&lt;h3 id="version-selection"&gt;Version Selection&lt;/h3&gt;

&lt;p&gt;Perhaps the most requested UI feature is to allow version selection for package installation and update–this is now available.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/version-selection.png" alt="Package Version Selection" /&gt;&lt;/p&gt;

&lt;p&gt;Whether you are installing or updating a package, the version dropdown allows you to see all of the versions available for the package, with some notable versions promoted to the top of the list for easy selection. You no longer need to use the PowerShell Console to get specific versions that are not the latest.&lt;/p&gt;

&lt;h3 id="combined-installedonlineupdates-workflows"&gt;Combined Installed/Online/Updates Workflows&lt;/h3&gt;

&lt;p&gt;Our previous UI had 3 tabs for Installed, Online, and Updates. The packages listed were specific to those workflows and the actions available were specific to the workflows as well. While that seemed logical, we heard that many of you would often get tripped up by this separation.&lt;/p&gt;

&lt;p&gt;We now have a combined experience, where you can install, update, or uninstall a package regardless of how you got the package selected. To assist with the specific workflows, we now have a Filter dropdown that lets you filter the packages visible, but then the actions available for the package are consistent.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/uninstall-package.png" alt="Uninstall a Package" /&gt;&lt;/p&gt;

&lt;p&gt;By using the “Installed” filter, you can then easily see your installed packages, which ones have updates available, and then you can either uninstall or update the package by changing the version selection to see change the action available.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/update-package.png" alt="Update a Package" /&gt;&lt;/p&gt;

&lt;h3 id="version-consolidation"&gt;Version Consolidation&lt;/h3&gt;

&lt;p&gt;It’s common to have the same package installed into multiple projects within your solution. Sometimes the versions installed into each project can drift apart and it is necessary to consolidate the versions in use. NuGet 3.0 Preview introduces a new feature for just this scenario.&lt;/p&gt;

&lt;p&gt;The solution-level package management window can be accessed by right-clicking on the solution and choosing Manage NuGet Packages for Solution. From there, if you select a package that is installed into multiple projects, but with different versions in use, a new “Consolidate” action becomes available. In the screen shot below, &lt;code&gt;Newtonsoft.Json&lt;/code&gt; was installed into the &lt;code&gt;SamplesClassLibrary&lt;/code&gt; with version &lt;code&gt;6.0.4&lt;/code&gt; and installed into &lt;code&gt;SamplesConsoleApp&lt;/code&gt; with version &lt;code&gt;5.0.4&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/consolidate.png" alt="Consolidate Versions" /&gt;&lt;/p&gt;

&lt;p&gt;Here’s the workflow for consolidating onto a single version.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select the &lt;code&gt;Newtonsoft.Json&lt;/code&gt; package in the list&lt;/li&gt;
  &lt;li&gt;Choose &lt;code&gt;Consolidate&lt;/code&gt; from the &lt;code&gt;Action&lt;/code&gt; dropdown&lt;/li&gt;
  &lt;li&gt;Use the &lt;code&gt;Version&lt;/code&gt; dropdown to select the version to be consolidated onto&lt;/li&gt;
  &lt;li&gt;Check the boxes for the projects that should be consolidated onto that version (note that projects already on the selected version will be greyed out)&lt;/li&gt;
  &lt;li&gt;Click the &lt;code&gt;Consolidate&lt;/code&gt; button to perform the consolidation&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="operation-previews"&gt;Operation Previews&lt;/h3&gt;

&lt;p&gt;Regardless of which operation you’re performing–install/update/uninstall–the new UI now offers a way to preview the changes that will be made to your project. This preview will show any new packages that will be installed, packages that will be updated, and packages that will be uninstalled, along with packages that will be unchanged during the operation.&lt;/p&gt;

&lt;p&gt;In the example below, we can see that installing Microsoft.AspNet.SignalR will result in quite a few changes to the project.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/preview.png" alt="Preview Installing SignalR" /&gt;&lt;/p&gt;

&lt;h3 id="installation-options"&gt;Installation Options&lt;/h3&gt;

&lt;p&gt;Using the PowerShell Console, you’ve had control over a couple of notable installation options. We’ve now brought those features into the UI as well. You can now control the dependency resolution behavior for how versions of the dependencies are selected.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/dependency-behavior.png" alt="Dependency Behavior" /&gt;&lt;/p&gt;

&lt;p&gt;You can also specify the action to take when content files from packages conflict with files already in your project.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/file-conflict-action.png" alt="File Conflict Action" /&gt;&lt;/p&gt;

&lt;h3 id="infinite-scrolling"&gt;Infinite Scrolling&lt;/h3&gt;

&lt;p&gt;We used to get quite a bit of feedback on our UI having both the scrolling and paging paradigms when listing packages. It was pretty common to have to scroll to the bottom of the short list, click the next page number, and then scroll again. With the new UI, we’ve implemented infinite scrolling in the package list so that you only need to scroll–no more paging.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-11-12-nuget-3.0-preview/infinite-scrolling.png" alt="Infinite Scrolling" /&gt;&lt;/p&gt;

&lt;h3 id="make-it-work-make-it-fast-make-it-pretty"&gt;Make it Work, Make it Fast, Make it Pretty&lt;/h3&gt;

&lt;p&gt;We are excited to get this new UI out for you to try out. During this Preview milestone, we’ve been following the good old adage of “Make it work, make it fast, make it pretty.” In this preview, we’ve accomplished most of that first goal–it works. We know it’s not quite fast yet, and we know it’s not quite pretty yet. Trust that we’ll be working on those goals between now and the RC release. In the meantime, we would love to hear your feedback about the &lt;em&gt;usability&lt;/em&gt; of the new UI–the workflows, operations, and how it &lt;em&gt;feels&lt;/em&gt; to use the new UI.&lt;/p&gt;

&lt;p&gt;There are a couple of functions that we’ve removed when compared to the old UI. One of these was intentional, and the other one just didn’t get done in time.&lt;/p&gt;

&lt;h4 id="searching-all-package-sources"&gt;Searching “All” Package Sources&lt;/h4&gt;

&lt;p&gt;The old UI allowed you to perform a package search against all of your package sources. We’ve removed that feature in the UI and we won’t be bringing it back. This feature used to perform search operations against all of your package sources, weave the results together, and attempt to order the results based on your sorting selection.&lt;/p&gt;

&lt;p&gt;We found that search relevance is really hard to weave together. Could you imagine performing a search against Google and Bing and weaving the results together? Additionally, this feature was slow, easy to &lt;em&gt;accidentally&lt;/em&gt; use, and we believe it was rarely actually useful. Because of the problems the feature introduced, we received a number of bug reports on it that could never have been fixed.&lt;/p&gt;

&lt;h4 id="update-all"&gt;Update All&lt;/h4&gt;

&lt;p&gt;We used to have an “Update All” button in the old UI that isn’t there in the new UI yet. We will resurrect this feature for our RC release.&lt;/p&gt;

&lt;h2 id="new-clientserver-api"&gt;New Client/Server API&lt;/h2&gt;

&lt;p&gt;In addition to all of the new features in our new package management UI, we’ve also been working on some implementation details for NuGet’s client/server protocol. The work we’ve done is to create “API v3” for NuGet, which is designed around high availability for critical scenarios such as package restore and installing packages. The new API is based on REST and Hypermedia and we’ve selected &lt;a href="http://json-ld.org"&gt;JSON-LD&lt;/a&gt; as our resource format.&lt;/p&gt;

&lt;p&gt;In the NuGet 3.0 Preview bits, you’ll see a new package source called “preview.nuget.org” in the package source dropdown. If you select that package source, we’ll use our new API rather to connect to nuget.org. We’ve made the preview source available in the UI while we continue to test, revise, and improve the new API. In NuGet 3.0 RC, this new API v3-based package source will replace the v2-based “nuget.org” package source.&lt;/p&gt;

&lt;p&gt;Despite the investment we’re putting into API v3, we’ve made all of these new features also work with our existing API v2 protocol, which means they will work with existing package sources other than nuget.org as well.&lt;/p&gt;

&lt;h2 id="new-features-coming"&gt;New Features Coming&lt;/h2&gt;

&lt;p&gt;Between now and 3.0 RTM, we are also working on some fundamental new NuGet features, beyond what you’ll see in the UI. Here’s a short list of salient investment areas:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We’re partnering with the Visual Studio and MSBuild teams to get &lt;a href="http://blog.nuget.org/20141014/in-the-platform.html"&gt;NuGet deeper into the platform&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;We’re working to abandon installation-time package conventions and instead apply those conventions at packaging time by introducing a new “authoritative” &lt;a href="http://blog.nuget.org/20141023/package-manifests.html"&gt;package manifest&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;We’re working to refactor the NuGet codebase to make the client and server components reusable in different domains beyond package management in Visual Studio.&lt;/li&gt;
  &lt;li&gt;We’re investigating the notion of “private dependencies” where a package can indicate that it has dependencies on other packages for implementation details only, and those dependencies shouldn’t be surfaced as top-level dependencies.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="stay-tuned"&gt;Stay Tuned&lt;/h2&gt;

&lt;p&gt;Please keep an eye on &lt;a href="http://blog.nuget.org"&gt;our blog&lt;/a&gt; for more progress and announcements for NuGet 3.0!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141112/nuget-3.0-preview.html" /><a10:updated>2014-11-12T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141023/package-manifests</guid><title>Package Manifests</title><description>&lt;p&gt;As we work on the designs for getting &lt;a href="/20141014/in-the-platform.html"&gt;NuGet in the platform&lt;/a&gt;, it has become clear that &lt;strong&gt;NuGet needs better support for carrying arbitrary artifacts in packages and exposing them for consumption after the initial package installation&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="conventional-manifests"&gt;Conventional Manifests&lt;/h2&gt;

&lt;p&gt;Since NuGet’s initial release, it has supported conventional manifests and only a few concepts.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Assembly references from the &lt;code&gt;\lib&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;Content files from the &lt;code&gt;\content&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;PowerShell scripts from the &lt;code&gt;\tools&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;MSBuild props/targets imports from the &lt;code&gt;\build&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;A &lt;code&gt;README.txt&lt;/code&gt; file at the root of the package to be opened automatically after installation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All other files inside the package are completely ignored and NuGet’s existing design makes it difficult to expand on these concepts or introduce new ones.&lt;/p&gt;

&lt;p&gt;Before we dive into where we think NuGet is going, let’s look closer at what NuGet supports today within its manifests. These are all implemented based on conventions for how the package is laid out–the manifests are not explicitly declared within the &lt;code&gt;nuspec&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="assembly-references"&gt;Assembly References&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;\lib&lt;/code&gt; folder is reserved for assemblies that will get referenced by the project. During installation, NuGet gets the list of assemblies in the &lt;code&gt;\lib&lt;/code&gt; folder and calls the Visual Studio API for adding an assembly reference to each.&lt;/p&gt;

&lt;p&gt;There are a couple of additional features this folder supports.&lt;/p&gt;

&lt;h4 id="target-framework-selection"&gt;Target Framework Selection&lt;/h4&gt;

&lt;p&gt;If you provide a subfolder under &lt;code&gt;\lib&lt;/code&gt; that matches a framework name we recognize, we use that as an applicability filter. When finding references from the package, we’ll choose the best &lt;code&gt;\lib&lt;/code&gt; folder for the project; if none of the folders match, then installation fails.&lt;/p&gt;

&lt;h4 id="deployment-only-assemblies"&gt;Deployment-Only Assemblies&lt;/h4&gt;

&lt;p&gt;If your package needs to carry assemblies that are used only for deployment and don’t need actual Visual Studio/MSBuild references, then you can provide additional configuration within your &lt;code&gt;nuspec&lt;/code&gt; to specific which set of assemblies actually do need references.&lt;/p&gt;

&lt;h3 id="content-files"&gt;Content Files&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;\content&lt;/code&gt; folder includes content files that will be copied into the project, putting those files directly into the project itself. This is how jQuery and other JavaScript/CSS files get into your project from a NuGet package.&lt;/p&gt;

&lt;p&gt;This scenario has come under debate for a couple reasons. Many developers don’t like that &lt;a href="http://nuget.codeplex.com/workitem/1914"&gt;NuGet packages get to specify where&lt;/a&gt; in the project the content items will be placed. Others want to prevent the content files from getting copied into the project at all and &lt;a href="http://nuget.codeplex.com/workitem/1239"&gt;have Package Restore do the work instead&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Content files also support target framework filtering, XML &lt;a href="http://docs.nuget.org/docs/creating-packages/configuration-file-and-source-code-transformations#Configuration_File_Transformations"&gt;transformations for app configuration&lt;/a&gt;, and &lt;a href="http://docs.nuget.org/docs/creating-packages/configuration-file-and-source-code-transformations#Specifying_Source_Code_Transformations"&gt;source code transformations&lt;/a&gt; for replacing tokens with project properties.&lt;/p&gt;

&lt;h3 id="powershell-scripts"&gt;PowerShell Scripts&lt;/h3&gt;

&lt;p&gt;When a package carries an &lt;code&gt;install.ps1&lt;/code&gt; file within its &lt;code&gt;\tools&lt;/code&gt; folder, the script will be run after package installation. An &lt;code&gt;uninstall.ps1&lt;/code&gt; is executed before uninstallation. Lastly, &lt;code&gt;init.ps1&lt;/code&gt; is executed every time the solution is opened (assuming the NuGet PowerShell Console is open). Target framework filters apply to this folder too.&lt;/p&gt;

&lt;p&gt;The mere existence of this feature is a blocker for allowing package installation outside the Visual Studio context. These scripts are executed through our PowerShell Console within Visual Studio, they reference Visual Studio DTE API, and they rely on the MSBuild project being loaded and available.&lt;/p&gt;

&lt;p&gt;This PowerShell capability has always been an escape hatch to allow a package to express something beyond the capabilities NuGet had for assembly references and content files. NuGet has no way of knowing whether these scripts are optional or if they are truly required for the package to work.&lt;/p&gt;

&lt;h3 id="msbuild-imports"&gt;MSBuild Imports&lt;/h3&gt;

&lt;p&gt;NuGet looks in the &lt;code&gt;\build&lt;/code&gt; folder for props and targets files where the filename matches the package id. These are automatically imported into the project (at the top or bottom, respectively) using Visual Studio’s DTE API and applying the target framework filtering. We add the imports in a way that is friendly for Package Restore, but the workflow still isn’t great.&lt;/p&gt;

&lt;p&gt;This props/targets feature was added after we observed it was the most common use of PowerShell &lt;code&gt;install.ps1&lt;/code&gt; scripts. But oddly enough, this feature itself is another escape hatch to allow a package to express something beyond the capabilities NuGet had for assembly references and content files!&lt;/p&gt;

&lt;h3 id="readmetxt"&gt;README.txt&lt;/h3&gt;

&lt;p&gt;If the package has a &lt;code&gt;README.txt&lt;/code&gt; file at the root of the package, NuGet will automatically open this file when the package is installed (directly, not as a dependency). This is the only file we recognize for this feature–we don’t recognize Markdown or HTML files, and there are no conventions for determining applicability of showing this file. We’ve seen requests for conditionally opening this file in certain configurations, but we’ve had to tell those authors just to use PowerShell.&lt;/p&gt;

&lt;h2 id="nuget-package-capabilities"&gt;NuGet Package Capabilities&lt;/h2&gt;

&lt;p&gt;If you were paying attention, you noticed that two of NuGet’s five package conventions exist solely to augment NuGet’s built-in functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Something’s wrong there.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Merging the two extensibility points into one, let’s recap the &lt;em&gt;actual&lt;/em&gt; features NuGet packages offer:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Assemblies: either referenced or deployed&lt;/li&gt;
  &lt;li&gt;Content files: copied into your project&lt;/li&gt;
  &lt;li&gt;Extensibility points for other types of artifacts&lt;/li&gt;
  &lt;li&gt;A readme experience that is too restrictive&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it. If you think about it, it’s pretty amazing that NuGet has had the adoption it has with its functionality boiling down to that.&lt;/p&gt;

&lt;h2 id="revisiting-fundamentals"&gt;Revisiting Fundamentals&lt;/h2&gt;

&lt;p&gt;When we look at the feedback we get from people who have invested heavily in using NuGet, we hear two common themes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;NuGet should resolve the assemblies at build-time instead of install-time&lt;/li&gt;
  &lt;li&gt;NuGet should let package consumers &lt;a href="http://nuget.codeplex.com/workitem/1914"&gt;control how content files are brought in&lt;/a&gt; from packages, or &lt;a href="http://nuget.codeplex.com/workitem/1239"&gt;not bring them in&lt;/a&gt; at all&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The feedback on the install-time actions goes all the way back to &lt;a href="/20141010/nuget-is-broken.html"&gt;NuGet’s initial design&lt;/a&gt; and this is being revisited as we move into the platform, at least for the handling of assemblies from the &lt;code&gt;\lib&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;It’s time to revisit the fundamentals of what is carried inside a NuGet package and design a new package manifest.&lt;/p&gt;

&lt;h3 id="goals"&gt;Goals&lt;/h3&gt;

&lt;p&gt;There are several salient goals for creating a new package manifest design.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Enable build-time manifest discovery and selection&lt;/li&gt;
  &lt;li&gt;Make NuGet ignorant of target frameworks so that it doesn’t have to be updated every time Xamarin or Microsoft adds a new framework&lt;/li&gt;
  &lt;li&gt;Allow applicability filters beyond target framework, including configuration, architecture, etc., and allow them to be nested&lt;/li&gt;
  &lt;li&gt;Make NuGet ignorant of the filters to make NuGet reusable in new domains and scenarios&lt;/li&gt;
  &lt;li&gt;Make NuGet ignorant of &lt;em&gt;the manifest artifacts themselves&lt;/em&gt; to make NuGet reusable in new domains and scenarios&lt;/li&gt;
  &lt;li&gt;Ensure that the gallery and feed both expose all of the manifest information so that tools don’t have to download and unpack &lt;code&gt;nupkg&lt;/code&gt; files (pronounced “NUP-KEG” by the way) to discover what artifacts are in the package&lt;/li&gt;
  &lt;li&gt;Switch from XML-formatted &lt;code&gt;nuspec&lt;/code&gt; files to JSON (because people like authoring and reading JSON better, it’s consistent with the direction we’re taking the feed, and it could potentially align with &lt;a href="https://github.com/aspnet/Home/wiki/Project.json-file"&gt;ASP.NET vNext’s project.json file&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="separating-authoring-from-protocol"&gt;Separating Authoring from Protocol&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;nuspec&lt;/code&gt; has always been NuGet’s “protocol”. It is how packages are understood. Except it is incomplete because it doesn’t include the package manifest–that part was just based on the files within the package itself. This approach allowed the files within the package to be self-describing and the single source of truth. But it has caused us some problems.&lt;/p&gt;

&lt;p&gt;Just to name a few of the issues we’ve faced:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The package contents are required to get the manifest&lt;/li&gt;
  &lt;li&gt;The manifest is needed to determine target framework compatibility&lt;/li&gt;
  &lt;li&gt;Since conventions are applied at package installation time (rather than pack time), adding new conventions is a backwards-compatibility nightmare!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We want NuGet packages to have a clean authoring experience; you shouldn’t have to author the file manifest if it can be gleaned from conventions. But we need to reduce the protocol down to a single source of information (a package manifest) rather than requiring both the &lt;code&gt;nuspec&lt;/code&gt; and the package contents. We will also benefit greatly from applying any conventions at pack time and making packages’ behavior deterministic rather than vulnerable to the client’s understanding of conventions.&lt;/p&gt;

&lt;h3 id="backwards-compatibility"&gt;Backwards Compatibility&lt;/h3&gt;

&lt;p&gt;As we explore producing an authoritative package manifest at the time of packing, we have to be thoughtful of the NuGet clients that exist today–the ones that wouldn’t know to look for this new manifest. We want newly created packages to contain both the authoritative manifest and also be backwards compatible–except for when the packages use &lt;em&gt;new&lt;/em&gt; features.&lt;/p&gt;

&lt;h3 id="proposal"&gt;Proposal&lt;/h3&gt;

&lt;p&gt;The most common scenario for packing today is when you have a &lt;code&gt;nuspec&lt;/code&gt; file and then artifacts on disk. You run &lt;code&gt;nuget.exe pack&lt;/code&gt; against your nuspec and you get the following result (ignoring the actual package contents):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;id.version.nupkg&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;id.nuspec&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the proposal, the result would be changed to the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;id.version.nupkg&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;id.nuspec&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;nuget.manifest.json&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="keeping-the-nuspec"&gt;Keeping the nuspec&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;nuspec&lt;/code&gt; file inside the package would still be XML-based and it would contain the following critical components:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Id&lt;/li&gt;
  &lt;li&gt;Version&lt;/li&gt;
  &lt;li&gt;Authors&lt;/li&gt;
  &lt;li&gt;Description&lt;/li&gt;
  &lt;li&gt;NuGet minClientVersion attribute&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If the package does not use any new NuGet features, then all of the rest of the &lt;code&gt;nuspec&lt;/code&gt; would be filled in too (including fields such as &lt;code&gt;Dependencies&lt;/code&gt; and &lt;code&gt;References&lt;/code&gt;), and the &lt;code&gt;minClientVersion&lt;/code&gt; would not be set to require NuGet 3.0. That provides backwards-compatibility with old NuGet clients.&lt;/p&gt;

&lt;p&gt;If the package does use new NuGet features, then no other fields would be provided in the &lt;code&gt;nuspec&lt;/code&gt; and the &lt;code&gt;minClientVersion&lt;/code&gt; would be set to 3.0 (or newer). This compromise allows old NuGet clients to still load the package for display purposes but then respect the &lt;code&gt;minClientVersion&lt;/code&gt; when the user tries to install the package.&lt;/p&gt;

&lt;h4 id="introducing-the-manifest"&gt;Introducing the Manifest&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;nuget.manifest.json&lt;/code&gt; file would contain all of the information carried in the &lt;code&gt;nuspec&lt;/code&gt; but it would also carry the important artifact manifest. The conventions that NuGet applies at install-time today would be applied at pack time and then persisted into this manifest.&lt;/p&gt;

&lt;p&gt;When a NuGet 3.0 client reads a package that contains a manifest, the manifest would win and explicitly state what should be done with the package contents–no conventions would be applied at package installation time.&lt;/p&gt;

&lt;h4 id="authoring-a-manifest-directly"&gt;Authoring a Manifest Directly&lt;/h4&gt;

&lt;p&gt;Are you tired of maintaining an XML-based &lt;code&gt;nuspec&lt;/code&gt; file? Do you prefer JSON? Do you want to use new manifest features that we’ll be introducing? Great; you can author the manifest directly!&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Conventions are an awesome way to imply configuration. But make sure you also allow explicit configuration to deviate from conventions.&lt;/p&gt;&amp;mdash; Jeff Handley (@JeffHandley) &lt;a href="https://twitter.com/JeffHandley/status/522981703842021376"&gt;October 17, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;If you want to take over manifest authoring, you’ll be able to. Instead of creating a &lt;code&gt;nuspec&lt;/code&gt; file, you would author a &lt;code&gt;nuget.json&lt;/code&gt; file (or perhaps use ASP.NET’s &lt;code&gt;project.json&lt;/code&gt; file). Authoring in this format allows you to either retain the pack-time conventions that NuGet will apply or override them as needed. When the package would be created, it would then have the following files in it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;id.version.nupkg&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;id.nuspec&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;nuget.json&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;nuget.manifest.json&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Three things happened here. First, the original &lt;code&gt;nuget.json&lt;/code&gt; file was brought into the package. Second, a &lt;code&gt;nuget.manifest.json&lt;/code&gt; file was created. And third, the &lt;code&gt;id.nuspec&lt;/code&gt; file was also created.&lt;/p&gt;

&lt;p&gt;We’d create the &lt;code&gt;nuspec&lt;/code&gt; file for backwards-compatibility reasons stated above. We’d create the &lt;code&gt;nuget.manifest.json&lt;/code&gt; file as a result of your author-time &lt;code&gt;nuget.json&lt;/code&gt; and the authoritative manifest. That allows for your author-time &lt;code&gt;nuget.json&lt;/code&gt; file to take some shortcuts and still use conventions as you desire, while retaining the authoritative nature of the manifest file. We’d also include your author-time &lt;code&gt;nuget.json&lt;/code&gt; file to still provide the nice package editing features that you get with tools like &lt;a href="http://npe.codeplex.com"&gt;NuGet Package Explorer&lt;/a&gt;–that allows the &lt;code&gt;nupkg&lt;/code&gt; to remain a unit that can be copied around, edited, re-packed, and consumed. It could however be an option to omit the &lt;code&gt;nuget.json&lt;/code&gt; file from the package if you don’t want to ship your author-time format.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side-note… We’re also thinking that the &lt;code&gt;nuget.manifest.json&lt;/code&gt; file will utilize &lt;a href="http://json-ld.org"&gt;JSON-LD&lt;/a&gt; the same way our API v3 work does.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id="relying-only-on-the-manifest"&gt;Relying only on the Manifest&lt;/h4&gt;

&lt;p&gt;It’s critical to note that at package consumption time, NuGet 3.0 would &lt;em&gt;only&lt;/em&gt; use the &lt;code&gt;nuget.manifest.json&lt;/code&gt; file. Even though the package still contains the &lt;code&gt;nuspec&lt;/code&gt; and potentially the author-time &lt;code&gt;nuget.json&lt;/code&gt; file, the &lt;em&gt;protocol&lt;/em&gt; for consuming packages would be based on the &lt;code&gt;nuget.manifest.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;We’d end up with a simple if block in the NuGet code:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the package contains a &lt;code&gt;nuget.manifest.json&lt;/code&gt; file then use &lt;strong&gt;only&lt;/strong&gt; that file for understanding the manifest and don’t apply any conventions at consumption time&lt;/li&gt;
  &lt;li&gt;Otherwise, read the &lt;code&gt;nuspec&lt;/code&gt; and the file list like NuGet always has, applying conventions at consumption time&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="more-to-discuss"&gt;More to Discuss&lt;/h2&gt;

&lt;p&gt;We have a lot more to discuss about the plans for NuGet 3.0. We need to talk about what these arbitrary package manifests look like, how they’re configurable, how NuGet-based tools would read and understand the information, and more. We’ll keep working on writing up our thoughts on these topics, but please let us know what you think so far.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141023/package-manifests.html" /><a10:updated>2014-10-23T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141014/in-the-platform</guid><title>NuGet: In the Platform</title><description>&lt;p&gt;I recently declared that NuGet is “&lt;a href="/20141010/nuget-is-broken.html"&gt;Broken By Design&lt;/a&gt;.” Now, that was hyperbolic; I don’t really think NuGet is broken. In fact, I’m very pleased with NuGet (and proud of it). But I wanted to make the point that NuGet’s approach both earned it success but also came at a cost. NuGet can’t presently offer some expected package management features because it’s merely a package management façade over top of existing Visual Studio and MSBuild capabilities.&lt;/p&gt;

&lt;p&gt;I also wanted you all to know that we recognize that NuGet has been stagnating and that we want to make some changes. &lt;/p&gt;

&lt;h2 id="the-right-approach"&gt;The Right Approach?&lt;/h2&gt;

&lt;p&gt;For years, many have questioned the approach NuGet took bolting onto Visual Studio and MSBuild. Knowing the approach has led to being unable to provide some key new features, was it still the right approach?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Absolutely!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I whole-heartedly believe that the bolt-on approach that NuGet took directly led to its adoption and success. We do not at all regret the direction we went.&lt;/p&gt;

&lt;h2 id="time-to-change"&gt;Time To Change&lt;/h2&gt;

&lt;p&gt;Now that NuGet has gained broad adoption and our users are demanding actual &lt;em&gt;package management&lt;/em&gt; features, it’s time to change. As mentioned in the previous post, our partner teams across ASP.NET, Visual Studio, .NET (CLR), MSBuild, and C++ recognize this too. Their users are also demanding package management features, through NuGet.&lt;/p&gt;

&lt;p&gt;Only because our collective users are demanding new features do we think we can now make NuGet part of the platform. Putting package management into the platform will result in some changes to how users build projects for the Microsoft development platform. Until recently, we didn’t have the feedback indicating that our users were ready to accept the changes required; we now believe some disruptive changes will be welcomed.&lt;/p&gt;

&lt;h2 id="problems-to-fix"&gt;Problems To Fix&lt;/h2&gt;

&lt;p&gt;In addition to the package management workflows that we cannot presently improve, there are some concrete problems our users face as a result of package management not being a fundamental project concept. Here are some of the problems we aim to address.&lt;/p&gt;

&lt;h3 id="re-targeting-and-multi-targeting"&gt;Re-Targeting and Multi-Targeting&lt;/h3&gt;

&lt;p&gt;Because project files end up with Hint Paths specific to target frameworks selected at package installation time, re-targeting your project can cause the Hint Paths to be stale. Additionally, you cannot multi-target the project by passing the target framework as a parameter to MSBuild, because the framework-specific Hint Paths are burned in for a single framework.&lt;/p&gt;

&lt;h3 id="package-dependencies-from-project-references"&gt;Package Dependencies From Project References&lt;/h3&gt;

&lt;p&gt;Consider the following scenario:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-10-14-in-the-platform/multi-headed-app.png" alt="Multi-Headed Apps" /&gt;&lt;/p&gt;

&lt;p&gt;In this scenario, when you build the Windows Store App, MSBuild will detect the project reference to the Portable Class Library, and it will copy assemblies referenced by that library into the Windows Store App’s output folder. The same will happen for the Windows Phone App. Unfortunately, the Portable Class Library will get the NuGet package’s portable reference assembly rather than the Windows Store or Windows Phone implementation assemblies.&lt;/p&gt;

&lt;p&gt;To make this scenario work, MSBuild will ensure NuGet selects the libraries in the context of the consuming project, regardless of whether the package is a direct or indirect dependency.&lt;/p&gt;

&lt;h3 id="new-build-artifact-types-and-pivots"&gt;New Build Artifact Types and Pivots&lt;/h3&gt;

&lt;p&gt;NuGet presently understands managed assemblies and getting references added to them. You can include assemblies in your package that don’t get references, but the capabilities are quite limited. Furthermore, NuGet presently supports only pivoting your assembly selection by Target Framework/Version.&lt;/p&gt;

&lt;p&gt;With NuGet packages being a fundamental concept, the .NET team wants to ship more and more of their work as NuGet packages. And the C++ team wants to be able to use NuGet packages for their libraries as well. In order to satisfy the requirements that come in these scenarios, NuGet must allow new artifact types to be expressed in packages so that those artifacts can be exposed to the build.&lt;/p&gt;

&lt;p&gt;We are still working on the design for this, but we anticipate NuGet packages being able to express artifact groups that can pivot on the following properties:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Architecture&lt;/li&gt;
  &lt;li&gt;Configuration&lt;/li&gt;
  &lt;li&gt;Reference vs. Copy-Local&lt;/li&gt;
  &lt;li&gt;Language&lt;/li&gt;
  &lt;li&gt;Design-Time vs. Runtime&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For those of you familiar with &lt;a href="http://msdn.microsoft.com/en-us/library/hh768146.aspx"&gt;Extension SDKs&lt;/a&gt;, you’ll notice the similarity. We plan to implement this as though NuGet could support &lt;em&gt;arbitrary&lt;/em&gt; pivots, but we know of concrete scenarios for the properties listed above.&lt;/p&gt;

&lt;h2 id="nuget-will-gain-a-first-class-presence"&gt;NuGet Will Gain a First-Class Presence&lt;/h2&gt;

&lt;p&gt;What needs to change to make all of this happen? What does “putting package management into the platform” mean? Why is it disruptive? What is going to change?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We plan to change Visual Studio and MSBuild to understand the concept of package management; NuGet will gain a first-class presence.&lt;/strong&gt; Here are some of the areas and features that will be affected:&lt;/p&gt;

&lt;h3 id="msbuild"&gt;MSBuild&lt;/h3&gt;

&lt;p&gt;We are working on a design where MSBuild, for all project types, will understand that projects can have NuGet packages installed. MSBuild will understand that the installed NuGet packages can have assemblies and other artifacts that need to be included in the build, and that build and environment properties can alter which artifacts need to be included.&lt;/p&gt;

&lt;p&gt;We expect the design will arrive at a workflow along these lines:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An MSBuild target will call into NuGet to get the project’s package manifest (as id/version pairs)&lt;/li&gt;
  &lt;li&gt;MSBuild will also get the package manifests for indirect package references (through project references)&lt;/li&gt;
  &lt;li&gt;An MSBuild target will call into NuGet to get the artifacts (references and other items) for each of the packages, respecting the project and environment properties for artifact selection&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This approach is very similar to what &lt;a href="http://www.github.com/aspnet/home"&gt;ASP.NET vNext&lt;/a&gt; is already doing.&lt;/p&gt;

&lt;h4 id="package-manifest"&gt;Package Manifest&lt;/h4&gt;

&lt;p&gt;NuGet will do the work of reading our &lt;code&gt;packages.config&lt;/code&gt; file and returning the id/version pairs of packages that are installed. It’s important to note that MSBuild itself &lt;em&gt;will not know&lt;/em&gt; how to load and parse the package manifest from &lt;code&gt;packages.config&lt;/code&gt;–only NuGet will. This allows us to add future features that change or extend the logic for the package manifest.&lt;/p&gt;

&lt;p&gt;Here is some of our thinking for future features that could be introduced.&lt;/p&gt;

&lt;h5 id="direct-vs-indirect-dependencies"&gt;Direct vs. Indirect Dependencies&lt;/h5&gt;

&lt;p&gt;We could change &lt;code&gt;packages.config&lt;/code&gt; to only include direct dependencies, rather than packages that are brought in as indirect dependencies. We would then perform dependency resolution at compile time when MSBuild queries NuGet for the list of installed packages.&lt;/p&gt;

&lt;p&gt;We expect to add an annotation to our package manifest to indicate whether the list contains the full closure or just the direct dependencies. You’d then be able to control whether you want to resolve dependencies at package installation time and write them into the manifest, or resolve dependencies at compile time.&lt;/p&gt;

&lt;h5 id="floating-package-versions"&gt;Floating Package Versions&lt;/h5&gt;

&lt;p&gt;Much like resolving dependencies at compile time, we could also choose package versions at compile time. Your package manifest could contain version ranges such as &lt;code&gt;[2.4.0,2.5.0)&lt;/code&gt; so that the newest patch version of 2.4.x could be selected on each build.&lt;/p&gt;

&lt;p&gt;While this feature is frequently requested, it can cause you some headaches too; it would be an opt-in feature.&lt;/p&gt;

&lt;h5 id="manifest-locking"&gt;Manifest Locking&lt;/h5&gt;

&lt;p&gt;For floating versions and compile-time dependency resolution, it would be important to allow you to override the variability of resolution, locking the build down to specific packages/versions when desired. We expect to add support for a &lt;code&gt;packages.lock.config&lt;/code&gt; file that would take precedence over &lt;code&gt;packages.config&lt;/code&gt; when NuGet is looking up the package manifest.&lt;/p&gt;

&lt;p&gt;With this approach, you could easily commit a &lt;code&gt;lock&lt;/code&gt; file into a release branch, but leave your development branch open. Of course, NuGet.exe would offer a feature such as &lt;code&gt;nuget.exe lock&lt;/code&gt; where the resolution would execute and a &lt;code&gt;packages.lock.config&lt;/code&gt; file would be written out for you.&lt;/p&gt;

&lt;h5 id="json-formatted-package-manifest"&gt;JSON-Formatted Package Manifest&lt;/h5&gt;

&lt;p&gt;A lot of users have requested that we move away from the XML-formatted &lt;code&gt;packages.config&lt;/code&gt; file, and instead adopt JSON for our package manifest. With MSBuild querying into NuGet for the list of packages installed, we leave the door open for making this switch. And it’s quite possible that instead of determining how we’ll extend &lt;code&gt;packages.config&lt;/code&gt; to support the new features of direct vs. indirect dependencies and floating package versions, we’ll instead create a &lt;code&gt;nuget.json&lt;/code&gt; file that has these concepts. We’re even considering a merger of our &lt;code&gt;nuspec&lt;/code&gt; file and this package manifest, along with potentially aligning with &lt;a href="https://github.com/aspnet/Home/wiki/Project.json-file"&gt;ASP.NET vNext’s &lt;code&gt;project.json&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we go down the path of using a &lt;code&gt;nuget.json&lt;/code&gt; file, we’d of course then use a &lt;code&gt;nuget.lock.json&lt;/code&gt; file for the manifest locking.&lt;/p&gt;

&lt;h5 id="single-source-of-truth"&gt;Single Source of Truth&lt;/h5&gt;

&lt;p&gt;Today, projects that consume NuGet packages have at least 2, and sometimes 3 “sources of truth.” In any system, having multiple sources of truth is just asking for trouble. Consider the following packages &lt;strong&gt;Microsoft.AspNet.SignalR.Core&lt;/strong&gt; and &lt;strong&gt;Microsoft.AspNet.SignalR.Redis&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microsoft.AspNet.SignalR.Redis&lt;/strong&gt; depends on &lt;strong&gt;Microsoft.AspNet.SignalR.Core&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the layout of files that NuGet is managing package reference information in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Microsoft.AspNet.SignalR.Core /
    &lt;ul&gt;
      &lt;li&gt;Microsoft.AspNet.SignalR.Core.csproj&lt;/li&gt;
      &lt;li&gt;Microsoft.AspNet.SignalR.Core.nuspec&lt;/li&gt;
      &lt;li&gt;packages.config&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Microsoft.AspNet.SignalR.Redis /
    &lt;ul&gt;
      &lt;li&gt;Microsoft.AspNet.SignalR.Redis.csproj&lt;/li&gt;
      &lt;li&gt;Microsoft.AspNet.SignalR.Redis.nuspec&lt;/li&gt;
      &lt;li&gt;packages.config&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is duplication in each of the files. The &lt;code&gt;nuspec&lt;/code&gt; has direct dependencies, the &lt;code&gt;packages.config&lt;/code&gt; has the closure of packages (direct and indirect dependencies), and the &lt;code&gt;csproj&lt;/code&gt; has the assemblies referenced as a result of installing the packages. The &lt;code&gt;nuspec&lt;/code&gt; might have other things that differ from the &lt;code&gt;packages.config&lt;/code&gt;, for example version ranges, extra files that should be copied into the package, extra metadata like release notes, project url etc.&lt;/p&gt;

&lt;p&gt;We want to consolidate this package reference information into one place. Here’s a potential approach for doing so:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Completely eliminate assembly references (that came from packages) in the &lt;code&gt;csproj&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Combine the “package manifest” concept in the &lt;code&gt;packages.config&lt;/code&gt; file with the “package authoring” metadata in the &lt;code&gt;nuspec&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Use this one file, presumably &lt;code&gt;nuget.json&lt;/code&gt;, to control the package manifest and package authoring&lt;/li&gt;
  &lt;li&gt;Determine the assembly references (that came from packages) at compile time&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We considered putting the package manifest directly into the &lt;code&gt;csproj&lt;/code&gt; file, as &lt;code&gt;&amp;lt;NuGetPackageReference&amp;gt;&lt;/code&gt; items, but that would come with a few drawbacks:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Installing a NuGet package would still result in updating the &lt;code&gt;csproj&lt;/code&gt; file, which must be done through the Visual Studio project systems&lt;/li&gt;
  &lt;li&gt;We’d still be married to the &lt;a href="http://msdn.microsoft.com/en-us/library/envdte.aspx"&gt;DTE&lt;/a&gt; because NuGet should not manipulate project files directly&lt;/li&gt;
  &lt;li&gt;ASP.NET vNext, which doesn’t use &lt;code&gt;csproj&lt;/code&gt; files, would still need a different concept&lt;/li&gt;
  &lt;li&gt;Problems like XML merge conflicts would remain&lt;/li&gt;
  &lt;li&gt;It would be more difficult to implement tooling outside of MSBuild&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For these reasons, and to enable the ideal situation of NuGet not needing to update &lt;code&gt;csproj&lt;/code&gt; files &lt;em&gt;at all&lt;/em&gt; when a package simply contains assemblies, we concluded it’s far better for NuGet’s package manifest to be separate from the project file itself. Of course, the separate package manifest should help with cross-platform scenarios too, which should help &lt;a href="http://blog.xamarin.com/xamarin-studio-and-nuget/"&gt;Xamarin&lt;/a&gt; out quite a bit.&lt;/p&gt;

&lt;h4 id="down-level-support"&gt;Down-Level Support&lt;/h4&gt;

&lt;p&gt;We haven’t figured out all of the details for how this will be implemented, or if/how we can update previous versions of MSBuild to support NuGet in this way. We don’t expect the changes will be terribly invasive though, and we expect to use existing extensibility points in MSBuild to light this up. If we succeed therein, then down-level support should be possible. But it is quite likely down-level MSBuild support will land out of scope at first, so we might have to be creative.&lt;/p&gt;

&lt;h4 id="project-transitioning"&gt;Project Transitioning&lt;/h4&gt;

&lt;p&gt;We haven’t yet worked out the details for how you’ll transition your project over into the new “build-enlighted” NuGet package consumption mode. There will certainly need to be some sort of gesture to convert, but we don’t know what it will look like yet.&lt;/p&gt;

&lt;h3 id="visual-studio"&gt;Visual Studio&lt;/h3&gt;

&lt;p&gt;Several changes are being made in Visual Studio to make NuGet a first-class citizen in the environment.&lt;/p&gt;

&lt;h4 id="package-management-ui"&gt;Package Management UI&lt;/h4&gt;

&lt;p&gt;During the Visual Studio “14” timeframe, the NuGet team is designing a brand-new package management user interface. Our 4-year-old modal dialog that inherits from the Extensions and Updates dialog is getting completely replaced. Our new user interface is a document window that &lt;em&gt;behaves&lt;/em&gt; similarly to the Project Properties window, although it &lt;em&gt;looks&lt;/em&gt; completely different.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-10-14-in-the-platform/new-ui.png" alt="New Package Management UI" /&gt;&lt;/p&gt;

&lt;p&gt;This new UI is part of &lt;strong&gt;NuGet 3.0&lt;/strong&gt; and it will be available for &lt;strong&gt;Visual Studio 2012&lt;/strong&gt;, &lt;strong&gt;Visual Studio 2013&lt;/strong&gt;, and &lt;strong&gt;Visual Studio “14”&lt;/strong&gt;. As we’ve previously announced, we are going to &lt;a href="/20141002/visual-studio-2010.html"&gt;discontinue updates for Visual Studio 2010&lt;/a&gt;, so this new UI won’t be available there.&lt;/p&gt;

&lt;p&gt;Here are some of the new features available in the new user experience:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Consolidated Installed/Online/Updates view, with uninstall/install/update actions together in one place&lt;/li&gt;
  &lt;li&gt;Filters for viewing only installed packages or packages that have updates available, replacing the previously separate views&lt;/li&gt;
  &lt;li&gt;Version selection for package installs and updates within the UI (instead of having to drop down to PowerShell)&lt;/li&gt;
  &lt;li&gt;A preview feature that shows what packages will be uninstalled, installed, and left as-is for the selected action&lt;/li&gt;
  &lt;li&gt;Control over the dependency version selection&lt;/li&gt;
  &lt;li&gt;Ability to open NuGet Package Management windows for multiple projects at once&lt;/li&gt;
  &lt;li&gt;Package version consolidation across multiple projects&lt;/li&gt;
  &lt;li&gt;Improved performance and reliability when connected to nuget.org (using a new client/server protocol)&lt;/li&gt;
  &lt;li&gt;Better use of screen real estate and the ability to leave the window open&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After NuGet 3.0, we hope to update the UI again to show what artifact types the NuGet package carries. For instance, you could see ahead of time if the package has PowerShell scripts, web.config transforms, or other content files, or if it merely has assembly references. We could even add in installation options where you could disable the execution of the PowerShell scripts or the web.config transforms if desired.&lt;/p&gt;

&lt;h4 id="solution-explorer"&gt;Solution Explorer&lt;/h4&gt;

&lt;p&gt;When NuGet was merely bolting onto existing project systems’ capabilities, that resulted in the assemblies from packages being added into a project’s traditional &lt;code&gt;References&lt;/code&gt; node; there were no actual NuGet package reference entries.&lt;/p&gt;

&lt;p&gt;While we’re not sure when the feature will land, we are going to work with Visual Studio to get NuGet packages to show up as nodes in Solution Explorer. These nodes will provide some context menu items for common actions such as uninstalling and updating packages, which will navigate into the package management UI with the package and action selected.&lt;/p&gt;

&lt;p&gt;You’ll see this integration first in ASP.NET vNext projects, and then later across all other project systems.&lt;/p&gt;

&lt;h3 id="nuget-in-new-domains-and-partnerships"&gt;NuGet In New Domains and Partnerships&lt;/h3&gt;

&lt;p&gt;In addition to this big drive to get NuGet into the Microsoft development platform, we’ve also recently seen a huge increase in the number of new domains where NuGet is being used as an implementation detail or as a feature within new products. &lt;a href="http://www.chocolatey.org"&gt;Chocolatey&lt;/a&gt; has been around forever, but with the introduction of &lt;a href="https://github.com/OneGet/oneget/wiki/Q-and-A"&gt;OneGet&lt;/a&gt;, it’s gaining more momentum. Additionally, systems such as &lt;a href="http://octopusdeploy.com/"&gt;Octopus Deploy&lt;/a&gt;, &lt;a href="http://www.myget.org"&gt;MyGet&lt;/a&gt;, &lt;a href="http://www.appveyor.com/"&gt;AppVeyor&lt;/a&gt;, &lt;a href="http://scriptcs.net/"&gt;scriptcs&lt;/a&gt;, and many others have come to NuGet with requests to make our server and client bits more flexible for their scenarios.&lt;/p&gt;

&lt;p&gt;While we are working on getting NuGet into the platform, we’re also evaluating how much we should generalize NuGet packaging, libraries, and feeds to serve the needs of the new domains and partnerships. Those topics all fall much lower in priority, but it remains on our minds as we make significant code changes.&lt;/p&gt;

&lt;h2 id="lots-to-do"&gt;Lots To Do&lt;/h2&gt;

&lt;p&gt;We have a lot to do to make all of this happen. We hope you like the plans and that you’ll share your feedback with us eiher way. You have been very patient with us as we waited for the time to be right to change the general approach NuGet took from being a bolt-on to being adopted into the platform, and we do appreciate your patience.&lt;/p&gt;

&lt;p&gt;As you can probably imagine, all of this work has the NuGet team pretty well consumed. We’ve fallen behind in reviewing pull requests, issues, discussions, and other forums, and our release cadence has also slowed down significantly. Please bear with us as we remain focused on making big changes. If you’d like to get more involved in the project to help us get through this transition, please let us know how you’d like to help.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141014/in-the-platform.html" /><a10:updated>2014-10-14T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141010/nuget-is-broken</guid><title>NuGet: Broken By Design</title><description>&lt;p&gt;On January 13, 2011, NuGet 1.0 was released with ASP.NET MVC 3. On June 19, 2012, NuGet 2.0 shipped in the box with all editions of Visual Studio 2012 (including the free ones). That was a little over 2 years ago, and NuGet’s adoption has been steadily increasing since then.&lt;/p&gt;

&lt;p&gt;Here are some interesting figures for recent NuGet usage from &lt;a href="http://www.nuget.org"&gt;nuget.org&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Over 260,000,000 total package downloads&lt;/li&gt;
  &lt;li&gt;An average of 1,500,000 package searches per day&lt;/li&gt;
  &lt;li&gt;About 700,000 package downloads per day&lt;/li&gt;
  &lt;li&gt;Well over 250,000 total packages&lt;/li&gt;
  &lt;li&gt;More than 27,000 unique packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The NuGet is team quite happy with the adoption we’ve seen. But at almost 4 years old, NuGet is starting to show its age and some even claim that “NuGet is broken.”&lt;/p&gt;

&lt;h2 id="reasons-for-success"&gt;Reasons for Success&lt;/h2&gt;

&lt;p&gt;Before we delve into the ways in which NuGet can be considered “broken,” let’s take a look at why NuGet has been successful. We’ll see how some design choices made sense 4 years ago but can be questioned now. The challenge is to find ways to identify which choices should be revisited because circumstances have changed, and which ones need to be left alone to ensure NuGet’s continued success.&lt;/p&gt;

&lt;h3 id="its-just-a-macro"&gt;It’s Just a Macro&lt;/h3&gt;

&lt;p&gt;When NuGet was first released, it didn’t matter whether you were on a 1-person team or a 20-person team, because either way, you could start using NuGet on your project without disrupting the team’s existing workflows. All NuGet did was automate what you were doing manually:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Search the internet for the library you want&lt;/li&gt;
  &lt;li&gt;Download it as a zip&lt;/li&gt;
  &lt;li&gt;Right-click it, hit properties, and unblock the file&lt;/li&gt;
  &lt;li&gt;Unzip it into a solution-level folder for your external dependencies (I always called mine &lt;code&gt;lib&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Look inside the expanded contents for:
    &lt;ol&gt;
      &lt;li&gt;DLLs that need references added in your project (often involving some guess work)&lt;/li&gt;
      &lt;li&gt;Content files that you should copy into your project&lt;/li&gt;
      &lt;li&gt;Web.Config additions that need to be applied&lt;/li&gt;
      &lt;li&gt;Any README or other documentation listing out additional changes needed to your project&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When I’m introducing NuGet to new audiences, I often explain that “NuGet is just a VS macro.” It’s honestly pretty true, both in spirit, and in how NuGet is implemented. Here’s how NuGet supported the above workflow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A central repository at www.nuget.org is used for package discovery&lt;/li&gt;
  &lt;li&gt;Packages are expanded into a &lt;code&gt;packages&lt;/code&gt; folder at the solution-level&lt;/li&gt;
  &lt;li&gt;The contents of the package are automatically handled:
    &lt;ol&gt;
      &lt;li&gt;Assembly references are added from the package’s &lt;code&gt;lib&lt;/code&gt; folder, selecting the best target framework match and allowing specification of the subset of DLLs to reference when needed&lt;/li&gt;
      &lt;li&gt;Content files are copied into your project, with support for tokens getting replaced with values from the target project (such as root namespace)&lt;/li&gt;
      &lt;li&gt;Web.Config transforms are applied&lt;/li&gt;
      &lt;li&gt;PowerShell scripts can be run that automate any additional changes needed to the project&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Automating package installation is great, but where NuGet really shined in the early days was when you needed to uninstall a package. NuGet would reverse the actions it took to install the package–and I don’t know about you, but that’s the part I would always mess up. Weeks or months could have passed since I referenced a library, and unwinding the steps I took to reference the library was always error-prone. NuGet nailed this.&lt;/p&gt;

&lt;p&gt;Combine the clean uninstallation and the installation of a package, and you have NuGet’s package update process. Clean, simple, and reliable. No guess-work for the package consumer–It Just Works&lt;sup&gt;TM&lt;/sup&gt;!&lt;/p&gt;

&lt;h3 id="no-prompts-or-choices"&gt;No Prompts or Choices&lt;/h3&gt;

&lt;p&gt;During the install/uninstall/update workflows, NuGet intentionally avoids prompting users for any choices. Here’s the sum total of the prompts that NuGet has today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;License Acceptance for packages that require it&lt;/li&gt;
  &lt;li&gt;Whether to overwrite or ignore content files that already exist&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it, and this is critical. If NuGet had prompts for all of the choices it needs to make, users would be intimidated and worried. NuGet took a “worry-free” approach so that package consumers had it easy. Here are some of the choices NuGet makes on your behalf:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Which version of the package to install: The latest version is selected automatically&lt;/li&gt;
  &lt;li&gt;How to resolve dependencies: Choose the lowest satisfactory dependency version&lt;/li&gt;
  &lt;li&gt;Which set of DLLs need to be referenced: Select the best target framework match&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="powershell-extensibility"&gt;PowerShell Extensibility&lt;/h3&gt;

&lt;p&gt;This is one of the most contentious topics NuGet has faced. Many are still shocked that NuGet allows packages to run arbitrary PowerShell scripts during package installation. This topic came up recently when the actions of the ever-popular &lt;a href="http://www.nuget.org/packages/Newtonsoft.Json"&gt;Newtonsoft.Json&lt;/a&gt; package &lt;a href="https://github.com/JamesNK/Newtonsoft.Json/pull/387"&gt;were criticized&lt;/a&gt;. That package uses PowerShell to determine if the user just used the NuGet Package Manager dialog to find and directly install Newtonsoft.Json; if so, a web browser is opened to a documentation page for the package that, including helpful topics, has advertising on the page. Note that the script went to great lengths (justifying the “yolo” comment at the end of the file) to &lt;em&gt;only&lt;/em&gt; show this popup if the user &lt;em&gt;directly&lt;/em&gt; installed the package.&lt;/p&gt;

&lt;p&gt;While the actions of the Newtonsoft.Json package are questionable, they are not harmful, and therefore we support them. Many have argued, and some have demonstrated, that this power could be used for evil purposes. So why does NuGet support PowerShell scripts if it’s so dangerous?&lt;/p&gt;

&lt;h4 id="escape-hatch"&gt;Escape Hatch&lt;/h4&gt;

&lt;p&gt;It’s an extensibility point with unbounded functionality. Package authors could augment NuGet’s package installation conventions to perform any additional actions their package needs to be referenced. We often refer to the feature as an “escape hatch.”&lt;/p&gt;

&lt;p&gt;Here are some examples that we’ve seen over the years where PowerShell scripts proved to be valuable:&lt;/p&gt;

&lt;h5 id="visual-studio-version-specific-files"&gt;Visual Studio Version-Specific Files&lt;/h5&gt;

&lt;p&gt;&lt;a href="http://www.nuget.org/packages/jquery"&gt;jQuery&lt;/a&gt; uses PowerShell to provide the right IntelliSense file for you, depending on your version of Visual Studio.&lt;/p&gt;

&lt;h5 id="target-framework-or-language-specific-content-files"&gt;Target Framework or Language-Specific Content Files&lt;/h5&gt;

&lt;p&gt;Many packages need to choose content files based on target framework or project language. We ended up adding target framework selection to content files, but we’ve not yet added a project language-specific pivot.&lt;/p&gt;

&lt;h5 id="msbuild-imports"&gt;MSBuild Imports&lt;/h5&gt;

&lt;p&gt;Scores of packages modified the project to import an MSBuild targets file. At one point, this was the most common use case of PowerShell, so we added a first-class &lt;code&gt;build&lt;/code&gt; folder feature that identifies props and targets files that NuGet will automatically import.&lt;/p&gt;

&lt;h5 id="advanced-webconfig-xml-transforms"&gt;Advanced Web.Config XML Transforms&lt;/h5&gt;

&lt;p&gt;A lot of packages needed to make intelligent transformations to web.config that couldn’t be expressed in a transform file. We added XDT support to minimize the need for PowerShell in these cases.&lt;/p&gt;

&lt;h5 id="native-assemblies"&gt;Native Assemblies&lt;/h5&gt;

&lt;p&gt;&lt;a href="http://www.nuget.org/packages/Microsoft.SqlServer.Compact"&gt;Microsoft.SqlServer.Compact&lt;/a&gt; copies native assemblies into the project and hooks up a post-build event to ensure they’re copied into the project’s output folder.&lt;/p&gt;

&lt;h5 id="tooling-and-scaffolding"&gt;Tooling and Scaffolding&lt;/h5&gt;

&lt;p&gt;&lt;a href="http://www.nuget.org/packages/EntityFramework"&gt;EntityFramework&lt;/a&gt; exports a PowerShell Module so that cmdlets such as “Add-Migration” can be added into the NuGet PowerShell Console.&lt;/p&gt;

&lt;h5 id="opening-readme-files"&gt;Opening README Files&lt;/h5&gt;

&lt;p&gt;At one point the second most common use of PowerShell was to open a README file. We added the recognition of a &lt;code&gt;README.txt&lt;/code&gt; file in the package and when the package is directly installed, we’ll open the file automatically.&lt;/p&gt;

&lt;p&gt;We chose to only support TXT files and not HTML or Markdown. Perhaps because of this decision, some package authors still use PowerShell to open rich pages served from their websites. We’ve already mentioned Newtonsoft.Json, but Glimpse is another interesting example. They have some impressive logic:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Upon new installation, a web page is opened with info about the specific package version that was installed.&lt;/li&gt;
  &lt;li&gt;Their web page lists some additional Glimpse packages that could be beneficial to you.&lt;/li&gt;
  &lt;li&gt;Upon package update, they perform some, hmm, clever maneuvers to track the old package version and the new package version, and they open a browser window with &lt;a href="http://www.semanticreleasenotes.org/"&gt;Semantic Release Notes&lt;/a&gt; applicable to the update path you just exercised.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="filling-the-gaps"&gt;Filling the Gaps&lt;/h4&gt;

&lt;p&gt;By adding features for target-framework-specific content files, MSBuild imports, XDT transforms, and README.txt files, we’ve covered a lot of the scenarios where authors had previously used PowerShell. But it’s clear we’ll never be able to fill all of the gaps.&lt;/p&gt;

&lt;h3 id="requiring-visual-studio-to-install-packages"&gt;Requiring Visual Studio to Install Packages&lt;/h3&gt;

&lt;p&gt;I can’t count the number of times someone has asked if they can install a package from the command-line, and then complained when they learn the answer is “No.” As explained above, NuGet is implemented as though it’s a Visual Studio macro. Our Visual Studio extension is where all of the logic exists for making modifications to make to the project, and this has been often criticized.&lt;/p&gt;

&lt;h4 id="tightly-coupled-to-visual-studio"&gt;Tightly Coupled to Visual Studio&lt;/h4&gt;

&lt;p&gt;With the mindset of NuGet simply automating the actions you were taking, it’s easy to understand why NuGet is implemented the way it is. The fact is, NuGet was built by a small team as a bolt-on to Visual Studio, allowing package management to be introduced to Visual Studio users with very low risk and no changes to Visual Studio itself.&lt;/p&gt;

&lt;p&gt;NuGet uses Visual Studio’s &lt;a href="http://msdn.microsoft.com/en-us/library/envdte.aspx"&gt;DTE&lt;/a&gt; (&lt;a href="http://stackoverflow.com/questions/17239760/what-is-the-visual-studio-dte"&gt;Development Time Environment&lt;/a&gt;) to automate the actions that you would have taken yourself. This is how assembly references are added, content files are copied into your project, and how MSBuild imports are applied. Even PowerShell scripts use the DTE to perform their custom actions against the projects. Using the DTE, any operations NuGet makes are handled just as though they were initiated manually.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When connected to source control, Visual Studio takes care of invoking the necessary actions&lt;/li&gt;
  &lt;li&gt;Project systems handle content files by understanding their file extensions and setting up build actions and custom tools (like the ResXFileCodeGenerator)&lt;/li&gt;
  &lt;li&gt;Project systems handle adding assembly references, generating the hint paths, and writing them into the project file&lt;/li&gt;
  &lt;li&gt;Visual Studio manages the project file in memory so that changes resulting from package operations are coordinated with any other unsaved changes you have&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="bolt-on-benefits"&gt;Bolt-On Benefits&lt;/h4&gt;

&lt;p&gt;Using Visual Studio’s automation APIs to mimic what manual actions would have done allowed NuGet to get down-stream benefits. No changes to remaining workflows were required, because the result of installing a package matches exactly the result if the actions had been taken manually.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;No new concepts are added to your project–other team members could be oblivious and unaffected&lt;/li&gt;
  &lt;li&gt;Source control integration (generally) works as you expect&lt;/li&gt;
  &lt;li&gt;No changes were required for your build to keep working (until you opted into Package Restore)&lt;/li&gt;
  &lt;li&gt;Tools like Web Deploy work just fine and don’t need to be aware of the NuGet packages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Had we tried to alter these workflows when NuGet was being introduced, there’s no way we would have gotten traction–NuGet 1.0 would never have shipped. And even if it had shipped, it would have been considered too disruptive for a lot of users.&lt;/p&gt;

&lt;h2 id="harmful-consequences"&gt;Harmful Consequences&lt;/h2&gt;

&lt;p&gt;As a trade-off for the benefits NuGet realized with the bolt-on approach, there are some harmful consequences that resulted from the approach. As users adopt the package management concept in their projects, they then expect to have first-class package management experiences, but NuGet cannot offer them. All NuGet can offer is a package management façade over top of existing Visual Studio and .NET usage.&lt;/p&gt;

&lt;h3 id="hint-paths-in-projects"&gt;Hint Paths in Projects&lt;/h3&gt;

&lt;p&gt;Because NuGet asks the project system to add references to assemblies from a package, rather than inventing a new mechanism from which the assemblies could be resolved, the project system ends up baking a hint path into the project for where the assembly can be found.&lt;/p&gt;

&lt;p&gt;``` xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Reference Include="Newtonsoft.Json"&amp;gt;
  &amp;lt;HintPath&amp;gt;..\packages\Newtonsoft.Json.4.5.11\lib\net40\Newtonsoft.Json.dll&amp;lt;/HintPath&amp;gt;
&amp;lt;/Reference&amp;gt;
&amp;lt;Reference Include="System.Net.Http"&amp;gt;
  &amp;lt;Private&amp;gt;True&amp;lt;/Private&amp;gt;
  &amp;lt;HintPath&amp;gt;..\packages\Microsoft.Net.Http.2.0.30506.0\lib\net40\System.Net.Http.dll&amp;lt;/HintPath&amp;gt;
&amp;lt;/Reference&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you had downloaded &lt;a href="http://www.nuget.org/packages/Newtonsoft.Json"&gt;Newtonsoft.Json&lt;/a&gt; and &lt;a href="http://www.nuget.org/packages/Microsoft.Net.Http"&gt;Microsoft.Net.Http&lt;/a&gt;, expanded them into a &lt;code&gt;lib&lt;/code&gt; folder, and added references to their assemblies yourself, you would have ended up with virtually the same result as what you got through NuGet here. That’s because Visual Studio and MSBuild don’t understand the concepts of package at all, so we’re just reusing the mechanisms that were understood. But this detail of Hint Paths causes quite a few problems and introduces several limitations.&lt;/p&gt;

&lt;h3 id="fixed-package-versions"&gt;Fixed Package Versions&lt;/h3&gt;

&lt;p&gt;NuGet centralizes packages at the solution-level so that if packages are reused in multiple projects in the solution, only one copy of the package is needed. But since it’s possible to have multiple package versions in use across a solution, we need to have the package versions in the paths. That results in the version being coded into the project file and all of the hint paths.&lt;/p&gt;

&lt;p&gt;A lot of users would like package references to floating versions where the latest patch, minor, or major version can be used automatically. This would enable package updates to be consumed automatically in your project during development, while allowing you to lock the versions down as you stabilize for deployment. But with package versions embedded in the project file’s hint paths, the versions become fixed.&lt;/p&gt;

&lt;h3 id="frequent-merge-conflicts"&gt;Frequent Merge Conflicts&lt;/h3&gt;

&lt;p&gt;On medium to large teams, we hear that merge conlicts arise often because of all of the hint paths and assembly references embedded in the project. Merge conflicts in XML files… gah!&lt;/p&gt;

&lt;h3 id="global-package-installation"&gt;Global Package Installation&lt;/h3&gt;

&lt;p&gt;Large packages (especially packages for use in native projects) can take up a good chunk of your solid state hard drive. We’ve received many requests to support global package installations where the package is only on disk in one place but reused across many solutions. With relative paths to assemblies in the project files, it’s virtually impossible to pull off global package installations.&lt;/p&gt;

&lt;h3 id="multi-homed-projects"&gt;Multi-Homed Projects&lt;/h3&gt;

&lt;p&gt;It’s pretty common to include a project in mutliple solutions. Unfortunately, NuGet cannot understand when this is the case. And because NuGet uses a &lt;code&gt;packages&lt;/code&gt; folder at the solution level, the Hint Paths in projects become relative to the solution. If there are multiple solutions using a project, these relative paths can easily break.&lt;/p&gt;

&lt;h3 id="project-re-targeting"&gt;Project Re-Targeting&lt;/h3&gt;

&lt;p&gt;In the last few years, project re-targeting has become much more common–that is when you need to change the target framework(s) you’re building your project for. Mobile platforms and portable class libraries have introduced the need to re-target your project on a somewhat regular basis. But since NuGet performed target framework selection at package installation time, projects end up with Hint Paths specific to the framework(s) that were targeted at the time of installation.&lt;/p&gt;

&lt;p&gt;NuGet records into &lt;code&gt;packages.config&lt;/code&gt; the target framework that was in use when the package was installed. When the project is re-targeted, the tooling can detect which packages need to be reinstalled. Unfortunately, &lt;a href="http://docs.nuget.org/docs/workflows/reinstalling-packages"&gt;reinstalling packages&lt;/a&gt; is sometimes cumbersome and error-prone; you’re left not quite sure what to do.&lt;/p&gt;

&lt;h2 id="part-of-the-platform"&gt;Part of the Platform&lt;/h2&gt;

&lt;p&gt;When NuGet was introduced, we simply bolted it onto the existing Visual Studio and MSBuild. It was the only way to ship and gain initial adoption. Almost 4 years later, we’ve accomplished those goals and then some. But without being part of the platform, NuGet cannot offer expected package management features to our users.&lt;/p&gt;

&lt;p&gt;The good news is that the NuGet, ASP.NET, Visual Studio, CLR, MSBuild, and C++ teams (among others) recognize this. We are all partnering to get NuGet package management adopted into the platform. ASP.NET vNext has been architected around NuGet packages from day one and the benefits are obvious. We’re hoping to gain many of the same benefits on other platforms.&lt;/p&gt;

&lt;h3 id="goals"&gt;Goals&lt;/h3&gt;

&lt;p&gt;While ASP.NET vNext has already gained a lot by understanding NuGet packages in its core, making progress in all other project systems is a bit trickier. Nonetheless, here are some of the features we’re hoping to unlock with the partnerships:&lt;/p&gt;

&lt;h4 id="leave-project-files-alone"&gt;Leave Project Files Alone&lt;/h4&gt;

&lt;p&gt;Instead of adding assembly references with Hint Paths into projects through the DTE, we want to leave project files alone. This would avoid the XML merge conflicts that arise far too often. Only the package manifest (&lt;code&gt;packages.config&lt;/code&gt;) would be updated when a package is installed.&lt;/p&gt;

&lt;h4 id="automatic-re-targeting"&gt;Automatic Re-Targeting&lt;/h4&gt;

&lt;p&gt;Rather than choosing the right target framework at package installation time, we want to make the choice at compile time. This would enable automatic re-targeting for packages, so that when you change your target framework, the next compile would automatically use the appropriate assembly references.&lt;/p&gt;

&lt;h4 id="global-package-installation-1"&gt;Global Package Installation&lt;/h4&gt;

&lt;p&gt;If NuGet is resolving assembly paths at compile time anyway, then the global package installation feature is unblocked. NuGet would be able to look up paths from a global installation folder as well as from a solution-level folder.&lt;/p&gt;

&lt;p&gt;We expect we’ll search several paths, with the solution-level location having the highest precedence.&lt;/p&gt;

&lt;h4 id="multi-homing"&gt;Multi-Homing&lt;/h4&gt;

&lt;p&gt;With compile-time reference resolution, we can also better support projects being reused in multiple solutions. We’d no longer have relative hint paths causing problems.&lt;/p&gt;

&lt;h4 id="floating-package-versions"&gt;Floating Package Versions&lt;/h4&gt;

&lt;p&gt;We want to allow package references to be configured to automatically pick up new versions within a specified version range, rather than always being fixed to a specific version. When we introduce this, we’d also need to introduce a “lock” mechanism where you could override the floating versions in a separate manifest file, perhaps &lt;code&gt;packages.lock.config&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id="command-line-installation"&gt;Command-Line Installation&lt;/h4&gt;

&lt;p&gt;If NuGet is no longer modifying project files during package installations, then we could allow package installation from the command-line. Imagine if &lt;code&gt;nuget.exe install&lt;/code&gt; could just update &lt;code&gt;packages.config&lt;/code&gt; and the package would be used at the next compile; this could finally be doable.&lt;/p&gt;

&lt;h3 id="limitations"&gt;Limitations&lt;/h3&gt;

&lt;p&gt;Many of the benefits we outlined above should work out very well for packages that contain assembly references only. For packages that contain content files, the existing behavior would remain the same. MSBuild imports would continue to work as they do today as well. And PowerShell? Well, we expect we’ll keep PowerShell as-is for now, but we know we need to think about this topic some more.&lt;/p&gt;

&lt;h2 id="next-steps"&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;We’ve made good progress with our partner teams on all of this, but there’s a lot left to do. We’ll follow up soon with notes on the designs we believe will accomplish the goal of getting NuGet package management deeper into the platform.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141010/nuget-is-broken.html" /><a10:updated>2014-10-10T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141008/vs-tooling</guid><title>Visual Studio Tooling Guidance</title><description>&lt;p&gt;As NuGet continues to gain momentum, more Microsoft teams have been seeking to install NuGet packages from their Visual Studio tooling.  This began with ASP.NET, where NuGet was born, when project templates started coming with pre-installed NuGet packages.  More recently, we’ve heard of teams all across Microsoft with tooling gestures that result in NuGet packages being installed.&lt;/p&gt;

&lt;p&gt;We have some guidance we give these teams, but some have questioned our guidance.  We’re here to ask if you agree with us or if you think we should adapt to meet the expectations of these other teams.&lt;/p&gt;

&lt;h2 id="installing-packages-from-nugetorg"&gt;Installing Packages From nuget.org&lt;/h2&gt;

&lt;p&gt;The most common question is how tooling can install packages directly from &lt;a href="http://www.nuget.org"&gt;nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="benefits-of-online-package-installation"&gt;Benefits of Online Package Installation&lt;/h3&gt;

&lt;p&gt;Teams (that are usually new to NuGet) believe that they will begin shipping their libraries through NuGet and the libraries will no longer need to be installed on the user’s machine (like traditional SDKs).  They want their tooling to simply connect to nuget.org and install the package when the tooling gesture is performed.&lt;/p&gt;

&lt;p&gt;This would make their tooling installer a bit easier to maintain because they wouldn’t need to include the packages in the installer.  Instead they’d only maintain the tooling that triggers the installation.&lt;/p&gt;

&lt;h3 id="why-we-discourage-online-installation"&gt;Why We Discourage Online Installation&lt;/h3&gt;

&lt;p&gt;There are several reasons why we discourage online installation.  In fact, our Visual Studio API intentionally makes it difficult to do this, but it is technically possible.  Despite our firm guidance against it, some teams have proceeded to use this approach anyway.&lt;/p&gt;

&lt;p&gt;Here are the reasons we cite:&lt;/p&gt;

&lt;h4 id="it-breaks-offline-scenarios"&gt;It Breaks Offline Scenarios&lt;/h4&gt;

&lt;p&gt;Too many teams at Microsoft seem to think users are always online.  We frequently hear from our community that we should never assume a connection (let alone a good one), and we remind other teams of this as often as we can.&lt;/p&gt;

&lt;p&gt;If the tooling requires a connection to nuget.org, and the user is offline, there’s a whole new failure path that gets opened up.  What should the tooling do?  Fail and show a message?  Or fall back to a local package source?  If there is a local package source, why not just use it every time?&lt;/p&gt;

&lt;h4 id="it-violates-nuget-configurations"&gt;It Violates NuGet Configurations&lt;/h4&gt;

&lt;p&gt;NuGet users can configure their own package sources–and many users do.  Some users completely disable nuget.org and use their own internal package sources instead.  In fact, companies can even utilize &lt;a href="http://docs.nuget.org/docs/reference/nuget-config-file#NuGet_config_extensibility_point"&gt;NuGet’s hierarchical configuration&lt;/a&gt; to apply Group Policy that disables nuget.org by default.&lt;/p&gt;

&lt;p&gt;If the user (or company) has disabled the nuget.org package source, for varying reasons including privacy, then Visual Studio tooling should respect this configuration.  Otherwise, the tooling teams must ensure that they alter the Visual Studio privacy policy to indicate that their tooling will connect to nuget.org regardless of the user’s NuGet configuration.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The Visual Studio privacy policy specifically calls out NuGet’s Package Restore feature and that it will connect to nuget.org by default.  But the policy informs users that they can change NuGet’s configuration to disable nuget.org or the Package Restore feature.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="installing-the-latest-package-version"&gt;Installing the Latest Package Version&lt;/h2&gt;

&lt;p&gt;Another frequent desire from tooling teams is to always install the latest version of the package.  This is another detail where we strongly advise against this behavior, and we get strong pushback from other teams.  Our Visual Studio API makes this exceptionally difficult to achieve, and teams have complained about how hacky their solutions need to be–we then explain to them that it’s because we really don’t want them doing it.&lt;/p&gt;

&lt;h3 id="arguments-for-installing-the-latest-version"&gt;Arguments for Installing the Latest Version&lt;/h3&gt;

&lt;p&gt;“We want to iterate on our packages more often than we ship our tooling.”  That’s what we hear every time a team argues for installing the latest version of the package rather than a fixed version.&lt;/p&gt;

&lt;p&gt;We also hear the argument that, “Our package coincides with an online service and we must keep them in sync.”&lt;/p&gt;

&lt;h3 id="requiring-a-fixed-version"&gt;Requiring a Fixed Version&lt;/h3&gt;

&lt;p&gt;With tooling that installs the latest version of a package, the tooling gesture becomes temporal, with the results of the gesture changing over time.  Perhaps this is just personal opinion, but I’d be furious if initiating a tooling gesture had a different effect today than it did three weeks ago or on a different project.&lt;/p&gt;

&lt;p&gt;Additionally, the tooling now becomes vulnerable to changes in the package that are incompatible with the tooling.  Sure, you can argue that &lt;a href="http://semver.org"&gt;Semantic Versioning&lt;/a&gt; can be used to install the latest patch or minor version where compatibility is guaranteed, but I’ll respond with three counter arguments:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;There’s no such thing as a compatibility guarantee&lt;/li&gt;
  &lt;li&gt;And all you’re doing is expanding your test matrix, with the possibility of handcuffing yourself&lt;/li&gt;
  &lt;li&gt;Besides, this would only help users who haven’t yet installed the package; it doesn’t solve the problem for users who already have&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What happens when you need to make a library change that breaks the tooling?  I guess you’re going to need to change your major version and ship new tooling anyway.  If you need to plan for iterating on your tooling, then why not just iterate on the tooling in the first place?&lt;/p&gt;

&lt;p&gt;Overall, we declare that the package consumer must be in control of when new package versions are installed.  Therefore, we summarize this topic by declaring:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make the tooling install a fixed version&lt;/li&gt;
  &lt;li&gt;Allow the user to utilize existing NuGet tooling to update the package when it’s right for them&lt;/li&gt;
  &lt;li&gt;Update your tooling when you need to make a change to the tooling and package together&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Never let tooling update a package that is already installed!&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We believe the last point is especially important.  If a tooling gesture that requires a package to be installed could update the package, the user’s application could become broken in ways you can’t predict.  Worse yet, updating the package for the sake of one tooling gesture could break the application in a distant area that the user might not even realize could be affected.  The package consumer is the only one who knows how the packages are being used in their application and therefore they should be the only ones controlling when packages are updated.&lt;/p&gt;

&lt;h2 id="nuget-should-notify-users-of-package-updates"&gt;NuGet Should Notify Users of Package Updates&lt;/h2&gt;

&lt;p&gt;After teams hear our guidance on installing fixed package versions through tooling, they almost always complain about how hard it is for users to update packages.  This is especially true for teams whose users are relatively new to NuGet and aren’t yet accustomed to checking for NuGet package updates.&lt;/p&gt;

&lt;h3 id="projects-need-to-be-kept-updated"&gt;Projects Need To Be Kept Updated&lt;/h3&gt;

&lt;p&gt;Package authors generally think every update they push is an important one and their users need to update right away.  Depending on the type of package, this can sometimes be valid.  If the package coincides with a service, then it’s possible that users must get the update.  We’ve seen circumstances where server APIs were changed and old clients were broken.  For those situations the package consumer does need to get the latest version of the package in order for their application to work.  But in the vast majority of other scenarios, the package updates aren’t nearly as important to package consumers as the authors would like to believe.&lt;/p&gt;

&lt;h3 id="package-update-notifications-fall-short"&gt;Package Update Notifications Fall Short&lt;/h3&gt;

&lt;p&gt;Despite some authors thinking package update notifications would be a panacea, it certainly wouldn’t be.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How would NuGet control the flow of notifications to the user so that only truly important updates cause notifications?&lt;/li&gt;
  &lt;li&gt;Who decides what is “important”?&lt;/li&gt;
  &lt;li&gt;At what point would the notification be presented to the user?&lt;/li&gt;
  &lt;li&gt;How would the user dismiss or “snooze” notifications?&lt;/li&gt;
  &lt;li&gt;How would you notify the user if they aren’t actively working on the project that consumes the package?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The last point is the most crucial I believe.  If you’re relying on notifications inside Visual Studio to inform the user that an installed package is out of date, but the user’s application is deployed to production and in maintenance mode, how will they ever get the notification?&lt;/p&gt;

&lt;h2 id="your-thoughts"&gt;Your Thoughts&lt;/h2&gt;

&lt;p&gt;What do you think?  Is our guidance on the mark here, or do you think we should adjust?  We’d appreciate hearing your feedback, especially from the package consumer point of view.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141008/vs-tooling.html" /><a10:updated>2014-10-08T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141002/visual-studio-2010</guid><title>Discontinuing Updates for Visual Studio 2010</title><description>&lt;p&gt;As we work on some big changes for NuGet 3.x, we’re finding that we’re at a crossroads: Should we use .NET 4.5 and improve our Visual Studio UI using new features available in Visual Studio 2012, Visual Studio 2013, and Visual Studio “14”; or should we retain support for Visual Studio 2010?&lt;/p&gt;

&lt;p&gt;Visual Studio 2010 has been supported since NuGet’s introduction.  But supporting it prevents us from using .NET 4.5 and since it has different visual styling from the newer versions of Visual Studio, it’s holding us back on some of our new UI.&lt;/p&gt;

&lt;h2 id="visual-studio-2010-usage"&gt;Visual Studio 2010 Usage&lt;/h2&gt;

&lt;p&gt;In July 2013, we started capturing what version of Visual Studio was being used when a package was installed.  Here’s what the data shows us from then vs. now:&lt;/p&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Visual Studio Version&lt;/th&gt;
            &lt;th&gt;Usage in July 2013&lt;/th&gt;
            &lt;th&gt;Usage in September 2014&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Visual Studio 2010&lt;/td&gt;
            &lt;td&gt;16%&lt;/td&gt;
            &lt;td&gt;6%&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Visual Studio 2012&lt;/td&gt;
            &lt;td&gt;69%&lt;/td&gt;
            &lt;td&gt;28%&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Visual Studio 2013&lt;/td&gt;
            &lt;td&gt;11%&lt;/td&gt;
            &lt;td&gt;62%&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan="3"&gt;
                &lt;em&gt;The remaining usage is spread across WebMatrix and Visual Studio "14"&lt;/em&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;While 6% of package downloads through Visual Studio 2010 is still notable, the quick adoption of Visual Studio 2013 is impressive.  We expect Visual Studio “14” to also have quick adoption.&lt;/p&gt;

&lt;h2 id="discontinung-updates"&gt;Discontinung Updates&lt;/h2&gt;

&lt;p&gt;If we “drop” Visual Studio 2010, here’s what it would mean:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NuGet 3.0+ would no longer include updates to the Visual Studio 2010 NuGet extension&lt;/li&gt;
  &lt;li&gt;NuGet 2.8 would remain available for Visual Studio 2010 users&lt;/li&gt;
  &lt;li&gt;New features introduced in NuGet 3.0+ would not be available to those users&lt;/li&gt;
  &lt;li&gt;Packages that require new features of 3.0+ would not be installable through Visual Studio 2010&lt;/li&gt;
  &lt;li&gt;The nuget.org gallery would continue to work for you as it does today&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, we plan to move forward with this decision.  We would continue updating NuGet for Visual Studio 2012, Visual Studio 2013, and Visual Studio “14”.&lt;/p&gt;

&lt;h2 id="objections"&gt;Objections?&lt;/h2&gt;

&lt;p&gt;If you have objections to this plan, please leave us a comment explaining why you’re still using Visual Studio 2010 and why continued NuGet updates are important to you.  Remember, the existing NuGet 2.8 extension would remain available to you, and nuget.org will continue to work for you, you just wouldn’t be getting the latest NuGet features.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141002/visual-studio-2010.html" /><a10:updated>2014-10-02T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20141001/targetframeworkfiltering</guid><title>Target Framework Filtering and a Pending Breaking Change</title><description>&lt;p&gt;Have you ever seen this error before?&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-10-01-targetframeworkfiltering/01-error.png" alt="Could not install package because it does not contain any files that are compatible with your framework" /&gt;&lt;/p&gt;

&lt;p&gt;Doesn’t it make you want to yell and scream at NuGet, “Why did you just show it to me if I couldn’t install it!?‽”&lt;/p&gt;

&lt;p&gt;Yeah, it makes us want to yell and scream too, so we decided to set about fixing it! Along with that, we’ve also discovered a bug we want to correct but unfortunately, it’s a breaking change so we wanted to get your feedback and do it in NuGet 3.0.&lt;/p&gt;

&lt;h2 id="target-framework-filtering-in-search"&gt;Target Framework Filtering in Search&lt;/h2&gt;
&lt;p&gt;We are deploying a change to make the nuget.org Search API filter out packages (and versions of packages) that are incompatible with the framework your project targets. This means that if you are targetting .NET 4.0, you will see MVC 4 but you won’t see MVC 5 in the list, because MVC 4 is the latest version that supports .NET 4.0. This also means that if you’re building a Windows Phone App, MVC won’t show up at all because no versions of it are compatible with Windows Phone.&lt;/p&gt;

&lt;p&gt;This feature should work in version 2.1 of NuGet and up. Since adding the new Search API in that version we’ve always sent the target framework of the project to the server, now we’ve just turned on the code on the server to do something with that data.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We expect this to take effect around 6:00pm Pacific time on October 1st&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="some-caveats"&gt;Some Caveats&lt;/h3&gt;
&lt;p&gt;There are a few caveats and quirks with this change, but they should be minor and affect very few users. The biggest one is that if you open the dialog from a package that targets a Xamarin framework, a portable profile or a framework we don’t understand, the filtering will be disabled. This is due to some limitations in our client-server interaction in NuGet 2.x. The good news is, we plan to fix those in 3.0! For the existing 2.x clients, we felt it would be better to just disable filtering when we don’t recognize a framework rather than accidentally filter in or out packages that shouldn’t be filtered.&lt;/p&gt;

&lt;p&gt;We also may occasionally filter out a package that NuGet will &lt;em&gt;technically&lt;/em&gt; allow you to install. In those cases, you can still use Install-Package from PowerShell to force NuGet to try and install the package. However, NuGet only allows you to install these packages due to what we believe is a bug and something that we will be correcting in 3.0.&lt;/p&gt;

&lt;h2 id="breaking-change-to-target-framework-handling"&gt;Breaking Change to Target Framework Handling&lt;/h2&gt;
&lt;p&gt;In NuGet 3.0, we will be introducing a small breaking change in our Target Framework handling. We strongly believe this will have a very minimal impact on users, but we want to tell you about it and get your feedback.&lt;/p&gt;

&lt;p&gt;Consider a package with the following files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;content/
	web.config.transform
lib/
	net40/
		MyThingy.dll
	net45/
		MyThingy.dll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In NuGet 2.0, if a package contains a file in &lt;code&gt;content/&lt;/code&gt; or &lt;code&gt;lib/&lt;/code&gt; that is &lt;strong&gt;not&lt;/strong&gt; within a target framework folder, the package is allowed to install in to &lt;strong&gt;any project&lt;/strong&gt; targeting &lt;strong&gt;any framework&lt;/strong&gt; no matter what folder structure is used in the other folders. However, we believe that this is not generally what the author intends. In the above example, the author likely intended for the package to be installable into &lt;code&gt;net40&lt;/code&gt; and &lt;code&gt;net45&lt;/code&gt; projects &lt;strong&gt;only&lt;/strong&gt;, but for the same config transform to be applied &lt;strong&gt;regardless of the target framework&lt;/strong&gt;. In fact, this is exactly how the EntityFramework package is structured (with a few extra files), meaning EntityFramework can technically be installed into a Windows Store JavaScript project. When you do that, all you end up with is a fairly useless app.config and an entry in packages.config:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-10-01-targetframeworkfiltering/02-what-the-ef.png" alt="EntityFramework installation a JavaScript project" /&gt;&lt;/p&gt;

&lt;p&gt;So, in NuGet 3.0, this behavior will be &lt;strong&gt;removed&lt;/strong&gt;. We think this makes the behavior much clearer and easier to understand. The NuGet 3.0 behavior will be the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A Package has a set of zero or more &lt;em&gt;framework constraints&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;If a Package has no &lt;em&gt;framework constraints&lt;/em&gt;, it can be installed into any project, regardless of target framework.&lt;/li&gt;
  &lt;li&gt;If a Package has &lt;em&gt;framework constraints&lt;/em&gt;, it can be installed into any project that targets a framework &lt;strong&gt;compatible&lt;/strong&gt; with any framework in the set.&lt;/li&gt;
  &lt;li&gt;If a Project targets a Portable profile, a package can only be installed if it has no &lt;em&gt;framework constraints&lt;/em&gt;, or contains a portable profile &lt;em&gt;framework constraint&lt;/em&gt; that targets a &lt;strong&gt;superset&lt;/strong&gt; (i.e. the same, or more, but never fewer) of the frameworks supported by the project.&lt;/li&gt;
  &lt;li&gt;Package &lt;em&gt;framework constraints&lt;/em&gt; are defined by the following algorithm:
    &lt;ol&gt;
      &lt;li&gt;Start with an empty set of &lt;em&gt;constraints&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;For each &lt;a href="http://docs.nuget.org/docs/reference/nuspec-reference#Specifying_Framework_Assembly_References_(GAC)"&gt;Framework Assembly Reference&lt;/a&gt; with a non-null &lt;code&gt;targetFramework&lt;/code&gt; value, add that framework to the set of constraints&lt;/li&gt;
      &lt;li&gt;For each file in &lt;code&gt;content/&lt;/code&gt;, &lt;code&gt;lib/&lt;/code&gt;, &lt;code&gt;build/&lt;/code&gt; and &lt;code&gt;tools/&lt;/code&gt;: If file is in a subfolder of one of those top-level folders, AND the subfolder is a valid short framework name (i.e. net40, win81, etc.), add that framework to the set of constraints.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The net effect is this: If you never limit anything to a specific framework, your package can be installed into a project targetting &lt;strong&gt;any framework&lt;/strong&gt;. However (here’s the new bit): as soon as you start limiting package contents to a specific framework, you will have to specify all the frameworks you want to support &lt;em&gt;somewhere&lt;/em&gt; in the package. We still use the same logic we always used when selecting the files &lt;strong&gt;within&lt;/strong&gt; the package, so if a file is not in a framework subfolder we will copy it (or reference it, or import it, or whatever we normally do with it) regardless of your project’s target framework. The only difference here is that adding a file that is not framework-specific does not lift the framework constraints placed by other files, whereas in NuGet 2.0 it would.&lt;/p&gt;

&lt;p&gt;There’s still plenty of time to discuss and adjust this policy so if you have comments, please let us know!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20141001/targetframeworkfiltering.html" /><a10:updated>2014-10-01T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140924/supporting-semver-2.0.0</guid><title>Supporting Semantic Versioning 2.0.0</title><description>&lt;p&gt;We adopted &lt;a href="http://semver.org"&gt;Semantic Versioning&lt;/a&gt; (SemVer) in &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-1.6"&gt;NuGet 1.6&lt;/a&gt;.  At the time, &lt;a href="http://semver.org/spec/v1.0.0.html"&gt;SemVer 1.0.0&lt;/a&gt; was the current version of the spec.  Adopting SemVer provided NuGet support of pre-release package versions.&lt;/p&gt;

&lt;p&gt;Since introducing SemVer support, SemVer has reached &lt;a href="http://semver.org/spec/v2.0.0.html"&gt;2.0.0&lt;/a&gt; and introduced some new features.  There have been &lt;a href=""&gt;a lot&lt;/a&gt; of requests for NuGet to support SemVer 2.0.0 so these features can be used.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3924"&gt;Allow Semantic Versioning 2.0.0 characters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/1796"&gt;Support build version information using SemVer RC1 notation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3416"&gt;Support for SemVer 2.0 specification’s notion of pre-release builds&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2988"&gt;NuGet should allow versions like 2.1-alpha.10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2636"&gt;Support semver &amp;gt;= 2.0.0-rc.1 specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3805"&gt;Proper pre-release Semantic Versioning not respected&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2915"&gt;Support Full Semantic Versioning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2346"&gt;Package versioning: combining prerelease &amp;amp; build number not supported&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2247"&gt;Implement semver v2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2137"&gt;Support SemVer build version in version strings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3426"&gt;NuGet imposes artificial max string length of 20 characters for “SpecialVersion” (aka pre-release)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/2931"&gt;Version n.n-alpha.n “is not a valid version string”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/1697"&gt;Update SemanticVersion to match latest specs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ve reviewed these issues that have been filed, consolidated them into just a couple of open issues, and we are planning to support these new SemVer 2.0.0 features in NuGet 3.0.  We expect they’ll be implemented between NuGet 3.0 Beta and NuGet 3.0 RTM–probably in a NuGet 3.0 RC release.&lt;/p&gt;

&lt;h2 id="dot-separated-pre-release-identifiers"&gt;Dot-Separated Pre-Release Identifiers&lt;/h2&gt;

&lt;p&gt;The most popular new feature in SemVer 2.0.0 is the dot-separated identifiers within pre-release labels.  For contrast, here are some pre-release version numbers using SemVer 1.0.0, ordered in the way a client understands them:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;2.0.0-alpha1&lt;/li&gt;
  &lt;li&gt;2.0.0-alpha10&lt;/li&gt;
  &lt;li&gt;2.0.0-alpha2&lt;/li&gt;
  &lt;li&gt;2.0.0-beta&lt;/li&gt;
  &lt;li&gt;2.0.0-beta2&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While not everyone hits Alpha 10 in their pre-releases, it’s happened enough that this has been reported as an issue on NuGet.  This is working by design though, as the SemVer 1.0.0 spec didn’t support numeric value sorting within pre-release labels.  SemVer 2.0.0 introduces the feature with dot-separated identifiers.  It makes the following possible:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;2.0.0-alpha.1.11.28&lt;/li&gt;
  &lt;li&gt;2.0.0-alpha.2.1.4&lt;/li&gt;
  &lt;li&gt;2.0.0-alpha.10.9.18&lt;/li&gt;
  &lt;li&gt;2.0.0-beta&lt;/li&gt;
  &lt;li&gt;2.0.0-beta.2&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;NuGet 3.0 will understand these new dot-separated identifiers and properly sort them.&lt;/p&gt;

&lt;h2 id="build-metadata"&gt;Build Metadata&lt;/h2&gt;

&lt;p&gt;SemVer 2.0.0 also introduced a new version segment: build metadata.  Build metadata is appended to the version using the &lt;code&gt;+&lt;/code&gt; character.  While build metadata doesn’t affect version precedence, it allows the package author to embed metadata into the version number such as a commit hash, date, build number, or anything else that could be used for diagnostics.&lt;/p&gt;

&lt;p&gt;NuGet will have the following behaviors for version build metadata:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The build metadata will be respected and retained within the nuspec.&lt;/li&gt;
  &lt;li&gt;The build metadata will be shown in the UI as part of the version number.&lt;/li&gt;
  &lt;li&gt;NuGet.org will not allow you to publish multiple “builds” of the same version of a package (two versions where the only difference is the build metadata).&lt;/li&gt;
  &lt;li&gt;Other NuGet feeds may choose to allow multiple builds.  If they do, when the NuGet client needs to select the latest version of a package, it will arbitrarily select between packages that differ only by build metadata.&lt;/li&gt;
  &lt;li&gt;The NuGet client could however allow you to specifically choose a “build” of a package if the feed exposes multiple builds.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="downstream-implications"&gt;Downstream Implications&lt;/h2&gt;

&lt;p&gt;The changes required to support SemVer 2.0.0 in the NuGet client are quite simple, yes.  However, there are downstream effects that would occur, and those are harder to deal with.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;All NuGet Servers would need to be updated to support the new version strings; otherwise the packages will fail to publish to the server&lt;/li&gt;
  &lt;li&gt;All NuGet Clients need to understand the change as well, so that when these new packages are uploaded to servers and exposed on the feeds, they will be able to parse the version&lt;/li&gt;
  &lt;li&gt;Projects that consume packages using these new versioning features will require NuGet 3.0 to be able to install/uninstall/restore packages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While it’s acceptable to make this change and have packages fail to upload to servers when the version isn’t recognized, it’s not acceptable for NuGet Servers to begin exposing these new version numbers to old NuGet clients–it causes errors.  Therefore we must implement this in a way that won’t expose these new version numbers to old NuGet clients.&lt;/p&gt;

&lt;p&gt;And it’s noteworthy that the third point is left open here.  If you use NuGet 3.0 to install a package that uses a SemVer 2.0.0 version number, you won’t be able to use NuGet 1.x or 2.x clients to work with that project any longer.  That includes NuGet Package Restore where you might have nuget.exe in place on your machine to perform package restore for any project/solution.&lt;/p&gt;

&lt;h2 id="versioning-the-nuget-feed-protocol"&gt;Versioning the NuGet Feed Protocol&lt;/h2&gt;

&lt;p&gt;The good news is that we’ve been through this exercise before.  Back when NuGet was first adopting Semantic Versions, we were faced with the exact same problems.  When we introduced support for SemVer 1.0.0, we moved from NuGet API v1 to NuGet API v2.  This allowed us to change the data type of the package versions from a .NET System.Version (4-segment version number) to a string that could represent either a .NET System.Version or a Semantic Version.&lt;/p&gt;

&lt;p&gt;We are already creating a new NuGet feed protocol, so it’s convenient to make this SemVer change now.  We’ll allow SemVer 2.0.0 packages on NuGet API v3, but we won’t allow them to show up on API v2.  That means if you include build metadata in your package’s version, the package will only show up for NuGet 3.0+ users.&lt;/p&gt;

&lt;p&gt;While creating a package that uses a SemVer 2.0.0 version, we will recognize this and annotate the package as requiring NuGet 3.0 as the minimum client version.  If that minimum client version wasn’t already specified, we’ll provide a warning in the pack console output.&lt;/p&gt;

&lt;p&gt;While making these changes, we’ll also relax the current 20-character limitation on pre-release labels.  We expect to extend this to 255 characters.&lt;/p&gt;

&lt;h2 id="feedback"&gt;Feedback&lt;/h2&gt;

&lt;p&gt;We welcome your feedback on this plan.  While we’ve been thinking about this for a long time, we still have a little while before it’ll get baked in.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140924/supporting-semver-2.0.0.html" /><a10:updated>2014-09-24T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140820/new-statistics-warehouse</guid><title>A New Package Statistics Warehouse</title><description>&lt;h2 id="the-warehouse-is-dead-long-live-the-warehouse"&gt;The Warehouse is Dead, Long Live the Warehouse!&lt;/h2&gt;

&lt;p&gt;Back in June, we blogged that our &lt;a href="/20140603/nuget-stats.html"&gt;package statistics were full of lies&lt;/a&gt;.  We made a fix and expected reports to become correct on June 26th.  When June 26th came and went though, we discovered that the numbers were still questionable.  Since then, we’ve identified a few other issues leading to invalid statistics, and we’ve made notable improvements to our statistics system.  We are now confident that the statistics are trustworthy.&lt;/p&gt;

&lt;p&gt;As part of the work, we decided to discard our existing package statistics warehouse database and create a new one.  This new warehouse would only be populated with clean data and none of the invalid, historic data would survive.&lt;/p&gt;

&lt;h2 id="how-we-create-statistics-reports"&gt;How We Create Statistics Reports&lt;/h2&gt;

&lt;p&gt;If you don’t already have the background on how we create our package statistics reports, here’s an overview:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-06-02-nuget-stats/dataflow.png" alt="Data Flow for Download Statistics" /&gt;&lt;/p&gt;

&lt;p&gt;You can read more about &lt;a href="/20140603/nuget-stats.html#background"&gt;this data flow&lt;/a&gt; on our previous post about package statistics.&lt;/p&gt;

&lt;h2 id="what-went-wrong"&gt;What Went Wrong&lt;/h2&gt;

&lt;p&gt;The bug we fixed a couple months ago was related to how we pull data out of the primary gallery SQL database, where we weren’t properly ordering the results and it led to cases where we would get the same results out multiple times over multiple runs.  After fixing that and actively monitoring the data flowing through the system, we observed statistics still getting multiplied in our statistics warehouse.&lt;/p&gt;

&lt;p&gt;Moving data from our primary gallery SQL database to our warehouse was done with a record-by-record replicate process.  The logic was something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Begin loop
    &lt;ol&gt;
      &lt;li&gt;[Warehouse] Read our replication marker that indicates the most recent download statistic that has been replicated&lt;/li&gt;
      &lt;li&gt;[Gallery] Read a batch of download events to be replicated&lt;/li&gt;
      &lt;li&gt;Begin inner loop over those statistics
        &lt;ol&gt;
          &lt;li&gt;[Warehouse] Replicate each download event into the warehouse’s &lt;a href="http://en.wikipedia.org/wiki/Star_schema"&gt;star schema&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;[Warehouse] Update the replication marker to the key of the download event that was just replicated&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Continue through all of the events in the batch that was just read&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Continue until a batch comes back empty because all events are older than the replication marker&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There were a few issues with this process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It relied heavily on never having multiple instances of itself running&lt;/li&gt;
  &lt;li&gt;It was a record-by-record replication that wasn’t scaling very well&lt;/li&gt;
  &lt;li&gt;It was basically an infinite loop since download events always come in faster than a batch of them can be replicated&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After recognizing these three issues, we studied each of them closely to determine how impactful each issue was.&lt;/p&gt;

&lt;h3 id="multiple-instances"&gt;Multiple Instances&lt;/h3&gt;

&lt;p&gt;We found circumstances under which we had 2 instances of the replication running in our backend system.  And with the recognition that our process relied heavily on a single instance running, we studied the effects of 2 concurrent instances.  We observed that our replication marker would increase (as expected) and then momentarily &lt;em&gt;decrease&lt;/em&gt;.  In our outer loop above, our two instances had each read a batch of events and were iterating through them at different speeds–this lead to duplication of the replicated stats.&lt;/p&gt;

&lt;p&gt;As we saw with our previous replication bug, this was leading to random duplication of download statistics in the warehouse and proved to us that none of the data in our warehouse could be trusted.&lt;/p&gt;

&lt;h3 id="scaling"&gt;Scaling&lt;/h3&gt;

&lt;p&gt;Once we concluded our warehouse data was invalid, we began plans for discarding the warehouse and populating a new warehouse with only clean data.  We began calculating how long it would take to reprocess the download events from the gallery database, replicating them into the new warehouse.  For the 6 weeks of download events present in the gallery database, we found that it would take 2-3 weeks to process them.  That means we were only able to replicate events 2-3 times as fast as they are coming in.  That’s not good!&lt;/p&gt;

&lt;p&gt;We knew this meant we needed to build a more efficient replication process that could A) keep up with increasing download events, and B) catch us up in a reasonable timeframe.&lt;/p&gt;

&lt;h3 id="infinite-loop"&gt;Infinite Loop&lt;/h3&gt;

&lt;p&gt;As the loop was constructed above, it becomes a virtually infinite loop.  That is okay on the surface–since it will always have work to do, let it keep running.  But for our backend work services, we like to monitor when processes start and how long they take–this allows us to know how long a job should take and then trigger alarms when jobs are running longer than expected.  We needed to restructure the process so that we could monitor its progress more effectively and know when the process was truly hung or failing.&lt;/p&gt;

&lt;h2 id="cleaning-it-up"&gt;Cleaning it Up&lt;/h2&gt;

&lt;p&gt;With the problems all understood, we set out to clean all of this up and resume our package statistics reporting as soon as possible.&lt;/p&gt;

&lt;h3 id="a-new-warehouse"&gt;A New Warehouse&lt;/h3&gt;

&lt;p&gt;After some deliberation, we concluded that the data in our existing warehouse was pretty much worthless.  Sure, it was still relatively representative of package downloads, but it certainly wasn’t accurate.  Besides, all of the reports we show on &lt;a href="http://www.nuget.org/stats"&gt;nuget.org/stats&lt;/a&gt; are limited to the last 6 weeks, and we had that data in our gallery database.  So we could discard our existing warehouse; create a new, empty one; and populate it with cleanly replicated statistics.&lt;/p&gt;

&lt;h3 id="a-new-replication-process"&gt;A New Replication Process&lt;/h3&gt;

&lt;p&gt;We replaced the existing record-by-record replication process with a new batch-based process.  It takes the following approach:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;[Gallery] Read the most recent download event that we want to jump to&lt;/li&gt;
  &lt;li&gt;Begin loop
    &lt;ol&gt;
      &lt;li&gt;[Warehouse] Read our replication marker that indicates the most recent download statistic that has been replicated&lt;/li&gt;
      &lt;li&gt;[Gallery] Read a batch of download events to be replicated&lt;/li&gt;
      &lt;li&gt;[Warehouse] Replicate the batch of events into the warehouse in one transaction, updating the replication marker at the same time&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Continue until we’ve replicated all the way through the initially-read download event from the gallery&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This process protects us against the issues we had with the previous system in the following ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Preventing concurrent processes from duplicating data
    &lt;ol&gt;
      &lt;li&gt;The &lt;a href="https://github.com/NuGet/NuGet.Warehouse/blob/master/src/NuGet.Warehouse/dbo/Stored%20Procedures/AddDownloadFacts.sql"&gt;warehouse replication process&lt;/a&gt; aggressively locks our replication marker table to guard against concurrent transactions&lt;/li&gt;
      &lt;li&gt;It also filters the events being replicated down to those that are newer than the replication marker&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Scaling to perform far better than 2-3 times the throughput needed, but instead about 25+ times what’s needed
    &lt;ol&gt;
      &lt;li&gt;Pumping entire batches in and performing set-based operations allows SQL to shine the way it was meant to&lt;/li&gt;
      &lt;li&gt;At 25+ times the speed that download events occur, we can process a day’s events in one hour or less&lt;/li&gt;
      &lt;li&gt;We were able to catch up our 6 weeks of data in about a day&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Allowing the job to exit and providing extremely verbose logging
    &lt;ol&gt;
      &lt;li&gt;The new job &lt;a href="https://github.com/NuGet/NuGet.Services.Work/blob/master/src/NuGet.Services.Work/Jobs/Stats/ReplicatePackageStatisticsJob.cs#L334"&gt;emits logs&lt;/a&gt; that have detailed information around how many records are left to process, the speed at which it’s processing them, and how much estimated time remains&lt;/li&gt;
      &lt;li&gt;The job reads the gallery’s latest download event before it begins the loop, and then it will only process up to that point&lt;/li&gt;
      &lt;li&gt;This allows the job to exit and work against a decent-sized batch the next time it’s invoked, instead of continuing to process the trickle of events&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="in-production-now"&gt;In Production Now&lt;/h3&gt;

&lt;p&gt;We put this new warehouse and process into production on Monday, August 18th.  The deployment went smoothly and we’ve been actively monitoring the replication job–it’s running very well.&lt;/p&gt;

&lt;h2 id="results"&gt;Results&lt;/h2&gt;

&lt;p&gt;So what does all this mean?  Let’s break down the impact all of this has had:&lt;/p&gt;

&lt;h3 id="data-loss"&gt;Data Loss&lt;/h3&gt;

&lt;p&gt;We lost the “Packages Downloaded Per Month” report on &lt;a href="http://www.nuget.org/stats"&gt;http://www.nuget.org/stats&lt;/a&gt;.  This chart shows the trend of package downloads for the whole system over time.  It usually shows the trend over the past 6 months; now it just shows a dot for July.  Once August wraps up, we’ll see a new dot for August as well.&lt;/p&gt;

&lt;p&gt;During all of this, we also had a window of a 8 days where we were failing to capture download events entirely.  This was an accidental regression introduced into our &lt;a href="https://github.com/nuget/NuGet.Services.Metrics"&gt;Metrics Service&lt;/a&gt; deployment where it was failing to record events into the gallery database entirely.  To be honest, we were distracted by the larger problems with download statistics and overlooked that service was failing as well.  We failed to capture download events from July 30th to August 7th.  That hit will likely be visible in the “Packages Downloaded Per Month” report at the close of August.&lt;/p&gt;

&lt;h3 id="search-results"&gt;Search Results&lt;/h3&gt;

&lt;p&gt;Because package installs over the last 6 weeks boost packages’ search relevance, we had some periods of search relevance being off as our old warehouse lacked recent data but our new warehouse didn’t yet exist.  That is all corrected now and search relevance is properly boosted based on recent installs again.&lt;/p&gt;

&lt;h3 id="lower-numbers"&gt;Lower Numbers&lt;/h3&gt;

&lt;p&gt;With the statistics reports back up and running, package authors will likely see that their download numbers are lower than they were before.  That’s because we’re no longer duplicating the data–the numbers were inflated before.&lt;/p&gt;

&lt;p&gt;Note that only the numbers shown on the package statistics reports were inaccurate before.  The overall/total download counts have remained accurate through this whole process since those numbers aren’t affected by the warehouse replication process.&lt;/p&gt;

&lt;h2 id="going-forward"&gt;Going Forward&lt;/h2&gt;

&lt;p&gt;We’ve improved our monitoring for this whole system, and more members of the team thoroughly understand the processes now too.  Overall, we should be able to maintain high confidence in our package statistics.  We will keep a better eye on it nonetheless.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140820/new-statistics-warehouse.html" /><a10:updated>2014-08-20T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140715/nuget-3.0-ctp1</guid><title>NuGet 3.0 CTP 1 Released</title><description>&lt;p&gt;Today marks an important milestone for &lt;a href="/20140424/building-nuget-3.x.html"&gt;Building NuGet 3.x&lt;/a&gt;; we’ve published a NuGet 3.0 CTP1 build of our Visual Studio extension. This &lt;strong&gt;&lt;em&gt;preview&lt;/em&gt;&lt;/strong&gt; release represents a few months of code refactoring and &lt;a href="/20140711/nuget-architecture.html"&gt;server-side architecture&lt;/a&gt; now being utilized by the client code. While the release doesn’t show off any slick new NuGet features or even address very many bugs, it reflects a lot of engineering work that unblocks us in several ways. We’d like to show you some of the changes we’ve made under the hood and ask for your help validating we haven’t regressed anything outside our test matrix.&lt;/p&gt;

&lt;h2 id="what-we-released"&gt;What We Released&lt;/h2&gt;

&lt;p&gt;The updated extensions can be found on our CodePlex project site under the &lt;a href="https://nuget.codeplex.com/releases/view/116898"&gt;NuGet 3.0&lt;/a&gt; release page. Our pre-release versions don’t get published to the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/"&gt;Visual Studio Extension Gallery&lt;/a&gt;, so you have to download the updates from CodePlex in order to upgrade.&lt;/p&gt;

&lt;h3 id="updates-for-visual-studio-2013-and-visual-studio-14"&gt;Updates for Visual Studio 2013 and Visual Studio “14”&lt;/h3&gt;

&lt;p&gt;For this first CTP of NuGet 3.0, we’re only updating the extensions for Visual Studio 2013 and Visual Studio “14”. We’re not releasing an update for Visual Studio 2010 or Visual Studio 2012 at this time. We have always had a single extension that targets both of those versions, whereas we have separate extension for Visual Studio 2013 and Visual Studio “14”. NuGet 3.0 is now using some libraries that require .NET 4.5, and that would rule out updates for Visual Studio 2010.&lt;/p&gt;

&lt;p&gt;Whether or not subsequent releases for NuGet 3.0 will target Visual Studio 2010 is still undecided, but we’re strongly leaning toward cutting Visual Studio 2010 from the release. If we do make that decision, we’ll remove Visual Studio 2010 support from the Visual Studio 2010/2012 extension, making it Visual Studio 2012 only. We’d then provide support for Visual Studio 2012, Visual Studio 2013, and Visual Studio “14”.&lt;/p&gt;

&lt;p&gt;Rest assured that existing Visual Studio 2010 users will still be supported and will be able to use NuGet and NuGet.org to download and install packages. The NuGet 2.8.1 extension for Visual Studio 2010 will remain supported even though NuGet 3.x would be available for newer versions of Visual Studio.&lt;/p&gt;

&lt;p&gt;To update to the new version, download the VSIX file and double-click it to install it into Visual Studio. Note that for Visual Studio “14” you will first need to uninstall the existing NuGet extension; uninstalling requires running Visual Studio as Administrator.&lt;/p&gt;

&lt;p&gt;Here are the direct download links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/downloads/get/879740"&gt;NuGet Package Manager for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/downloads/get/879741"&gt;NuGet Package Manager for Visual Studio “14” CTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="noticeable-changes"&gt;Noticeable Changes&lt;/h2&gt;

&lt;p&gt;While this CTP mostly represents changes we’ve made under the hood, there are a couple noticeable changes too.&lt;/p&gt;

&lt;h3 id="removed-enable-nuget-package-restore"&gt;Removed ‘Enable NuGet Package Restore’&lt;/h3&gt;

&lt;p&gt;When we introduced &lt;a href="http://docs.nuget.org/docs/reference/package-restore#Automatic_Package_Restore_in_Visual_Studio"&gt;Automatic Package Restore&lt;/a&gt; in &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.7"&gt;NuGet 2.7&lt;/a&gt;, we knew that we’d eventually remove support for the MSBuild-integrated package restore approach. We didn’t want to prematurely remove it so we waited for the community to ask us to do so, and you have.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nuget.codeplex.com/workitem/4019"&gt;NuGet Issue 4019&lt;/a&gt; received quite a few votes and made its rounds on twitter a few times.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Every Time someone enables &lt;a href="https://twitter.com/hashtag/nuget?src=hash"&gt;#nuget&lt;/a&gt; package restore on a solution, a kitten dies. Learn the new workflow! &lt;a href="http://docs.nuget.org/docs/reference/package-restore"&gt;http://docs.nuget.org/docs/reference/package-restore&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Ebbo (@davidebbo) &lt;a href="https://twitter.com/davidebbo/statuses/425493392475168768"&gt;January 21, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Please vote for this &lt;a href="https://twitter.com/hashtag/NuGet?src=hash"&gt;#NuGet&lt;/a&gt; issue and save some kittens &lt;a href="https://nuget.codeplex.com/workitem/4019"&gt;https://nuget.codeplex.com/workitem/4019&lt;/a&gt; /cc &lt;a href="https://twitter.com/davidebbo"&gt;@davidebbo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Xavier Decoster (@xavierdecoster) &lt;a href="https://twitter.com/xavierdecoster/statuses/432976436623060992"&gt;February 10, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;In NuGet 3.0, we are removing the context menu item that allows you to enable MSBuild-integrated package restore on new projects. If you have already enabled MSBuild-integrated package restore within your solution, the behavior will remain the same though:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The project will keep using MSBuild-integrated package restore instead of Automatic package restore&lt;/li&gt;
  &lt;li&gt;If you load new projects into the same solution, the integration is still viral and NuGet will silently enable MSBuild-integrated package restore on all projects within the solution&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can learn how to migrate from MSBuild-integrated package restore to Automatic Package Restore at &lt;a href="http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore"&gt;http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="new-package-source"&gt;New Package Source&lt;/h3&gt;

&lt;p&gt;NuGet 3.0 CTP1 introduces a new package source with the name “nuget.org (3.0.0-ctp1) preview”. This preview package source is based on our new “API v3” protocol with &lt;a href="http://json-ld.org"&gt;JSON-LD&lt;/a&gt;. The URL for the package source is &lt;code&gt;http://preview.nuget.org/ver3-ctp1/&lt;/code&gt;. Here are a few notes on this package source:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The root URL is a 404 (for now) - This is a temporary means for the client to identify that the package source might be v3.&lt;/li&gt;
  &lt;li&gt;In the 404 condition, the client will then send a request to /intercept.json and check for a JSON response.&lt;/li&gt;
  &lt;li&gt;This intercept.json resource identifies the resources the client can use for consuming package metadata instead of issuing OData requests. We’ll cover this more below in the &lt;em&gt;API v3 Requests&lt;/em&gt; section.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There’s a known issue that this package source is getting registered as disabled by default for some users. To switch from the ‘nuget.org’ package source to the new ‘nuget.org (3.0.0-ctp1) preview’ package source, edit your NuGet Package Sources.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-07-15-nuget-3.0-ctp1/package-sources.png" alt="Enable the Preview Package Source" /&gt;&lt;/p&gt;

&lt;h3 id="faster"&gt;Faster!&lt;/h3&gt;

&lt;p&gt;You should notice that this new package source is noticeably faster. We haven’t measured it yet, but we’ve observed that everything is much more responsive. Search, package installation, and update checks should all be faster for you. This is a result of client requests going to our CDN to get data directly out of storage, instead of going through our v2 OData endpoint on the server.&lt;/p&gt;

&lt;h2 id="changes-under-the-hood"&gt;Changes Under the Hood&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, most of the work in this release was actually done under the hood. We have now paid off some technical debt that has been holding us back from introducing new features to NuGet.&lt;/p&gt;

&lt;h3 id="dependency-resolver"&gt;Dependency Resolver&lt;/h3&gt;

&lt;p&gt;NuGet’s dependency resolution has always been a complicated piece of code, partly because it combined a few different concepts together.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Discover and reason over package dependencies&lt;/li&gt;
  &lt;li&gt;Download and unzip packages&lt;/li&gt;
  &lt;li&gt;Install packages into the project, copying in files and adding assembly references&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once the deepest dependency was discovered, we’d start to perform actual package installations then we’d walk up the dependency graph until we reach the top. This was okay until some scenarios required back-tracking, which can result in uninstalling packages that were just installed. More importantly though, the implementation was a mess of spaghetti code that had gotten risky to touch.&lt;/p&gt;

&lt;p&gt;We’ve now completed some drastic refactoring of the dependency resolver and gotten it to where it can perform the actual dependency resolution separately from the act of installing/uninstalling packages. This allows us to make algorithm changes and test them purely against data (as it should have always been).&lt;/p&gt;

&lt;p&gt;As you’d expect, these code changes affect hot code paths and all of the core functionality of NuGet. We’ve tested these changes thoroughly, but please let us know if you find any scenarios where dependency resolution is behaving differently from before.&lt;/p&gt;

&lt;h3 id="api-v3-requests"&gt;API v3 Requests&lt;/h3&gt;

&lt;p&gt;We want NuGet 3.0 to use the new Linked Data protocol we’re implementing for nuget.org, but it is going to take a lot of time to write the new API v3 client and get it fully integrated into the Visual Studio extension. At the same time, we wanted the client to start making API v3 requests as soon as possible, to help us vet the design and protocol. To accomplish this, we’re now intercepting API v2 requests and translating them into API v3 requests when the server implements API v3.&lt;/p&gt;

&lt;p&gt;As mentioned above, we presently detect that a package source implements API v3 by way of a (temporary, hacky) handshake.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The package source URL returns a 404, and&lt;/li&gt;
  &lt;li&gt;Reponds to a request for /intercept.json with a document that provides some interception resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here’s the intercept.json resource that we’re using for this preview:&lt;/p&gt;

&lt;pre&gt;
    {
      "resolverBaseAddress" : "http://preview.nuget.org/ver3-ctp1/packageregistrations/1/",
      "isLatest" : "http://preview.nuget.org/ver3-ctp1/islatest/segment_index.json",
      "isLatestStable" : "http://preview.nuget.org/ver3-ctp1/islateststable/segment_index.json",
      "allVersions" : "http://preview.nuget.org/ver3-ctp1/allversions/segment_index.json",
      "searchAddress" : "https://api-search.nuget.org/search/query",
      "passThroughAddress" : "http://nuget.org"
    }
&lt;/pre&gt;

&lt;p&gt;Once the client completes this handshake with the server, we then intercept all outgoing OData requests the client is going to make, translate them into API v3 requests for the equivalent data, get the responses, and then manufacture OData-style responses out of the data returned.&lt;/p&gt;

&lt;p&gt;So under the hood, when you’re connecting to our new ‘nuget.org (3.0.0-ctp1) preview’ package source, every single request the client makes ends up going against our API v3 Search Service and JSON-LD resources. The JSON-LD resources are served out of Azure Storage and through our CDN; there’s no compute involved and we will achieve a significant improvement in availability.&lt;/p&gt;

&lt;h3 id="package-manager-debug-console"&gt;Package Manager Debug Console&lt;/h3&gt;

&lt;p&gt;For our own testing of the API v2 to API v3 interception, we found that we needed to create a Package Manager Debug Console. This console shows all of the v2 OData requests that are being made, how they’re translated into API v3 requests, whether or not our HTTP cache is hit, and the response details. We decided to include this debug console in the Visual Studio extension so that you too can see how the requests are being intercepted and handled.&lt;/p&gt;

&lt;p&gt;You can open the Package Manager Debug Console through the Tools \ NuGet Package Manager menu.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-07-15-nuget-3.0-ctp1/debug-console-menu.png" alt="Package Manager Debug Console Menu Item" /&gt;&lt;/p&gt;

&lt;p&gt;Once opened, all server requests are shown in the console with the request/response details. If you report any issues with the NuGet 3.0 CTP, we may ask you to provide the console output to us. Note that when you select text in the console, it doesn’t appear to be selected but it really is. Once you right-click after selecting text, you’ll see the text get highlighted properly.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-07-15-nuget-3.0-ctp1/debug-console.png" alt="Package Manager Debug Console" /&gt;&lt;/p&gt;

&lt;h2 id="known-issues"&gt;Known Issues&lt;/h2&gt;

&lt;h3 id="catalog-update-frequency"&gt;Catalog Update Frequency&lt;/h3&gt;

&lt;p&gt;Our CQRS-style architecture on the server is still under development. There are times when our catalog updates are lagging behind, running slowly, or even completely shut off for a while. Once we get to where we’re happy with the server implementation, we’ll publish another NuGet release and switch from a “preview” package source to one that’s more stable.&lt;/p&gt;

&lt;p&gt;We are also not presently replicating &lt;a href="/20130823/Introducing-Edit-Package.html"&gt;package edits&lt;/a&gt; into our API v3 catalog.&lt;/p&gt;

&lt;h3 id="package-source-disabled-by-default"&gt;Package Source Disabled by Default&lt;/h3&gt;

&lt;p&gt;As mentioned previously, some users will not see the ‘nuget.org (3.0.0-ctp1) preview’ package source after installing the new extension. If the package source doesn’t show up for you, check your NuGet Package Source settings and see if it’s disabled.&lt;/p&gt;

&lt;h3 id="ssl-https-not-yet-supported"&gt;SSL (HTTPS) Not Yet Supported&lt;/h3&gt;

&lt;p&gt;The new package source is registered as an HTTP address instead of HTTPS. This is a temporary limitation with our usage of our CDN, but we have a plan to work through it. In a future NuGet 3.0 release, we’ll switch back over to using SSL through an HTTPS address.&lt;/p&gt;

&lt;h3 id="existing-visual-studio-14-extension-must-be-uninstalled"&gt;Existing Visual Studio “14” Extension Must Be Uninstalled&lt;/h3&gt;

&lt;p&gt;If you’re using Visual Studio “14”, you will need to first uninstall the existing NuGet extension and then install the new one. Our previous release in Visual Studio “14” had an incorrect extension identifier; this new release fixes it, but you’ll need to uninstall the old version of NuGet.&lt;/p&gt;

&lt;h2 id="sending-us-feedback"&gt;Sending Us Feedback&lt;/h2&gt;

&lt;p&gt;Please check out this NuGet preview release and try it out. Disable the normal ‘nuget.org’ package source and enable the ‘nuget.org (3.0.0-ctp1) preview’ package source. Perform all of your usual NuGet work using that package source and let us know if you see any unexpected changes in behavior.&lt;/p&gt;

&lt;p&gt;Download the NuGet 3.0 CTP1 Visual Studio Extension now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/downloads/get/879740"&gt;NuGet Package Manager for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/downloads/get/879741"&gt;NuGet Package Manager for Visual Studio “14” CTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To send us your feedback, feel free to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Post comments on this blog post&lt;/li&gt;
  &lt;li&gt;File issues on &lt;a href="http://nuget.codeplex.com"&gt;CodePlex&lt;/a&gt; and mention that it’s a 3.0 regression&lt;/li&gt;
  &lt;li&gt;Reach us on Twitter at [https://twitter.com/nuget] or using &lt;a href="https://twitter.com/search?q=%23nuget"&gt;#nuget&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="nuget-30-plans"&gt;NuGet 3.0 Plans&lt;/h2&gt;

&lt;p&gt;There’s still a lot in store for NuGet 3.0. We plan to reach the final release by the beginning of September. There will in fact be some new features and bug fixes in the release. You can expect to see:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A brand new package manager UI (and we’ll share screen shots as soon as we have them)&lt;/li&gt;
  &lt;li&gt;Ability to select specific package versions from the UI for package installs and updates&lt;/li&gt;
  &lt;li&gt;Package install/update “previews” where you can see what changes would occur if you installed/updated packages&lt;/li&gt;
  &lt;li&gt;Filtering packages by supported target framework, avoiding errors during package installation&lt;/li&gt;
  &lt;li&gt;Review and acceptance of pending external pull requests&lt;/li&gt;
  &lt;li&gt;Lots of bug fixes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We know that many of you have noticed that it’s been a couple of months since we fixed many bugs or accepted pull requests. We have needed to stay focused on reaching the point of this CTP release with some drastic code refactoring, but we will now start getting caught back up. We appreciate your patience and understanding!&lt;/p&gt;

&lt;p&gt;Stay tuned for more updates along the way too; we plan to publish more preview releases of NuGet 3.0 between now and the final release.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140715/nuget-3.0-ctp1.html" /><a10:updated>2014-07-15T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140711/nuget-architecture</guid><title>The NuGet.org Architecture</title><description>&lt;p&gt;As part of &lt;a href="/20140424/building-nuget-3.x.html"&gt;Building NuGet 3.x&lt;/a&gt;, we have been working on a significant re-architecture of &lt;a href="http://www.nuget.org"&gt;NuGet.org&lt;/a&gt;. Progress has been steady and we are starting to see a return on investment. In this post, we’ll compare the legacy architecture to where we’ll be in the near future.&lt;/p&gt;

&lt;h2 id="legacy-architecture"&gt;Legacy Architecture&lt;/h2&gt;

&lt;p&gt;One of the goals when the NuGet Gallery project was started in 2011 was to provide a reference ASP.NET MVC application hosted in Azure. The project would follow our own prescriptive guidance and leverage the frameworks we build within our group:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ASP.NET MVC and Razor&lt;/li&gt;
  &lt;li&gt;SQL Azure&lt;/li&gt;
  &lt;li&gt;EntityFramework Code-First&lt;/li&gt;
  &lt;li&gt;WCF Data Services and OData&lt;/li&gt;
  &lt;li&gt;Azure Web Roles&lt;/li&gt;
  &lt;li&gt;Azure Storage&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="legacy-architecture-diagram"&gt;Legacy Architecture Diagram&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-07-11-nuget-architecture/legacy-diagram.png" alt="Legacy Architecture Diagram" /&gt;&lt;/p&gt;

&lt;h3 id="deployment-details"&gt;Deployment Details&lt;/h3&gt;

&lt;p&gt;Deploying this architecture was really straight-forward.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An Azure Web Role (3 instances, allowing redundancy even when one instance is being updated)&lt;/li&gt;
  &lt;li&gt;A SQL Azure database&lt;/li&gt;
  &lt;li&gt;An Azure Storage account
    &lt;ol&gt;
      &lt;li&gt;One container with public blobs for serving packages&lt;/li&gt;
      &lt;li&gt;One container with private blobs for in-progress package uploads&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We also used EntityFramework’s database migrations, running them automatically when we deployed a new Web Role, and thereby keeping our production database schema in sync with the running code.&lt;/p&gt;

&lt;p&gt;During a deployment, we’d publish the update to the Web Role’s Staging slot, perform verification, and then do a VIP swap.&lt;/p&gt;

&lt;h3 id="performance-over-time"&gt;Performance Over Time&lt;/h3&gt;

&lt;p&gt;When the gallery was first introduced, the initial impression was that the site was fast.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Congrats to &lt;a href="https://twitter.com/JeffHandley"&gt;@JeffHandley&lt;/a&gt; and &lt;a href="https://twitter.com/haacked"&gt;@haacked&lt;/a&gt; and team on the new &lt;a href="https://twitter.com/hashtag/nuget?src=hash"&gt;#nuget&lt;/a&gt; site launch! &lt;a href="http://www.nuget.org"&gt;http://nuget.org&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/fast?src=hash"&gt;#fast&lt;/a&gt;&lt;/p&gt;&amp;mdash; Scott Hanselman (@shanselman) &lt;a href="https://twitter.com/shanselman/statuses/144130357560745986"&gt;December 6, 2011&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;December 6, 2011 was a good day. We were proud of the new gallery. The code was simple, worthy of showcasing as “how to build web applications to run in Azure.” And the users agreed; the reception was thoroughly positive.&lt;/p&gt;

&lt;p&gt;Fast forward a couple of years though, and complaints about NuGet being slow became commonplace. Search was slow, package installations were slow, the website was slow, everything was slow. Even worse, people regularly complained about NuGet being down. Any interruption in SQL Azure or Azure Web Roles would directly affect the gallery.&lt;/p&gt;

&lt;h3 id="scalability-characteristics"&gt;Scalability Characteristics&lt;/h3&gt;

&lt;p&gt;With the legacy architecture, let’s take a look at what happens when a you right-click on a project and select ‘Manage NuGet Packages’.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;From the Online tab, the NuGet dialog issues an OData query to perform a package search&lt;/li&gt;
  &lt;li&gt;On the server, the OData query flows through WCF Data Services, to EntityFramework, and then to SQL Azure&lt;/li&gt;
  &lt;li&gt;The results of the query are projected into an entity type that is returned in OData’s XML ATOM format&lt;/li&gt;
  &lt;li&gt;The client processes the response using WCF Data Services’ client library and renders the results&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that every time a user opens the NuGet dialog in Visual Studio, we perform a SQL query. In 2011 that was okay, but after NuGet started shipping with Visual Studio, it quickly became a scalability nightmare. We were essentially hitting ourselves with a distributed denial of service attack. This became all too clear the day that Visual Studio 2012 shipped with NuGet in the box, and the feed went down for several hours.&lt;/p&gt;

&lt;p&gt;NuGet Package Restore exacerbated the scalability challenges. This feature allows projects to omit packages from source control and download them during build. Since the packages are served from Azure Storage, it shouldn’t be that big of a deal; except the NuGet client needs to discover the package URL from the OData feed. As you might guess, this results in a SQL query. And any time we failed to process that query in time, builds would break. Ouch!&lt;/p&gt;

&lt;h3 id="we-had-it-backwards"&gt;We Had it Backwards&lt;/h3&gt;

&lt;p&gt;NuGet.org is an extremely read-heavy system, with millions of reads for every write, yet the architecture favored write-heavy systems that need to be immediately consistent. SQL Server, EntityFramework, and WCF Data Services with OData are great for systems where you have a relatively small number of users performing a similar number of reads and writes and where changes must be immediately reflected. But we have millions of users who need to reliably perform reads on relatively static data. Our architecture should reflect that.&lt;/p&gt;

&lt;p&gt;It’s difficult and costly to scale a fully consistent system to support the number of users that NuGet has. Fortunately, most of NuGet doesn’t need to be fully consistent; eventual consistency (within a few minutes or less) will suffice. Embracing this mindset with patterns like &lt;a href="http://martinfowler.com/bliki/CQRS.html"&gt;Command Query Responsibility Segregation (CQRS)&lt;/a&gt; and &lt;a href="http://www.martinfowler.com/eaaDev/EventSourcing.html"&gt;Event Sourcing&lt;/a&gt; enables us to work toward avoiding compute for the vast majority of NuGet’s reads. This approach will address the scalability concerns we have with the current system.&lt;/p&gt;

&lt;h2 id="tomorrows-architecture"&gt;Tomorrow’s Architecture&lt;/h2&gt;

&lt;p&gt;The majority of the NuGet team is now working on a new architecture. When we began the effort, we knew we needed to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Define availability goals&lt;/strong&gt; while identifying which scenarios require immediate consistency or compute&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Separate reads from writes&lt;/strong&gt; for scenarios that don’t require immediate consistency&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimize for incremental updates&lt;/strong&gt; through since we have a relatively low number of writes&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="availability-goals"&gt;Availability Goals&lt;/h3&gt;

&lt;p&gt;When we look at the NuGet.org service, we can break it down into a few buckets with different availability goals:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Registration, Login, and Package Uploads&lt;/strong&gt; - these require writes and/or immediate consistency
    &lt;ol&gt;
      &lt;li&gt;Registering a user and uploading a package write to the system&lt;/li&gt;
      &lt;li&gt;If a user changes their password or API key, that needs to be immediately enforced for logins and uploads&lt;/li&gt;
      &lt;li&gt;Package publishing must confidently identify package id/version conflicts&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Goal: Good Availability at 99.9% - interruptions don’t affect package consumers&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt; - this requires server compute but can be eventually consistent
    &lt;ol&gt;
      &lt;li&gt;If it takes a few moments for a newly published package to make it into the search index, that’s acceptable&lt;/li&gt;
      &lt;li&gt;We can keep the entire index in memory for extremely fast responses&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Goal: High Availability at 99.99% - interruptions block package discovery&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Package Installation and Restore&lt;/strong&gt; - this should not require server compute and can be eventually consistent
    &lt;ol&gt;
      &lt;li&gt;It can take a few moments for a newly published package to become available on the feed&lt;/li&gt;
      &lt;li&gt;And once a package is published, it’s very rarely updated and then only its metadata can be modified&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Goal: Maximum Availability at 99.999% - interruptions break builds&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="separate-reads-from-writes"&gt;Separate Reads from Writes&lt;/h3&gt;

&lt;p&gt;With these goals and scenarios clearly defined, we then understood what we needed to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Keep the existing CRUD-style architecture for registration, login, and package uploads
    &lt;ol&gt;
      &lt;li&gt;We might revisit this later but we’re within reach of the availability goal already&lt;/li&gt;
      &lt;li&gt;We believe by disconnecting other reads from this subsystem we’ll hit the goal easily&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Build an independently scalable Search Service
    &lt;ol&gt;
      &lt;li&gt;Use compute (Lucene.NET) but don’t require external resources for requests&lt;/li&gt;
      &lt;li&gt;Persist the index in Storage, update it incrementally, and cache the entire index in memory&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Use the query model to produce materialized presentations
    &lt;ol&gt;
      &lt;li&gt;While OData allows us to expose our data model for the client to query however it wants, it’s impossible to make all of the client queries efficient&lt;/li&gt;
      &lt;li&gt;Task-based presentations can be produced for serving the client’s specific needs very efficiently&lt;/li&gt;
      &lt;li&gt;We must be able to quickly detect changes in the write store and update all affected presentations of the data&lt;/li&gt;
      &lt;li&gt;This can all be done asynchronously with fault tolerance and parallelism&lt;/li&gt;
      &lt;li&gt;Materialized presentions can be persisted into Azure Storage and served from the CDN&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="optimize-for-incremental-updates"&gt;Optimize for Incremental Updates&lt;/h3&gt;

&lt;p&gt;With the conclusion that we didn’t want to change the CRUD-style architecture for the website and package uploads, we needed an approach for layering incremental update processing on top of the existing system. The database behind the website and package uploads will remain as-is, but we will query it from the back-end worker to extract changes. Then we’ll use the set of incremental changes to apply the updates to the Search Service and task-based presentations.&lt;/p&gt;

&lt;p&gt;We started with the Search Service. With its index in storage and cached in memory, we built a job in our Work Service to compare the database’s package data to what is stored in the Lucene index. We fine-tuned this and reached a point where we can update the index every minute without incurring any costly load on the database. This has been running in production for a few months and we’ve proven that we can effectively and efficiently extract and process incremental updates from our existing database.&lt;/p&gt;

&lt;p&gt;With that success behind us, we moved onto building a pipeline to produce presentation models to be used by the client. We can produce a full catalog of NuGet.org’s packages, efficiently and incrementally update it, transform those updates into the task-based presentation models, and persist those models into Azure Storage. We’re making changes to the NuGet client to read these presentations out of storage through our CDN instead of making OData queries.&lt;/p&gt;

&lt;h2 id="patching-the-legacy-architecture"&gt;Patching the Legacy Architecture&lt;/h2&gt;

&lt;p&gt;Knowing that the full server and client changes would take several months to get into place, we’ve been incrementally patching the legacy architecture. Here’s what is in place today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;(Unchanged)&lt;/em&gt; ASP.NET MVC and Razor&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Unchanged)&lt;/em&gt; SQL Azure&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Unchanged)&lt;/em&gt; EntityFramework Code-First&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Modified)&lt;/em&gt; WCF Data Services and OData, but with high-traffic queries getting intercepted&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Unchanged)&lt;/em&gt; Azure Web Roles&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Unchanged)&lt;/em&gt; Azure Storage&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(New)&lt;/em&gt; Lucene.NET-based Search Service, intercepting the Search and Package Restore queries&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(New)&lt;/em&gt; A separate SQL database for package statistics&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(New)&lt;/em&gt; A Work Service that processes async back-end jobs like migrating statistics data and producing reports&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(New)&lt;/em&gt; An additional SQL database for managing the queue of back-end work&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A subtle but impactful difference is that we intercept OData requests for Search and Package Restore and produce those results through our &lt;a href="/20140411/new-search-on-the-gallery.html"&gt;Search Service&lt;/a&gt; instead of allowing those queries to reach the SQL database. We update the search index asynchronously using back-end jobs. We also introduced a second SQL database with a &lt;a href="http://en.wikipedia.org/wiki/Star_schema"&gt;star schema&lt;/a&gt; for producing &lt;a href="/20130226/Introducing-Package-Statistics.html"&gt;package statistics reports&lt;/a&gt; and then a third SQL database for managing the Work Service’s queue.&lt;/p&gt;

&lt;h3 id="current-patched-architecture-diagram"&gt;Current Patched Architecture Diagram&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-07-11-nuget-architecture/current-diagram.png" alt="Current Architecture Diagram" /&gt;&lt;/p&gt;

&lt;p&gt;These changes introduced both the new Search Service and the Work Service as Azure Worker Roles. But we’ve also made some other deployment changes to improve availability of the gallery.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We deploy the front-end Web Role to two data centers
    &lt;ol&gt;
      &lt;li&gt;Azure Traffic Manager sits in front, in fail-over mode&lt;/li&gt;
      &lt;li&gt;The secondary data center runs in a read-only configuration against a recent SQL backup&lt;/li&gt;
      &lt;li&gt;If our primary data center fails, we are then failed-over to a recent read-only clone&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;We deploy the Search Service Worker Role to two data centers
    &lt;ol&gt;
      &lt;li&gt;Azure Traffic Manager sits in front, in fail-over mode&lt;/li&gt;
      &lt;li&gt;Both front-end deployments access the Search Service through its Traffic Manager endpoint&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;The front-end Web Role has Azure’s Auto-Scale feature enabled
    &lt;ol&gt;
      &lt;li&gt;We generally run on 3 Medium instances&lt;/li&gt;
      &lt;li&gt;We can scale up to 9 instances under heavy load&lt;/li&gt;
      &lt;li&gt;It’s configured to keep CPU utilization between 60%-80%&lt;/li&gt;
      &lt;li&gt;It scales up 1 instance at a time, waiting at least 10 minutes between scale actions&lt;/li&gt;
      &lt;li&gt;It scales down 1 instance at a time, waiting 20 minutes between scale actions&lt;/li&gt;
      &lt;li&gt;This allows us to scale up pretty quickly, but scale down a bit slower&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;The Work Service is deployed as a Worker Role in Azure
    &lt;ol&gt;
      &lt;li&gt;We currently run 4 instances and it performs a lot of back-end work&lt;/li&gt;
      &lt;li&gt;We use Azure Scheduler to add jobs into the Work Service queue&lt;/li&gt;
      &lt;li&gt;This is done through HTTP PUTs into the Work Service’s HTTP endpoint&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="deploying-api-v3"&gt;Deploying API v3&lt;/h3&gt;

&lt;p&gt;Our current OData-based API is NuGet’s second API format, therefore we’ve been referring to our new implementation and the materialized presentation models as “API v3”. We are preparing to deploy API v3 in a CTP form very soon and we’ll post more details about it at that time. We know that we’ll be making quite a few changes between CTP and the stable release but we’ll invite ecosystem partners to work against the API and give us feedback.&lt;/p&gt;

&lt;h2 id="what-were-achieving"&gt;What We’re Achieving&lt;/h2&gt;

&lt;p&gt;This new architecture helps us achieve some fundamental capabilities:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Fast and Reliable Search Service
    &lt;ol&gt;
      &lt;li&gt;We incrementally update our search index and persist it into Azure Storage&lt;/li&gt;
      &lt;li&gt;The Search service loads the index entirely into memory&lt;/li&gt;
      &lt;li&gt;Search queries from both the client and the website are routed to the Search service’s HTTP endpoint where results are generated without loading any external resources&lt;/li&gt;
      &lt;li&gt;The Search service is independently scalable with Traffic Manager routing to a secondary data center when needed&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Efficient Dependency Resolution
    &lt;ol&gt;
      &lt;li&gt;The client’s requests are completely predictable - there’s no reason to &lt;em&gt;compute&lt;/em&gt; the responses per request&lt;/li&gt;
      &lt;li&gt;We materialize dependency resolution presentations and serve them directly from storage through our CDN&lt;/li&gt;
      &lt;li&gt;These presentations contain all of the detailed dependency information for all versions of a package so the client can make very few HTTP requests to collect what it needs to construct the dependency graph&lt;/li&gt;
      &lt;li&gt;If the client needs different data for dependency resolution over time, we modify these presentations easily without ramifications to other parts of the system&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Highly Available Package Installation and Restore
    &lt;ol&gt;
      &lt;li&gt;Once a package id/version pair is known for installing or restoring a package, it must be fast and reliable&lt;/li&gt;
      &lt;li&gt;A lookup needs to occur to check the existence of a package id/version and discover its download URL&lt;/li&gt;
      &lt;li&gt;We also want to capture metrics for package statistics, knowing when/why packages are downloaded, but that can be done separately from the actual act of downloading the package&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Improved Ability to Implement New Features
    &lt;ol&gt;
      &lt;li&gt;We have a long list of features we want implement that would require the client getting more data from the server&lt;/li&gt;
      &lt;li&gt;The new architecture gives us the ability to expose data in a scalable and reliable way&lt;/li&gt;
      &lt;li&gt;We can also produce new feature-specific presentations when needed for new features without modifying existing presentations that are used in other scenarios&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description><a10:link href="http://blog.nuget.org/20140711/nuget-architecture.html" /><a10:updated>2014-07-11T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140626/monitoring-nuget</guid><title>Monitoring nuget.org</title><description>&lt;p&gt;We’ve recently found ourselves answering the same question repeatedly: &lt;strong&gt;How do you monitor nuget.org?&lt;/strong&gt;  If you too are interested, here are the details.&lt;/p&gt;

&lt;h1 id="monitoring-approaches"&gt;Monitoring Approaches&lt;/h1&gt;

&lt;p&gt;We have two approaches for monitoring the gallery:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;From the outside, checking HTTP endpoints that indicate public-facing service interruptions&lt;/li&gt;
  &lt;li&gt;From the inside, monitoring error logs and diagnostic data that indicate potential interruptions&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="external-monitoring"&gt;External Monitoring&lt;/h2&gt;

&lt;p&gt;For our external monitoring, we use &lt;a href="http://www.pingdom.com"&gt;Pingdom&lt;/a&gt;.  You can see our public Pingdom status page at &lt;a href="http://status.nuget.org"&gt;http://status.nuget.org&lt;/a&gt;.  If you ever experience trouble connecting to &lt;a href="http://www.nuget.org"&gt;nuget.org&lt;/a&gt; and you’re wondering, “Is NuGet down or is it just me?” you can visit &lt;a href="http://status.nuget.org"&gt;http://status.nuget.org&lt;/a&gt; to find out.  If you see all green, then it might just be you.&lt;/p&gt;

&lt;h3 id="public-status-page"&gt;Public Status Page&lt;/h3&gt;

&lt;p&gt;Here are the checks shown on the status page:&lt;/p&gt;

&lt;style type="text/css"&gt; TABLE.pingdomcheck { border-collapse: collapse; } TABLE.pingdomcheck THEAD TR TH, TABLE.pingdomcheck TBODY TR TD { border: 1px solid gray; padding: 0.5em; } TABLE.pingdomcheck TBODY TR TD:nth-child(2), TABLE.pingdomcheck TBODY TR TD:nth-child(3) { text-align: center; } &lt;/style&gt;

&lt;table class="pingdomcheck"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Check&lt;/th&gt;
            &lt;th&gt;Interval&lt;/th&gt;
            &lt;th&gt;Notify when down&lt;/th&gt;
            &lt;th&gt;Purpose&lt;/th&gt;
        &lt;/tr&gt;        
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;DNS: nuget.org (root domain)&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;5 minutes&lt;/td&gt;
            &lt;td&gt;
                Verify that the DNS provider we use is returning the expected IP address for our root domain's A record. We redirect from nuget.org to www.nuget.org and use a CNAME record to route to Azure's Traffic Manager.
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www.nuget.org/api/v2/Search()?$filter=IsAbsoluteLatestVersion&amp;amp;$orderby=DownloadCount%20desc,Id&amp;amp;$skip=0&amp;amp;$top=30&amp;amp;searchTerm=''&amp;amp;targetFramework='net40'&amp;amp;includePrerelease=true"&gt;feed (top 30 by downloads)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;This is the URL that is hit when you open the 'Manage NuGet Packages' dialog in Visual Studio.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www.nuget.org"&gt;home page&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;Checks the status of the web site itself, and its ability to simply serve HTML.  There are no external resources required to serve the home page.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www.nuget.org/api/v2/package/NuGet.GalleryUptime/1.0.0"&gt;package restore (download)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                We use an unlisted NuGet.GalleryUptime package to verify that packages can be downloaded by the package restore process. This operation records package download statistics and then serves the actual nupkg file. If this check is down, builds using package restore will fail.
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www.nuget.org/api/v2/Packages(Id='NuGet.GalleryUptime',Version='1.0.0')"&gt;package restore (lookup)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                Before NuGet can download a package through the 'package restore (download)' URL, it must first query the API for the package to get its metadata that includes that download URL. This lookup ends up hitting our packages index and serving the results through the API. If this check is down, builds using package restore will fail.
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www.nuget.org/packages?page=1000&amp;amp;prerelease=true"&gt;packages page (search)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                This page hits the website's search feature, loading results 19,981-20,000 for an empty search. This verifies that our search index is intact and complete. The check not only verifies the 200 OK response, but it also checks for the string 'Displaying results 19981 - 20000' in the response.
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://api-search-0.nuget.org/search/query"&gt;search service (query)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                The Search service runs as a separate deployment--the website makes HTTP requests to it for the website's search feature.  In addition to monitoring the website's ability to use the search, we also monitor the Search service directly.  We check for both a 200 OK response as well as as string of '"data":[{'' in the response to ensure there was data returned.
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="other-checks"&gt;Other Checks&lt;/h3&gt;

&lt;p&gt;We also have some other checks that don’t need to be on the public status page.&lt;/p&gt;

&lt;table class="pingdomcheck"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Check&lt;/th&gt;
            &lt;th&gt;Interval&lt;/th&gt;
            &lt;th&gt;Notify when down&lt;/th&gt;
            &lt;th&gt;Purpose&lt;/th&gt;
        &lt;/tr&gt;        
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www-0.nuget.org/api/v2/Packages"&gt;DC0 - feed (raw packages list)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                This is the raw packages feed from our primary data center. This check tells us the feed's health in that primary data center, where this might fail despite the feed being available from our secondary data center.
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;a target="pingdomcheck" href="https://www-1.nuget.org/api/v2/Packages"&gt;DC1 - feed (raw packages list)&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;1 minute&lt;/td&gt;
            &lt;td&gt;3 minutes&lt;/td&gt;
            &lt;td&gt;
                This is the raw packages feed from our secondary/fail-over data center. The secondary data center runs in readonly mode and it's generally behind the primary data center by about 30 minutes. Traffic manager fails over to this data center if the primary data center is unavailable.
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In addition to these, we also monitor the &lt;a href="http://docs.nuget.org"&gt;documentation site&lt;/a&gt; and our &lt;a href="http://build.nuget.org"&gt;build server&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="alerting"&gt;Alerting&lt;/h3&gt;

&lt;p&gt;When Pingdom detects downtime, it sends a message to &lt;a href="http://www.pagerduty.com"&gt;PagerDuty&lt;/a&gt; where we manage our on-call schedule and alerting rules. Our notification rules follow a pattern until the incident is acknowledged.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Immediately send email&lt;/li&gt;
  &lt;li&gt;Immediately send a text message&lt;/li&gt;
  &lt;li&gt;After 5 minutes, send another text message&lt;/li&gt;
  &lt;li&gt;After 10 minutes, make a voice call to the cell phone&lt;/li&gt;
  &lt;li&gt;After 11 minutes, make a voice call to the office phone&lt;/li&gt;
  &lt;li&gt;After 12 minutes, make a voice call to the home phone&lt;/li&gt;
  &lt;li&gt;After 15 minutes, escalate the incident to the backup on-call person and run the same process&lt;/li&gt;
  &lt;li&gt;After 30 minutes, alert half of the team through text messages&lt;/li&gt;
  &lt;li&gt;After 45 minutes, alert the other half of the team through text messages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ve really enjoyed the flexible scheduling and alerting that PagerDuty offers. We have good peace of mind that if an incident does occur, we’ll be alerted and woken up if needed.&lt;/p&gt;

&lt;h2 id="internal-monitoring"&gt;Internal Monitoring&lt;/h2&gt;

&lt;p&gt;I’ll go into less detail about our internal monitoring–it’s not nearly as exciting. But at a high-level, we have a few moving pieces that we utilize for keeping tabs on the service’s health that is more subtle than the UP/DOWN observations that can be made by the external monitoring.&lt;/p&gt;

&lt;h3 id="dashboard"&gt;Dashboard&lt;/h3&gt;

&lt;p&gt;We have a dashboard website that we can look at any time we need to investigate a service incident. Sometimes we have this dashboard projected in our team room too. This is a separate project on GitHub, under the &lt;a href="https://github.com/NuGet/NuGet.Services.Dashboard"&gt;NuGet.Services.Dashboard&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;The dashboard shows us elements for:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;All of the Pingdom checks&lt;/li&gt;
  &lt;li&gt;Our Traffic Manager endpoint statuses&lt;/li&gt;
  &lt;li&gt;Our Web Role and Worker Role instance statuses&lt;/li&gt;
  &lt;li&gt;How many Web Role instances are currently running&lt;/li&gt;
  &lt;li&gt;Requests per hour&lt;/li&gt;
  &lt;li&gt;The current lag between the database and the search index&lt;/li&gt;
  &lt;li&gt;The number of new users today&lt;/li&gt;
  &lt;li&gt;The number of new packages today&lt;/li&gt;
  &lt;li&gt;Trendline of our requests per hour&lt;/li&gt;
  &lt;li&gt;Trendline of our error per hour&lt;/li&gt;
  &lt;li&gt;Trendlines for response times on all of the Pingdom checks&lt;/li&gt;
  &lt;li&gt;Trendline of the database requests&lt;/li&gt;
  &lt;li&gt;Trendline of the database connections&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It also has screens for drilling into a lot of the information captured on that main dashboard screen, as well as some other detailed diagnostic information, including:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Database index fragmentation&lt;/li&gt;
  &lt;li&gt;Database sizes&lt;/li&gt;
  &lt;li&gt;Error logs and trends&lt;/li&gt;
  &lt;li&gt;Backend job statuses and logs&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="diagnostic-alerts"&gt;Diagnostic Alerts&lt;/h3&gt;

&lt;p&gt;As part of the Dashboard project, we also have some backend monitoring that can send alerts. For this, we use an Azure Virtual Machine that we configure Windows Scheduled Tasks onto. We use scheduled tasks to keep our service dependencies at a minimum for this monitoring. The tasks are configured through deployment scripts so there’s no manual schedule task setup to perform.&lt;/p&gt;

&lt;p&gt;We send low priority alerts out (that don’t text/call us) for data that starts to look unhealthy. This is done by connecting to PagerDuty’s API and issuing a Sev-2 incident. PagerDuty then sends the team an email. Here are some examples of the low priority alerts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Number of database connections/requests crossing configured thresholds&lt;/li&gt;
  &lt;li&gt;Incoming website traffic rate increases dramatically&lt;/li&gt;
  &lt;li&gt;A surge of noteworthy exceptions being thrown&lt;/li&gt;
  &lt;li&gt;A lag between the database and search index beyond a configured threshold&lt;/li&gt;
  &lt;li&gt;Poor health of individual server instances or a spike in the instance count&lt;/li&gt;
  &lt;li&gt;Database size increases beyond a configured percentage of our size limit&lt;/li&gt;
  &lt;li&gt;Severe database index fragmentation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="responding-to-incidents"&gt;Responding to Incidents&lt;/h2&gt;

&lt;p&gt;When we do get an alert for an incident, the first thing we do is verify any service interruption. Then we will acknowledge the interruption and begin investigating.&lt;/p&gt;

&lt;h3 id="acknowledgement"&gt;Acknowledgement&lt;/h3&gt;

&lt;p&gt;Since we’re using PagerDuty, we need to acknowledge the incident there so that it doesn’t escalate to the next person on the team. Then we usually get onto Twitter and post an acknowledgement from the &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt; account. To be honest, sometimes we’re better about doing that than others, but it’s something we’re improving.&lt;/p&gt;

&lt;p&gt;If you’re experiencing trouble connecting to nuget.org, here’s what we recommend:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check our Pingdom public status page at &lt;a href="http://status.nuget.org"&gt;http://status.nuget.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check our Twitter timeline at &lt;a href="http://twitter.com/nuget"&gt;http://twitter.com/nuget&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you think NuGet is down and we haven’t acknowledged it yet, feel free to tweet at us by either mentioning &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt; or using the &lt;a href="https://twitter.com/search?q=%23nuget"&gt;#nuget&lt;/a&gt; hashtag.&lt;/p&gt;

&lt;h3 id="investigating"&gt;Investigating&lt;/h3&gt;

&lt;p&gt;Once an incident is acknowledged, we jump into root cause analysis and try to find the component of the system that is failing. Sometimes it’s something on our side, sometimes it’s a service we consume from Azure. If the issue is purely on our side, we continue investigating and loop in other members of the team as needed. If the issue is due to an Azure service interruption, we check Azure’s status page and file tickets with them when needed. During the investigation, we again do our best to post updates to Twitter.&lt;/p&gt;

&lt;h3 id="post-mortem"&gt;Post-Mortem&lt;/h3&gt;

&lt;p&gt;We always complete a post-mortem after an incident. We share this with the entire team as well as our management at Microsoft. When it makes sense to do so, we also blog about the service interruption. Here are a couple of outage blog posts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20130404/the-march-6-nuget-gallery-outage.html"&gt;March 6, 2013&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20140403/nuget-2.8.1-april-2nd-downtime.html"&gt;April 2-3, 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="measuring-uptime"&gt;Measuring Uptime&lt;/h2&gt;

&lt;p&gt;Every month, we report our uptime to our management. To do so, we look at our Pingdom uptime report for the month and pick the &lt;em&gt;lowest&lt;/em&gt; number from these three checks:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Feed (top 30 by downloads) - This represents the availability of consuming the feed in Visual Studio&lt;/li&gt;
  &lt;li&gt;Package Restore (lookup) - This is the package lookup that occurs to get a package’s download URL&lt;/li&gt;
  &lt;li&gt;Package Restore (download) - This is the act of downloading a package after looking it up&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Together those numbers give us a good representation of the perceived availability of &lt;a href="http://www.nuget.org"&gt;nuget.org&lt;/a&gt; as they indicate if users can find and download packages.&lt;/p&gt;

&lt;p&gt;Here are the overall numbers we’ve had so far this calendar year:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;June 2014 (1st-26th): 99.99%&lt;/li&gt;
  &lt;li&gt;May 2014: 99.78%&lt;/li&gt;
  &lt;li&gt;April 2014: 99.80%&lt;/li&gt;
  &lt;li&gt;March 2014: 99.98%&lt;/li&gt;
  &lt;li&gt;February 2014: 99.99%&lt;/li&gt;
  &lt;li&gt;January 2014: 99.53%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As we’ve been &lt;a href="http://blog.nuget.org/20140424/building-nuget-3.x.html"&gt;building NuGet 3.x&lt;/a&gt;, we’ve been doing so with the following scenario-based availability goals:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Package Restore: 99.999%&lt;/li&gt;
  &lt;li&gt;Package Discovery and Fresh Install: 99.99%&lt;/li&gt;
  &lt;li&gt;Package Upload and Website: 99.9%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We definitely have our work cut out for us, but we’re making good progress on the re-architecture that we believe will make those goals attainable. Availability of NuGet is our team’s top priority and we’re making both server-side and client-side changes to make the service more reliable.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140626/monitoring-nuget.html" /><a10:updated>2014-06-26T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140603/nuget-stats</guid><title>NuGet Package Download Stats</title><description>&lt;h2 id="lies-damned-lies-and-package-statistics"&gt;Lies, Damned Lies, and Package Statistics&lt;/h2&gt;

&lt;p&gt;We’ve been getting reports about package download statistics being inconsistent with packages’ overall download counts and people have asked us which numbers to believe. We’ve investigated the inconsistencies and found that due to a very subtle bug, &lt;strong&gt;&lt;em&gt;you can’t trust the statistics right now, but you’ll be able to trust them again starting June 26th.&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can however trust the all-time download counts shown in search results and on the package details pages. Only the “Statistics” tab on the gallery is affected.&lt;/p&gt;

&lt;h2 id="background"&gt;Background&lt;/h2&gt;

&lt;p&gt;In order to fully explain the issue, we need to provide some background on how we record, aggregate, and report download statistics for packages.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-06-02-nuget-stats/dataflow.png" alt="Data Flow for Download Statistics" /&gt;&lt;/p&gt;

&lt;h3 id="step-1-record-downloads"&gt;Step 1: Record Downloads&lt;/h3&gt;

&lt;p&gt;Every time a NuGet package is downloaded from the gallery, we record the download statistics into our SQL database. We don’t record the download directly against the package table, but instead into an table used as a queue. This allows us to avoid writing to the package table directly with every download–instead we aggregate the downloads in batches.&lt;/p&gt;

&lt;p&gt;This raw data is never shown anywhere on the gallery.&lt;/p&gt;

&lt;h3 id="step-2-update-all-time-package-download-counts"&gt;Step 2: Update All-Time Package Download Counts&lt;/h3&gt;

&lt;p&gt;Every 5 minutes, we take all of the downloads that have been recorded in our queue table and aggregate them. This aggregation tells us how many downloads each package had during the 5 minutes, and we update the package table in the database to increase the all-time download counts.&lt;/p&gt;

&lt;p&gt;These aggregated, all-time download counts are displayed on the Package Details page for any package. For example, the &lt;a href="http://www.nuget.org/packages/Newtonsoft.Json/"&gt;Json.NET&lt;/a&gt; page shows the all-time downloads of all versions of the package as well as the all-time downloads for that specific version.&lt;/p&gt;

&lt;h3 id="step-3-update-search-index"&gt;Step 3: Update Search Index&lt;/h3&gt;

&lt;p&gt;Every minute, we update our search index using the already-aggregated all-time download counts. That means that it can be roughly 6 minutes from the time a package is downloaded to when the search index reflects that download. And for that minute in between aggregating package downloads and updating the search index, the search results might show a number slightly lower than the package details page.&lt;/p&gt;

&lt;p&gt;This search index is used for showing the packages list, with or without a search term. If you search for &lt;a href="http://www.nuget.org/packages?q=json.net"&gt;“json.net”&lt;/a&gt;, you’ll see the search index’s value for the all-time download count for the Json.NET package.&lt;/p&gt;

&lt;h3 id="step-4-replicate-downloads-to-statistics-warehouse"&gt;Step 4: Replicate Downloads to Statistics Warehouse&lt;/h3&gt;

&lt;p&gt;We don’t want to keep all detailed package download records in our primary database–it would grow far too much. Instead, we replicate statistics over to a warehouse database, and we purge old download records from our primary database. The replication happens every 10 minutes, and we copy all details about the downloads into the warehouse. We keep the following information:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Package/Version&lt;/li&gt;
  &lt;li&gt;Operation (install, install-dependency, update, update-dependency, restore)&lt;/li&gt;
  &lt;li&gt;Date and Time (with precision of 1 hour)&lt;/li&gt;
  &lt;li&gt;Dependent Package/Version where applicable&lt;/li&gt;
  &lt;li&gt;NuGet Client (Visual Studio, WebMatrix, NuGet.exe, etc.) and Version&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The warehouse uses a star schema, allowing us to produce reports from several angles.&lt;/p&gt;

&lt;h3 id="step-5-produce-statistics-reports"&gt;Step 5: Produce Statistics Reports&lt;/h3&gt;

&lt;p&gt;Every 12 hours, we produce package download statistics reports and store them. Any page on the gallery under the &lt;a href="http://www.nuget.org/stats"&gt;Statistics&lt;/a&gt; tab is rendering a report that was produced up to 12 hours earlier. These reports only reflect data from a rolling 6-week window of time and &lt;em&gt;not&lt;/em&gt; the all-time download counts.&lt;/p&gt;

&lt;p&gt;Because the statistics reports are always a 6-week window, the numbers should always be lower than a package’s all-time download counts. But the reports we have been getting have shown that these statistics reports had &lt;em&gt;higher&lt;/em&gt; values than the all-time numbers–that was obviously wrong.&lt;/p&gt;

&lt;h2 id="how-far-off-are-the-statistics"&gt;How Far Off are the Statistics?&lt;/h2&gt;

&lt;p&gt;It really varies from package to package. Generally, the more a package is getting downloaded, the more incorrect the statistics are. There’s no consistency across the packages though, so we can’t say exactly how much packages were affected. The only categorical statement we can make is: &lt;strong&gt;&lt;em&gt;You can’t trust the statistics right now, but you’ll be able to trust them again starting June 26th.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For example, just looking at a window of 1 hour, Microsoft.AspNet.Mvc version 5.1.2 had 649 actual downloads that hour but the package statistics recorded 3035 downloads (a difference of 2386, or more than 365%). On the other hand, knockoutjs 2.2.0 had an hour with 5 actual downloads and 11 recorded downloads (a difference of 6, or 120%).&lt;/p&gt;

&lt;h2 id="timeline-and-anatomy-of-the-bug"&gt;Timeline and Anatomy of the Bug&lt;/h2&gt;

&lt;p&gt;The bug was introduced back in January, but we didn’t start getting reports of inconsistent data until April. We think the rollout of the &lt;a href="/20140411/new-search-on-the-gallery.html"&gt;new search service&lt;/a&gt; brought more attention to our data and led people to start filing issues. The fix took effect on May 15th. This means that package download statistics are accurate after May 15th. Since our statistics reports are based on a rolling 6-week window, the statistics will be trustworthy again on June 26th.&lt;/p&gt;

&lt;p&gt;The bug was down in the process where we replicate data from the primary database to the warehouse (step 4 above). When pulling out the data not yet replicated, our SQL SELECT statement was missing an ORDER BY clause. This led to unpredictable results and a situation where we’d replicate the same data more than once.&lt;/p&gt;

&lt;p&gt;If you’re curious, it was a &lt;a href="https://github.com/NuGet/NuGet.Services.Work/commit/98eda2c433c9b44922dee12ef6f373fde87de864#diff-e23a546b77f6a24c4929bbe8513888aeR95"&gt;simple one-line fix&lt;/a&gt; to correct this problem.&lt;/p&gt;

&lt;h2 id="all-time-download-counts-are-accurate"&gt;All-Time Download Counts are Accurate&lt;/h2&gt;

&lt;p&gt;Because the bug was in the process of replicating statistics over to the warehouse, only the warehouse and reports generated from it are affected. The all-time download counts are accurate on the package details pages and search results.&lt;/p&gt;

&lt;h2 id="thank-you"&gt;Thank You&lt;/h2&gt;

&lt;p&gt;Thank you for reaching out to us through &lt;a href="http://github.com/NuGet/NuGetGallery/issues"&gt;GitHub&lt;/a&gt; and &lt;a href="http://twitter.com/nuget"&gt;Twitter&lt;/a&gt; to let us know the data looked bad.&lt;/p&gt;

</description><a10:link href="http://blog.nuget.org/20140603/nuget-stats.html" /><a10:updated>2014-06-03T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140508/redesigning-the-nuget-websites</guid><title>Redesigning the NuGet Websites</title><description>&lt;h2 id="blog-redesign-is-live"&gt;Blog Redesign is LIVE!&lt;/h2&gt;

&lt;p&gt;What better way to announce upcoming website redesigns than by implementing that redesign on our blog?  Earlier today, we deployed changes to &lt;a href="http://blog.nuget.org"&gt;http://blog.nuget.org&lt;/a&gt; that apply a new visual design that we expect to carry over to the docs and gallery sites too.&lt;/p&gt;

&lt;h2 id="redesign-goals"&gt;Redesign Goals&lt;/h2&gt;

&lt;p&gt;The goals of the redesign effort are manifold. Here are some of our high-level desires for the websites:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Simplified, modern design&lt;/li&gt;
  &lt;li&gt;Fluid layout&lt;/li&gt;
  &lt;li&gt;Emphasize content instead of common elements&lt;/li&gt;
  &lt;li&gt;Seamless transitions between the gallery, documentation, and blog sites&lt;/li&gt;
  &lt;li&gt;Information re-organized for the three primary personas that interact with our sites&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="consistency-across-gallery-documentation-and-blog"&gt;Consistency Across Gallery, Documentation, and Blog&lt;/h2&gt;

&lt;p&gt;With this deployment to the blog, our three sites are now quite inconsistent. The blog has the new look while the documentation and gallery sites still have the old design. This is temporary, as we expect to roll the new design out for &lt;a href="http://docs.nuget.org"&gt;http://docs.nuget.org&lt;/a&gt; and &lt;a href="http://www.nuget.org"&gt;http://www.nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will apply the new design to the documentation site next, and we have to have that rolled out in a few weeks. Applying the design to the gallery will take some more time and it will be several weeks before we complete that. In the meantime, please feel free to share your feedback about the new design with us!&lt;/p&gt;

&lt;h2 id="consume-create-contribute"&gt;Consume, Create, Contribute&lt;/h2&gt;

&lt;p&gt;In addition to the refreshed visuals for the sites, we also plan to reorganize information across the documentation and gallery sites. Through reviewing the information we have across the sites and the interactions our users have with NuGet, we found we can organize our information into three categories:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Consume&lt;/strong&gt; - consuming NuGet packages in your projects&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; - creating NuGet packages for yourself or to share&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Contribute&lt;/strong&gt; - contributing to the NuGet project through filing bugs, adding documentation, or contributing code&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="graphic-designs"&gt;Graphic Designs&lt;/h2&gt;

&lt;p&gt;We worked with the Microsoft Azure UX team to create the new graphic designs. In addition to what you’re seeing here on the blog, we have other page designs in place for documentation and the gallery. Here’s a sample of them.&lt;/p&gt;

&lt;h3 id="gallery-home-page"&gt;Gallery Home Page&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-05-08-redesigning-the-nuget-websites/home.png" alt="Gallery Home Page" /&gt;&lt;/p&gt;

&lt;h3 id="packages-list"&gt;Packages List&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-05-08-redesigning-the-nuget-websites/packages-list.png" alt="Packages List" /&gt;&lt;/p&gt;

&lt;h3 id="package-detail"&gt;Package Detail&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-05-08-redesigning-the-nuget-websites/package-detail.png" alt="Package Detail" /&gt;&lt;/p&gt;

&lt;h3 id="docs-home-page"&gt;Docs Home Page&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/2014-05-08-redesigning-the-nuget-websites/doc-index.png" alt="Docs Home Page" /&gt;&lt;/p&gt;

&lt;h2 id="docs-article"&gt;Docs Article&lt;/h2&gt;
&lt;p&gt;&lt;img src="/images/2014-05-08-redesigning-the-nuget-websites/doc-article.png" alt="Docs Article" /&gt;&lt;/p&gt;

&lt;h2 id="lots-to-do"&gt;Lots to do…&lt;/h2&gt;

&lt;p&gt;We have a long list of features we need to build into the gallery to make it more useful.  We’ll be starting many of those features after we get this graphic redesign in place and while we make progress on &lt;a href="http://blog.nuget.org/20140424/building-nuget-3.x.html"&gt;NuGet 3.x&lt;/a&gt;. In the meantime, please feel free to share your feedback with us on these new graphic designs.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140508/redesigning-the-nuget-websites.html" /><a10:updated>2014-05-08T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140424/building-nuget-3.x</guid><title>Building NuGet 3.x</title><description>&lt;h2 id="evolution-of-nuget"&gt;Evolution of NuGet&lt;/h2&gt;

&lt;p&gt;At MonkeySpace 2013 last July, we revealed some of our thinking for the &lt;a href="http://vimeo.com/78045959"&gt;Evolution of NuGet&lt;/a&gt;.  These were the ideas we had for what would become NuGet 3.x and they included the following areas:&lt;/p&gt;

&lt;h3 id="package-discovery"&gt;Package Discovery&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Context-sensitive enumeration and search&lt;/li&gt;
  &lt;li&gt;Statistics and reports for package authors and consumers&lt;/li&gt;
  &lt;li&gt;Editable package metadata&lt;/li&gt;
  &lt;li&gt;Package discovery and sharing through social graphs&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="package-trust--incompatibility"&gt;Package Trust / Incompatibility&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Organizations or team accounts&lt;/li&gt;
  &lt;li&gt;Owner reputation&lt;/li&gt;
  &lt;li&gt;Friendly license names and filters&lt;/li&gt;
  &lt;li&gt;Feeds for owners’ packages and followed packages&lt;/li&gt;
  &lt;li&gt;Create a system for reporting package incompatibilities&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="api"&gt;API&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Create a RESTful API v3 for use by both the NuGet clients and ecosystem partners&lt;/li&gt;
  &lt;li&gt;Facilitate a high volume of reads on the API while significantly improving uptime&lt;/li&gt;
  &lt;li&gt;Existing OData service will be eventually consistent&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="package-installation--build"&gt;Package Installation / Build&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Resolve references at build time for better retargeting and multi-targeting&lt;/li&gt;
  &lt;li&gt;Treat direct installs differently from dependencies&lt;/li&gt;
  &lt;li&gt;Global package installations&lt;/li&gt;
  &lt;li&gt;NuGet packages as a natural part of build&lt;/li&gt;
  &lt;li&gt;NuGet packages replace assemblies as the natural unit of reference&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="making-progress"&gt;Making Progress&lt;/h2&gt;

&lt;p&gt;The full list is a pretty tall order but we’re making progress toward these goals.  In fact, since giving that talk in July 2013, here are some of the features that have been released:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="http://www.nuget.org/stats"&gt;Statistics&lt;/a&gt; for package authors and consumers&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20130823/Introducing-Edit-Package.html"&gt;Editable package metadata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20131011/friendly-license-names.html"&gt;Friendly license names&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20140411/new-search-on-the-gallery.html"&gt;A new search experience on the Gallery&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Beyond this, the team has been concentrating on the RESTful API v3 architecture and design.  We came to the conclusion that a significant number of new features will be extremely data-driven and we needed to ensure the design was extremely scalable and reliable.  We couldn’t build those features on top of the compute-heavy architecture we have today.  &lt;em&gt;Let’s be honest, we already have more downtime than we’d like.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Instead, it is time to re-architect the gallery and build up a new system based on micro-services.  Because the NuGet client tools need to be able to discover and interact with these micro-services, significant changes are required to the client as well as the server.  This new architecture will unlock the ability to create many new data-driven features while also providing a more reliable service for the core functions of NuGet.&lt;/p&gt;

&lt;p&gt;We’ve now embarked upon NuGet 3.x!&lt;/p&gt;

&lt;h2 id="nuget-3x"&gt;NuGet 3.x&lt;/h2&gt;

&lt;h3 id="so-what-is-nuget-3x"&gt;So what is NuGet 3.x?&lt;/h3&gt;

&lt;p&gt;A wave of NuGet client tools releases to begin taking advantage of a new server architecture.&lt;/p&gt;

&lt;h3 id="what-does-that-mean"&gt;What does that mean?&lt;/h3&gt;

&lt;p&gt;As we roll out new micro-services for the NuGet Gallery, we’ll be making significant changes to the NuGet client tools to utilize those services directly rather than going through a single OData-based API.&lt;/p&gt;

&lt;h3 id="what-are-these-micro-services-that-youre-creating"&gt;What are these micro-services that you’re creating?&lt;/h3&gt;

&lt;p&gt;Great question!  We have been able to break the NuGet Gallery up into the following conceptual package services:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Downloads (serving both package installs and restores)&lt;/li&gt;
  &lt;li&gt;Metadata and Feeds (for enumerating packages and resolving dependencies)&lt;/li&gt;
  &lt;li&gt;Search (getting context-sensitive package lists and search results)&lt;/li&gt;
  &lt;li&gt;Metrics (reporting download statistics)&lt;/li&gt;
  &lt;li&gt;Events (exposing a stream of activity on the gallery, which can be utilized by a variety of different consuming services)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the key points here is that the downloads service is separated from the metadata service.  We’ve seen many times that package metadata needs to be fully exposed without having to download packages.  And we’ve also seen that there are scenarios for hosting package downloads without serving package metadata.&lt;/p&gt;

&lt;p&gt;We’re breaking Search out from the metadata/feeds because we’re using compute for search (via &lt;a href="http://www.nuget.org/packages/Lucene.Net/"&gt;Lucene.NET&lt;/a&gt;), while we want package feeds/metadata to be served without compute.  Furthermore, Search is for human consumption while Feeds/Metadata are for programmatic consumption.&lt;/p&gt;

&lt;p&gt;The Metrics service allows package download statistics to be reported by the client explicitly, rather than recording those statistics &lt;em&gt;during&lt;/em&gt; package download like we do today.  That would also create the opportunity for us to send more information in for statistics and allow users to opt out as desired.  The data collected would serve our context-sensitive search and statistics reports on where/how packages are used.  More importantly though, it will allow package downloads to be served without &lt;em&gt;any&lt;/em&gt; compute that could possibly fail (and presently does more than is desirable).&lt;/p&gt;

&lt;p&gt;The Events service will expose a data stream for events that have occurred on the gallery–like new packages getting published and package ownership changing.  These events can be replayed to fully replicate nuget.org, setting up the opportunity for value-adding services such as gallery mirrors.&lt;/p&gt;

&lt;h4 id="more-to-come"&gt;More to come…&lt;/h4&gt;

&lt;p&gt;We know there will be more micro-services too; these are just the first handful we’re building.  The architecture allows new services to show up one-by-one.&lt;/p&gt;

&lt;h2 id="api-v3"&gt;API v3&lt;/h2&gt;

&lt;p&gt;Virtually all of this work centers around something we call “API v3.”  It’s the new RESTful API for connecting to NuGet services.  Each micro-service will have its own resource representations, but it all comes together under general guidelines that we put under this v3 umbrella.&lt;/p&gt;

&lt;h3 id="linked-data"&gt;Linked Data&lt;/h3&gt;

&lt;p&gt;The most critical principle for API v3 is the use of Linked Data.  Specifically, we have chosen to use &lt;a href="http://json-ld.org"&gt;JSON-LD&lt;/a&gt; for our linked data format.&lt;/p&gt;

&lt;p&gt;Presently, NuGet clients have to know to connect to https://www.nuget.org/api/v2/ to consume our main feed.  That URL is our OData endpoint where all of the package data is exposed.  Our clients use WCF Data Services to construct OData-based URLs for specific requests–these include search queries, specific package lookups, and more.  All requests funnel through a single pipeline of code.  That code originally resulted in hitting our SQL server, but today we intercept queries and answer requests from our Lucene search index as often as we can.  The code is gnarly.&lt;/p&gt;

&lt;p&gt;We want to break out of this pattern and have specific resources for specific purposes.  We can then fine-tune responses for specific requests without much risk of unintended consequences.  Furthermore, we want to move away from the constructed URLs and generated proxies where changing the details of the server resources or HTTP responses would break existing clients. Instead, the v3 client will follow links to new resources and extract data that understands from responses, thereby enabling it to adapt as server resources evolve.  Linked Data with task-specific resources will provide this for us.&lt;/p&gt;

&lt;p&gt;If you’d like to see an example this, here’s a sneak peak at some JSON-LD blobs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://nugetdev1.blob.core.windows.net/package-metadata/owners/nuget.json"&gt;Packages owned by the ‘nuget’ user&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://nugetdev1.blob.core.windows.net/package-metadata/packages/nuget.server.json"&gt;The NuGet.Server package&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;These are best viewed in Chrome, using the &lt;a href="https://github.com/callumlocke/json-formatter"&gt;JSON Formatter&lt;/a&gt; extension from the &lt;a href="https://chrome.google.com/webstore/detail/bcjindcccaagfpapjjmafapmmgkkhgoa"&gt;Chrome Web Store&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="eventually-consistent-responses"&gt;Eventually Consistent Responses&lt;/h3&gt;

&lt;p&gt;We are working to eliminate compute from the request pipeline wherever possible.  NuGet is an extremely read-heavy system, with millions of reads for every write.  Yet today’s design uses a system where writes are relatively cheap and reads are very expensive.  It’s time to invert that!&lt;/p&gt;

&lt;p&gt;To achieve virtually free reads, we’re moving to an eventually consistent response model.  When packages get uploaded, package ownership changes, or other data writes occur, we’ll write that data to our authoritative data store immediately (presently SQL).  But requests for package metadata or downloads won’t query against that authoritative data store.  Instead, they will read JSON-LD blobs that are computed by back-end services.&lt;/p&gt;

&lt;p&gt;We have a “Work Service” in our mix of micro-services, and it is responsible for performing scheduled work.  Some of the scheduled work is to act upon data events from the authoritative data store.  If 57 new packages got published in the last 30 seconds, it will then queue up work to process those 57 packages.  That work will result in JSON-LD blobs getting produced and added into the system.&lt;/p&gt;

&lt;p&gt;This means it might take a few minutes before a published package is available for discovery and download.  But for that trade-off, we can scale out our read capacity in a proactically limitless manner.  And we can separately scale  our Work Service to make sure it can keep up with the data ingress.&lt;/p&gt;

&lt;h3 id="nuget-client-api"&gt;NuGet Client API&lt;/h3&gt;

&lt;p&gt;The NuGet client API is going to be overhauled–or dare we say, “rewritten.”  We’re not sure of the full scope of this work yet or how it will be represented in our assemblies; we know it will be drastic though.  The new API will provide the foundation for connecting to all of the micro-services, and it will be designed so that new micro-services can easily have new client handlers provided.  The API will also address many cross-cutting concerns to make those service handlers clean.&lt;/p&gt;

&lt;p&gt;Some cross-cutting concerns we know to exist are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;NuGet service registration and connection&lt;/li&gt;
  &lt;li&gt;JSON-LD document processing&lt;/li&gt;
  &lt;li&gt;Asynchronous linked data navigation&lt;/li&gt;
  &lt;li&gt;Heavy use of caching&lt;/li&gt;
  &lt;li&gt;Support for mirrors&lt;/li&gt;
  &lt;li&gt;Authentication and other networking concerns&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ve already made some progress in these areas.  For instance, we ported a Java-based JSON-LD processor over to C# and published it both to &lt;a href="https://github.com/NuGet/json-ld.net"&gt;GitHub&lt;/a&gt; and &lt;a href="http://www.nuget.org/packages/json-ld.net/"&gt;NuGet&lt;/a&gt;.  We’re also working on a library that builds on top of JSON.NET to provide asynchronous linked data navigation.  We’ll soon be working on a good cache implementation to use underneath both of those.&lt;/p&gt;

&lt;p&gt;The new client API will also provide some features for these areas:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Traversing package metadata easily without downloading packages&lt;/li&gt;
  &lt;li&gt;Downloading packages without having to first read their metadata&lt;/li&gt;
  &lt;li&gt;Invoke the dependency resolver without installing packages&lt;/li&gt;
  &lt;li&gt;Determine if a package is compatible with a project without actually trying to install it&lt;/li&gt;
  &lt;li&gt;Support for Semantic Versioning 2.0&lt;/li&gt;
  &lt;li&gt;Support for architecture, configuration, and toolset groups in packages&lt;/li&gt;
  &lt;li&gt;New dependency resolver features for more complex graphs&lt;/li&gt;
  &lt;li&gt;And much more…&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="nuget-services-components"&gt;NuGet Services Components&lt;/h3&gt;

&lt;p&gt;Everything we’re doing on the service side is open-source of course.  You can find all of the NuGet Services components at &lt;a href="http://github.com/nuget/"&gt;http://github.com/nuget/&lt;/a&gt;.  We used to just have a couple of repositories there, with one large repository for the gallery; now we have a bunch of independent repos for each of our service and operations components.&lt;/p&gt;

&lt;p&gt;NuGet already has a thriving ecosystem, but we hope that with this refactoring of the service components, we’ll enable the ecosystem to grow even further.  We’re hoping to see other teams eventually create new NuGet micro-services that can augment the code NuGet functionality.&lt;/p&gt;

&lt;p&gt;When a NuGet client connects to a NuGet repository, that repository can provide whatever subset of micro-services it wants.  This will allow new stand-alone services to be created by us and by the community and for users to consume them easily.&lt;/p&gt;

&lt;h3 id="backwards-compatibility"&gt;Backwards Compatibility&lt;/h3&gt;

&lt;p&gt;I hope it goes without saying, but we will maintain backwards compatibility on both the server and the client.  With the rewritten NuGet client code, we’ll maintain support for connecting to V1- and V2-based NuGet package sources.  And the NuGet Gallery will continue to serve its V2-based OData feed indefinitely.  That V2-based feed will become eventually consistent at some point, querying off a read-only copy of the live system’s database.&lt;/p&gt;

&lt;h3 id="ecosystem-partners"&gt;Ecosystem Partners&lt;/h3&gt;

&lt;p&gt;We will encourage all ecosystem partners to adopt API v3 as soon as the first client release is out with support for it.  Until then, no action is necessary.&lt;/p&gt;

&lt;p&gt;If you want to get involved as early as possible, please hop over to &lt;a href="https://groups.google.com/forum/#!forum/nuget-ecosystem"&gt;the nuget-ecosystem Google Group&lt;/a&gt; and join us (or email &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#110;&amp;#117;&amp;#103;&amp;#101;&amp;#116;&amp;#045;&amp;#101;&amp;#099;&amp;#111;&amp;#115;&amp;#121;&amp;#115;&amp;#116;&amp;#101;&amp;#109;&amp;#043;&amp;#115;&amp;#117;&amp;#098;&amp;#115;&amp;#099;&amp;#114;&amp;#105;&amp;#098;&amp;#101;&amp;#064;&amp;#103;&amp;#111;&amp;#111;&amp;#103;&amp;#108;&amp;#101;&amp;#103;&amp;#114;&amp;#111;&amp;#117;&amp;#112;&amp;#115;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;&amp;#110;&amp;#117;&amp;#103;&amp;#101;&amp;#116;&amp;#045;&amp;#101;&amp;#099;&amp;#111;&amp;#115;&amp;#121;&amp;#115;&amp;#116;&amp;#101;&amp;#109;&amp;#043;&amp;#115;&amp;#117;&amp;#098;&amp;#115;&amp;#099;&amp;#114;&amp;#105;&amp;#098;&amp;#101;&amp;#064;&amp;#103;&amp;#111;&amp;#111;&amp;#103;&amp;#108;&amp;#101;&amp;#103;&amp;#114;&amp;#111;&amp;#117;&amp;#112;&amp;#115;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;).  We’ve also been hanging out in &lt;a href="https://jabbr.net/#nuget"&gt;Jabbr&lt;/a&gt; more often, and we’re usually listening to &lt;a href="https://twitter.com/nuget"&gt;@nuget&lt;/a&gt; and &lt;a href="https://twitter.com/search?q=%23nuget"&gt;#nuget&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;h2 id="timeline"&gt;Timeline&lt;/h2&gt;

&lt;p&gt;We are working on the release schedule that will be used to roll out the API v3-based client updates.  We expect the first release to be sometime this summer (U.S.), but we have’t decided on the scope of that release yet.  We’ll post more details to the client project home page on &lt;a href="http://nuget.codeplex.com"&gt;CodePlex&lt;/a&gt; when we firm up the plans.&lt;/p&gt;

&lt;p&gt;Between now and then, we don’t expect to have any other NuGet client releases.  And we’re also not putting much effort into other NuGet features or bug fixes right now.  We tried for a long time to chip away at this V3 work while also implementing other features, but we weren’t making enough progress on V3.  We’re now officially heads-down building NuGet 3.x and we will remain that way for the next several months.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140424/building-nuget-3.x.html" /><a10:updated>2014-04-24T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140411/new-search-on-the-gallery</guid><title>A new search experience on the Gallery</title><description>&lt;p&gt;For a while now, we’ve been working on some major improvements to search. Last week we deployed these improvements to production on &lt;a href="http://www.nuget.org"&gt;http://www.nuget.org&lt;/a&gt;. In this post, I’ll describe how the new service works. However, before we discuss the new service, let’s step back a bit and discuss the history of Search on NuGet.org&lt;/p&gt;

&lt;h2 id="search-via-sql"&gt;Search via SQL&lt;/h2&gt;
&lt;p&gt;Our first search implementation was done using our existing OData endpoints. We simply used the &lt;a href="http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#QueryStringOptions"&gt;OData Query Operators&lt;/a&gt; to filter data in our database by the User’s query. This had two major problems: It was fairly inefficient. SQL is a good engine for data lookup, but by default it is not as efficient at full-text search operations, like we wanted on NuGet.org. Second, it was inaccurate. Again, relational databases are great at lookup and querying, but only when the query is similarly structured. Our queries to SQL ended up as just a series of &lt;code&gt;LIKE&lt;/code&gt; comparisons for each field in our database &lt;code&gt;OR&lt;/code&gt;ed together.&lt;/p&gt;

&lt;p&gt;So, we opted to use a tool that was designed explicitly for full-text search to augment our SQL database…&lt;/p&gt;

&lt;h2 id="lucene-on-the-web-server"&gt;Lucene on the Web Server&lt;/h2&gt;
&lt;p&gt;Our second implementation was very much seen as an optimization for a very specific pair of cases: The search box in the NuGet Visual Studio Dialog, and the search box on the NuGet.org Website.&lt;/p&gt;

&lt;p&gt;Both of those views focus solely on the latest version of a package. So, our initial optimization was to take the latest version of each package and add it to a &lt;a href="https://lucenenet.apache.org/"&gt;Lucene.NET&lt;/a&gt; powered index running off the local file system of each web server. Each machine had a background task running that synced its local Lucene index with data from the database. Search queries were then executed against that index. The result was a dramatic speed and relevance improvement. Lucene provides very powerful boosting and scoring extension points and we integrated some of our statistics in to that process.&lt;/p&gt;

&lt;p&gt;However, there were still a few problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Each machine had its own copy of the index, meaning a machine could get out of sync with the others&lt;/li&gt;
  &lt;li&gt;Our scoring algorithms were based off of total download counts, meaning new packages had a tough time getting noticed due to download-count-behemoths who have been in the gallery for years.&lt;/li&gt;
  &lt;li&gt;Finally, we wanted to expand the kinds of queries we could do with the Lucene index, but because the index only contained the latest version of each package, we were restricted to working with that set.&lt;/li&gt;
  &lt;li&gt;Having the index on the web server was useful, but constrained us to maintaining a smaller index in order avoid stressing the web server too much.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To solve those problems, we started work from the ground up on a new search infrastructure.&lt;/p&gt;

&lt;h2 id="nuget-search-service"&gt;NuGet Search Service&lt;/h2&gt;
&lt;p&gt;To combat the issues we had with Lucene integrated into the web server, we developed an entirely new Search Service, written from the ground up. The service, like all NuGet.org code, is completely &lt;a href="https://github.com/NuGet/NuGet.Services.Search"&gt;open-source on GitHub&lt;/a&gt;. The new Search Service is a separate HTTP service that is responsible for answering search queries. By moving search to its own set of machines, we hoped to reduce and even remove most of the issues we encountered with the previous search models.&lt;/p&gt;

&lt;p&gt;First, the search service stores the master copy of the Lucene index in Azure Blob Storage using the &lt;a href="https://azuredirectory.codeplex.com/"&gt;Azure Directory for Lucene.NET&lt;/a&gt; library. Of course, accessing the index from Blob Storage would be very inefficient, so the entire index is kept in memory on the Search Service machines at all times. It is frequently synced with the Blob Storage copy, but in general, most queries should be served directly from memory. Storing the index in a central location allows it to be updated in a single location, while the memory cache allows queries to be served very quickly. We track round-trip times between the Gallery and this new Search Service and the average seems to be hovering around 80ms, which is as fast as most of our database queries (and even faster than some of the heavier ones!). Storing the authoritative copy of the index in blob storage also gives us a few major benefits. For example, we can easily spin up new Search Service nodes and they will just grab the latest index from blob storage (loading the whole index into memory takes about 2-5 minutes). Also, our &lt;em&gt;write&lt;/em&gt; operations into the index (Adding new packages, deleting packages, updating existing packages, etc.) can be centralized and need only update the blobs.&lt;/p&gt;

&lt;p&gt;We also &lt;strong&gt;dramatically&lt;/strong&gt; increased the scope of the Index. It now contains every single version of every package ever uploaded (see note below). At the time of this post, that comes to about 254,886 documents (the number only differs from the total package count on the Gallery due to packages being unlisted by their authors, something which we frequently do with test packages as well ;)). Despite the size, the total index size comes out to around 600MB. Of course, when the index was on the web server, this would be an unacceptable about of memory pressure to add, but on the Search Service, we have free reign over the entire machine! As the index grows, we can safely continue to scale up the available memory by moving to more memory-intensive Azure VM profiles. Of course, scaling up isn’t a perfect solution, so we will continue to monitor memory growth, but at our growth rates, it’s going to be the ideal solution for a long time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do still hide unlisted packages from search queries. However, this is a good time to remind everyone that unlisting is &lt;strong&gt;not&lt;/strong&gt; a secure way to remove data from NuGet. It is a mechanism to reduce a package’s visibility, &lt;strong&gt;not&lt;/strong&gt; a way to prevent download of your package. If you need your package to be &lt;strong&gt;completely removed&lt;/strong&gt;, use the Contact Support link on your package page to request that we delete the package.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lastly, we overhauled our scoring and analysis algorithms. This work started back in June of 2013, with the release of NuGet 2.6. In that release, the client began supplying an additional HTTP header when it requested a package for download: &lt;code&gt;NuGet-Operation&lt;/code&gt;. This header contained a value indicating what the user was doing in order to cause the package to be downloaded. Once NuGet 2.6 started sending this data, we began collecting download data into a data warehouse and categorizing it based on many different aspects, including this Operation value. This began to manifest in the Package Statistics pages you can view from each Package detail page. The next step was to take this data and use it in scoring.&lt;/p&gt;

&lt;p&gt;Whereas our previous algorithm scored results based on total download count, our new algorithm scores them based on “Recent Installs.” Specifically, it uses the number of downloads requested with a &lt;code&gt;NuGet-Operation&lt;/code&gt; value of &lt;code&gt;Install&lt;/code&gt; or &lt;code&gt;Update&lt;/code&gt; within the past &lt;strong&gt;6 weeks&lt;/strong&gt;. This allows really popular packages like jQuery, EntityFramework and Newtonsoft.Json to remain fairly high up, because they are being Installed frequently, but also allows new packages to climb the ranks a little faster by shortening the time window and giving them a chance to catch up. Filtering by the &lt;code&gt;Install&lt;/code&gt; and &lt;code&gt;Update&lt;/code&gt; operations also allows us to filter out the noise caused by build servers using &lt;a href="https://docs.nuget.org/docs/reference/package-restore"&gt;Package Restore&lt;/a&gt; to download packages on every build.&lt;/p&gt;

&lt;h2 id="improving-relevance"&gt;Improving Relevance&lt;/h2&gt;

&lt;p&gt;John Taylor, an engineer on our team, spent the last few months of 2013 diving in to Lucene scoring and fiddling with parameters trying to nail down some of the best ways to score results. We had a few smaller-scale tests where we released some sample algorithms to progressively larger groups of people to get feedback. In the end, we managed to nail down an algorithm which gave us confidence that we could handle most of our requests efficiently and accurately. &lt;/p&gt;

&lt;p&gt;Still, testing with a broad audience doesn’t cover everything, so we know there are going to be gaps. Please do not hesitate to give us feedback on our results by &lt;a href="https://github.com/NuGet/NuGetGallery/issues"&gt;filing bugs&lt;/a&gt; or &lt;a href="https://www.twitter.com/nuget"&gt;pinging us on twitter&lt;/a&gt;. Tuning our search algorithm will be a never-ending process so keep telling us what you think!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140411/new-search-on-the-gallery.html" /><a10:updated>2014-04-11T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140403/nuget-2.8.1-april-2nd-downtime</guid><title>NuGet 2.8.1 Released, April 2nd-3rd Downtime, and the New Search Service</title><description>&lt;p&gt;This blog post was planned to be published on April 2nd as the NuGet 2.8.1 release announcement.  However, on that same day (also the first day of &lt;a href="http://www.buildwindows.com"&gt;Build 2014&lt;/a&gt;), NuGet.org suffered a severe service interruption.  It didn’t seem right to blog about the NuGet 2.8.1 release without also covering the interruption, so we waited a day and combined the posts.&lt;/p&gt;

&lt;h2 id="nuget-281-released-with-windows-phone-81-support"&gt;NuGet 2.8.1 Released with Windows Phone 8.1 Support&lt;/h2&gt;
&lt;p&gt;Let’s cover the fun stuff first!  On April 2nd, we released NuGet 2.8.1 to the Visual Studio Extension Gallery.  You can get the updates from within Visual Studio’s Extensions and Updates dialog, or directly from the extension gallery.  We also published NuGet.exe 2.8.1.&lt;/p&gt;

&lt;p&gt;Here are the downloads:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Visual Studio 2013&lt;/strong&gt;: &lt;a href="http://visualstudiogallery.msdn.microsoft.com/4ec1526c-4a8c-4a84-b702-b21a8f5293ca"&gt;Visual Studio Extension Gallery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Visual Studio 2010 and 2012&lt;/strong&gt;: &lt;a href="http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c"&gt;Visual Studio Extension Gallery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Command-Line Utility&lt;/strong&gt;: &lt;a href="http://nuget.org/nuget.exe"&gt;Direct Download&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;NuGet 2.8.1 includes support for Windows Phone 8.1, including both Silverlight-based libraries and WinRT-based libraries for Universal Apps.  For Silverlight-based Windows Phone 8.1 libraries, packages use the “wp81” framework name.  For WinRT-based Windows Phone App 8.1 libraries, packages use the “wpa81” framework name.&lt;/p&gt;

&lt;p&gt;In addition to the Windows Phone 8.1 support, we also fixed over a dozen bugs–mostly in nuget.exe.  See the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.8.1"&gt;release notes&lt;/a&gt; for other details about the release.&lt;/p&gt;

&lt;h2 id="april-2nd-3rd-downtime"&gt;April 2nd-3rd Downtime&lt;/h2&gt;
&lt;p&gt;As we tweeted about, we learned we had a few more vulnerabilities to heavy load than we had previously understood.  Perhaps due to the Build conference, or perhaps just a coincidence, &lt;a href="http://www.nuget.org"&gt;www.nuget.org&lt;/a&gt; was experiencing unusually high browser traffic early in the morning on both April 2nd and April 3rd.  The extra load ultimately led to interruptions in most of our services.&lt;/p&gt;

&lt;h3 id="services-impacted"&gt;Services Impacted&lt;/h3&gt;

&lt;p&gt;During the times of interruption, the following services were impacted:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The website’s Packages page showed 0 packages&lt;/li&gt;
  &lt;li&gt;Search on the website and in Visual Studio reported no packages&lt;/li&gt;
  &lt;li&gt;The feed for Visual Studio reported no packages&lt;/li&gt;
  &lt;li&gt;Users were unable to sign into the website or upload packages&lt;/li&gt;
  &lt;li&gt;Some users’ package restore operations failed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="root-cause"&gt;Root Cause&lt;/h3&gt;

&lt;p&gt;The www.nuget.org home page makes http requests to a /stats/totals endpoint that performs a query to get the home page statistics to show the number of packages and downloads.  The request was configured to be cached, but the cache wasn’t behaving as we expect. This resulted in SQL queries for each request.  Under heavy load, these requests backed up and the queries became locked on each other.&lt;/p&gt;

&lt;p&gt;Additionally, all of our web server instances were maintaining their own copies of our Lucene search index.  On a schedule, the servers would all query the database to update the index as needed.  These queries are expensive and as we scaled out to more instances under load, the queries were running frequently.  With so many expensive queries running, these queries started timing out and causing the search indexes to become corrupt.&lt;/p&gt;

&lt;h3 id="solution"&gt;Solution&lt;/h3&gt;

&lt;p&gt;In order to reduce the load on our SQL database, we have implemented two changes that are now deployed to www.nuget.org.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We have completely disabled the home page query (instead returning static numbers for the time-being).&lt;/li&gt;
  &lt;li&gt;We have deployed our new Search Service which was planned to be released next week.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="new-search-service"&gt;New Search Service&lt;/h2&gt;
&lt;p&gt;At 8:00pm PDT on April 3rd, we deployed a significant update to &lt;a href="http://www.nuget.org"&gt;www.nuget.org&lt;/a&gt; that changes the search implementation to use a dedicated &lt;a href="https://github.com/nuget/NuGet.Services.Search"&gt;Search Service&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We had planned to deploy this new search service next week, but the downtime we encountered April 2nd-3rd changed our plans.  The goals of the new Search Service include reducing load on our SQL Azure database and moving our Lucene search index out of the web servers and into Azure Blob Storage.  The Search Service runs independently, reading the index from blob storage, and the index is now maintained by back-end processes rather than on the web servers themselves.  We’re also able to direct more queries to the search service than we could handle with our previous index, relying less on SQL.&lt;/p&gt;

&lt;p&gt;The root cause analysis of our downtime uncovered that the SQL Azure load was the primary culprit, with the Lucene index updates being a significant contributor.  This new Search Service allows us to control the SQL load from our backend processes rather being tied to web traffic.&lt;/p&gt;

&lt;p&gt;We will publish a detailed blog post next week, but here’s what to expect from the new Search Service:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Search relevance has been completely overhauled.  We now boost search results by “recent installs” (the last 6 weeks of direct installs/updates) and we have drastically improved text analysis of package metadata.&lt;/li&gt;
  &lt;li&gt;Sort Options have been removed from the website.  Sorting by recent installs now produces the best results.  The sort options remain in Visual Studio and are still respected by our API.&lt;/li&gt;
  &lt;li&gt;The dropdown for “Include Prerelease” and “Stable Only” has been removed from the website.  As Prerelease packages have become more popular, this feature tended to caused confusion rather than provide benefit.  The dropdown is still in use in Visual Studio.&lt;/li&gt;
  &lt;li&gt;The search box on the website is now much bigger, promoted into the header, and more user-friendly.  Given search is the primary use of the site, this change was long overdue!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="/images/2014-04-03-search-service/header.png" alt="Updated header for www.nuget.org" /&gt;&lt;/p&gt;

&lt;p&gt;Please let us know what feedback you have on the new Search Service.&lt;/p&gt;

&lt;h2 id="downtime-timeline-and-details"&gt;Downtime Timeline and Details&lt;/h2&gt;

&lt;p&gt;Here is our timeline of the downtime.  All times are Pacific Daylight Time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;2014-04-01&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;11:30pm&lt;/strong&gt; - Some users started reporting incomplete search results late in the night on April 1st.  This appeared to just be our search index’s eventual consistency (although we now know that wasn’t the case).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2014-04-02&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;12:00am to 4:00am&lt;/strong&gt; - The index shrank all the way down to 0 packages during this time window.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4:00am&lt;/strong&gt; - The index’s state of 0 packages was affecting the website’s Packages page, and search on the website and in Visual Studio, and the Visual Studio feeds–everything reported 0 packages.  This triggered our automated alerts and it began paging us.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4:45am&lt;/strong&gt; - The interruption was confirmed; investigation had begun; and the initial notification was posted to twitter.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5:30am&lt;/strong&gt; - Some background services had been shut down to reduce load on the system.  We also found that package download statistics had not been getting automatically purged after migration into the warehouse, so a manual purge had begun.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7:00am&lt;/strong&gt; - Azure Support was engaged and they began helping us identify blocked queries and execute some SQL maintenance scripts to recalculate DB statistics and rebuild indexes.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8:40am&lt;/strong&gt; - We deployed an update to www.nuget.org that removed an unnecessary http request to /stats/totals from every page.  This request had been identified as triggering a SQL query that was causing locks.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9:00am&lt;/strong&gt; - All SQL indexes finished rebuilding and all DB statistics were recalculated.  The package download statistics purge was over 33% complete.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10:30am&lt;/strong&gt; - We found that our Output Cache was not working for the /stats/totals request, and every single user hitting the www.nuget.org home page was resulting in SQL queries to calculate the totals.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10:45am&lt;/strong&gt; - We deployed another update to www.nuget.org that hard-coded the values for the /stats/totals request (that serves the home page numbers) instead of querying SQL.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11:00am&lt;/strong&gt; - The load on our SQL database was drastically reduced and connectivity issues went away.  We rebuilt our search indexes successfully and the site was fully functional again.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12:20pm&lt;/strong&gt; - The package download statistics purge completed and all background services were resumed.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11:55pm&lt;/strong&gt; - There were reports that our index was shrinking again.  We successfully rebuilt them manually.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2014-04-03&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;4:00am&lt;/strong&gt; - Our monitoring alerted us that the search index was corrupt again.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4:30am&lt;/strong&gt; - Our indexes were manually rebuilt successfully.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7:30am&lt;/strong&gt; - We were under heavy load again and our web servers were scaling out.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7:45am&lt;/strong&gt; - Some of our new web server instances failed to build their search indexes, manual rebuilds failed, and other web server instances’ indexes became corrupt.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8:00am&lt;/strong&gt; - Many DB queries were failing; we engaged Azure support.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9:00am&lt;/strong&gt; - Diagnosis determined that the queries running to rebuild and update the Lucene indexes were significantly contributing to the SQL load.  We began the work to finalize the Search Service deployment that was planned for next week.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10:45am&lt;/strong&gt; - Traffic dropped off, the web servers scaled back down, search indexes were successfully rebuilt.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11:00am&lt;/strong&gt; - We began preparing a backup strategy deployment that would still use our web server based search indexes, but would disable all automatic updates to the index (limiting the index updates to manual rebuilds only).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11:00am-8:00pm&lt;/strong&gt; - The website ran steadily all day under normal load.  We continued our work and testing on the new Search Service while also validating our backup strategy deployment in case the Search Service deployment doesn’t go smoothly (we were planning for another week of testing).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8:00pm&lt;/strong&gt; - We deployed the new Search Service and the updated www.nuget.org front-end that uses the Search Service.  We also deployed our backup strategy deployment into the site’s staging slot in case we need to switch to it.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The deployment we completed tonight should very significantly reduce the load on SQL by:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Not performing queries to get the home page statistics for every page load.&lt;/li&gt;
  &lt;li&gt;Running a single search index update process in the back-end instead of one on each web server.&lt;/li&gt;
  &lt;li&gt;Sending more requests into our search service instead of directing them to SQL.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="work-items-discovered"&gt;Work Items Discovered&lt;/h3&gt;

&lt;p&gt;While working through this incident, we identified a handful of work items that we will tackle immediately.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Determine why the ASP.NET caching isn’t working for the /stats/totals request&lt;/li&gt;
  &lt;li&gt;Replace the /stats/totals query with a background service that calculates the totals on a schedule and stores the results in blob storage to be served from the gallery rather than ever calculating the numbers directly&lt;/li&gt;
  &lt;li&gt;Determine why Package Restore was sporadically failing under the database load – as this was thought to be immune from database exceptions&lt;/li&gt;
  &lt;li&gt;Schedule more DB maintenance tasks through our background services to rebuild indexes and recalculate DB statistics&lt;/li&gt;
  &lt;li&gt;Fix the bug leading to our package statistics not being purged after being replicated into the warehouse database&lt;/li&gt;
  &lt;li&gt;Complete the work for having a read-only mirror up and running for when our primary site is down
•	This work was already ongoing, but we are increasing the priority of it to have it finished very soon&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="appreciation"&gt;Appreciation&lt;/h3&gt;
&lt;p&gt;We appreciate that while many of you reported the service interruption on twitter using either &lt;a href="https://twitter.com/search?q=%40nuget%20OR%20%23nuget"&gt;@nuget or #nuget&lt;/a&gt;, you were kind and polite about it.  We know that there are countless developers around the world that rely on nuget.org being up and running all day every day, and we’re sorry that we let you down.  We are working to improve our reliability.&lt;/p&gt;

&lt;p&gt;Thank you for your support,&lt;/p&gt;

&lt;p&gt;&lt;a href="http://twitter.com/jeffhandley"&gt;Jeff Handley&lt;/a&gt; and the entire &lt;a href="http://twitter.com/nuget"&gt;NuGet team&lt;/a&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140403/nuget-2.8.1-april-2nd-downtime.html" /><a10:updated>2014-04-03T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20140328/nuget-2.6.1-for-webmatrix</guid><title>NuGet 2.6.1 for WebMatrix</title><description>&lt;p&gt;The NuGet team released an updated NuGet Package Manager extension for WebMatrix on March 26, 2014. This update can be installed from the &lt;a href="http://extensions.webmatrix.com/packages/NuGetPackageManager/"&gt;WebMatrix Extension Gallery&lt;/a&gt; using the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open WebMatrix 3&lt;/li&gt;
  &lt;li&gt;Click the Extensions icon in the Home ribbon&lt;/li&gt;
  &lt;li&gt;Select the Updates tab&lt;/li&gt;
  &lt;li&gt;Click to update NuGet Package Manager to 2.6.1&lt;/li&gt;
  &lt;li&gt;Close and restart WebMatrix 3&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are the salient points from the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6.1-for-webmatrix"&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="notable-changes"&gt;Notable Changes&lt;/h2&gt;

&lt;p&gt;This extension update addresses two of the biggest issues users have faced consuming NuGet packages within WebMatrix. The first was a &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6.1-for-webmatrix#NuGet_Schema_Version_Error"&gt;NuGet schema version error&lt;/a&gt; and the second was a bug leading to &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6.1-for-webmatrix#Zero-Byte_DLLs_in_bin_Folder"&gt;zero-byte DLLs in the bin folder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This latest release provides compatibility with the newest NuGet packages, preventing the schema error from occurring. New versions of packages including Microsoft.AspNet.WebPages can now be installed in WebMatrix.  Some of these packages were using NuGet features such as &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6#XDT_Web.config_transformation_support"&gt;XDT config transforms&lt;/a&gt;, which wasn’t supported in WebMatrix until now.&lt;/p&gt;

&lt;h2 id="other-recent-improvements"&gt;Other Recent Improvements&lt;/h2&gt;

&lt;p&gt;When NuGet Package Manager 2.8 was released for Visual Studio, we also released NuGet Package Manager 2.5.0 for WebMatrix.  While this was mentioned in the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.8#WebMatrix_NuGet_Client_Updates"&gt;NuGet 2.8 Release Notes&lt;/a&gt;, we didn’t mention the specific new features that update introduced.&lt;/p&gt;

&lt;p&gt;Those improvements include the ability to &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6.1-for-webmatrix#Update_All"&gt;update all NuGet packages&lt;/a&gt; in your web site together, as well as getting a prompt to &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6.1-for-webmatrix#Overwrite_Existing_Files"&gt;overwrite existing files&lt;/a&gt; when installing NuGet packages.&lt;/p&gt;

&lt;h2 id="continued-updates"&gt;Continued Updates&lt;/h2&gt;

&lt;p&gt;Because we extracted the NuGet functionality out of WebMatrix 3 into an extension contributed to the NuGet open-source project, we’ve been able to make these important updates without requiring an update to WebMatrix itself.  If you have other issues using NuGet within WebMatrix, &lt;a href="https://nuget.codeplex.com/WorkItem/Create"&gt;let us know by filing issues on CodePlex&lt;/a&gt; so that we can address them.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20140328/nuget-2.6.1-for-webmatrix.html" /><a10:updated>2014-03-28T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131216/update-all-experience-explained</guid><title>Update All Experience Explained</title><description>&lt;p&gt;While working on NuGet 2.8, we addressed some bugs dealing with the “Update All” behavior, where a single gesture will update all packages in the project.  During the testing of those fixes, another bug was filed stating, &lt;a href="http://nuget.codeplex.com/workitem/3885" title="Bug-3885"&gt;After using Update All, packages remain in the Updates list&lt;/a&gt;.  We have decided to mark that bug as “By Design” for now and get your feedback on it.  In order to explain why we consider it by design, let us first explore how install-package or update-package works in the following scenario.&lt;/p&gt;

&lt;h2 id="scenario"&gt;Scenario&lt;/h2&gt;

&lt;p&gt;The source repository contains package B versions 1.0.0, 1.0.5, 1.5.0 and 2.0.0.  It also contains package A version 2.0.0 which has a dependency on B (&amp;gt;= 1.0.0) and version 1.0.0 which has no dependency on B.&lt;/p&gt;

&lt;p&gt;Now, a clean &lt;code&gt;Install-Package A -version 2.0.0&lt;/code&gt; would install A version 2.0.0 and install &lt;strong&gt;&lt;em&gt;B version 1.0.0&lt;/em&gt;&lt;/strong&gt; since that is the &lt;strong&gt;&lt;em&gt;lowest version of the dependency&lt;/em&gt;&lt;/strong&gt; that meets the dependency version requirements.&lt;/p&gt;

&lt;p&gt;Similarly, a clean &lt;code&gt;Install-Package A -version 1.0.0&lt;/code&gt; followed by &lt;code&gt;Update-Package A&lt;/code&gt; would first install A version 1.0.0 and then update to 2.0.0 and install &lt;strong&gt;&lt;em&gt;B version 1.0.0&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="dependencyversion"&gt;DependencyVersion&lt;/h2&gt;

&lt;p&gt;Note that during Install-Package, you can use the -DependencyVersion switch to determine which version of the dependency is pulled in: Lowest/HighestPatch/HighestMinor/Highest.  This switch is being introduced in NuGet 2.8.&lt;/p&gt;

&lt;p&gt;For the example above,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DependencyVersion Lowest would bring in B version 1.0.0&lt;/li&gt;
  &lt;li&gt;DependencyVersion HighestPatch would bring in B version 1.0.5&lt;/li&gt;
  &lt;li&gt;DependencyVersion HighestMinor would bring in B version 1.5.0&lt;/li&gt;
  &lt;li&gt;DependencyVersion Highest would bring in B version 2.0.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you may have guessed, &lt;em&gt;Lowest&lt;/em&gt; is the default value when the switch is not specified.  This is true for both Update-Package PowerShell cmdlet and the ‘Update’ and ‘Update All’ buttons on the dialog.  Before the -DependencyVersion switch was introduced in NuGet 2.8, NuGet always used the &lt;em&gt;HighestPatch&lt;/em&gt; behavior when resolving dependencies.&lt;/p&gt;

&lt;h2 id="update-all"&gt;Update All&lt;/h2&gt;

&lt;p&gt;Now, let us extend the same example to have another package C versions 1.0.0 and 2.0.0. 
Imagine a project with the following packages installed on it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Package A version 1.0.0&lt;/li&gt;
  &lt;li&gt;Package C version 1.0.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we hit ‘Update All’ on this project, as you could guess, the end result would be the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Package A version 2.0.0&lt;/li&gt;
  &lt;li&gt;Package B version 1.0.0&lt;/li&gt;
  &lt;li&gt;Package C version 2.0.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that, after ‘Update All’, there is still one update available for B version 2.0.0.  In fact, there are 3 versions of B that are newer than the one installed as part of ‘Update All’.&lt;/p&gt;

&lt;p&gt;Hence, &lt;a href="http://nuget.codeplex.com/workitem/3885" title="Bug-3885"&gt;Bug-3885&lt;/a&gt;, which states that “After using Update All, packages remain in the Updates list.”&lt;/p&gt;

&lt;p&gt;Some argue that for the ‘Update All’ button and the ‘Update-Package’ PowerShell cmdlet, DependencyVersion should have been &lt;em&gt;Highest&lt;/em&gt;.  That is incorrect for 3 reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Packages that are not already installed are being updated to the latest version.  In the example, B version 2.0.0 gets installed while B version 1.0.0 would have sufficed.  This is not preferable.&lt;/li&gt;
  &lt;li&gt;Package author did not imply it.  In the example, author of ‘A’ wanted ‘B’ version 1.0.0 to be used with ‘A’ version 2.0.0.  But, ‘B’ version 2.0.0 gets installed instead.&lt;/li&gt;
  &lt;li&gt;‘Update’ and ‘Update All’ will behave differently from one another making it confusing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the current behaviour, you can simply hit ‘Update All’ again to get the updates for the newly installed packages.&lt;/p&gt;

&lt;h2 id="by-design"&gt;By Design&lt;/h2&gt;

&lt;p&gt;In the case of new packages being installed while updating other packages, we’ve concluded that getting the lowest compatible version of those packages is the right design, for two reasons.  First, the user hadn’t specifically asked for those packages to be updated.  Second, it’s a simple extra step to update them once their installed.  This seems better than NuGet eagerly updating the packages, making the code a bit more complicated but more importantly making the behavior less predictable.&lt;/p&gt;

&lt;p&gt;We will be watching comments on the &lt;a href="https://nuget.codeplex.com/workitem/3885"&gt;issue&lt;/a&gt; if you would like to add your thoughts.  If there’s overwhelming support for making NuGet eagerly get the new updates, we’ll reconsider the behavior in NuGet 2.9.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131216/update-all-experience-explained.html" /><a10:updated>2013-12-16T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131206/nuget-governance-model</guid><title>NuGet Governance Model</title><description>&lt;p&gt;Over the last couple of years, we’ve had the chance to meet with many individuals who both use and contribute to NuGet. One of the questions that has come up on more than one occasion pertains to how decisions get made for NuGet, especially decisions around which features are included in NuGet releases. This is an understandable question, especially since the NuGet core team consists of Microsoft employees.&lt;/p&gt;

&lt;p&gt;In order to provide more transparency around both the decision making structure and the different project contribution levels, we’ve published our &lt;a href="http://docs.nuget.org/docs/reference/governance"&gt;governance document&lt;/a&gt; on &lt;a href="http://docs.nuget.org"&gt;docs.nuget.org&lt;/a&gt;. Please take a look and let us know your thoughts.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131206/nuget-governance-model.html" /><a10:updated>2013-12-06T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131206/microsoftaccountauthentication</guid><title>Use your Microsoft account to log in to NuGet.org!</title><description>&lt;p&gt;Starting today you can use your Microsoft account to log in to NuGet.org. I don’t know about you, but I want as few passwords as possible, so any opportunity to get rid of a password is great. Now, your NuGet.org password doesn’t have to be one of those many passwords you have to forget/lose/etc.&lt;/p&gt;

&lt;p&gt;To associate a Microsoft account with an existing account, make sure you’re signed out of NuGet.org and then click the sign-in link at the top right of the page. On this page, click the new “Sign in with a Microsoft account” button:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/1-signinwithmsa.png" alt="New Sign In Page" /&gt;&lt;/p&gt;

&lt;p&gt;Sign in to your Microsoft account and grant us permission to use your account. If you already have a NuGet.org account, AND the email address in your Microsoft account is the same as the one in your NuGet.org account, you’ll see this page:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/2-existingaccount.png" alt="We found an existing account" /&gt;&lt;/p&gt;

&lt;p&gt;Simply type in your current NuGet.org password and you’re done! &lt;/p&gt;

&lt;p&gt;If you’ve never created a NuGet.org account, or if you use a different email address for your Microsoft account, you’ll see the page below. You can either give us a username and email address to create a new account, or if you do already have an account (with a different email address) you can sign in to it and we’ll associate the two accounts.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/3-doweknowyou.png" alt="Do we know you?" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; We will not use the email address attached to your Microsoft account for any notification purposes. We only use the email address you enter and confirm when registering.&lt;/p&gt;

&lt;p&gt;Once you’ve associated your account, any time you click “Sign in with a Microsoft account” and are already logged in to your Microsoft account, you’ll be immediately signed in to NuGet.org! You can review your login credentials on the new Account management page, by clicking on your username at the top right when logged in to NuGet.org. When you associate a Microsoft account, you’ll be able to click the “Remove” button next to “Password Login” and we’ll delete the password from our system.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/4-accountpage.png" alt="Account Management Page" /&gt;&lt;/p&gt;

&lt;p&gt;If you decide you want to re-enable password login for some reason, you can do that from the account page too:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/5-enablepassword.png" alt="Re-enable Password" /&gt;&lt;/p&gt;

&lt;p&gt;We’ll send you an email and you can use the link in that message to set a new password (just like we do if you forget your password). Once you’ve re-enabled password login, you can remove your Microsoft account if you want. Of course, we never let you remove your last login credential.&lt;/p&gt;

&lt;p&gt;If you do lose access to your account (for example, your Microsoft account is hijacked, hacked or lost), you can still use the “Forgot My Password” link or &lt;a href="https://www.nuget.org/policies/Contact"&gt;contact us for assistance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/6-forgotpassword.png" alt="Forgot My Password" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE: None of this changes the way you interact with nuget.exe&lt;/strong&gt;, you still use an API Key that you get from the Account page. This may change over time, but we will continue support existing API Keys.&lt;/p&gt;

&lt;h2 id="why-microsoft-account-what-about-other-providers"&gt;Why Microsoft account? What about other providers?&lt;/h2&gt;
&lt;p&gt;You may be wondering why we chose Microsoft accounts and what our plans are for other providers. To put it simply, we chose Microsoft account, because of this:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/7-whymsa.png" alt="Visual Studio Microsoft account login" /&gt;&lt;/p&gt;

&lt;p&gt;Starting in Visual Studio 2013, you log in to Visual Studio with a Microsoft account. In the future, we plan to integrate more with this system so that if you are logged in to Visual Studio with the same Microsoft account you use on NuGet.org, we can provide you with a customized experience. Imagine seeing lists of your favorite packages, custom feeds you design, etc.&lt;/p&gt;

&lt;p&gt;As for other providers, we are open to the idea, but we didn’t feel that any providers added much value since only Microsoft accounts are supported in Visual Studio. NuGet is the package manager for the Microsoft platform, and we expect most users are using Visual Studio and will have a Microsoft account. Having said that, we definitely recognize that not everyone uses Visual Studio, and there may be value in adding support for other providers. Since NuGet is an &lt;strong&gt;open-source project&lt;/strong&gt;, we are very happy to hear from you if you feel we should add support for another provider. If you really want another provider supported, file an issue on our &lt;a href="https://github.com/NuGet/NuGetGallery/issues"&gt;Issue Tracker&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="coming-soon-persistent-sessions"&gt;Coming Soon: Persistent Sessions&lt;/h2&gt;
&lt;p&gt;The next major authentication feature we plan to add is “persistent sessions”. The idea here is that once you log in on a machine, you remain logged in until you sign out. Users have been asking for this for a long time, and we have been listening. However, it’s not as simple as just “setting a boolean flag” to make your login persistent. Before persistent sessions can be introduced we need a few things. First, we need a feature like GitHub’s &lt;a href="https://github.com/blog/1513-introducing-github-sudo-mode"&gt;“sudo mode”&lt;/a&gt; so that we can force users to re-authenticate before performing dangerous operations (like changing passwords) to reduce the risk of account hijacking when a user leaves a machine unattended. Second, we need a way for users to manage user sessions so they can revoke access from devices they have lost access to. Our initial plan for this second feature is to just sign you out of all sessions when you change your password (so if you lose access to a device, just change your password, even if you set it to the same thing again). In the future, we will likely have a feature where you can view a summary of all the devices you log in to NuGet.org with as well as how and when you last logged in. Something like GitHub’s Security History page:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-05-microsoftaccountauthentication/8-githubsessions.png" alt="GitHub Security History" /&gt;&lt;/p&gt;

&lt;p&gt;These issues require a little extra design and implementation, but they’re near the top of our queue of things to do now, so expect to see them soon. I should note that if you have a Microsoft account, you &lt;strong&gt;do&lt;/strong&gt; still have to click Sign In every time you restart your browser, but since Microsoft accounts have persistent sessions you &lt;strong&gt;don’t&lt;/strong&gt; have to enter your password again! So we’re getting close!&lt;/p&gt;

&lt;h2 id="a-small-breaking-change"&gt;A small breaking change&lt;/h2&gt;
&lt;p&gt;As part of this change, we have broken a small part of our API. We had an “accidental feature” (i.e. it wasn’t intended ;)) where you could call our API and pass the API key in as a query string parameter, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;POST https://www.nuget.org/api/v2/package?apikey=...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have disabled this feature in this change as it was unintentional and undocumented. None of the NuGet tools use this feature, so as long as you’re using NuGet.Core, you shouldn’t have any issues, but if you do, just change your code to pass the API Key in the body of the “X-NuGet-ApiKey” header (which was the intended mechanism for providing API Keys) instead. If you have any concerns about this, please post an issue in our &lt;a href="https://github.com/NuGet/NuGetGallery/issues"&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131206/microsoftaccountauthentication.html" /><a10:updated>2013-12-06T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131118/Click-Manage-NuGet-Packages-for-Solution-hangs-VS</guid><title>Starting Manage NuGet Packages for Solution dialog for projects under SourceGear Vault - issue and workaround</title><description>&lt;p&gt;There has been reports that VS hangs when Manage NuGet Packages for Solution menu item is clicked. When VS responds again, it reports the following error: &lt;/p&gt;

&lt;p&gt;“Loading the projects is required to complete the requested action. If you click the Cancel button, project loading will continue in the background, and you can try to perform the action again later.”&lt;/p&gt;

&lt;p&gt;When this happens, clicking Cancel button on the message dialog won’t work and Visual Studio has to be manually closed. This issue may be related to the association of your project with SourceGear Vault, which puts the read-only attribute to the packages.config file. One workaround for the issue is to remove the read-only attribute from the packages.config file. If this does not solve your hang issue, please report it to us by filing a bug on &lt;a href="http://nuget.codeplex.com"&gt;http://nuget.codeplex.com&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131118/Click-Manage-NuGet-Packages-for-Solution-hangs-VS.html" /><a10:updated>2013-11-18T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131107/VS2013-hang-on-installing-or-updating-packages-may-be-related-to-ReSharper81EAP</guid><title>VS hung on installing or updating packages may be related to ReSharper8.1 EAP</title><description>&lt;p&gt;Recently there have been customer reports of hangs in Visual Studio while installing or updating NuGet packages. It could be related to &lt;a href="https://nuget.codeplex.com/workitem/3775"&gt;this issue&lt;/a&gt;, if you have ReSharper 8.1 EAP installed.&lt;/p&gt;

&lt;p&gt;The solution is to update ReSharper to one of the stable versions such as ReSharper 8.1. If it doesn’t solve the issue for you, please report it to us through &lt;a href="http://nuget.codeplex.com"&gt;http://nuget.codeplex.com.&lt;/a&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131107/VS2013-hang-on-installing-or-updating-packages-may-be-related-to-ReSharper81EAP.html" /><a10:updated>2013-11-07T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131016/package-restore-and-consent-changes</guid><title>Package Restore and Consent Changes</title><description>&lt;p&gt;When NuGet 2.0 released, it included the requirement that in order to use package restore, you first &lt;a href="http://blog.nuget.org/20120518/package-restore-and-consent.html"&gt;needed to explicitly provide consent&lt;/a&gt; to the NuGet client to download packages over the Internet. This requirement added some friction to normal developer workflows, and it added more friction in build and continuous integration sever scenarios. Needless to say, the feedback was not positive, and since releasing 2.0, we’ve been working with various groups to remove this friction.&lt;/p&gt;

&lt;p&gt;With NuGet 2.7, we have been able to remove the explicit consent requirement by making consent the default behavior and providing a means to explicitly “opt-out”. If you do not wish to have NuGet download packages from the Internet, you can disable the behavior by unselecting one or both of the checkboxes in the Package Manager settings dialog.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/package-restore-consent-changes-dialog.png" alt="Package Manager Configuration Dialog" /&gt;&lt;/p&gt;

&lt;p&gt;Additionally, we have &lt;a href="http://blog.nuget.org/20130829/nuget-2.7-package-restore-consent-errors.html"&gt;documented a known issue&lt;/a&gt; and work around where it may appear that the default consent behavior has not changed in a clean installation of Visual Studio 2013. &lt;/p&gt;

&lt;p&gt;Thanks for bearing with us through any friction that the explicit consent requirement added to your work, and we hope that you’ll enjoy the freedom from that requirement going forward!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131016/package-restore-and-consent-changes.html" /><a10:updated>2013-10-16T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20131011/friendly-license-names</guid><title>Friendly License Names</title><description>&lt;p&gt;Yesterday afternoon, we enabled a new feature for both the NuGet gallery and the Visual Studio client (for NuGet &amp;gt;= 2.7) which will display the list of license names for a package in addition to simply providing a link to the license text. The big idea behind this feature is that it will aid in the decision making process over whether or not to use a package.&lt;/p&gt;

&lt;p&gt;While displaying text such as “MIT” may seem like a trivial problem, there is a significant amount of complexity involved in determining the name from a license document. In this feature, license names are determined as a result of analyzing the license text itself. &lt;/p&gt;

&lt;p&gt;For this analysis, &lt;a href="http://www.sonatype.com/news/sonatype-reduces-licensing-risks-with-new-update-to-nuget-and-visual-studio#.Ulgp8NxDsqw"&gt;NuGet has partnered with Sonatype&lt;/a&gt; and leveraged the power of their component lifecycle management (CLM) system. You may remember that in early 2012, Sonatype began enabling polyglot development shops to manage both their Java and .NET components with one repository when they &lt;a href="http://www.sonatype.com/news/sonatype-brings-industry-leading-repository-manager-to-net-developers#.UlgqG9xDsqw"&gt;included NuGet support in their Nexus repository&lt;/a&gt;. As such, when Sonatype released CLM, it seemed only natural that we leverage our partnership to bring some of the power of that system to the NuGet community.&lt;/p&gt;

&lt;p&gt;While there’s a lot happening behind the scenes, browsing license names shows up in some pretty simple ways in the NuGet clients. &lt;/p&gt;

&lt;p&gt;On the gallery, you can see license names in search results or package listings:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/license-names-package-list.png" alt="License names in search results" /&gt;&lt;/p&gt;

&lt;p&gt;Or on an individual package details page:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/license-names-package-details.png" alt="License names on package details page" /&gt;&lt;/p&gt;

&lt;p&gt;In Visual Studio, the license name shows up just beneath the existing license link:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/license-names-vs-dialog.png" alt="License names in Visual Studio" /&gt;&lt;/p&gt;

&lt;p&gt;In the event that a license URL was not provided in the source package, or if the license could not be determined, no license name will be displayed. Finally, as the owner of a package, the NuGet gallery provides control over whether or not the analyzed license information should be displayed to users.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/license-names-disable.png" alt="Managing license name visibility" /&gt;&lt;/p&gt;

&lt;p&gt;We plan to continue exploring ways that we can reduce friction around package selection by incorporating more of these kinds of “package intelligence” capabilities into the NuGet client and server. If you have a specific scenario that you think would be helpful here, let us know!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20131011/friendly-license-names.html" /><a10:updated>2013-10-11T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130920/how-to-use-nugets-xdt-feature-examples-and-facts</guid><title>How to use XDT in NuGet - Examples and Facts</title><description>&lt;p&gt;Starting with NuGet 2.6, XML-Document-Transform (XDT) is supported to transform XML files inside a project. The XDT syntax can be utilized in the .install.xdt and .uninstall.xdt file(s) under the package’s Content folder, which will be applied during package installation and uninstallation time, respectively.&lt;/p&gt;

&lt;p&gt;One of XDT’s greatest strengths is its &lt;a href="http://msdn.microsoft.com/en-us/library/dd465326.aspx"&gt;simple but powerful syntax&lt;/a&gt; for manipulating the structure of an XML DOM. Rather than simply overlaying one fixed document structure onto another structure, XDT provides controls for matching elements in a variety of ways, from simple attribute name matching to full XPath support. Once a matching element or set of elements is found, XDT provides a rich set of functions for manipulating the elements, whether that means adding, updating, or removing attributes, placing a new element at a specific location, or replacing or removing the entire element and its children. &lt;/p&gt;

&lt;p&gt;In this blog, examples of using NuGet’s XDT feature to manipulate XML DOM are demonstrated, based on the common transformation scenarios of Web.config files. Important aspects of applying this feature including its drawback are also given, which we want your feedback on how to further improve this feature and make it more useful.&lt;/p&gt;

&lt;h2 id="part-a-common-xdt-transformations-in-webconfiguninstallxdt-file"&gt;Part A: Common XDT Transformations in Web.config.(un)install.xdt file&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Change the attribute values of an element in Web.config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To change the attribute value such as connectionString of a Web.config file, either the  xdt:Transform=”SetAttributes” or  xdt:Transform=”Replace” attribute can be used in Web.config.(un)install.xdt file, in conjunction with the xdt:Locator attribute. &lt;/p&gt;

&lt;p&gt;The use of xdt:Transform=”SetAttributes” below will update the value of the connectionString attribute only, while leaving other attribute values in the &amp;lt;add&amp;gt; element untouched. &lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;connectionStrings&amp;gt;
    &amp;lt;add name="DefaultConnection" connectionString="value for the deployed Web.config file" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/&amp;gt;
    &amp;lt;/connectionStrings&amp;gt;
    ...
  &amp;lt;/configuration &amp;gt;
&lt;/pre&gt;

&lt;p&gt;On the other hand, the use of xdt:Transform=”Replace” will replace the entire  &amp;lt;add&amp;gt; element named “DefaultConnection”, with what’s specified in the Web.config.(un)install.xdt file.&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;connectionStrings&amp;gt;
    &amp;lt;add name="DefaultConnection" connectionString="value for the deployed Web.config file"  
		      providerName="System.Data.SqlClient" xdt:Transform="Replace" xdt:Locator="Match(name)"/&amp;gt;
    &amp;lt;/connectionStrings&amp;gt;
    ...
  &amp;lt;/configuration &amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Replace all elements under a section of Web.config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To replace all elements under the &amp;lt;system.web&amp;gt; section, the xdt:Transform=”Replace” attribute can be placed at the root of the  &amp;lt;system.web&amp;gt;  section. For example, the following XDT transform will update the entire  &amp;lt;system.web&amp;gt; section of the Web.config to just contain the two simple elements (&amp;lt;compilation&amp;gt; and &amp;lt;httpRuntime&amp;gt;) specified by the Web.config.(un)install.xdt file.&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;system.web xdt:Transform="Replace"&amp;gt;
      &amp;lt;compilation debug="false" targetFramework="4.5" /&amp;gt;
      &amp;lt;httpRuntime executionTimeout="00:05:00"/&amp;gt;
    &amp;lt;/system.web&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Insert a new element before the specific element in Web.config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Suppose the starting Web.config looks like below (from ASP.NET Web Forms Application):&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration&amp;gt;
    ...
    &amp;lt;system.webServer&amp;gt;
      &amp;lt;modules runAllManagedModulesForAllRequests="true" /&amp;gt;
    &amp;lt;/system.webServer&amp;gt;
    &amp;lt;runtime&amp;gt;
      ...
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;p&gt;To insert a new &amp;lt;validation&amp;gt; element in the &amp;lt;system.webServer&amp;gt; section but before the &amp;lt;modules&amp;gt; element, the xdt:Transform=”InsertBefore” attribute can be utilized in your Web.config.(un)install.xdt file:&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;system.webServer&amp;gt;
      &amp;lt;validation validateIntegratedModeConfiguration="false" xdt:Transform="InsertBefore(/configuration/system.webServer/modules)" /&amp;gt;
    &amp;lt;/system.webServer&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Insert a section of elements if missing from the current Web.config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are occasions that the starting Web.config does not have the section present, which elements need to be inserted to. In this case, the xdt:Transform=”InsertIfMissing” can be used. However, for Web.config file that does have the target section available but contain different elements, the insertion won’t take place. The end result would be that the target section of the config file stays unmodified. &lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;configSections xdt:Transform="InsertIfMissing"&amp;gt;
      &amp;lt;sectionGroup name="elmah"&amp;gt;
        &amp;lt;section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" /&amp;gt;
        &amp;lt;section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" /&amp;gt;
        &amp;lt;section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" /&amp;gt;
        &amp;lt;section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" /&amp;gt;
      &amp;lt;/sectionGroup&amp;gt;
    &amp;lt;/configSections&amp;gt;
    ...
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Two step transformation that ensures updating an existing value, or adding a new one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far the transformations that we talked about are all one-step transformation that adheres to the XDT syntax. For some of the cases, the package authors may not know the exact content of the starting Web.configs. Therefore, the transformation could fail, due to reasons such as the targeted sections/elements cannot be found. One common case would be direct calling xdt:Transform=”Insert” to a section or element that is not available in the current Web.config.&lt;/p&gt;

&lt;p&gt;As a workaround, one can apply a two-step transformation and have code like below in the Web.config.(un)install.xdt file, i.e. by removing the matching element if existing, and then inserting the element with the same name back. Fortunately the transformations are done in sequence, so this works with a Web.config that has &amp;lt;appSettings&amp;gt; section in place. &lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;appSettings&amp;gt;
    &amp;lt;!-- 
		Doing this in two steps (remove, then insert) ensures that we can update an existing value, or add a new one
	--&amp;gt;
      &amp;lt;add
	  	key="page:Version"
		xdt:Transform="Remove"
		xdt:Locator="Match(key)"/&amp;gt;
      &amp;lt;add
		key="page:Version"
		value="2.0.0"
		xdt:Transform="Insert" /&amp;gt;
    &amp;lt;/appSettings&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Transformation that can store/restore old values via package install/uninstall&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A cool thing that the NuGet’s XDT feature can do is that the original values can be stored upon package install, and then restored back via package uninstall. The example below showed that:&lt;/p&gt;

&lt;p&gt;During package install by calling Web.config.install.xdt, the “SourceFile_advances” key is replaced with a new value, while the old value is saved as a comment in the new &amp;lt;local&amp;gt; section.&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;appSettings xdt:Transform="InsertIfMissing"&amp;gt;
      &amp;lt;add key="SourceFile_Advances" 
			  keyvalue="C:\Code\SavvysoftValuations\new.csv" xdt:Locator="Match(key)" xdt:Transform="Replace" /&amp;gt;
    &amp;lt;/appSettings&amp;gt;
    &amp;lt;local xdt:Transform="Insert"&amp;gt;
      &amp;lt;!-- &amp;lt;add key="SourceFile_Advances" keyvalue="C:\Code\SavvysoftValuations\original.csv" /&amp;gt; --&amp;gt;
    &amp;lt;/local&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;p&gt;During package uninstall by calling Web.config.uninstall.xdt, the &amp;lt;appSettings&amp;gt; and &amp;lt;local&amp;gt; section was removed and the original value for “SourceFile_advances” key was added back.&lt;/p&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;appSettings xdt:Transform="Remove"&amp;gt;
    &amp;lt;/appSettings&amp;gt;
    &amp;lt;local xdt:Transform="Remove"&amp;gt;
    &amp;lt;/local&amp;gt;
    &amp;lt;appSettings xdt:Transform="InsertIfMissing"&amp;gt;
      &amp;lt;add key="SourceFile_Advances" keyvalue="C:\Code\SavvysoftValuations\original.csv" /&amp;gt;
    &amp;lt;/appSettings&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;h2 id="part-b-things-that-you-should-know-about-the-nuget-xdt-feature"&gt;Part B: Things that you should know about the NuGet XDT feature&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Unlike the other NuGet packages, which files/references are automatically removed during package uninstallation, NuGet performs XML transformation specified in the .uninstall.xdt file. In that sense, XDT package uninstallation is not symmetrical to what’s been added by package installation. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The XDT feature can be apply to any XML files including the Web.Debug.config and Web.Release.config files. The transform .xdt files would need to be named Web.Debug.config.(un)install.xdt and Web.Release.config.(un)install.xdt accordingly. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The XDT feature works well under nested Content folders, also recognizes the targetframeworks, by placing under the approriate folder such as net45. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Due to limitation of the current transform syntax, authoring a universal package that can handle various forms of Web.config files (with sections/elements/attributes variations) can be difficult at this point. Especially, the combined usages of xdt:Transform=”InsertIfMissing” and/or xdt:Transform=”Insert” does not work well. Taking the below Web.config.install.xdt file as an example, when the &amp;lt;runtime&amp;gt; section does not exist, the whole section will be inserted, and the &amp;lt;dependentAssembly&amp;gt; element will be inserted one more time via the xdt:Transform=”Insert” statement. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
  &amp;lt;configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"&amp;gt;
    &amp;lt;runtime xdt:Transform="InsertIfMissing"&amp;gt; 
      &amp;lt;assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1"&amp;gt; 
        &amp;lt;dependentAssembly xdt:Transform="Insert"&amp;gt; 
          &amp;lt;assemblyIdentity name="X" publicKeyToken="032d34d3e998f237" culture="neutral" /&amp;gt; 
          &amp;lt;bindingRedirect oldVersion="0.0.0.0-2.0.1.5" newVersion="2.0.1.5" /&amp;gt; 
        &amp;lt;/dependentAssembly&amp;gt; 
      &amp;lt;/assemblyBinding&amp;gt; 
    &amp;lt;/runtime&amp;gt;
  &amp;lt;/configuration&amp;gt;
&lt;/pre&gt;

&lt;p&gt;One potential solution to this issue would be allowing customized XDT transform, so that more complicated syntax can be applied during package install/uninstall, such as merging sections and elements between the starting Web.config files and the specified transformations. By this way, we are moving up the complication to the XDT syntax layer, instead on the transform file itself. A &lt;a href="http://blog.appharbor.com/2012/07/27/custom-web-config-transforms-and-merges"&gt;sample custom transformation engine&lt;/a&gt; has been authored by AppHarbor, with its &lt;a href="https://github.com/appharbor/appharbor-transformtester"&gt;open source tester&lt;/a&gt; on github. &lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130920/how-to-use-nugets-xdt-feature-examples-and-facts.html" /><a10:updated>2013-09-20T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130910/portable-package-issues</guid><title>Issues uploading portable library packages [Fixed]</title><description>&lt;p&gt;Starting September 3rd, some users started having issues uploading packages that contain portable libraries; on September 10th, we deployed a fix to address those issues.&lt;/p&gt;

&lt;h2 id="errors-experienced"&gt;Errors Experienced&lt;/h2&gt;

&lt;p&gt;Depending on how you were publishing your package, you would have experienced the errors in a few different ways.&lt;/p&gt;

&lt;h3 id="upload-package-page-on-nugetorg"&gt;Upload Package page on nuget.org&lt;/h3&gt;

&lt;p&gt;If you were uploading your package through the nuget.org website’s Upload Package page, the package would have initially uploaded okay, but you would have gotten an error when submitting the verified package details.&lt;/p&gt;

&lt;p&gt;The error would have been our standard “Error: Oh no, we broke something!” response page.&lt;/p&gt;

&lt;h3 id="push-with-nugetexe"&gt;Push with nuget.exe&lt;/h3&gt;

&lt;p&gt;If you were using nuget.exe push to upload your package to the gallery, you would have gotten a different, and misleading error. That error was coming back as “The remote server returned an error: (502) Bad Gateway.”&lt;/p&gt;

&lt;h3 id="publish-through-nuget-package-explorer"&gt;Publish through NuGet Package Explorer&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://npe.codeplex.com"&gt;NuGet Package Explorer&lt;/a&gt; has the ability to publish packages directly. Attempting to publish packages with portable dependencies would lead to a vague error about a “bad request.”&lt;/p&gt;

&lt;h2 id="broken-scenarios"&gt;Broken Scenarios&lt;/h2&gt;

&lt;p&gt;It took us a few days to really get to the root cause of this issue, because we were observing a couple of different behaviors. When we finally had it figured out, here’s what it turned out to be.&lt;/p&gt;

&lt;h3 id="scenario-1-packages-with-portable-libraries"&gt;Scenario 1: Packages with portable libraries&lt;/h3&gt;

&lt;p&gt;In the scenario of a package containing portable libraries, there were a few details necessary to hit the error.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The \lib folder of the package contained a subfolder for a portable library profile. Example: &lt;code&gt;\lib\portable-net4+sl4+wp71+win8&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The nupkg file was created using &lt;code&gt;nuget.exe pack&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The nupkg file was being uploaded either through the Upload Package page on the gallery, or from &lt;code&gt;nuget.exe push&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If the nupkg file was created with NuGet Package Explorer, or just opened and saved in it, then the package could be uploaded successfully. If the nupkg file was published to the gallery directly from NuGet Package Explorer, that would also succeed.&lt;/p&gt;

&lt;p&gt;What we learned from this scenario was that even though NuGet Package Explorer uses the same endpoint as nuget.exe push, packages created within it were immune to the error.&lt;/p&gt;

&lt;h3 id="scenario-2-packages-with-portable-dependencies"&gt;Scenario 2: Packages with portable dependencies&lt;/h3&gt;

&lt;p&gt;Some package authors were bypassing scenario 1 by using NuGet Package Explorer to create their package, but they were still getting the errors. In this scenario, we found the packages had dependencies that only applied for portable libraries.  For instance, a dependency on Microsoft.Bcl.Async which only applies for portable library projects. NuGet Package Explorer would save this dependency’s target framework as “.NETPortable,Version=v0.0,Profile=net45+sl4+sp71” and that would trigger the errors during package uploads as well, even when publishing through NuGet Package Explorer.&lt;/p&gt;

&lt;h2 id="root-cause"&gt;Root Cause&lt;/h2&gt;

&lt;p&gt;The root cause of this issue ended up being a little complicated. Without diving too much into the details, here’s the general explanation, broken down into a few steps.&lt;/p&gt;

&lt;h3 id="step-1---creating-the-package"&gt;Step 1 - Creating the package&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Portable library folders names include &lt;code&gt;+&lt;/code&gt; characters&lt;/li&gt;
  &lt;li&gt;nuget.exe (built against .NET 4.0) encodes the &lt;code&gt;+&lt;/code&gt; characters, changing them to &lt;code&gt;%2B&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;NuGet Package Explorer (built against .NET 4.5) &lt;em&gt;does not&lt;/em&gt; encode the &lt;code&gt;+&lt;/code&gt; characters&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="step-2---uploading-the-package"&gt;Step 2 - Uploading the package&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;When processing a package upload, nuget.org always decodes folder names for package contents to determine the package’s supported frameworks&lt;/li&gt;
  &lt;li&gt;When the package was created with nuget.exe, the &lt;code&gt;%2B&lt;/code&gt; was decoded back to a &lt;code&gt;+&lt;/code&gt; character&lt;/li&gt;
  &lt;li&gt;When the package was created or published with NuGet Package Explorer, the &lt;code&gt;+&lt;/code&gt; character was decoded into a space&lt;/li&gt;
  &lt;li&gt;The decoded folder names determine the list of frameworks for the package&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="step-3---verifying-target-frameworks"&gt;Step 3 - Verifying target frameworks&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;With the list of frameworks, nuget.org verifies frameworks before storing them in the list of supported frameworks for the package&lt;/li&gt;
  &lt;li&gt;If unrecognized characters (such as spaces) are found in the framework name, the framework name is thrown out immediately&lt;/li&gt;
  &lt;li&gt;If the framework name contains only valid characters, and it’s found to be a portable library, we load the portable libraries from the .NET Framework installation and parse them to create normalized framework names&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="outcome"&gt;Outcome&lt;/h3&gt;

&lt;p&gt;We found at this stage of the process that there were two possible outcomes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Packages created or published with NuGet Package Explorer, whose decoded folder names had spaces in them, would get ignored as invalid framework names – this was causing data corruption where we weren’t capturing the portable profiles supported by the package&lt;/li&gt;
  &lt;li&gt;All other packages, whose decoded folder names had the correct &lt;code&gt;+&lt;/code&gt; characters, would fail to parse because of a bug in how we were reading the normalized framework names from the .NET Framework&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that packages in Scenario 2 above bypass the folder name encoding/decoding and they were skipping directly to outcome number 2 where the framework name parsing would fail.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For the first outcome, we handled the exception gracefully but this led to data corruption–it was actually a silent failure.&lt;/p&gt;

&lt;p&gt;For the second outcome, we were not handling the exception and it was causing the visible errors users reported.&lt;/p&gt;

&lt;h2 id="the-fix"&gt;The Fix&lt;/h2&gt;

&lt;p&gt;We needed a two-part fix to address the issues here.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Parse the framework names correctly so that we don’t fail trying to read the normalized framework name from the .NET Framework.&lt;/li&gt;
  &lt;li&gt;Prevent spaces in the decoded folder names by putting the &lt;code&gt;+&lt;/code&gt; characters back in place.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On September 10th, we deployed these fixes to the gallery and portable library packages can again be uploaded (with no data corruption). We are still working on correcting the data behind the packages that were successfully published over the past week that incurred the data corruption. The symptom of the data corruption is that despite the package being available on the gallery, users with previous versions of the package won’t always see the new version as an available update.&lt;/p&gt;

&lt;h2 id="our-apologies"&gt;Our Apologies&lt;/h2&gt;

&lt;p&gt;We are sorry for the trouble this issue has caused package authors over the past week. We appreciate that you immediately reached out to us and that you were patient while we investigated and fixed the bugs.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130910/portable-package-issues.html" /><a10:updated>2013-09-10T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130829/nuget-2.7-package-restore-consent-errors</guid><title>NuGet 2.7 Package Restore Consent Errors</title><description>&lt;p&gt;After NuGet 2.7 was released with Automatic Package Restore and implicit consent, some users reported that they were still seeing build errors indicating that package restore consent had not been given. When we made the package restore changes in NuGet 2.7, we identified one scenario where this would happen but determined we couldn’t implement a fix and would rather have to document the cause and solution.&lt;/p&gt;

&lt;h2 id="scenario-and-cause"&gt;Scenario and Cause&lt;/h2&gt;

&lt;p&gt;In order to hit this problem, there’s a specific scenario you must be in. The scenario isn’t extremely common, but we have already heard reports of it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Using a freshly built machine or a machine where Visual Studio was freshly installed&lt;/li&gt;
  &lt;li&gt;NuGet has been upgraded to NuGet 2.7&lt;/li&gt;
  &lt;li&gt;An existing solution is opened where the MSBuild-integrated package restore has already been enabled&lt;/li&gt;
  &lt;li&gt;The MSBuild-integrated package restore was enabled before NuGet 2.7 was released&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this scenario, the solution contains a .nuget folder that has a nuget.exe in it versioned 2.6 or earlier. In those versions of nuget.exe, package restore consent was OFF by default (hard-coded to false when not present in nuget.config). When building this solution in Visual Studio, NuGet identifies that the MSBuild-integrated package restore is enabled and therefore automatic package restore is skipped. Then the old nuget.exe kicks in for the package restore and it does not find package restore consent to be given, yielding the following build error:&lt;/p&gt;

&lt;p&gt;Package restore is disabled by default. To give consent, open the Visual Studio Options dialog, click on Package Manager node and check ‘Allow NuGet to download missing packages during build.’ You can also give consent by setting the environment variable ‘EnableNuGetPackageRestore’ to ‘true’.&lt;/p&gt;

&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;

&lt;p&gt;As explained on the &lt;a href="http://docs.nuget.org/docs/reference/package-restore"&gt;Package Restore&lt;/a&gt; documentation, there are three ways to address this situation.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Force save your NuGet settings with consent given.&lt;/strong&gt; To do this, open Visual Studio’s options and under Package Manager, choose General. Uncheck and then re-check the boxes for consent and click OK. This forces your %AppData%\NuGet\NuGet.config file to be saved with consent explicitly given, allowing NuGet 2.6 and earlier to see that you’ve given consent.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update the version of NuGet.exe in your .nuget folder.&lt;/strong&gt; To do this, run &lt;code&gt;nuget.exe update -self&lt;/code&gt; from your .nuget folder, which will download the latest version of NuGet.exe and replace the version in the .nuget folder. The latest version of NuGet.exe will infer consent to be ON even when not explicitly saved in the NuGet.config file.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Migrate to Automatic Package Restore.&lt;/strong&gt; For this approach, you would migrate from the MSBuild-integrated package restore to the Automatic Package Restore approach, following the &lt;a href="http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore"&gt;documented walkthrough&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description><a10:link href="http://blog.nuget.org/20130829/nuget-2.7-package-restore-consent-errors.html" /><a10:updated>2013-08-29T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130823/Introducing-Edit-Package</guid><title>Editing Package Metadata on the NuGet Gallery</title><description>&lt;p&gt;In our next deployment, which is scheduled for the week of August 26th, 2013, we have added the ability to edit package metadata at any point in time before or after publishing the package.
This has been one of the frequent requests from package authors.&lt;/p&gt;

&lt;p&gt;The changes are current dpeloyed @ &lt;a href="https://staging.nuget.org"&gt;staging.nuget.org&lt;/a&gt;. You can play around with the feature in this sandbox environment. Let us know your feedback and suggestions &lt;a href="https://github.com/NuGet/NuGetGallery/issues"&gt;here&lt;/a&gt; in github.
We are aiming production deployment on 8/27/2013 barring any ship-stopper issues. Meanwhile, we will continue testing from our end as well.&lt;/p&gt;

&lt;h2 id="edit-package"&gt;Edit Package&lt;/h2&gt;

&lt;p&gt;Before the introduction of this feature, clicking on “Edit package” on your package page will give you the below message.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-23-Introducing-Edit-Package/Old-EditPackage.png" alt="Old EditPackage" /&gt;&lt;/p&gt;

&lt;p&gt;With this new feature, the “Edit package” page will display all of the metadata of the package and lets you to update them.&lt;/p&gt;

&lt;p&gt;All the descriptive fields of the package like Title, Description, Summary, Icon Url, Project Url, Authors, Copyright, Tags and Release notes can be edited. However, updates to the functional details of the package like ID,Version, Dependencies and actual the content of the package requires a new version to be uploaded. This is inline with our current behavior. More details can be found in the &lt;a href="http://docs.nuget.org/docs/working-specs/editing-package-descriptions"&gt;spec&lt;/a&gt; and the &lt;a href="https://github.com/NuGet/NuGetGallery/issues/807"&gt;forum discussion thread&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="editing-different-versions-of-a-package"&gt;Editing different versions of a package&lt;/h2&gt;

&lt;p&gt;You can chose any specific version of the package (not necessarily the latest) and edit its metadata.
The “Edit package” page lists the package versions in the left pane making it easier to switch between versions.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-23-Introducing-Edit-Package/Edit-Package-Versions.png" alt="Edit Package Versions" /&gt;&lt;/p&gt;

&lt;h2 id="saving-and-undoing-edits"&gt;Saving and undoing edits&lt;/h2&gt;

&lt;p&gt;Once you update the desired fields of the package and “Save” the edit, the changes will be submitted. It might take a few minutes for the new nupkg file to be created and the changes to reflect in the web page. When the changes are being applied, you (as the package owner) will see the below message in the package page and the new updated data, whereas other users would still see the old data.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-23-Introducing-Edit-Package/Pending-Edit-Message.png" alt="Pending Edit Message" /&gt;&lt;/p&gt;

&lt;p&gt;You can click on “Undo pending Edits” link in the notification message to undo all the current edits before it gets applied. You can always make another edit at a later point of time to make further changes.&lt;/p&gt;

&lt;h2 id="editing-while-uploading-a-new-package"&gt;Editing while uploading a new package&lt;/h2&gt;

&lt;p&gt;Package details can be edited while uploading a new package as well.
The “Verify Details” page now displays all of the metadata of the package. You can update the details as required and a nupkg file with the modified data will be created and uploaded for you. This will help you in making quick edits to the package before publishing it.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-23-Introducing-Edit-Package/Edit-Package-On-Upload.png" alt="Edit Package On Upload" /&gt;&lt;/p&gt;

&lt;h2 id="searchinstallupdate-on-edited-package"&gt;Search/Install/Update on edited package&lt;/h2&gt;

&lt;p&gt;Once the pending edit goes through, all search/Install/update operations on the package from VS client or the api/v2 feed will reflect the new data and nupkg.&lt;/p&gt;

&lt;p&gt;Note, it might take up to 10 minutes for the new changes to be reflected in search results (as the index needs to be updated).&lt;/p&gt;

&lt;h2 id="how-it-works"&gt;How it Works&lt;/h2&gt;

&lt;p&gt;When a package author submits a package, we queue the edit up for being applied. Our backend system processes the queue of edits the order they were submitted, creating an updated NuGet package file (.nupkg), replacing the originally uploaded package and leaving the version number the same. The package originally uploaded, along with its corresponding metadata, are archived in the system.&lt;/p&gt;

&lt;p&gt;As a result of the newly created nupkg file, the search index and package source feed are updated as well. This will have downstream effects on consumers of the package source feed as the package’s metadata and hash will be updated. From that point forward, users that install the package will get the updated package, while users that installed the package before the edit will obviously have the old package. When package restore is used, the updated package will be downloaded during package restore, seamlessly replacing the original.&lt;/p&gt;

&lt;p&gt;The end result is that package authors now have the ability to update package metadata without publishing a new version of the package. We hope this approach will address the many scenarios when package authors have needed the ability, while also not disturbing package consumers in any way.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130823/Introducing-Edit-Package.html" /><a10:updated>2013-08-23T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130822/nuget-2.7-released</guid><title>NuGet 2.7 Released</title><description>&lt;p&gt;The NuGet team is excited to announce that NuGet 2.7 is now released in stable form. We published the release candidate on August 14th and we have not made any changes since then. For details
about what’s in the release, the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.7"&gt;release notes&lt;/a&gt; are published on &lt;a href="http://docs.nuget.org"&gt;docs.nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="nuget-27-features"&gt;NuGet 2.7 Features&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Package Restore by Default (with implicit consent)&lt;/li&gt;
  &lt;li&gt;Automatic Package Restore in Visual Studio&lt;/li&gt;
  &lt;li&gt;Simplified Package Restore from the Command-Line&lt;/li&gt;
  &lt;li&gt;Project Retargeting and Upgrade Build Errors/Warnings&lt;/li&gt;
  &lt;li&gt;NuGet Configuration Defaults&lt;/li&gt;
  &lt;li&gt;Renaming the Default Package Source&lt;/li&gt;
  &lt;li&gt;Performance Improvements&lt;/li&gt;
  &lt;li&gt;New Extensibility APIs&lt;/li&gt;
  &lt;li&gt;Development-Only Dependencies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that with NuGet 2.7, we have removed support for &lt;em&gt;Visual Studio 2010 Express for Windows Phone&lt;/em&gt; due to technical limitations related to the new automatic package restore. A separate download is available for that version of Visual Studio and it can be found on the &lt;a href="https://nuget.codeplex.com/releases/view/107605"&gt;NuGet 2.7 downloads&lt;/a&gt; page on CodePlex. Support for &lt;em&gt;Visual Studio 2010 Express for Web&lt;/em&gt; is still included in the primary extension published to the Visual Studio Extension Gallery.&lt;/p&gt;

&lt;h2 id="visual-studio-2013"&gt;Visual Studio 2013&lt;/h2&gt;

&lt;p&gt;NuGet 2.7 is the version of NuGet that will be included in Visual Studio 2013, with the exception of minor updates such as refreshed localization. When those updates are completed, we will republish NuGet 2.7, but no new features will be added.&lt;/p&gt;

&lt;h2 id="known-issues"&gt;Known Issues&lt;/h2&gt;

&lt;p&gt;There are two known issues with nuget.exe restore with the 2.7 release, and these will be fixed soon and the nuget.exe download will be updated along with the &lt;a href="http://www.nuget.org/packages/NuGet.CommandLine/"&gt;NuGet.CommandLine package&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3596"&gt;New package restore doesn’t work on Mono when using SLN file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3598"&gt;New package restore doesn’t work with Wix projects&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description><a10:link href="http://blog.nuget.org/20130822/nuget-2.7-released.html" /><a10:updated>2013-08-22T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130816/introducung-nuget-concierge</guid><title>Introducing NuGet Concierge</title><description>&lt;p&gt;Twelve weeks ago, Microsoft’s Azure Applications Platform &amp;amp; Tools team welcomed three 2nd-year college students, Jaspreet Bagga, Jeremiah Jekich, and Melissa McNeill, and gave them an opportunity to contribute to NuGet.&lt;/p&gt;

&lt;h2 id="package-discovery"&gt;Package Discovery&lt;/h2&gt;

&lt;p&gt;Discovering NuGet packages can be a daunting process. The best way to do so is either via word of mouth or online search. However, your friends aren’t always available when you’re looking for a new package at 3:00 in the morning. You could try to search online, but you’d need to spend unnecessary amounts of time sifting through the results before finding a package that may be helpful. We recognize that this time is better spent actually developing software. We wanted to create an accessible service to deliver package recommendations using real world data about how developers use packages.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-16-introducing-nuget-concierge/screenshot.png" alt="NuGet Concierge screenshot" /&gt;&lt;/p&gt;

&lt;h2 id="nuget-concierge"&gt;NuGet Concierge&lt;/h2&gt;

&lt;p&gt;Thus was born &lt;a href="http://concierge.nuget.org"&gt;NuGet Concierge&lt;/a&gt;, a package recommendation service that recommends packages to developers based on the packages currently being used in their project. We envisioned developers being able to upload their project’s packages.config file to the NuGet Concierge website, which would then present them with a list of packages they may find useful. Something along the lines of “Most projects that use Package A also use Package B.”&lt;/p&gt;

&lt;p&gt;So, at the beginning of the summer, we put out a call to the community via Twitter, asking for developers to upload their projects’ packages.config files to help seed our newly conceived recommendation service. We asked, and you delivered! Armed with a collection of over 350 packages.config files, the NuGet Concierge project was brought to life.&lt;/p&gt;

&lt;h2 id="implementation"&gt;Implementation&lt;/h2&gt;

&lt;p&gt;The first step was to translate the collected .config files into a structure that would allow us to analyze the relationships between packages. How often are individual packages used? But, more importantly, how are packages used together?&lt;/p&gt;

&lt;p&gt;So, we took the community’s .config files and parsed them, using them to construct a graph. In doing so, we tracked the number of times a package was used, a value we referred to as the package’s “popularity.” We also tracked how many times two packages were used together, which we referred to as the packages’ “pairing frequency.”&lt;/p&gt;

&lt;h2 id="determining-relationships"&gt;Determining Relationships&lt;/h2&gt;

&lt;p&gt;Let’s say we have two packages, EntityFramework and jQuery. By looking at our graph, we know the popularity of EntityFramework and the popularity of jQuery, as well as the pairing frequency between the two. In order to determine the strength of EntityFramework’s relationship with jQuery, we take the pairing frequency between the two and divide it by the popularity of EntityFramework. This gives us the percentage of time EntityFramework is used with jQuery. If we want to know how strongly jQuery is associated with EntityFramework, we simply take the pairing frequency and divide it by the popularity of jQuery.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-16-introducing-nuget-concierge/relationships.png" alt="Package Relationships" /&gt;&lt;/p&gt;

&lt;h2 id="making-recommendations"&gt;Making Recommendations&lt;/h2&gt;
&lt;p&gt;Suppose a developer has a packages.config file that contains knockoutjs. In order to make recommendations, we look at all packages used with knockoutjs that are not currently in use in the developer’s project. In this case, let’s say knockoutjs is associated with Newtonsoft.Json and Modernizr at association strengths of 91% and 87% respectively. We would recommend Newtonsoft.Json first, followed by Modernizr.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-16-introducing-nuget-concierge/graph.png" alt="Package Graph" /&gt;&lt;/p&gt;

&lt;p&gt;With NuGet Concierge, we made every effort to enable improvements over time. When users upload their packages.config file, we present them with the option to contribute their file to the NuGet Concierge dataset. This increases the pool of .config files from which we generate our graph. This means that our recommendations become more accurate the more NuGet Concierge is used.&lt;/p&gt;

&lt;p&gt;Additionally once users are presented with recommendations, they have the option to “Like” or “Dislike” each recommendation by giving it a thumbs up or a thumbs down. This information gets stored and allows us to analyze the usefulness of the recommendations we are making. If we find some packages are being recommended at a high association strength, but most users deem them unhelpful, we can adjust the system to recommend the packages at more appropriate strengths. Likewise, we can give a strength boost to packages recommended at low association strengths but deemed helpful by the community.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-08-16-introducing-nuget-concierge/voting.png" alt="Voting" /&gt;&lt;/p&gt;

&lt;h2 id="nuget-concierges-potential"&gt;NuGet Concierge’s Potential&lt;/h2&gt;

&lt;p&gt;NuGet Concierge is just a conceptual prototype at the moment.  But if the concept proves to be valuable, we imagine NuGet Concierge as a fully integrated part of NuGet, having a presence in the Gallery, Visual Studio’s Manage NuGet Packages dialog, and the Package Manager Console. The greatest part of NuGet Concierge is the data powering it. The ability to reference real data about how packages are actively used together opens up a world of opportunities that can potentially help NuGet better serve developers.&lt;/p&gt;

&lt;p&gt;Until then, please feel free to try out NuGet Concierge at &lt;a href="http://concierge.nuget.org"&gt;http://concierge.nuget.org&lt;/a&gt; and let us know if you like the concept and/or the recommendations. You can also see the code for NuGet Concierge at &lt;a href="http://github.com/NuGet/Concierge"&gt;http://github.com/NuGet/Concierge&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130816/introducung-nuget-concierge.html" /><a10:updated>2013-08-16T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130814/nuget-2.7-release-candidate</guid><title>NuGet 2.7 Release Candidate Available</title><description>&lt;p&gt;The NuGet 2.7 Release Candidate is now available, with an expected release before the end of August.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/releases/view/107605"&gt;Download: Visual Studio Extensions and NuGet.exe Command-Line&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/list/advanced?release=NuGet%202.7&amp;amp;status=all"&gt;All Work Items for the Release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;[Open Issues](https://nuget.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Proposed&lt;/td&gt;
          &lt;td&gt;Active&amp;amp;release=NuGet%202.7)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Resolved&amp;amp;release=NuGet%202.7"&gt;Work Items Being Tested&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you encounter any problems with NuGet 2.7, especially any regressions, please file an issue on &lt;a href="http://nuget.codeplex.com"&gt;CodePlex&lt;/a&gt; right away and prefix the issue with “[NuGet 2.7]”.&lt;/p&gt;

&lt;p&gt;Please note that we plan to include NuGet 2.7 in the final release of Visual Studio 2013, so the features and bug fixes in this release will be available in-the-box for all Visual Studio 2013 users.&lt;/p&gt;

&lt;h2 id="acknowledgements"&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;We would like to thank the following external contributors for their significant contributions to NuGet 2.7:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/mxrss"&gt;Mike Roth&lt;/a&gt; (&lt;a href="https://twitter.com/mxrss"&gt;@mxrss&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;Show License url when listing packages and verbosity is detailed. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/adamralph"&gt;Adam Ralph&lt;/a&gt; (&lt;a href="https://twitter.com/adamralph"&gt;@adamralph&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/1956"&gt;#1956&lt;/a&gt; - Add developmentDependency attribute to packages.config and use it in pack command to only include runtime packages&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/tkrafael"&gt;Rafael Nicoletti&lt;/a&gt; (&lt;a href="https://twitter.com/tkrafael"&gt;@tkrafael&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;Avoid duplicate Properties key in nuget.exe pack command.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/benphegan"&gt;Ben Phegan&lt;/a&gt; (&lt;a href="https://twitter.com/benphegan"&gt;@BenPhegan&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/2610"&gt;#2610&lt;/a&gt; - Increase machine cache size to 200.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/derigel"&gt;Slava Trenogin&lt;/a&gt; (&lt;a href="https://twitter.com/derigel"&gt;@derigel&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3217"&gt;#3217&lt;/a&gt; - Fix NuGet dialog showing updates in the wrong tab&lt;/li&gt;
      &lt;li&gt;Fix Project.TargetFramework can be null in ProjectManager&lt;/li&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3248"&gt;#3248&lt;/a&gt; - Fix SharedPackageRepository FindPackage/FindPackagesById will fail on non-existent packageId&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/KevinBoyleRG"&gt;Kevin Boyle&lt;/a&gt; (&lt;a href="https://twitter.com/kevfromireland"&gt;@kevfromireland&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3234"&gt;#3234&lt;/a&gt; - Enable support for Nomad project&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/corinblaikie"&gt;Corin Blaikie&lt;/a&gt; (&lt;a href="https://twitter.com/corinblaikie"&gt;@corinblaikie&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3252"&gt;#3252&lt;/a&gt; - Fix push command fails with exit code 0 when file doesn’t exist.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/veselkamartin"&gt;Martin Veselý&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3226"&gt;#3226&lt;/a&gt; - Fix bug with Add-BindingRedirect command when a project references a database project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/miroslavbajtos"&gt;Miroslav Bajtos&lt;/a&gt; (&lt;a href="https://twitter.com/bajtos"&gt;@bajtos&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/2891"&gt;#2891&lt;/a&gt; - Fix bug of nuget.pack parsing wildcard in the ‘exclude’ attribute incorrectly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/zippy1981"&gt;Justin Dearing&lt;/a&gt; (&lt;a href="https://twitter.com/zippy1981"&gt;@zippy1981&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3307"&gt;#3307&lt;/a&gt; - Fix bug NuGet.targets does not pass $(Platform) to nuget.exe when restoring packages.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/benerdin"&gt;Brian Federici&lt;/a&gt; (&lt;a href="https://twitter.com/benerdin"&gt;@benerdin&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/3294"&gt;#3294&lt;/a&gt; - Fix bug in nuget.exe package command which would allow adding files with the same name but different casing, eventually causing “Item already exists” exception.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codeplex.com/site/users/view/dcazzulino"&gt;Daniel Cazzulino&lt;/a&gt; (&lt;a href="https://twitter.com/kzu"&gt;@kzu&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://nuget.codeplex.com/workitem/2990"&gt;#2990&lt;/a&gt; - Add Version property to NetPortableProfile class.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/DavidSimner"&gt;David Simner&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3460"&gt;#3460&lt;/a&gt; - Fix bug NullReferenceException if requireApiKey = true, but the header X-NUGET-APIKEY isn’t present&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/friism"&gt;Michael Friis&lt;/a&gt; (&lt;a href="https://twitter.com/friism"&gt;@friism&lt;/a&gt;)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="https://nuget.codeplex.com/workitem/3278"&gt;#3278&lt;/a&gt; - Fixes NuGet.Build targets file to so that it works correctly on MonoDevelop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="notable-features-in-the-release"&gt;Notable features in the release&lt;/h2&gt;

&lt;h3 id="package-restore-by-default-with-implicit-consent"&gt;Package Restore by Default (with implicit consent)&lt;/h3&gt;

&lt;p&gt;NuGet 2.7 introduces a new approach to package restore, and also overcomes a major hurdle: Package restore consent is now on by default! The combination of the new approach and the implicit consent will drastically simplify package restore scenarios.&lt;/p&gt;

&lt;h4 id="implicit-consent"&gt;Implicit Consent&lt;/h4&gt;

&lt;p&gt;With NuGet versions 2.0, 2.1, 2.2, 2.5, and 2.6, users needed to explicitly allow NuGet to download missing packages during build. If this consent had not been explicitly given, then solutions that had enabled package restore would fail to build until the user had granted consent.&lt;/p&gt;

&lt;p&gt;Starting with NuGet 2.7, package restore consent is ON by default while allowing users to explicitly &lt;em&gt;opt out&lt;/em&gt; of package restore if desired, using the checkbox in NuGet’s settings in Visual Studio. This change for implicit consent affects NuGet in the following environments:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Studio 2013 Preview&lt;/li&gt;
  &lt;li&gt;Visual Studio 2012&lt;/li&gt;
  &lt;li&gt;Visual Studio 2010&lt;/li&gt;
  &lt;li&gt;NuGet.exe Command-Line Utility&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="automatic-package-restore-in-visual-studio"&gt;Automatic Package Restore in Visual Studio&lt;/h4&gt;

&lt;p&gt;Starting with NuGet 2.7, NuGet will automatically download missing packages during build in Visual Studio, even if package restore hasn’t been explicitly enabled for the solution. This automatic package restore happens in Visual Studio when you build a project or the solution, but before MSBuild is invoked. This yields a few significant benefits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;No further need to use the “Enable NuGet Package Restore” gesture on your solution&lt;/li&gt;
  &lt;li&gt;Projects don’t need to be modified, and NuGet won’t make changes to your project to ensure package restore is enabled&lt;/li&gt;
  &lt;li&gt;All NuGet packages, including those that included MSBuild imports for props/targets files, will be restored &lt;em&gt;before&lt;/em&gt; MSBuild is invoked, ensuring those props/targets are properly recognized during the build&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In order to use Automatic Package Restore in Visual Studio, you only need to take one (in)action:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Don’t check in your &lt;code&gt;packages&lt;/code&gt; folder&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While all users are implicitly opted into automatic package restore, you can easily opt out through the Package Manager settings in Visual Studio.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://docs.nuget.org/docs/release-notes/Images/NuGet-2.7/package-manager-settings.png" alt="Package Manager Settings" /&gt;&lt;/p&gt;

&lt;h4 id="simplified-package-restore-from-the-command-line"&gt;Simplified Package Restore from the Command-Line&lt;/h4&gt;

&lt;p&gt;NuGet 2.7 introduces a new feature for nuget.exe: &lt;code&gt;nuget.exe restore&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This new Restore command allows you to easily restore all packages for a solution with a single command, by accepting a solution file or folder as an argument. Furthermore, that argument is implied when there’s only a single solution in the current folder. That means the following all work from a folder that contains a single solution file (MySolution.sln):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;nuget.exe restore MySolution.sln&lt;/li&gt;
  &lt;li&gt;nuget.exe restore .&lt;/li&gt;
  &lt;li&gt;nuget.exe restore&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Restore command will open the solution file and find all projects within the solution. From there, it will find the packages.config files for each of the projects and restore all of the packages found. It also restores solution-level packages found in the .nuget\packages.config file. More information about the new Restore command can be found in the &lt;a href="http://docs.nuget.org/docs/reference/command-line-reference#Restore_Command"&gt;Command-Line Reference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="the-new-package-restore-workflow"&gt;The New Package Restore Workflow&lt;/h4&gt;

&lt;p&gt;We are excited about these changes to Package Restore, as it introduces a new workflow. If you want to omit your packages from source control you simply don’t commit the &lt;code&gt;packages&lt;/code&gt; folder. Visual Studio users who open and build the solution will see the packages automatically restored. For command-line builds, simply invoke &lt;code&gt;nuget.exe restore&lt;/code&gt; before invoking &lt;code&gt;msbuild&lt;/code&gt;. You’ll no longer need to remember to use the “Enable NuGet Package Restore” gesture on your solution, and we’ll no longer need to modify your projects to alter the build. And this also yields a much improved experience for packages that include MSBuild imports, especially for imports added through NuGet’s recent feature for &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.5#Automatic_import_of_msbuild_targets_and_props_files"&gt;automatically importing props/targets files&lt;/a&gt; from the \build folder.&lt;/p&gt;

&lt;p&gt;In addition to the work we’ve done ourselves, we’re also working with some important partners to round this new approach out. We don’t have concrete timelines for any of these yet, but each partner is as excited as we are about the new approach.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Team Foundation Service - They are working to integrate the call to &lt;code&gt;nuget.exe restore&lt;/code&gt; into the default build scenarios.&lt;/li&gt;
  &lt;li&gt;Windows Azure Web Sites - They are working to allow you to push your project to Azure and have &lt;code&gt;nuget.exe restore&lt;/code&gt; called before your web site is built.&lt;/li&gt;
  &lt;li&gt;TeamCity - They are updating their NuGet Installer plugin for TeamCity 8.x&lt;/li&gt;
  &lt;li&gt;AppHarbor - They are working to allow you to push your repo to AppHarbor and have &lt;code&gt;nuget.exe restore&lt;/code&gt; called before your solution is build.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With each of the partners above, they would use their own copy of nuget.exe and you would not need to carry nuget.exe in your solution.&lt;/p&gt;

&lt;h3 id="project-retargeting-and-upgrade-build-errorswarnings"&gt;Project Retargeting and Upgrade Build Errors/Warnings&lt;/h3&gt;

&lt;p&gt;Many times after retargeting or upgrading your project, you find that some NuGet packages aren’t functioning properly. Unfortunately, there is no indication of this and then there’s no guidance on how to address it. With NuGet 2.7, we now use some Visual Studio events to recognize when you’ve retargeted or upgraded your project in a way that affects your installed NuGet packages.&lt;/p&gt;

&lt;p&gt;If we detect that any of your packages were affected by the retargeting or upgrade, we’ll produce immediate build errors to let you know. In addition to the immediate build error, we also persist a &lt;code&gt;requireReinstallation="true"&lt;/code&gt; flag in your packages.config file for all packages that were affected by the retargeting, and each subsequent build in Visual Studio will raise a build warnings for those packages.&lt;/p&gt;

&lt;p&gt;While NuGet cannot take automatic action to reinstall affected packages, we hope this indication and warning will guide help you discover when you need to reinstall packages. We are also working on &lt;a href="http://docs.nuget.org/docs/workflows/reinstalling-packages"&gt;package reinstallation guidance documentation&lt;/a&gt; that these error messages direct you to.&lt;/p&gt;

&lt;h3 id="nuget-configuration-defaults"&gt;NuGet Configuration Defaults&lt;/h3&gt;

&lt;p&gt;Many companies are using NuGet internally, but have had a hard time guiding their developers to use internal package sources instead of nuget.org. NuGet 2.7 introduces a Configuration Defaults feature that allows machine-wide defaults to be specified for:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Enabled package sources&lt;/li&gt;
  &lt;li&gt;Registered, but disabled package sources&lt;/li&gt;
  &lt;li&gt;The default nuget.exe push source&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these can now be configured within a file located at %ProgramData%\NuGet\NuGetDefaults.config. If this config file specifies package sources, then the default nuget.org package source will not be registered automatically, and the ones in NuGetDefaults.config will be registered instead.&lt;/p&gt;

&lt;p&gt;While not required to use this feature, we expect companies to deploy NuGetDefaults.config files using Group Policy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that this feature will never cause a package source to be removed from a developer’s NuGet settings. That means if the developer has already used NuGet and therefore has the nuget.org package source registered, it won’t be removed after the creation of a NuGetDefaults.config file.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;See &lt;a href="http://docs.nuget.org/docs/reference/nuget-config-defaults"&gt;NuGet Configuration Defaults&lt;/a&gt; for more information about this feature.&lt;/p&gt;

&lt;h3 id="renaming-the-default-package-source"&gt;Renaming the Default Package Source&lt;/h3&gt;

&lt;p&gt;NuGet has always registered a default package source called “NuGet official package source” that points to nuget.org. That name was verbose and it also didn’t specify where it was actually pointing. To address those two issues, we’ve renamed this package source to simply “nuget.org” in the UI. The URL for the package source was also changed to include the “www.” prefix. After using NuGet 2.7, your existing “NuGet official package source” will automatically be updated to “nuget.org” as its name and “https://www.nuget.org/api/v2/” as its URL.&lt;/p&gt;

&lt;h3 id="performance-improvements"&gt;Performance Improvements&lt;/h3&gt;

&lt;p&gt;We made some performance improvement in 2.7 which will yield smaller memory footprint, less disk usage and faster package installation. We also made smarter queries to OData-based feeds which will reduce the overall payload.&lt;/p&gt;

&lt;h3 id="new-extensibility-apis"&gt;New Extensibility APIs&lt;/h3&gt;

&lt;p&gt;We added some new APIs to our extensibility services to fill the gap of missing functionalities in previous releases.&lt;/p&gt;

&lt;h4 id="ivspackageinstallerservices"&gt;IVsPackageInstallerServices&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    // Checks if a NuGet package with the specified Id and version is installed in the specified project.
    bool IsPackageInstalledEx(Project project, string id, string versionString);

    // Get the list of NuGet packages installed in the specified project.
    IEnumerable&amp;lt;IVsPackageMetadata&amp;gt; GetInstalledPackages(Project project);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="ivspackageinstaller"&gt;IVsPackageInstaller&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    // Installs one or more packages that exist on disk in a folder defined in the registry.
    void InstallPackagesFromRegistryRepository(string keyName, bool isPreUnzipped, bool skipAssemblyReferences, Project project, IDictionary&amp;lt;string, string&amp;gt; packageVersions);
 
    // Installs one or more packages that are embedded in a Visual Studio Extension Package.
    void InstallPackagesFromVSExtensionRepository(string extensionId, bool isPreUnzipped, bool skipAssemblyReferences, Project project, IDictionary&amp;lt;string, string&amp;gt; packageVersions);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="development-only-dependencies"&gt;Development-Only Dependencies&lt;/h3&gt;

&lt;p&gt;This feature was contributed by &lt;a href="https://twitter.com/adamralph"&gt;Adam Ralph&lt;/a&gt; and it allows package authors to declare dependencies that were only used at development time and don’t require package dependencies. By adding a &lt;code&gt;developmentDependency="true"&lt;/code&gt; attribute to a package in packages.config, nuget.exe pack will no longer include that package as a dependency.&lt;/p&gt;

&lt;h3 id="removed-support-for-visual-studio-2010-express-for-windows-phone"&gt;Removed Support for Visual Studio 2010 Express for Windows Phone&lt;/h3&gt;

&lt;p&gt;The new package restore model in 2.7 is implemented by a new VSPackage which is different from the main NuGet VSPackage. Due to a technical issue, this new VSPackage doesn’t work correctly in the Visual Studio 2010 Express for Windows Phone SKU as we share the same code base with other supported Visual Studio SKUs. Therefore, starting with NuGet 2.7, we are dropping support for Visual Studio 2010 Express for Windows Phone from the published extension.&lt;/p&gt;

&lt;p&gt;Since we are unsure how many developers are still using NuGet in that version/edition of Visual Studio, we are publishing a separate Visual Studio extension specifically for those users and publishing it on CodePlex (rather than the Visual Studio Extension Gallery). We don’t plan to continue to maintain that extension, but if this affects you please let us know by filing an issue on CodePlex.&lt;/p&gt;

&lt;p&gt;To download the NuGet Package Manager (for Visual Studio 2010 Express for Windows Phone), visit the &lt;a href="https://nuget.codeplex.com/releases/view/107605"&gt;NuGet 2.7 Downloads&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id="bug-fixes"&gt;Bug Fixes&lt;/h3&gt;

&lt;p&gt;In addition to these features, this release of NuGet also includes many other bug fixes. There were 97 total issues addressed in the release. For a full list of work items fixed in NuGet 2.7, please view the &lt;a href="https://nuget.codeplex.com/workitem/list/advanced?release=NuGet%202.7&amp;amp;status=all"&gt;NuGet Issue Tracker for this release&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130814/nuget-2.7-release-candidate.html" /><a10:updated>2013-08-14T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130725/invoke-manage-nuget-packages-dialog-programmatically</guid><title>Invoke the Manage NuGet Packages dialog programmatically</title><description>&lt;p&gt;Recently I’ve been asked several times for how to invoke the Manage NuGet Packages dialog from VS components programmatically, and optionally auto-invoke the search when the dialog opens. Today I’d like to share the solution in this post. &lt;/p&gt;

&lt;p&gt;It’s actually very straightforward. The &lt;strong&gt;Manage NuGet Packages&lt;/strong&gt; menu command is registered as a standard VS command, thus you can call &lt;code&gt;DTE.ExecuteCommand()&lt;/code&gt; to invoke it. The trick is to know the command name, which is &lt;strong&gt;Project.ManageNuGetPackages&lt;/strong&gt;. Here’s a code sample:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DTE dte = (DTE)GetService(typeof(SDTE));
dte.ExecuteCommand("Project.ManageNuGetPackages");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that it will open the &lt;em&gt;project-level&lt;/em&gt; dialog. To open the &lt;em&gt;solution-level&lt;/em&gt; dialog instead, you replace the command name with &lt;strong&gt;Tools.ManageNuGetPackagesforSolution&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ExecuteCommand()&lt;/code&gt; method also accepts a second optional parameter of string type. If you pass a string value to it, the NuGet command handler will intepret it as a search query and will automatically issue a search request after it has opened the dialog. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DTE dte = (DTE)GetService(typeof(SDTE));
dte.ExecuteCommand("Project.ManageNuGetPackages", "jQuery");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the above code, assuming you have the Online tab selected the last time you closed it, you will see this:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/open-dialog-with-search.png" alt="Dialog opened with search query " /&gt;&lt;/p&gt;

&lt;p&gt;If, for some reason, you don’t like to call through DTE, you can also invoke the command directly through the &lt;code&gt;OleMenuCommandService&lt;/code&gt; service.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var nugetCommandGuid = Guid.Parse("25fd982b-8cae-4cbd-a440-e03ffccde106");
var nugetCommand = new CommandID(nugetCommandGuid, 0x100);  // 0x100 is the command id for project-level dialog

OleMenuCommandService mcs = GetService(typeof(IMenuCommandService)) as OleMenuCommandService;
mcs.GlobalInvoke(nugetCommand, "jQuery");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, to open the solution-level dialog, you set the command id to 0x200. These constants are set in the &lt;a href="https://nuget.codeplex.com/SourceControl/latest#src/VsExtension/PkgCmdID.cs" title="PkgCmdID.cs"&gt;NuGet source code&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130725/invoke-manage-nuget-packages-dialog-programmatically.html" /><a10:updated>2013-07-25T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130626/nuget-2.6-released</guid><title>NuGet 2.6 Released and Included in Visual Studio 2013 Preview</title><description>&lt;p&gt;We are excited to announce that NuGet 2.6 has been released and it is included
in the box with Visual Studio 2013 Preview. For details
about what’s in the release, the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.6"&gt;release notes&lt;/a&gt; are published on &lt;a href="http://docs.nuget.org"&gt;docs.nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="nuget-26-features"&gt;NuGet 2.6 Features&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Support for Visual Studio 2013&lt;/li&gt;
  &lt;li&gt;XDT Support&lt;/li&gt;
  &lt;li&gt;Machine-Wide Configuration&lt;/li&gt;
  &lt;li&gt;Contextualizing Search&lt;/li&gt;
  &lt;li&gt;Tracking Direct Installs vs. Dependency Installs&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="support-for-visual-studio-2013"&gt;Support for Visual Studio 2013&lt;/h3&gt;

&lt;p&gt;NuGet 2.6 is the first release that provides support for Visual Studio 2013. And
like Visual Studio 2012, the NuGet Package Manager extension is included in every
edition of Visual Studio.&lt;/p&gt;

&lt;p&gt;In order to provide the best possible support for Visual Studio 2013 while still
supporting both Visual Studio 2010 and Visual Studio 2012, and keeping the extension
sizes as small as possible, we are producing a separate extension for Visual Studio
2013 while the original extension continues to target both Visual Studio 2010 and 2012.&lt;/p&gt;

&lt;p&gt;Starting with NuGet 2.6, we will publish two extensions as below:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c/file/37502/30/NuGet.Tools.vsix"&gt;NuGet Package Manager&lt;/a&gt; (applies to Visual Studio 2010 and 2012)&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://docs.nuget.org/docs/start-here/installing-nuget"&gt;NuGet Package Manager for Visual Studio 2013&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With this split, the &lt;a href="https://nuget.org"&gt;nuget.org&lt;/a&gt; home page’s “Install NuGet” button
will now take you to the &lt;a href="http://docs.nuget.org/docs/start-here/installing-nuget"&gt;installing NuGet&lt;/a&gt;
page, where you can find more information about installing the different NuGet clients.&lt;/p&gt;

&lt;h3 id="xdt-support"&gt;XDT Support&lt;/h3&gt;

&lt;p&gt;One of the most highly-requested features for the NuGet client has been to support more
powerful XML transformations using the XDT transformation engine which is used in Visual
Studio &lt;a href="http://msdn.microsoft.com/en-us/library/dd465318(v=vs.100).aspx"&gt;build configuration transformations&lt;/a&gt;.
In April 2013, we made two big announcements regarding NuGet support for XDT. The first
was that the XDT library itself was being itself &lt;a href="https://nuget.org/packages/Microsoft.Web.Xdt"&gt;released as a NuGet package&lt;/a&gt;
and &lt;a href="http://xdt.codeplex.com/"&gt;open sourced on CodePlex&lt;/a&gt;. This step enabled the XDT engine
to be used freely by other open-source software, including the NuGet client. The second
announcement was the plan to support use of the XDT engine for transformations in the
NuGet client. NuGet 2.6 includes this integration.&lt;/p&gt;

&lt;h3 id="machine-wide-configuration"&gt;Machine-Wide Configuration&lt;/h3&gt;

&lt;p&gt;As more companies are using NuGet internally, with private package sources, it has become
important to apply machine-wide configuration for NuGet that can make it easy for
developers to get access to these private package sources in addition to the official
NuGet package source at http://nuget.org.  Additionally, some development tools need to
expose additional package sources for developers for easy access to packages related to
those tools.&lt;/p&gt;

&lt;p&gt;With NuGet 2.6, the configuration model has been extended to allow machine-wide package
sources to be registered for developers to easily discover those package sources. This is
a feature that Visual Studio 2013 itself utilizes to register a “.NET Framework Packages”
feed by default.&lt;/p&gt;

&lt;h3 id="contextualizing-search"&gt;Contextualizing Search&lt;/h3&gt;

&lt;p&gt;As the number of packages served by the NuGet gallery continues to grow at an exponential
pace, improving search remains ever at the top of the NuGet priority list. One of the
planned features for NuGet is contextual search, meaning that NuGet will use information
about the version and SKU of Visual Studio that you are using and the type of project that
you are building as criteria for determining the relevance of potential search results.&lt;/p&gt;

&lt;p&gt;Starting with NuGet 2.6, each time a package is installed, the context for the installation
is recorded as part of the installation operation data.  Searches also send the same context
information, which will allow the NuGet Gallery to boost search results by contextual
installation trends.  A future update to the NuGet Gallery will enable this context-sensitive
relevance boosting.&lt;/p&gt;

&lt;h3 id="tracking-direct-installs-vs-dependency-installs"&gt;Tracking Direct Installs vs. Dependency Installs&lt;/h3&gt;

&lt;p&gt;Package authors are relying more and more on the &lt;a href="http://blog.nuget.org/20130226/Introducing-Package-Statistics.html"&gt;Package Statistics&lt;/a&gt;
provided on the NuGet Gallery.  One significant missing data point that authors have asked
for is a differentiation between direct package installs and dependency installs.  Until now,
the NuGet client did not send any context around the installation operation for whether the
developer directly installed the package or if it was installed to satisfy a dependency.
Starting with NuGet 2.6, that data will now be sent for the installation operation.  Package
Statistics on the NuGet Gallery will expose that data as separate install operations, with
a “-Dependency” suffix.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install&lt;/li&gt;
  &lt;li&gt;Install-Dependency&lt;/li&gt;
  &lt;li&gt;Update&lt;/li&gt;
  &lt;li&gt;Update-Dependency&lt;/li&gt;
  &lt;li&gt;Reinstall&lt;/li&gt;
  &lt;li&gt;Reinstall-Dependency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to the different operation name, the dependent package id is also recorded for the
installation.  A future update to the NuGet Gallery will expose that data within reports, allowing
package authors to fully understand how developers are installing their packages.&lt;/p&gt;

&lt;h2 id="bug-fixes"&gt;Bug Fixes&lt;/h2&gt;

&lt;p&gt;NuGet 2.6 also includes several bug fixes. For a full list of work items fixed in NuGet 2.6, please view
the &lt;a href="https://nuget.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=NuGet%202.6&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=LastUpdatedDate&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All"&gt;NuGet Issue Tracker for this release&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130626/nuget-2.6-released.html" /><a10:updated>2013-06-26T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130521/package-manager-dialog-vs-package-manager-console</guid><title>Package Manager Dialog vs. Package Manager Console, some differences!</title><description>&lt;p&gt;One common misconception we see among NuGet users is that NuGet could only install/ update to the latest version of a package in VS. This is due to the fact that through ‘NuGet Package Manager Dialog’ we only show that latest (stable or prerelease) version of any package. But, NuGet provides the ability to install/ update to &lt;strong&gt;any specific version&lt;/strong&gt; of a package through Package Manager Console. Let’s see an example below on how to do this.&lt;/p&gt;

&lt;h2 id="install-a-specific-version-of-a-package"&gt;Install a specific version of a package&lt;/h2&gt;

&lt;p&gt;To bring up Package Manager Console in VS, go to View-&amp;gt;Other Windows-&amp;gt;Package Manager Console.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/PMC.png" alt="Package Manager Console" /&gt;&lt;/p&gt;

&lt;p&gt;You could use the highlighted dropdowns above to set the Package Source and the Project in which the package should be installed.&lt;/p&gt;

&lt;p&gt;To install EntityFramework 4.3.1, you could type the following in the console.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Install-Package EntityFramework -Version 4.3.1&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In addition to being able to install a specific version of a package, there are a few other things that could be done through Package Manager Console, that are not available through UI. Let’s see those features below.&lt;/p&gt;

&lt;h2 id="reinstall-packages-that-have-already-been-installed"&gt;Reinstall packages that have already been installed&lt;/h2&gt;

&lt;p&gt;There may be instances when you would like to install a package that is already installed. For example, in some build or CI scenarios, the package version may not be incremented but you may want to install the latest produced package. This cannot be done through the Package Manager Dialog as NuGet will notify that the package is already installed. However, through Package Manager Console you could reinstall an existing package. Let’s say you have SamplePackage 1.8 already installed and you want to reinstall it. You can use the following command to reinstall SamplePackage. Reinstall will always install the same version that was previously installed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update-Package SamplePackage -reinstall&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note that -reinstall flag works only on NuGet Clients 2.1 and above&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="ignore-dependencies-when-installing-a-package"&gt;Ignore dependencies when installing a package&lt;/h2&gt;

&lt;p&gt;Another thing that you could do through the Package Manager Console but not through the Package Manager Dialog is installing a package without it’s dependencies. To do this, you could use the -ignoreDependencies switch with Install-Package command. For example, jQuery.Validation package has a dependency on jQuery. When you install through the Package Manager Dialog the dependencies will always get installed. However, executing the following command in Package Manager Console will only install jQuery.Validation and not jQuery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Install-Package jQuery.Validation -ignoreDependencies&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="force"&gt;Force&lt;/h2&gt;

&lt;p&gt;The next thing that you could do with Package Manager Console easily is to force uninstall of a package that is being dependent upon by other packages. Let’s take the example of jQuery and jQuery.Validation in a project. When you try to uninstall jQuery from the project through the Package Manager dialog, you will see the following UI that tells you that it can’t be done. &lt;/p&gt;

&lt;p&gt;&lt;img src="/images/UninstallFailure.png" alt="Failure on uninstall of a parent package" /&gt;&lt;/p&gt;

&lt;p&gt;In case of Package Manager Dialog, you have to first uninstall the packages that have jQuery dependency before you can uninstall jQuery itself. However, with Package Manager Console, you can use the -force switch to uninstall the jQuery package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;UnInstall-Package jQuery -force&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="source"&gt;Source&lt;/h2&gt;

&lt;p&gt;When you install NuGet, it automatically comes with one package source - the NuGet official package source. If you would like to install packages from other sources you need to go to &lt;strong&gt;Tools-&amp;gt;Options-&amp;gt;Package Manager-&amp;gt;Package Sources&lt;/strong&gt; to add other custom sources. But, if you would like to install a package from a custom source and not have it as one of your sources in your package sources, you can quickly do it through Package Manager Console using the -Source switch. An example is given below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Install-Package MyPackage -Source PATH_TO_YOUR_CUSTOM_PACKAGE_SOURCE&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above are some of the differences between Package Manager Dialog and Package Manager Console and highlight how you could use the Package Manager Console to do some additional things that are not possible through the dialog. Have fun exploring the Package Manager Console!&lt;/p&gt;

&lt;p&gt;-Ranjini&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130521/package-manager-dialog-vs-package-manager-console.html" /><a10:updated>2013-05-21T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130520/where-else-is-nuget-used-in-visual-studio</guid><title>Where else is NuGet used in Visual Studio?</title><description>&lt;p&gt;All NuGet users are probably familiar with both the Manage NuGet Packages dialog and the Package Manager Console. These are the main user interfaces for installing and managing packages. &lt;/p&gt;

&lt;p&gt;However, NuGet is also used in a couple of more subtle places. Below are a few of them that I am aware of. With the exception of the New Project dialog, these dialogs/commands invoke NuGet through the &lt;a href="http://docs.nuget.org/docs/reference/invoking-nuget-services-from-inside-visual-studio"&gt;well-documented MEF services&lt;/a&gt; that NuGet exports.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;New Project dialog&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;When you create a new Web Application project, either a Web Forms or MVC app, the project template invokes NuGet to install a set of pre-defined packages into the new project.&lt;/p&gt;

    &lt;p&gt;This feature is publicly documented here: &lt;a href="http://docs.nuget.org/docs/reference/packages-in-visual-studio-templates"&gt;http://docs.nuget.org/docs/reference/packages-in-visual-studio-templates&lt;/a&gt;. Which means it’s not only available to Microsoft templates, but to any Visual Studio template.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Add Service Reference dialog&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;When you open the Add Service Reference dialog to add a reference to a WCF Data Service endpoint, the tool uses NuGet to install the latest version of the &lt;strong&gt;Microsoft.Data.Services.Client&lt;/strong&gt; package and its dependencies.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Publish dialog&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;If you attempt to publish your web app to Windows Azure, the Publish dialog detects if your project is using SqlMembership provider, and if so, will ask you to upgrade to Universal provider in order to work with SQL Azure. If you accept, it will install the &lt;strong&gt;Microsoft.AspNet.Providers&lt;/strong&gt; and &lt;strong&gt;Microsoft.AspNet.Providers.Core&lt;/strong&gt; packages, as well as configure your web.config to use the Universal provider.&lt;/p&gt;

    &lt;p&gt;&lt;img src="/images/publish-dialog.png" alt="Publish dialog" /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Enable Azure Authentication command&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;If you enable &lt;a href="http://www.asp.net/vnext/overview/latest/windows-azure-authentication"&gt;Windows Azure Active Directory&lt;/a&gt; authentication in your web app, the command will install the &lt;strong&gt;System.IdentityModel.Tokens.ValidatingIssuerNameRegistry&lt;/strong&gt; package.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Add Windows Azure Cloud Service project command&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;The &lt;strong&gt;Add Windows Azure Cloud Service project&lt;/strong&gt; command, which appears on the context menu for Web projects, uses NuGet to install the &lt;strong&gt;WindowsAzure.Storage&lt;/strong&gt; and &lt;strong&gt;Microsoft.WindowsAzure.ConfigurationManager&lt;/strong&gt; packages.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’m very happy to see various teams in Microsoft take advantage of NuGet to implement their own features. I expect even more widespread usage of NuGet in future versions of Visual Studio.&lt;/p&gt;

&lt;p&gt;-Luan&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130520/where-else-is-nuget-used-in-visual-studio.html" /><a10:updated>2013-05-20T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130520/Play-with-packages</guid><title>Play with Packages, programmatically!</title><description>&lt;p&gt;One of the many often seen requests, from developers using NuGet, is examples on our NuGet core APIs. The requests range from finding meta-data for the packages to installing the package programmatically. In this blog post, I will provide a few examples of using NuGet Core APIs. &lt;/p&gt;

&lt;h3 id="getting-started"&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;To use NuGet Core APIs, install &lt;strong&gt;NuGet.Core&lt;/strong&gt; NuGet package in your project and add &lt;strong&gt;NuGet&lt;/strong&gt; namespace to your &lt;strong&gt;using&lt;/strong&gt; statements. &lt;/p&gt;

&lt;h3 id="get-me-the-pre-released-versions-of-a-package"&gt;Get me the pre-released versions of a package&lt;/h3&gt;

&lt;p&gt;Let’s say you would like to get the list of all pre-released versions of &lt;strong&gt;EntityFramework&lt;/strong&gt; package. Below is the code snippet that would get you the list using NuGet API v2. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//ID of the package to be looked up
string packageID = "EntityFramework";
		
//Connect to the official package repository
IPackageRepository repo = PackageRepositoryFactory.Default.CreateRepository("https://packages.nuget.org/api/v2");
        
//Get the list of all NuGet packages with ID 'EntityFramework'       
List&amp;lt;IPackage&amp;gt; packages = repo.FindPackagesById(packageID).ToList();

//Filter the list of packages that are not Release (Stable) versions
packages = packages.Where (item =&amp;gt; (item.IsReleaseVersion() == false)).ToList();

//Iterate through the list and print the full name of the pre-release packages to console
foreach (IPackage p in packages)
{
	Console.WriteLine(p.GetFullName());
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="help-me-get-a-package"&gt;Help me get a package&lt;/h3&gt;

&lt;p&gt;Let’s say you would like to programmatically download and unzip a package in the path you want. Below is the code snippet that you would use to download and unzip the package in the path specified. The example below downloads and unzips &lt;strong&gt;EntityFramework 5.0.0&lt;/strong&gt; to one of my projects. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//ID of the package to be looked up
string packageID = "EntityFramework";
		
//Connect to the official package repository
IPackageRepository repo = PackageRepositoryFactory.Default.CreateRepository("https://packages.nuget.org/api/v2");

//Initialize the package manager
string path = &amp;lt;PATH_TO_WHERE_THE_PACKAGES_SHOULD_BE_INSTALLED&amp;gt;
PackageManager packageManager = new PackageManager(repo, path);
        
//Download and unzip the package
packageManager.InstallPackage(packageID, SemanticVersion.Parse("5.0.0"));
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="its-quite-easy-have-fun"&gt;It’s quite easy, have fun!&lt;/h3&gt;
&lt;p&gt;As illustrated by the above examples, trying to work with NuGet packages programmatically is quite easy. Start exploring them today!&lt;/p&gt;

&lt;p&gt;-Ranjini&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130520/Play-with-packages.html" /><a10:updated>2013-05-20T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130430/a-quick-note-about-minclientversion-feature</guid><title>A quick note about the new MinClientVersion attribute</title><description>&lt;p&gt;In the NuGet 2.5 release, we added the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.5##Add_a_%27Minimum_NuGet_Version%27_property_to_packages"&gt;MinClientVersion&lt;/a&gt; property to the package manifest schema to allow for a package to demand the minimum version of the NuGet client that can install it.&lt;/p&gt;

&lt;p&gt;Because this feature was added in version 2.5, older versions of NuGet won’t be able to recognize it. Therefore, older clients will &lt;em&gt;always&lt;/em&gt; refuse to install packages with the MinClientVersion property set, even if you set it to a value smaller than the version of the client.&lt;/p&gt;

&lt;p&gt;For example, if you set MinClientVersion to 1.8, and the user tries to install your package with NuGet 2.2, the installation will fail even though 1.8 &amp;lt; 2.2. The user will see the following error message:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The schema version of ‘MyPackage’ is incompatible with version 2.2.1.0 of NuGet. Please upgrade NuGet to the latest version from 
http://go.microsoft.com/fwlink/?LinkId=213942.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In sum, this feature will grow in its utility over future NuGet iterations, starting with version 2.6&lt;/p&gt;

&lt;p&gt;-Luan&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130430/a-quick-note-about-minclientversion-feature.html" /><a10:updated>2013-04-30T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130426/native-support</guid><title>Support for Native Projects</title><description>&lt;p&gt;In the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.5"&gt;NuGet 2.5 release notes&lt;/a&gt;, we called out that NuGet now has support for native projects. We wanted to explain exactly what “support for native projects” means.&lt;/p&gt;

&lt;h2 id="visual-studio-support"&gt;Visual Studio Support&lt;/h2&gt;

&lt;p&gt;Until NuGet 2.5, if you were working in a Visual C++ project, the ‘Manage NuGet Packages’ context menu would not show up for the project; with NuGet 2.5, we now light this up. Any time we start supporting a new project type, we have to test to ensure all operations are working as expected. Each project system has slightly different behavior and this proved to be true with Visual C++ as well. We made the changes necessary to get NuGet install/update/uninstall operations working.&lt;/p&gt;

&lt;h2 id="msbuild-integration"&gt;MSBuild Integration&lt;/h2&gt;

&lt;p&gt;C++ projects tend to have many different configurations–more than what NuGet is able to handle. To address NuGet’s configuration limitations, we are relying heavily on MSBuild properties and targets for native packages. These MSBuild properties and targets do the heavy lifting of providing references at build time, based on your project’s configuration.&lt;/p&gt;

&lt;p&gt;To make MSBuild integration better, NuGet has created a new convention for automatically importing MSBuild properties and targets from a NuGet package. Alongside the existing \content, \lib, and \tools folders, NuGet now recognizes a new top-level folder: &lt;strong&gt;\build&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Within the \build folder, you can provide a “.props” file and/or a “.targets” file that will be automatically imported into the project. For this convention, the file name must match your package id with either a “.props” or “.targets” extension. For example, the ‘&lt;a href="https://nuget.org/packages/cpprestsdk/"&gt;cpprestsdk&lt;/a&gt;’ package includes a ‘cpprestsdk.targets’ file in its \build folder. Files with the “.props” extension will be imported at the top of the project file, and files with the “.targets” extension will be imported at the bottom of the project file.&lt;/p&gt;

&lt;p&gt;Note that this \build folder can be used for all NuGet packages and not just native packages. The \build folder respects target frameworks just like the \content, \lib, and \tools folders do. This means you can create a \build\net40 folder and a \build\net45 folder and NuGet will import the appropriate props and targets files into the project. You no longer need to write PowerShell install.ps1/uninstall.ps1 scripts to import MSBuild targets files!&lt;/p&gt;

&lt;h2 id="native-target-framework"&gt;Native Target Framework&lt;/h2&gt;

&lt;p&gt;When targeting native projects, a new target framework name is now recognized: &lt;strong&gt;native&lt;/strong&gt;. There is no versioning within the ‘native’ target framework; NuGet treats all C++ projects the same.&lt;/p&gt;

&lt;p&gt;We expect that most native packages will be produced using the &lt;strong&gt;\build\native&lt;/strong&gt; folder, with at least a targets file and then a props file if needed. The ‘native’ target framework is also recognized for the \content and \tools folders, but because NuGet cannot directly add references to native projects, the ‘native’ target framework &lt;em&gt;is not&lt;/em&gt; recognized within the \lib folder.&lt;/p&gt;

&lt;h2 id="creating-native-packages"&gt;Creating Native Packages&lt;/h2&gt;

&lt;p&gt;If you’re interested in publishing your native libraries via NuGet, you can choose to create the NuGet packages manually. However, there’s an easier way–the CoApp project volunteered to write C++ oriented tools to create NuGet packages, and they have &lt;a href="http://coapp.org/pages/releases.html"&gt;released a beta version&lt;/a&gt; of their tools. These tools simplify the process of generating the MSBuild files and NuGet packages from existing header and library files–you just need to create a configuration script to describe the contents of the package and then run the tools to generate the NuGet package. &lt;/p&gt;

&lt;p&gt;There are &lt;a href="http://coapp.org/pages/tutorials.html"&gt;tutorials&lt;/a&gt;, &lt;a href="http://coapp.org/pages/reference.html"&gt;reference documentation&lt;/a&gt;, and a &lt;a href="https://www.youtube.com/watch?v=l4MAkR13JPA"&gt;video&lt;/a&gt; on how to use the tools to create NuGet packages. The CoApp project organizers also plan to create and publish packages for several open source libraries into the NuGet Gallery over the next several weeks.&lt;/p&gt;

&lt;p&gt;We’re encouraging people to publish packages with the “native” tag to make it easier to find packages you can use in C++ projects. You can search the NuGet Gallery using “tag:native” to find packages tagged with “native”. This works from both &lt;a href="https://nuget.org/packages?q=tag%3Anative"&gt;nuget.org&lt;/a&gt; and within Visual Studio. &lt;em&gt;Note that not all packages tagged with “native” are actually C++ projects though.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://coapp.org/news/2013-04-26-Announcing-CoApp-Tools-For-NuGet.html"&gt;CoApp&lt;/a&gt; and &lt;a href="http://blogs.technet.com/b/openness/archive/2013/04/26/nuget-coapp-release.aspx"&gt;Openness@Microsoft&lt;/a&gt; blogs have additional information about this project.&lt;/p&gt;

&lt;h2 id="feedback"&gt;Feedback&lt;/h2&gt;

&lt;p&gt;Please leave us feedback here on the blog–we’d love to hear your experiences trying out NuGet in your C++ projects, and whether there are additional features we could add to make this work even better for you. This is just the start of C++ integration in NuGet and we need your input on where we should take this in the future to make working with C++ libraries in Visual Studio easier.&lt;/p&gt;

&lt;h2 id="related-links-and-announcements"&gt;Related Links and Announcements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://blog.nuget.org/20130425/nuget-2.5-released.html"&gt;NuGet 2.5 Release Announcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nuget.codeplex.com/releases/view/96733"&gt;NuGet 2.5 Download Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://coapp.org/releases"&gt;CoApp’s PowerShell Tools Installer to create NuGet packages for C++ libraries and tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/vcblog/archive/2013/04/26/nuget-for-c.aspx"&gt;Announcement on the Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blogs.technet.com/b/openness/archive/2013/04/26/nuget-coapp-release.aspx"&gt;Announcement on the Openness@Microsoft Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://coapp.org/news/2013-04-26-Announcing-CoApp-Tools-For-NuGet.html"&gt;Announcement on the CoApp Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description><a10:link href="http://blog.nuget.org/20130426/native-support.html" /><a10:updated>2013-04-26T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130425/nuget-2.5-released</guid><title>NuGet 2.5 Released</title><description>&lt;h2 id="download-it-now"&gt;Download it now&lt;/h2&gt;

&lt;p&gt;NuGet was included in all editions of Visual Studio 2012 and it’s also available for Visual Studio 2010 through the Visual Studio Extension Manager. To get the latest version of NuGet installed in Visual Studio, either check for updates in the extension manager or &lt;a href="http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c"&gt;download the latest version directly&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="acknowledgements"&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;We would like to thank the following external contributors for their significant contributions to NuGet 2.5:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/dsplaisted"&gt;Daniel Plaisted (dsplaisted)&lt;/a&gt; - Add MonoAndroid, MonoTouch, and MonoMac to the list of known target framework identifiers. &lt;a href="https://nuget.codeplex.com/workitem/2847"&gt;#2847&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/knocte"&gt;Andres G. Aragoneses (knocte)&lt;/a&gt; - Fix spelling of NuGet.targets for a case-sensitive OS &lt;a href="https://nuget.codeplex.com/workitem/2865"&gt;#2865&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/dfowler"&gt;David Fowler (dfowler)&lt;/a&gt; - Make the solution build on Mono.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/atheken"&gt;Andrew Theken (atheken)&lt;/a&gt; - Fix unit tests failing on Mono.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/OliIsCool"&gt;Olivier Dagenais (OliIsCool)&lt;/a&gt; - nuget.exe pack command does not propagate Properties to msbuild &lt;a href="https://nuget.codeplex.com/workitem/2920"&gt;#2920&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/MiroslavBajtos"&gt;Miroslav Bajtos (MiroslavBajtos)&lt;/a&gt; - Modified XML handling code to preserve formatting. &lt;a href="https://nuget.codeplex.com/workitem/1511"&gt;#1511&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/adamralph"&gt;Adam Ralph (adamralph)&lt;/a&gt; - Added recognized words to custom dictionary to allow build.cmd to succeed.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/broggeri"&gt;Bruno Roggeri (broggeri)&lt;/a&gt; - Fix unit tests when running in localized VS.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/garethevans"&gt;Gareth Evans (garethevans)&lt;/a&gt; -  Extracted interface from PackageService&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/brugidou"&gt;Maxime Brugidou (brugidou)&lt;/a&gt; - Handle project dependencies when packing &lt;a href="https://nuget.codeplex.com/workitem/936"&gt;#936&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/XavierDecoster"&gt;Xavier Decoster (XavierDecoster)&lt;/a&gt; - Support Clear Text Password when storing package source credentials in nuget.cofig files &lt;a href="https://nuget.codeplex.com/workitem/2991"&gt;#2991&lt;/a&gt;, &lt;a href="https://nuget.codeplex.com/workitem/3164"&gt;#3164&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We also appreciate the following individuals for finding bugs with NuGet 2.5 Beta/RC that were approved and fixed before the final release:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://www.codeplex.com/site/users/view/CodeChief"&gt;Tony Wall (CodeChief)&lt;/a&gt; - MSTest broken with lastest NuGet 2.4 and 2.5 builds &lt;a href="https://nuget.codeplex.com/workitem/3200"&gt;#3200&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="whats-included-in-nuget-25"&gt;What’s Included in NuGet 2.5&lt;/h2&gt;

&lt;p&gt;This release was so big, we felt compelled to skip versions 2.3 and 2.4! To date, this is the largest release we’ve had for NuGet, with &lt;a href="https://nuget.codeplex.com/workitem/list/advanced?release=NuGet%202.5&amp;amp;status=all"&gt;169 work items&lt;/a&gt; in the release.&lt;/p&gt;

&lt;p&gt;For details about what’s in the release, the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.5"&gt;release notes&lt;/a&gt; are published on &lt;a href="http://docs.nuget.org"&gt;docs.nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="here-are-the-most-notable-features"&gt;Here are the most notable features:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Allow users to overwrite content files that already exist&lt;/li&gt;
  &lt;li&gt;Automatic import of msbuild targets and props files&lt;/li&gt;
  &lt;li&gt;Specify different references per platform using &lt;references&gt;&lt;/references&gt; element&lt;/li&gt;
  &lt;li&gt;Update All button to allow updating all packages at once&lt;/li&gt;
  &lt;li&gt;Improved project reference support for NuGet.exe Pack&lt;/li&gt;
  &lt;li&gt;Add a ‘Minimum NuGet Version’ property to packages&lt;/li&gt;
  &lt;li&gt;Dependencies are no longer unnecessarily updated during package installation&lt;/li&gt;
  &lt;li&gt;NuGet.exe outputs http requests with detailed verbosity&lt;/li&gt;
  &lt;li&gt;NuGet.exe push now supports UNC and directory sources&lt;/li&gt;
  &lt;li&gt;NuGet.exe supports explicitly-specified Config files&lt;/li&gt;
  &lt;li&gt;Support for Native projects&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="nugets-description"&gt;NuGet’s description&lt;/h2&gt;

&lt;p&gt;We’ve outgrown NuGet’s current description. According to &lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt;, we have the following description and slogan:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Jump Start Your Projects with NuGet&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;NuGet is a Visual Studio extension that makes it easy to install and update third-party libraries and tools in Visual Studio.&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;So install NuGet and get a jump on your next project!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We have come up with a new description for NuGet:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NuGet is the package manager for the Microsoft development platform including .NET.
The NuGet client tools provide the ability to produce and consume packages.
The NuGet Gallery (&lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt;) is the central package repository used by all package authors and consumers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can expect the home page at &lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt; to reflect this new description soon.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130425/nuget-2.5-released.html" /><a10:updated>2013-04-25T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130422/xdt-web-config-transforms</guid><title>XDT web.config transforms</title><description>&lt;p&gt;Sitting there since October 12, 2010, with a total of 55 votes accumulated since then, there’s a NuGet feature that has had more than its fair share of attention: &lt;a href="https://nuget.codeplex.com/workitem/232"&gt;Support Visual Studio (XDT) Web.config Transforms&lt;/a&gt;. It’s the 17th highest voted work item of all time for NuGet, and the 5th highest voted &lt;em&gt;open&lt;/em&gt; work item. Today, we are announcing that we are finally unblocked on getting this feature integrated into NuGet!&lt;/p&gt;

&lt;p&gt;Last November, we made the decision to act on this feature request, and Luan Nguyen (&lt;a href="https://www.codeplex.com/site/users/view/dotnetjunky"&gt;dotnetjunky&lt;/a&gt;) posted a &lt;a href="https://nuget.codeplex.com/discussions/405195"&gt;discussion thread&lt;/a&gt; that NuGet would be taking a dependency on the XDT assembly. Within a few hours, Andreas Håkansson (&lt;a href="https://www.codeplex.com/site/users/view/thecodejunkie"&gt;thecodejunkie&lt;/a&gt;) pointed out a really good glitch in our plan: we needed to make sure the feature would work on Mono!&lt;/p&gt;

&lt;p&gt;Fast forward 4 months, and we have resolution for the requirement of XDT support working on Mono–Microsoft has open-sourced the XML Document Transform (XDT) library at &lt;a href="http://xdt.codeplex.com"&gt;http://xdt.codeplex.com&lt;/a&gt;, and NuGet will be taking a source dependency on XDT rather than a binary dependency.&lt;/p&gt;

&lt;p&gt;Here’s the net result of the work we’ve done with the team that develops the XDT library:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A &lt;a href="http://nuget.org/packages/Microsoft.Web.Xdt/"&gt;Microsoft.Web.Xdt&lt;/a&gt; NuGet package is published to nuget.org.&lt;/li&gt;
  &lt;li&gt;The NuGet team used that NuGet package to prototype integration of NuGet and XDT.&lt;/li&gt;
  &lt;li&gt;The XDT library is open-sourced (not accepting contributions) at &lt;a href="http://xdt.codeplex.com"&gt;xdt.codeplex.com&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The NuGet team will now use the XDT source to provide the integration.&lt;/li&gt;
  &lt;li&gt;This allows all NuGet users on all platforms to use the feature. NuGet can be built on Mono and have the XDT source built there too.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;NuGet package authors will be able to create two new files in their packages to perform XDT transforms:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;web.config.install.xdt (and yes, files other than web.config are supported)&lt;/li&gt;
  &lt;li&gt;web.config.uninstall.xdt&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These files can use XDT functionality to transform XML files during install, and then to reverse the transformations upon uninstall. It’s a concept very similar to install.ps1/uninstall.ps1, but using the XDT library for the XML transforms.&lt;/p&gt;

&lt;p&gt;We are working on the source-based integration of this feature now, and we plan to include it in the NuGet 2.6 release in early summer 2013.&lt;/p&gt;

&lt;p&gt;For more information about the XDT library and its open source project, check out the &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/04/23/xdt-xml-document-transform-released-on-codeplex-com.aspx"&gt;.NET Web Development and Tools blog post&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130422/xdt-web-config-transforms.html" /><a10:updated>2013-04-22T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130419/goodbye-preview</guid><title>Goodbye preview.nuget.org. Hello staging.nuget.org!</title><description>&lt;p&gt;&lt;a href="http://en.wiktionary.org/wiki/TL;DR"&gt;TL;DR&lt;/a&gt; The &lt;a href="http://preview.nuget.org"&gt;preview.nuget.org&lt;/a&gt; site is going away. Switch to &lt;a href="http://staging.nuget.org"&gt;staging.nuget.org&lt;/a&gt; by April 26th!&lt;/p&gt;

&lt;h2 id="goodbye-previewnugetorg"&gt;Goodbye preview.nuget.org&lt;/h2&gt;
&lt;p&gt;We have a version of the NuGet Gallery called “Preview” and it’s been hosted at &lt;a href="http://preview.nuget.org"&gt;preview.nuget.org&lt;/a&gt; since early in the Gallery’s lifetime. Until recently, our QA team used preview.nuget.org to do their testing, but we’ve also occasionally advised package owners to use the site as a sandbox environment. Over time, this has put us in the situation of the “preview” site serving two different purposes: 1) it was an internal QA testing environment, and 2) it was a customer sandbox/preview environment.&lt;/p&gt;

&lt;p&gt;These two use cases for the environment have drastically different requirements. The QA environment needs to be sanitized to not have any real data and allow the QA team to do whatever they need to the data at any time. The customer sandbox environment needs to have a mirror of recent production data to provide a useful staging environment. Because of these conflicting requirements, we are separating our QA testing environment from the sandbox, and &lt;strong&gt;we’ll be decommisioning preview.nuget.org on April 26th&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="hello-stagingnugetorg"&gt;Hello staging.nuget.org&lt;/h2&gt;
&lt;p&gt;To provide a sandbox where package authors can stage their packages to test their publishing, we are creating a new staging environment at &lt;a href="http://staging.nuget.org"&gt;staging.nuget.org&lt;/a&gt;. Staging is a very close mirror of production and its data is frequently copied from production (although not yet on any fixed schedule).&lt;/p&gt;

&lt;p&gt;If you have packages you want to publish and you’re nervous about the publishing process, please use &lt;a href="http://staging.nuget.org"&gt;staging.nuget.org&lt;/a&gt;. Your account information and API key are not guaranteed to be in sync because the data is not a live mirror, but you can register and log on to Staging just like you would on &lt;a href="http://nuget.org"&gt;http://nuget.org&lt;/a&gt;. You can then push your packages to Staging and ensure you have your publishing process and your package metadata just right before publushing to &lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130419/goodbye-preview.html" /><a10:updated>2013-04-19T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130415/nuget-2.5-release-candidate</guid><title>NuGet 2.5 Release Candidate</title><description>&lt;p&gt;&lt;em&gt;Updated:&lt;/em&gt;
The NuGet 2.5 Release Candidate was available from April 15 to April 25, 2013.  For the several hundred of you that downloaded the release candidate, we truly appreciate your verification of the RC build that became the final release.&lt;/p&gt;

&lt;h2 id="whats-included-in-nuget-25"&gt;What’s Included in NuGet 2.5&lt;/h2&gt;

&lt;p&gt;This release was so big, we felt compelled to skip versions 2.3 and 2.4! To date, this is the largest release we’ve had for NuGet, with over &lt;a href="https://nuget.codeplex.com/workitem/list/advanced?release=NuGet%202.5&amp;amp;status=all"&gt;160 work items&lt;/a&gt; in the release.&lt;/p&gt;

&lt;p&gt;For details about what’s in the release, the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.5"&gt;tentative release notes&lt;/a&gt; have been published to &lt;a href="http://docs.nuget.org"&gt;docs.nuget.org&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="here-are-the-most-notable-features"&gt;Here are the most notable features:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Allow users to overwrite content files that already exist&lt;/li&gt;
  &lt;li&gt;Automatic import of msbuild targets and props files&lt;/li&gt;
  &lt;li&gt;Specify different references per platform using &lt;references&gt;&lt;/references&gt; element&lt;/li&gt;
  &lt;li&gt;Update All button to allow updating all packages at once&lt;/li&gt;
  &lt;li&gt;Improved project reference support for NuGet.exe Pack&lt;/li&gt;
  &lt;li&gt;Add a ‘Minimum NuGet Version’ property to packages&lt;/li&gt;
  &lt;li&gt;Dependencies are no longer unnecessarily updated during package installation&lt;/li&gt;
  &lt;li&gt;NuGet.exe outputs http requests with detailed verbosity&lt;/li&gt;
  &lt;li&gt;NuGet.exe push now supports UNC and directory sources&lt;/li&gt;
  &lt;li&gt;NuGet.exe supports explicitly-specified Config files&lt;/li&gt;
  &lt;li&gt;Support for Native projects&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="nugets-description-and-slogan"&gt;NuGet’s description and slogan&lt;/h2&gt;

&lt;p&gt;We think we’ve outgrown NuGet’s current description. According to &lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt;, we have the following description and slogan:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Jump Start Your Projects with NuGet&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;NuGet is a Visual Studio extension that makes it easy to install and update third-party libraries and tools in Visual Studio.&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;So install NuGet and get a jump on your next project!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We have come up with a new description for NuGet:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NuGet is the open-source package manager for the Microsoft platform and .NET/Mono.
The NuGet client tools provide the ability to produce and consume packages.
The NuGet Gallery (nuget.org) is the central package repository used by all package authors and consumers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We’d like your feedback on this new description. And for a new slogan to replace “Jump Start Your Projects with NuGet,” we’re still undecided.  We want something fun and maybe a little edgy. If you’d like to submit your idea, tweet your idea using the &lt;a href="https://twitter.com/search/realtime?q=%23nugetslogan"&gt;#nugetslogan&lt;/a&gt; hashtag. Once we have a good list to choose from, we’ll open up a poll. Follow &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;&lt;a class="twitter-timeline" data-dnt="true" href="https://twitter.com/search?q=%23nugetslogan" data-widget-id="323970527691685888"&gt;Tweets about “#nugetslogan”&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");&lt;/script&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130415/nuget-2.5-release-candidate.html" /><a10:updated>2013-04-15T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130411/recent-nuget-gallery-updates</guid><title>Recent NuGet Gallery Updates</title><description>&lt;p&gt;The NuGet Gallery crew has gotten into a rhythm of publishing updates every 2 weeks.  With the increased update frequency, we found that we needed to create a changelog to highlight new features.  That changelog is now available directly from within our &lt;a href="https://github.com/NuGet/NuGetGallery"&gt;source repository on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can access the changelog directly here:
&lt;a href="https://github.com/NuGet/NuGetGallery/blob/master/Changelog.md"&gt;https://github.com/NuGet/NuGetGallery/blob/master/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the current log, showing the changes that have been made over the last 2 deployments.&lt;/p&gt;

&lt;h2 id="april-4-2013"&gt;April 4, 2013&lt;/h2&gt;

&lt;h3 id="top-500-packages-exposed-in-the-feed"&gt;Top 500 packages exposed in the feed&lt;/h3&gt;

&lt;p&gt;The nuget.org API (V2) feed now exposes the top downloaded packages (over the last 6 weeks). This can accessed be via url &lt;a href="//nuget.org/api/v2/stats/downloads"&gt;nuget.org/api/v2/stats/downloads&lt;/a&gt;. At this time, the top 500 packages are shown by default and that is also the maximum number returned.&lt;/p&gt;

&lt;p&gt;You can limit the numbers of results using ?count in the query string.  For example, &lt;a href="//nuget.org/api/v2/stats/downloads?count=10"&gt;nuget.org/api/v2/stats/downloads?count=10&lt;/a&gt; would return the top 10 downloaded packages in last 6 weeks - with information like download count, gallery url and feed url for that package.&lt;/p&gt;

&lt;p&gt;The default and maximum count of 500 might change over time, so we recommend always specifying a count parameter if you are programmatically consuming this data.&lt;/p&gt;

&lt;h3 id="numeric-rank-for-packages-stats"&gt;Numeric rank for packages stats&lt;/h3&gt;

&lt;p&gt;The &lt;a href="http://nuget.org/stats"&gt;Statistics page&lt;/a&gt; now shows the numeric rank of the package (based on the download count).&lt;/p&gt;

&lt;h3 id="links-to-gravatar-in-profile-page"&gt;Links to gravatar in profile page&lt;/h3&gt;

&lt;p&gt;The profile editing page now includes help text and a link to gravatar making it easy for users to update their profile picture.&lt;/p&gt;

&lt;h3 id="username-optimization-in-db-backend"&gt;UserName optimization in DB (backend)&lt;/h3&gt;

&lt;p&gt;The “Users” table is optimized to have “UserName” as index for performance enhancements.&lt;/p&gt;

&lt;h3 id="other-minor-bug-fixes"&gt;Other minor bug fixes&lt;/h3&gt;

&lt;p&gt;Complete list can be found here: &lt;a href="https://github.com/NuGet/NuGetGallery/issues?milestone=18&amp;amp;state=closed"&gt;Production Deployment 4/12&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="march-28-2013"&gt;March 28, 2013&lt;/h2&gt;

&lt;h3 id="support-for-minclientversion"&gt;Support for MinClientVersion&lt;/h3&gt;

&lt;p&gt;You can now upload packages with “&lt;a href="http://nuget.codeplex.com/wikipage?title=NuGet%202.5%20list%20of%20features%20for%20Testing%20days%203%2f27%20to%203%2f29%20%2c%202013"&gt;minclientVersion&lt;/a&gt;” to the NuGetGallery.&lt;/p&gt;

&lt;p&gt;The minclientVersion of the package will shown in the package home page right next to the package description.&lt;/p&gt;

&lt;h3 id="contacting-support"&gt;Contacting support&lt;/h3&gt;

&lt;p&gt;The “Report Abuse” page has been revamped to enable users to chose the specific issue with the package they are reporting. It also guides the user to differentiate between “Contact Owners” and “Report Abuse”.   &lt;/p&gt;

&lt;h3 id="improved-package-statistics"&gt;Improved package statistics&lt;/h3&gt;

&lt;p&gt;The package statistics now shows the break down of downloads based on the NuGet client (like NuGet CommandLine 2.1, NuGet Package Manager console 2.2 and so on.  It also shows the split of the type of download operation (like Install, Restore, Update).&lt;/p&gt;

&lt;h3 id="other-minor-bug-fixes-1"&gt;Other minor bug fixes&lt;/h3&gt;

&lt;p&gt;Complete list can be found here: &lt;a href="https://github.com/NuGet/NuGetGallery/issues?milestone=17&amp;amp;state=closed"&gt;Production Deployment 3/28&lt;/a&gt;&lt;/p&gt;

</description><a10:link href="http://blog.nuget.org/20130411/recent-nuget-gallery-updates.html" /><a10:updated>2013-04-11T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130404/the-march-6-nuget-gallery-outage</guid><title>The March 6th NuGet Gallery Outage</title><description>&lt;p&gt;On March 6th 2013, nuget.org’s package download was broken for one and a half hours. Some outages involve factors beyond our control; 
this time it was very much our own fault and we would like to apologize. We 
also want to openly discuss the outage and reassure you that we are working on preventing reoccurences.&lt;/p&gt;

&lt;h2 id="timeline-of-events"&gt;Timeline of events&lt;/h2&gt;

&lt;p&gt;The outage was triggered by the NuGet Gallery crew performing a regular planned upgrade to nuget.org. We had successfully completed the previous
production upgrade as recently as 2 weeks prior (in fact we are now shipping code to nuget.org on regular 2-3 weeks intervals). The timeline of the 
outage was something like this:&lt;/p&gt;

&lt;p&gt;2:00 - We assembled to do deployment to production. Following our existing process, we backed up the production database, 
reviewed the state of our master branch in git, and checked that our preproduction environment still looked healthy.&lt;/p&gt;

&lt;p&gt;2:25 - We published the new code to the Production Web Role in Azure staging slots. Because we are using Entity Framework migrations at App Startup time, 
and because the VMs in staging slots run against the same database as the (still live) VMs in production slots, we did not feel safe testing these 
new role instances prior to doing the VIP swap which brings the new code live.&lt;/p&gt;

&lt;p&gt;2:30 - We do the VIP swap, and the new code is now running nuget.org. We start doing sanity tests of production, and checking the error logs in case we will 
see evidence of any problems there.&lt;/p&gt;

&lt;p&gt;A few minutes later, we started receiving tweets and emails stating that package downloads were failing.  We acknowledged the issue on twitter. &lt;a href="https://twitter.com/nuget/status/309432341057634305"&gt;Related tweet&lt;/a&gt;.
We really appreciate your tweets at &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt; when you encounter site issues!&lt;/p&gt;

&lt;p&gt;2:35 - We realized gallery is redirecting package download requests to package URLs that don’t exist. We also realized why.
The problem is in our production environment package blobs have not been updated to the new naming convention that the new code we just deployed requires.&lt;/p&gt;

&lt;p&gt;We started running the batch job, which already exists, and has been used on preproduction environments. This will update the production environment package 
blobs and fix package downloads so the world can get their nupkgs. We estimated that this batch job will take 40-60 minutes to run. &lt;/p&gt;

&lt;p&gt;While we monitored the progress of the batch job, we were simultaneously second guessing ourselves and trying to think of a safe way to get the site back up faster. 
Unfortunately VIP swapping back to the old production VMs is not a viable solution, the reason again being the way we are using Entity Framework migrations at App_Start
which means our old production code is probably not going to be happy with a database which is in a state it does not understand.&lt;/p&gt;

&lt;p&gt;2:40 - We got worried. The batch job seemed to be working very slowly, or not at all.&lt;/p&gt;

&lt;p&gt;3:05 - We realized the batch job itself is broken. We fixed the code, and restarted the whole batch job. Again we monitored progress of the batch job. 
This time, eventually, we could verify it was working properly. We thought the batch job would take about an hour to complete, but it ended up taking 85 minutes.
Packages gradually became available for download during this time, so some people may have seen their problems resolved sooner. &lt;a href="https://twitter.com/nuget/status/309439911881240577"&gt;Related tweet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;4:30 - We verified that the batch job had completed and all packages are back up and working. &lt;a href="https://twitter.com/nuget/status/309461232967110656"&gt;Related tweet&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="the-problematic-code-changes"&gt;The Problematic Code Changes&lt;/h2&gt;

&lt;p&gt;Here’s what motivated the change causing all these problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Package IDs in URLs on the nuget gallery are case insensitive.&lt;/li&gt;
  &lt;li&gt;Azure Blob Storage, which we use for holding all our nupkg files for download, is case sensitive.&lt;/li&gt;
  &lt;li&gt;Package IDs have their ‘canonical’ casing preserved in the NuGet database, and is used to build the filename that retrieves the blob from blob storage.&lt;/li&gt;
  &lt;li&gt;The canonical casing is determined the &lt;em&gt;first&lt;/em&gt; time the package is published and it was immutable.  Many package authors have wished to change the casing, but we couldn’t support it.  This meant that any given version of a package might claim a package ID that is different from the canonical ID.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The consequence of 3. and 4. is that in order to service a package restore download request, which contains the package ID in casing which may be different from blob storage, 
nuget.org must query the database to retrieve the canonical ID before we could service the download request. As a further consequence package download stops 
working any time our database goes down.&lt;/p&gt;

&lt;h3 id="avoiding-the-database-for-package-downloads"&gt;Avoiding the database for package downloads&lt;/h3&gt;

&lt;p&gt;We updated the code that handles package download requests to look for packageID.ToLowerCase(); This means we no longer have to hit the database to retrieve package ID’s canonically cased version, 
we can just use ToLowerCase() on the package ID sent in the download request.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We apologize for the irony! We intended package downloads to become more robust but actually ended up breaking package downloads.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="the-postmortem---what-went-wrong"&gt;The Postmortem - What Went Wrong&lt;/h2&gt;

&lt;p&gt;We held a meeting the day after the outage, where we did a break-down starting with a summary of everything that went wrong, during the upgrade and outage. Here’s &lt;em&gt;what&lt;/em&gt; went wrong.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The outage happened. We published a problem code to the VMs without the required associated data because we are missing a step in the deployment.&lt;/li&gt;
  &lt;li&gt;We tested the production environment after we published the code. This is when we discovered the issue. The time spent testing and discovering the issue contributes to the total delay between the problem occurring and us fixing the problem. &lt;/li&gt;
  &lt;li&gt;We were not confident we could safely revert the VIP swap to unpublish from production. If we could have done it then package downloads would have started working immediately, and it would have been probably a 5 minute downtime, not a 1.5 hour downtime. So our inability to safely revert is a problem.&lt;/li&gt;
  &lt;li&gt;The batch job for fixing the problem failed the first time. It contributed to the outage duration significantly the time to realize the script was broken and fix it again was 20 minutes or more.&lt;/li&gt;
  &lt;li&gt;And finally, the missed step of running the fixed batch job to recover the gallery just takes a long time because it’s doing a lot of work.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In a deeper analysis of &lt;em&gt;how&lt;/em&gt; the problem code went into production in the first place without knowing that it would cause a problem, we found out that&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The script had been run against our QA environment (called Preview) &lt;em&gt;by the developer&lt;/em&gt;, without involving QA in testing the script.&lt;/li&gt;
  &lt;li&gt;The script had not been run against the preproduction environment (called Staging) ever. One reason for that is that Preview and Staging share the same Azure blob storage account, so it would have made no difference to observable behavior during testing.&lt;/li&gt;
  &lt;li&gt;Even though the need for running the script had been communicated verbally to the crew, because it was weeks earlier and because the step was not part of the deployment process for Preview and Staging, 
the step was completely forgotten about by the time it came to do the actual production deployment.&lt;/li&gt;
  &lt;li&gt;QA team had noticed issues downloading from Preview and Staging environments but not realize they were important because it was &lt;em&gt;normal for download to be broken in these environments&lt;/em&gt;.
The reason is these environments don’t have the full set of the production blob data in their own storage account.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="conclusions---what-we-plan-to-change"&gt;Conclusions - What We Plan to Change&lt;/h2&gt;

&lt;p&gt;Plans for preventing and mitigating future nuget.org downtime caused by the NuGet gallery crew’s upgrades to nuget.org.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure our deployment checklist of ALL steps required for deployment is updated alongside any code changes that require special deployment steps.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Validate production deployments using automated tests immediately after going live. We want to be able to detect the problems faster than it can be tweeted to us.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Expect problems during upgrades, and have a clear recovery plan in place for every deployment. The plan details how to quickly and safely recover when the deployment fails.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally our recovery plan should always be VIP swap. We are currently experimenting with changing our use of Entity Framework to a model which will not depend on running migrations during the deployment itself.&lt;/p&gt;

&lt;p&gt;A second recovery plan is database restore &lt;em&gt;plus&lt;/em&gt; VIP swap. We would first set the Gallery to Read-Only mode (this is new) during the deployment, which means you will be unable to create accounts and upload packages while the deployment occurs.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Test&lt;/em&gt; the recovery plan in preproduction before doing the production deployment. (Confidence in a plan that has been dreamed up under pressure and not been tested is low!)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We need to make the QA and Preproduction environments squeaky clean and as reliable as production. We should never have issues that occur there that get ignored and thereby slip into production.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stopping Preview and Staging from sharing the blob storage account will help us ensure we have done clean practice deployments.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enhance our service monitoring to give us better feedback on when and how package download gets broken.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description><a10:link href="http://blog.nuget.org/20130404/the-march-6-nuget-gallery-outage.html" /><a10:updated>2013-04-04T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130325/improved-search-syntax</guid><title>Improved search syntax on nuget.org and in NuGet Visual Studio extension</title><description>&lt;p&gt;The NuGet team recently deployed a new and very useful search capability on nuget.org, which allows you to narrow your search to a pariticular attribute of a NuGet package. For example, if you want to search for packages which contain ‘elmah’ within the Id, you type ‘&lt;strong&gt;&lt;a href="https://nuget.org/packages?q=id%3Aelmah" title="Search for packages with elmah in Id"&gt;id:elmah&lt;/a&gt;&lt;/strong&gt;’. (Note that this will execute a ‘contains’ search, not an exact match search. Which means it will return elmah, elmah.corelibrary, etc.)&lt;/p&gt;

&lt;p&gt;Similarly you can use the same syntax to search for other attributes in the package metadata. Here’s the complete list of supported attributes:&lt;/p&gt;

&lt;table cellpadding="8" border="1"&gt;
   &lt;thead&gt;
      &lt;tr&gt;
         &lt;td&gt;Attribute&lt;/td&gt;
         &lt;td&gt;Example&lt;/td&gt;
      &lt;/tr&gt;
   &lt;/thead&gt;

   &lt;tbody&gt;
      &lt;tr&gt;
         &lt;td&gt;id&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;id:jQuery&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
	  &lt;tr&gt;
         &lt;td&gt;title&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;title:Validation&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;description&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;description:dependency injection&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;authors&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;authors:Outercurve Foundation&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;owners&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;owners:dotnetjunky&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;tags&lt;/td&gt;
         &lt;td&gt;&lt;strong&gt;tags:silverlight&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note that when a search query contains spaces, the gallery will perform an OR search against words in the query. AND search is currently not supported.&lt;/p&gt;

&lt;p&gt;Even better, this feature is automatically available for any NuGet client that calls the Search service method from nuget.org. This can be seen in the Visual Studio Package Manager dialog as shown below. &lt;/p&gt;

&lt;p&gt;&lt;img src="/images/improved-search.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Happy searching!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130325/improved-search-syntax.html" /><a10:updated>2013-03-25T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130226/Introducing-Package-Statistics</guid><title>Introducing Package Statistics</title><description>&lt;p&gt;We have introduced a new feature on &lt;a href="http://nuget.org"&gt;http://nuget.org&lt;/a&gt; where you can see download statistics for packages.  With this initial drop, we hope to whet your appetite and collect your input on further statistics features; it’s a mere fraction of what we can imagine.&lt;/p&gt;

&lt;h2 id="statistics-tab"&gt;Statistics Tab&lt;/h2&gt;

&lt;p&gt;At the top of the site, a new ‘Statistics’ tab is displayed.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-02-26-Introducing-Package-Statistics/statistics-tab.png" alt="statistics tab" /&gt;&lt;/p&gt;

&lt;p&gt;This tab takes you to &lt;a href="http://nuget.org/stats"&gt;http://nuget.org/stats&lt;/a&gt;, which shows the two high-level statistics reports we have at the moment.  While we expect this page will expand with more reports, the first two we’ve introduced are “Downloaded Packages (Last 6 Weeks)” and “Downloaded Package Versions (Last 6 Weeks).”&lt;/p&gt;

&lt;h2 id="downloaded-packages"&gt;Downloaded Packages&lt;/h2&gt;

&lt;p&gt;This report shows the total download numbers for all versions of a package.  The full report includes the top 100 packages over the last 6 weeks.  It’s no shock that packages like jQuery, Newtonsoft.Json, jQuery.Validation, and Microsoft.AspNet.Razor are at the top.  But since the report is based on the last 6 weeks, instead of all time, we expect to see more changes on this report than on the full list of packages.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-02-26-Introducing-Package-Statistics/downloaded-packages.png" alt="downloaded packages" /&gt;&lt;/p&gt;

&lt;h2 id="downloaded-package-versions"&gt;Downloaded Package Versions&lt;/h2&gt;

&lt;p&gt;This report shows the download numbers for a single version of a package.  This full report includes the top 500 package versions over the last 6 weeks, and a package can show up multiple times if it has had more than one frequently downloaded version.  From here, we can learn more about which versions of packages developers are using and how long it takes a new version to overcome an older one.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-02-26-Introducing-Package-Statistics/downloaded-package-versions.png" alt="downloaded package versions" /&gt;&lt;/p&gt;

&lt;h2 id="version-breakdown-for-a-package"&gt;Version Breakdown for a Package&lt;/h2&gt;

&lt;p&gt;On the ‘Downloaded Packages’ report, the download count is a hyperlink.  Following that hyperlink for a package will show you a report for the package’s downloads by version.  This package-specific report lets you see the recent (6 weeks) downloads for any package, to further identify download trends for a package’s versions.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-02-26-Introducing-Package-Statistics/version-breakdown.png" alt="version breakdown" /&gt;&lt;/p&gt;

&lt;h2 id="statistics-for-any-package"&gt;Statistics for any Package&lt;/h2&gt;

&lt;p&gt;When viewing the detail page for any package, there’s a new ‘Package Statistics’ link on the left side.  This link takes you directly to the version breakdown for that package, showing the download statistics for the last 6 weeks.  This data will be different from the download counts displayed directly on the package page, where that is a total of downloads for all time, instead of just the last 6 weeks.&lt;/p&gt;

&lt;p&gt;Note that there are not any reports visible only to the package owner.  Everyone can see the package statistics for any package.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-02-26-Introducing-Package-Statistics/package-statistics.png" alt="package statistics" /&gt;&lt;/p&gt;

&lt;h2 id="availability"&gt;Availability&lt;/h2&gt;

&lt;p&gt;As we first launch the package statistics feature, many packages will not have statistics available right away.  You may see a message that states, “Download statistics are not currently available for this package, please check back later.”  After the deployment of the feature, we are firing off the job to produce statistics reports for all packages.  We expect this to take about a day.  So if your package’s statistics aren’t yet available, just check back again later.&lt;/p&gt;

&lt;p&gt;After the initial release of the feature, there will be a job running nightly to refresh every package’s statistics reports.&lt;/p&gt;

&lt;h2 id="feedback-and-input"&gt;Feedback and Input&lt;/h2&gt;

&lt;p&gt;As mentioned, this is just the beginning of package statistics.  We expect other reports to highlight which NuGet operation caused the download, whether it was a fresh Install, an Update, or a Package Restore.  We are now collecting that data and in a handful of weeks we’ll be able to report on it.  We also expect reports that bring in dependency graph data, packages that have been recently updated, and more.&lt;/p&gt;

&lt;p&gt;If you have feedback or input for what statistics would be useful to you, either as a package consumer or package author, please let us know.  The best way is to file an issue &lt;a href="https://github.com/nuget/nugetgallery"&gt;on the repository&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130226/Introducing-Package-Statistics.html" /><a10:updated>2013-02-26T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130211/workflow-changes-for-codeplex-issues</guid><title>Workflow Changes for CodePlex Issues</title><description>&lt;p&gt;A couple weeks ago, some of you noticed that the core team closed a few issues on &lt;a href="http://nuget.codeplex.com"&gt;http://nuget.codeplex.com&lt;/a&gt; that were in the “Soonish” release. The items that were closed were feature suggestions that, while not bad ideas, were things that the core team decided weren’t going to make the cut for the next few releases. 
The pushback from the community in response was understandable. After all, if NuGet is an OSS project, why would the core team close good ideas simply because we weren’t going to act on them? 
Firstly, we’ve reopened the items that we had closed and moved them to the “Product Backlog” release (more on that momentarily). We also spent some time thinking about how we can do a better job balancing what feels like two competing interests in the same issue repository. The first is the interest of the core team to more efficiently manage its day to day work – and this means maintaining a high signal to noise ratio in the release buckets that we work from. The second interest is that of the community to actively participate in development of NuGet, whether that means filing new product ideas or pulling a new idea from the list which will ultimately find its way back into the product via a pull request.
So here’s how we’re planning to organize issues and perform triage going forward in an attempt to better satisfy both sets of interests:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get rid of the “Soonish” release. We had originally created this as a way to identify things that were potential candidates for a near term release as opposed to items in “Product Backlog” – however, over the last several months, we’ve observed that items in this release have built up to a level where the core team isn’t going to be able to act on many of these either – resulting in effectively 2 different backlog buckets. In sum, it was a nice idea, but it hasn’t worked out in the way that we had hoped.&lt;/li&gt;
  &lt;li&gt;Rename “Product Backlog” to “Up For Grabs”. This release represents issues that we would accept as a pull request if someone from the community implemented it with sufficient quality. One of the reasons that we closed items in “Soonish” rather than moving them to backlog was that we believe “backlog” to imply that the core team will eventually get around to acting on the item, and we felt like this was misleading. Items in backlog are those that the core team has decided are good ideas but not ideas that we will likely revisit. We do periodically pull highly-voted items from the backlog into an active release, but this is not a part of our regular rhythm. As such, we want the name of the release to more accurately reflect how it’s being used.&lt;/li&gt;
  &lt;li&gt;Add an acknowledgements.txt file to the repository and insert this text into the release notes. In general, we want to figure out better ways to thank individuals who take their role in the NuGet community to the next step by submitting pull requests for the issues that they are passionate about. Adding this kind of recognition seems like an obvious step that we can take here to do better at encouraging and rewarding this kind of participation.&lt;/li&gt;
  &lt;li&gt;We triage issues a couple times per week. When considering a new issue, the decision flow will look like the following:
    &lt;ul&gt;
      &lt;li&gt;Is this something that we need to work on for the current release? If so, assign to the current release. The bar for this question changes based on the type of release (e.g. some releases are more focused on risk management, some on new feature development). &lt;/li&gt;
      &lt;li&gt;Is this something that the core team plans to work on? If so, assign to the next actual release.  No more of the revolving “Next” release as this would allow us to be passive about making decisions on issues that we repeatedly never get to. &lt;/li&gt;
      &lt;li&gt;Is this something that we think is a good idea, but know that the core team is not going to get around to working on in the foreseeable future? If so, assign to “Up For Grabs” release so that it can be voted on and &lt;strong&gt;ideally&lt;/strong&gt; picked up by the community.&lt;/li&gt;
      &lt;li&gt;Is this something that we do not think is a good idea for NuGet? If so, close the issue with relevant explanation.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The planning process for a new release will look like the following:
    &lt;ul&gt;
      &lt;li&gt;Ensure that roadmap features have been added to the upcoming release (e.g. ensure that all potential work for the release has been added in the form of a CodePlex issue).&lt;/li&gt;
      &lt;li&gt;Triage all of the unfinished items in the release that was just completed. For each item, either move it to the next release, move to “Up For Grabs”, or close.&lt;/li&gt;
      &lt;li&gt;If an issue has cascaded from release to release more than 2 times, move it to “Up For Grabs”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’re sorry if the recent closing of issues on CodePlex gave you the impression that we were somehow making a move towards being less open and hope that the above steps give you a little more insight into how we think about our working and planning rhythms. The core team would love to be able to implement all of the good ideas that fit within the vision for NuGet - however, we are finite and can only get through a subset of the total items. With your help in grabbing issues from Up For Grabs, we’re looking forward to being able to get a lot more accomplished!&lt;/p&gt;

&lt;p&gt;The quality of issues filed on NuGet has historically been very high, and we appreciate that. In the same way, we want and appreciate your thoughts and comments on how we can continually improve our processes - hopefully that is evident in these changes. As such, we’ll hold off for a couple of days to collect your feedback on the new approach and then, assuming that there are no blocking issues raised, make the changes outlined above.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130211/workflow-changes-for-codeplex-issues.html" /><a10:updated>2013-02-11T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20130205/managing-package-owners</guid><title>Managing Package Owners on nuget.org</title><description>&lt;p&gt;While each NuGet package’s &lt;a href="http://docs.nuget.org/docs/reference/nuspec-reference"&gt;nuspec metadata&lt;/a&gt; defines the package’s owner(s), the NuGet gallery at nuget.org ignores that piece of nuspec metadata.  Instead, ownership of a package is defined by who publishes the package to the gallery.  Sometimes this metadata needs to be managed beyond the initial package publishing too, which means the owner metadata needs to be mutable while the package itself is not.&lt;/p&gt;

&lt;h2 id="setting-a-packages-initial-owner"&gt;Setting a Package’s Initial Owner&lt;/h2&gt;
&lt;p&gt;When a brand new package is published to nuget.org, its initial owner is defined by the user that published the package.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the website’s ‘Upload Package’ page was used to publish the package, then the logged-on user is the package’s owner.&lt;/li&gt;
  &lt;li&gt;If &lt;code&gt;nuget.exe push&lt;/code&gt; was used to publish the package from the command-line, then the API key specified to nuget.exe will define the package’s owner.  This can be done by either including the API key in the &lt;a href="http://docs.nuget.org/docs/reference/command-line-reference#Push_Command"&gt;Push command&lt;/a&gt;, or by using the &lt;a href="http://docs.nuget.org/docs/reference/command-line-reference#Setapikey_Command"&gt;SetApiKey command&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="specifying-additional-package-owners"&gt;Specifying Additional Package Owners&lt;/h2&gt;
&lt;p&gt;It’s common for a package to have multiple developers; each developer can be listed as a co-owner of the package.  Packages can also utilize a convention for “organizations” to indicate company/group ownership of a package.  For example, the Microsoft ASP.NET packages are co-owned by &lt;a href="http://nuget.org/profiles/microsoft"&gt;microsoft&lt;/a&gt;, &lt;a href="http://nuget.org/profiles/aspnet"&gt;aspnet&lt;/a&gt;, and sometimes individuals on the feature team.  The ‘microsoft’ and ‘aspnet’ accounts are simply set up with a mailing list email address that reaches the teams that manage the accounts.&lt;/p&gt;

&lt;p&gt;Once a package has been published to nuget.org, it’s easy to invite additional users to become owners of the package.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://nuget.org/users/account/LogOn"&gt;Log on&lt;/a&gt; to nuget.org with the account that is the current owner of the package;&lt;/li&gt;
  &lt;li&gt;Navigate to the package page using the ‘Packages’ tab, searching, or clicking your username to and then ‘&lt;a href="https://nuget.org/account/Packages"&gt;Manage My Packages&lt;/a&gt;’;&lt;/li&gt;
  &lt;li&gt;When logged on as the package’s owner, there is a ‘Manage Owners’ link on the left side to click;&lt;/li&gt;
  &lt;li&gt;Enter the username of the person to add as an owner and click ‘Add’;&lt;/li&gt;
  &lt;li&gt;An email is then sent to the new co-owner, as an invitation to become an owner of the package;&lt;/li&gt;
  &lt;li&gt;Once that user clicks the link, they are a full co-owner with full control over the package, including the ability to remove other users as owners.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Until the new owner confirms ownership, they &lt;em&gt;will not&lt;/em&gt; be listed as an owner of the package.  When viewing the ‘Manage Owners’ page, you will see a “pending approval” entry in the current owners.  That invitation can be removed, just as other owners can be removed.&lt;/p&gt;

&lt;p&gt;This process of invitations prevents users from falsely adding other users as owners of their packages.  Note that the “Authors” metadata is purely freeform text; only “Owners” are controlled.&lt;/p&gt;

&lt;h2 id="removing-package-owners"&gt;Removing Package Owners&lt;/h2&gt;
&lt;p&gt;All package owners are peers.  This means any package owner can publish a new version of the package.  It also means that any package owner can remove any other package owner.  No owner has more authority than other owners.&lt;/p&gt;

&lt;p&gt;When a package has multiple owners and one needs to be removed the process is simple:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://nuget.org/users/account/LogOn"&gt;Log on&lt;/a&gt; to nuget.org with the account that is the current owner of the package;&lt;/li&gt;
  &lt;li&gt;Navigate to the package page using the Packages tab, searching, or clicking your username to and then ‘&lt;a href="https://nuget.org/account/Packages"&gt;Manage My Packages&lt;/a&gt;’;&lt;/li&gt;
  &lt;li&gt;When logged on as the package’s owner, there is a ‘Manage Owners’ link on the left side to click;&lt;/li&gt;
  &lt;li&gt;Click the ‘remove’ link next to the owner to be removed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="transfering-package-ownership"&gt;Transfering Package Ownership&lt;/h2&gt;
&lt;p&gt;We sometimes get support requests to transfer package ownership from one user to another, but you can almost always accomplish this yourself.  Transfering ownership from one user to another is simply a combination of the two features above.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The current owner invites the new user to become a co-owner and the new user accepts the invite;&lt;/li&gt;
  &lt;li&gt;The new user removes the old user from the list of owners.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This request has come in under a couple forms but the process works the same.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The package ownership is changing from one developer to another&lt;/li&gt;
  &lt;li&gt;The package was accidentally published using the wrong account&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="orphaned-packages"&gt;Orphaned Packages&lt;/h2&gt;
&lt;p&gt;One last scenario has occurred, but not many times.  Packages have become orphans and the only package owner account cannot be used to add new owners.  Here are some examples of this scenario:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The owner’s account is associated with an email address that no longer exists and the user has forgotten their password&lt;/li&gt;
  &lt;li&gt;The registered owner has left the company that produces the package and cannot be reached to update the package ownership&lt;/li&gt;
  &lt;li&gt;Due to a bug that has only affected a handful of packages, the package is somehow ownerless on the gallery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some members of the NuGet team are in the ‘admin’ role on the gallery and can access the ‘Manage Owners’ link for any package.  If you are the rightful owner of a package and cannot reach the current owner to gain ownership permissions, then use the ‘Report Abuse’ link on the gallery to reach the NuGet team.  We will then follow a process to verify your ownership of the package.  If we determine you should be an owner of the package, we will use the ‘Manage Owners’ link for the package ourselves and send you the invite to become an owner.  We will only do this after verifying that you should be an owner and the process for this varies by circumstances.  Often times, we will use the package’s Project URL to find a way to contact the project owner, but we may also use Twitter, Email, or other means for contacting the project owner.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20130205/managing-package-owners.html" /><a10:updated>2013-02-05T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20121231/a-quick-tutorial-on-update-package-command</guid><title>A quick tutorial on the Update-Package command</title><description>&lt;p&gt;Among the supported commands in NuGet’s Package Manager Console, &lt;strong&gt;Update-Package&lt;/strong&gt; is arguably the most powerful in terms of its supported parameters and switches. The primary purpose of the command is to update package(s) in your projects to a higher (possibly latest) version. However, the provided parameters allow you to twist this behavior in many different ways. In this post, I’m going to give a quick tutorial on what possible ways you can invoke the command.&lt;/p&gt;

&lt;p&gt;In total, the &lt;strong&gt;Update-Package&lt;/strong&gt; command offers eight parameters (in addition to the built-in PowerShell parameters):&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="6" border="1"&gt;
   &lt;tr&gt;
      &lt;th&gt;Parameter&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-Id&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;Specifies the Id of the package to be updated.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-ProjectName&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;Specifies the name of the project in which packages should be updated.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-Version&lt;/td&gt;
      &lt;td&gt;SemanticVersion*&lt;/td&gt;
      &lt;td&gt;Specifies the new target version of the package as a result of the update.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-Source&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;Specifies where to look for package updates, overriding the package sources that are specified in the Options dialog. This value can be either a url to a remote repository or a path to a local repository or the name of a package source specified in the Options dialog.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-IgnoreDependencies&lt;/td&gt;
      &lt;td&gt;Switch parameter&lt;/td&gt;
      &lt;td&gt;If set, NuGet will ignore dependency packages and only update the main package.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-Safe&lt;/td&gt;
      &lt;td&gt;Switch parameter&lt;/td&gt;
      &lt;td&gt;If set, NuGet will only update to a new version that has the same major and minor versions as the previous package. For example, if the old version is 1.2.0, NuGet will accept the update package with version of 1.2.1 or 1.2.9999  but it will &lt;em&gt;not&lt;/em&gt; accept 1.3.0.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-IncludePrerelease&lt;/td&gt;
      &lt;td&gt;Switch parameter&lt;/td&gt;
      &lt;td&gt;If set, NuGet will consider prerelease packages as candidates for updates.&lt;/td&gt;
   &lt;/tr&gt;

   &lt;tr&gt;
      &lt;td&gt;-Reinstall&lt;/td&gt;
      &lt;td&gt;Switch parameter&lt;/td&gt;
      &lt;td&gt;If set, instead of updating the package to the latest version, NuGet will uninstall the package and reinstall the same version. This is useful when, for example, you've updated the target framework of your project, e.g. from .NET 4.0 to .NET 4.5, and you want to reference .NET 4.5-specific assemblies in the package. You can't set this parameter together with the -Version parameter.&lt;/td&gt;
   &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt;Although the type of the -Version parameter is &lt;strong&gt;SemanticVersion&lt;/strong&gt;, which is a type declared by NuGet, you can just use string when you set it. PowerShell will automatically convert it for you, as long as the value can be parsed by the &lt;strong&gt;SemanticVersion&lt;/strong&gt; class.&lt;/p&gt;

&lt;p&gt;With that, here are the common use cases for the Update-Package command:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Update a particular package in a project to the latest version:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery &lt;strong&gt;-ProjectName&lt;/strong&gt; MyProject&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update a particular package in a project to the latest version, using safe update rule:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery &lt;strong&gt;-ProjectName&lt;/strong&gt; MyProject &lt;strong&gt;-Safe&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update a particular package in a project to a particular version:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery &lt;strong&gt;-ProjectName&lt;/strong&gt; MyProject &lt;strong&gt;-Version&lt;/strong&gt; 1.8&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update a particular package in &lt;em&gt;all&lt;/em&gt; projects of the current solution to the latest version:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update a particular package in &lt;em&gt;all&lt;/em&gt; projects of the current solution to a particular version:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery &lt;strong&gt;-version&lt;/strong&gt; 1.8&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reinstall a particular package in &lt;em&gt;all&lt;/em&gt; projects of the current solution:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; jQuery &lt;strong&gt;-reinstall&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update &lt;em&gt;all&lt;/em&gt; packages in a project to the latest versions:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; &lt;strong&gt;-ProjectName&lt;/strong&gt; MyProject&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reinstall &lt;em&gt;all&lt;/em&gt; packages in a project:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; &lt;strong&gt;-ProjectName&lt;/strong&gt; MyProject &lt;strong&gt;-reinstall&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update &lt;em&gt;all&lt;/em&gt; packages in &lt;em&gt;all&lt;/em&gt; projects of the current solution to the latest versions:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reinstall &lt;em&gt;all&lt;/em&gt; packages in &lt;em&gt;all&lt;/em&gt; projects of the current solution:&lt;br /&gt;
&lt;code&gt;&lt;strong&gt;Update-Package&lt;/strong&gt; &lt;strong&gt;-Reinstall&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Phew, that’s a lot of different combinations; but they are quite intuitive and easy to remember. To keep the list small, I left out the -IgnoreDependencies and -IncludePrelease parameters but you can add either (or both) of them to any of the example above (except that you can’t use -Version and -Reinstall together, remember?) to adjust the behavior of the command.&lt;/p&gt;

&lt;p&gt;Hope that helps. Happy New Year.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20121231/a-quick-tutorial-on-update-package-command.html" /><a10:updated>2012-12-31T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20121023/creating-custom-package-rules-for-your-build</guid><title>Creating custom package rules for your build</title><description>&lt;p&gt;When you build your NuGet packages using &lt;strong&gt;nuget.exe&lt;/strong&gt;, you may have noticed that sometimes you get a warning about the created package. Here’s one example:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/nuget-exe-warning.PNG" alt="A package warning" /&gt;&lt;/p&gt;

&lt;p&gt;This warning is generated by one of NuGet’s &lt;em&gt;package analysis rules&lt;/em&gt;. Think of these as the NuGet equivalent of an FxCop rule. When &lt;strong&gt;nuget.exe&lt;/strong&gt; creates a package, it automatically executes the package analysis step which in turn invokes all the registered rules. These rules will, one by one, examine the built package and emit the warnings as you see. You can disable this analysis step by supplying the &lt;strong&gt;&lt;code&gt;-NoPackageAnalysis&lt;/code&gt;&lt;/strong&gt; parameter to the ‘pack’ command, although we don’t recommend it.&lt;/p&gt;

&lt;p&gt;By default, &lt;strong&gt;nuget.exe&lt;/strong&gt; includes a set of built-in rules. These are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;InitScriptNotUnderToolsRule&lt;/strong&gt;: detect whether there is an &lt;em&gt;init.ps1&lt;/em&gt; file that is not placed directly under the &lt;em&gt;tools&lt;/em&gt; directory.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;InvalidFrameworkFolderRule&lt;/strong&gt;: detect whether there is an unrecognized framework folder name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MisplacedAssemblyRule&lt;/strong&gt;: detect whether any assembly files are placed outside of the &lt;em&gt;lib&lt;/em&gt; folder.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MisplacedScriptFileRule&lt;/strong&gt;: detect whether any Powershell .ps1 files are placed outside of the &lt;em&gt;tools&lt;/em&gt; folder.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MisplacedTransformFileRule&lt;/strong&gt;: detect whether a transform file (&lt;em&gt;.pp&lt;/em&gt; or &lt;em&gt;.transform&lt;/em&gt;) is placed outside of the &lt;em&gt;content&lt;/em&gt; folder.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MissingSummaryRule&lt;/strong&gt;: detect whether the Summary attribute is missing when the Description attribute is longer than 300 characters.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WinRTNameIsObsoleteRule&lt;/strong&gt;: detect the presence of a ‘WinRT’ framework folder. (Starting with NuGet 2.1, the ‘WinRT’ moniker is obsolete and we recommend people use ‘NetCore45’ or ‘Windows8’ instead.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is not very well-known is that the rule set is extensible, meaning that you can write your own custom rules to cater to your needs. For example, the Microsoft ASP.NET team has written a rule to ensure that all packages that we ship have an Id that start with &lt;code&gt;Microsoft.AspNet.*&lt;/code&gt;. In this post, I will show you how easy it is to write a custom package analysis rule.&lt;/p&gt;

&lt;h3 id="develop-rule-assembly"&gt;Develop rule assembly&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;First, create a class library project that targets .NET 4.0. You can add multiple rules in one assembly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add an assembly reference to &lt;strong&gt;nuget.exe&lt;/strong&gt;. You need it for the package rule types. In the Properties window, set both &lt;em&gt;Copy Local&lt;/em&gt; and &lt;em&gt;Specific Version&lt;/em&gt; to &lt;strong&gt;False&lt;/strong&gt;, because we don’t want to deploy &lt;strong&gt;nuget.exe&lt;/strong&gt; together with our extension assembly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add another assembly reference to &lt;strong&gt;System.ComponentModel.Composition&lt;/strong&gt;. You need this because the analysis mechanism is based on &lt;strong&gt;&lt;a href="http://mef.codeplex.com/" title="MEF"&gt;MEF&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now add a class to your project for each rule you want to create. A rule class must derive from the &lt;code&gt;NuGet.IPackageRule&lt;/code&gt; interface, and must export it using the MEF &lt;code&gt;Export&lt;/code&gt; attribute.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;
&lt;code&gt;
[Export(typeof(IPackageRule))]
public class PackageIdRule : IPackageRule
{

}
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Here’s the definition of the &lt;code&gt;IPackageRule&lt;/code&gt; interface:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
public interface IPackageRule
{
    IEnumerable&amp;lt;PackageIssue&amp;gt; Validate(IPackage package);
}
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;As you can see, it has only one simple &lt;code&gt;Validate&lt;/code&gt; method, which receives an instance of the package that has just been built. The method will examine the package and return all the issues that it finds. An issue is represented by an instance of the &lt;code&gt;PackageIssue&lt;/code&gt; class.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
public class PackageIssue
{
    public PackageIssue(string title, string description, string solution);
    public PackageIssue(string title, string description, string solution, PackageIssueLevel level);

    public string Description { get; }
    public PackageIssueLevel Level { get; }
    public string Solution { get; }
    public string Title { get; }
}
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Each issue has a Title, a Description, a Level, which can be either Warning or Error, and a proposed Solution. Note: currently, &lt;strong&gt;nuget.exe&lt;/strong&gt; ignores the Level property and reports all issues as Warning.&lt;/p&gt;

&lt;p&gt;Here’s the &lt;code&gt;Validate&lt;/code&gt; method that we wrote for the previously mentioned rule to enforce all package Ids start with &lt;code&gt;Microsoft.AspNet.*&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
public IEnumerable&amp;lt;PackageIssue&amp;gt; Validate(IPackage package)
{
    if (!package.Id.StartsWith("Microsoft.AspNet.", StringComparison.Ordinal))
    {
        yield return new PackageIssue(
            title: "Package Id is not valid",
            description: "The Id of this package doesn't start with 'Microsoft.AspNet.*'",
            solution: "Rename the Id attribute so that it starts with 'Microsoft.AspNet.*'");
    }
}
&lt;/code&gt;
&lt;/pre&gt;

&lt;h3 id="deploy-rule-assembly"&gt;Deploy rule assembly&lt;/h3&gt;

&lt;p&gt;After you’ve successfully compiled the project, you need to put the assembly into the right place. &lt;strong&gt;nuget.exe&lt;/strong&gt; looks for extension assemblies in three places: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;%localappdata%\nuget\commands&lt;/strong&gt; directory.&lt;/li&gt;
  &lt;li&gt;The current directory from which &lt;strong&gt;nuget.exe&lt;/strong&gt; runs. Important: In this case, your assembly’s name must end with &lt;strong&gt;Extensions.dll&lt;/strong&gt;, or else &lt;strong&gt;nuget.exe&lt;/strong&gt; will ignore it.&lt;/li&gt;
  &lt;li&gt;A list of directories as specified by the &lt;strong&gt;NUGET_EXTENSIONS_PATH&lt;/strong&gt; environment variable, separated by commas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;

&lt;p&gt;When &lt;strong&gt;nuget.exe&lt;/strong&gt; builds a package, it runs a set of analysis rules to spot potential issues with the package. You can write your own custom rules to enforce additional requirements in your organization. A rule is simply a class that drives from the &lt;code&gt;IPackageRule&lt;/code&gt; interface and is exported via MEF.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20121023/creating-custom-package-rules-for-your-build.html" /><a10:updated>2012-10-23T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120926/invoking-nuget-services-from-inside-visual-studio</guid><title>Invoking NuGet Services from inside Visual Studio</title><description>&lt;p&gt;One of the best kept secrets of the NuGet extension is that besides the UI that everyone has become familiar with, it also exports some useful services, via &lt;a href="http://msdn.microsoft.com/en-us/library/dd460648.aspx" title="MEF"&gt;MEF&lt;/a&gt;, which allow other components in VS to interact with NuGet. These include installing packages, uninstalling packages and querying for installed packages.&lt;/p&gt;

&lt;p&gt;Over the past year, the NuGet team has received many inquiries from various teams inside and outside Microsoft asking us how to perform such tasks from their components. We have solidified the guidance over time and wanted to share it broadly.&lt;/p&gt;

&lt;p&gt;As of the current version (2.0), NuGet exports six interfaces/services via MEF, all of which reside in the &lt;strong&gt;NuGet.VisualStudio&lt;/strong&gt; namespace in the &lt;strong&gt;NuGet.VisualStudio.dll&lt;/strong&gt; assembly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IVsPackageInstaller&lt;/strong&gt; - 
Contains methods to install NuGet packages into projects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IVsPackageInstallerEvents&lt;/strong&gt; - Offers events which raise when packages are installed and uninstalled in the current solution.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IVsPackageInstallerServices&lt;/strong&gt; - Contains a method to retrieve installed packages in the current solution, as well as methods to check if a specified package Id is installed in a project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IVsPackageUninstaller&lt;/strong&gt; - Contains methods to uninstall NuGet packages from projects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IConsoleInitializer&lt;/strong&gt; - Trigger eager initialization of the NuGet Package Manager Console.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IVsTemplateWizard&lt;/strong&gt; - This interface is designed for project/item templates to include pre-installed packages, and is &lt;em&gt;not&lt;/em&gt; meant to be invoked from code.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here I will not discuss the detailed APIs in each of the interfaces. You can easily explore those for yourself in the Object Browser window.&lt;/p&gt;

&lt;p&gt;Instead I will show you a step-by-step guide on how to reference the interfaces and use them in your code.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h4 id="first-install-the-nugetvisualstudio-nuget-package-into-your-project"&gt;First, install the &lt;strong&gt;NuGet.VisualStudio&lt;/strong&gt; nuget package into your project&lt;/h4&gt;
    &lt;p&gt;The &lt;strong&gt;&lt;a href="https://nuget.org/packages/NuGet.VisualStudio" title="NuGet.VisualStudio package"&gt;NuGet.VisualStudio&lt;/a&gt;&lt;/strong&gt; package contains the NuGet.VisualStudio.dll assembly which includes all the above interfaces.&lt;br /&gt;&lt;br /&gt;
When installed, the package will automatically set the &lt;strong&gt;Embed Interop Types&lt;/strong&gt; property of the assembly reference to &lt;strong&gt;True&lt;/strong&gt;. The reason it does so is to make your code  resilient against version changes when users update to newer versions of NuGet.&lt;br /&gt;&lt;br /&gt;
For the same reason, you must NOT use any other types besides the above interfaces in your code. You must NOT reference any other NuGet assemblies either, including &lt;strong&gt;NuGet.Core.dll&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;
&lt;img src="/images/embedinteroptypes.png" alt="Embed Interop Types set to True" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id="obtain-the-services"&gt;Obtain the services&lt;/h4&gt;
    &lt;p&gt;With the package installed, you are ready to obtain those services from your code. Because they are exported as MEF contracts, you can import them either via MEF’s Import attribute, or through the &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.visualstudio.componentmodelhost.icomponentmodel.aspx" title="IComponentModel interface"&gt;IComponentModel service&lt;/a&gt; in code. Here’s a sample code snippet:&lt;br /&gt;&lt;br /&gt;
&lt;code&gt;var componentModel = (IComponentModel)GetService(typeof(SComponentModel));&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;IVsPackageInstallerServices installerServices = componentModel.GetService&amp;lt;IVsPackageInstallerServices&amp;gt;();&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;var installedPackages = installerServices.GetInstalledPackages();&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So there you have it. If you find yourself needing to do something that the above services do not provide, feel free to open a discussion on the &lt;a href="http://nuget.codeplex.com/discussions/topics/5362/general" title="NuGet Discussions Board"&gt;NuGet discussions board&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120926/invoking-nuget-services-from-inside-visual-studio.html" /><a10:updated>2012-09-26T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120907/recent-changes-to-package-restore-consent</guid><title>Recent Changes to Package Restore Consent</title><description>&lt;p&gt;When we released NuGet 2.0, one of the changes included the addition of a &lt;a href="http://blog.nuget.org/20120518/package-restore-and-consent.html"&gt;privacy-related constraint&lt;/a&gt; to the package restore feature.  More specifically, NuGet 2.0 required that you provide explicit consent, via either a checkbox in the package manager configuration dialog or an environment variable, before it would successfully download required packages as a part of the package restore workflow. &lt;/p&gt;

&lt;p&gt;The constraint was added specifically with build scenarios in mind.  However, the implementation extended to other scenarios and as a result, added some unhappiness to the overall NuGet experience.  Therefore, we’ve revisited the implementation and limited its impact to only the scenario that it was designed to address and none other.&lt;/p&gt;

&lt;p&gt;The following changes have been made to the package restore workflow.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added a ‘-RequireConsent’ command line flag to nuget.exe that, when present, causes NuGet to check for consent (this is the default behavior in NuGet 2.0)&lt;/li&gt;
  &lt;li&gt;Modified the NuGet targets file which is created by enabling package restore such that it passes the flag to nuget.exe when restoring packages during build&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The impact of this change is twofold.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The default package restore workflow will continue to check for consent as it does today&lt;/li&gt;
  &lt;li&gt;Calling nuget.exe will no longer check for consent unless you explicitly pass the flag to the executable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The hope here is that while we need to continue checking for consent in the build scenario (since downloading is not a known or obvious build step), this change will eliminate any additional frustrations related to requiring consent when simply using nuget.exe by itself.&lt;/p&gt;

&lt;p&gt;Additionally, because of the &lt;a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages#Details"&gt;mechanics behind package restore&lt;/a&gt;, you won’t have to wait until the next NuGet release to take advantage of these changes.  They are already available today as a part of the &lt;a href="http://nuget.codeplex.com/releases/view/58939"&gt;nuget.exe CodePlex download&lt;/a&gt; and the &lt;a href="http://nuget.org/packages/nuget.bootstrapper"&gt;NuGet.Bootstrapper package&lt;/a&gt;.  The act of enabling package restore for a solution will cause the latest version of nuget.exe to be downloaded automatically, so no further action is needed in this scenario.  If you have an existing solution where package restore is already enabled, you can update it by doing the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove the .nuget folder from the solution in Visual Studio&lt;/li&gt;
  &lt;li&gt;Delete the .nuget folder from disk (keep Visual Studio open)&lt;/li&gt;
  &lt;li&gt;Right-click on the solution in the Visual Studio solution explorer and re-enable NuGet package restore&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The process of enabling package restore will then run again, which will in turn download the latest version of nuget.exe and nuget.targets.  Also, if you happened to close Visual Studio before deleting the .nuget folder from disk, you may notice that your projects fail to load when re-opening the solution.  In this case, simply right-click on the solution and re-enable NuGet package explorer, then right-click on each of the failed projects and reload them.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120907/recent-changes-to-package-restore-consent.html" /><a10:updated>2012-09-07T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120824/nuget-feed-performance-update</guid><title>Feed Performance Update</title><description>&lt;p&gt;As you might know, NuGet has been having some performance (and timeout) related issues recently.  Earlier this week, we &lt;a href="http://blog.nuget.org/20120822/nuget-expected-downtime-completed.html"&gt;completed a deployment&lt;/a&gt; that helped, but it didn’t address everything.&lt;/p&gt;

&lt;p&gt;Many users are still seeing slow responses or even timeouts when trying to use the ‘Manage NuGet Packages’ dialog in Visual Studio.&lt;/p&gt;

&lt;h2 id="ongoing-investigation"&gt;Ongoing Investigation&lt;/h2&gt;
&lt;p&gt;The deployment earlier this week greatly improved the &lt;a href="http://nuget.org/packages"&gt;packages page&lt;/a&gt; on the gallery, but it didn’t address the Visual Studio dialog performance as much as we had hoped.  Since that deployment, we’ve been focusing on the queries behind the Visual Studio dialog.&lt;/p&gt;

&lt;p&gt;We have found that the SQL queries that get executed from the ‘Manage NuGet Package’ dialog are not great.  While the execution plans look okay, the memory grants for the queries are HUGE–MUCH bigger than they need to be.  Because of the huge memory grants, the queries are stacking up behind each other waiting for memory to be granted.  This is leading to poor performance and also timeouts.&lt;/p&gt;

&lt;p&gt;We are working to get a different approach for these queries in place.  We will let you know when a fix is ready.  If you’re curious about what the queries look like, you can see the current and tentative rewritten queries &lt;a href="https://gist.github.com/3442185"&gt;here&lt;/a&gt;.  The rewritten queries are using about 1/100th of the memory of the current queries.&lt;/p&gt;

&lt;p&gt;To stay in touch with us, follow &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt;, or the &lt;a href="https://twitter.com/#!/search/%23nuget"&gt;#nuget tag&lt;/a&gt; on twitter for live updates.  You can also check in on JabbR’s &lt;a href="http://jabbr.net/#/rooms/nuget"&gt;#nuget room&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120824/nuget-feed-performance-update.html" /><a10:updated>2012-08-24T09:30:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120822/nuget-expected-downtime-completed</guid><title>Upgrade Successful</title><description>&lt;p&gt;Earlier this evening, &lt;a href="http://blog.nuget.org/20120822/nuget-expected-downtime.html"&gt;we announced&lt;/a&gt; that the &lt;a href="http://nuget.org"&gt;NuGet Gallery&lt;/a&gt; would be offline for about an hour during a scheduled upgrade.  That upgrade is now complete.&lt;/p&gt;

&lt;p&gt;We expect this deployment to help address &lt;a href="http://blog.nuget.org/20120822/nuget-performance-issues.html"&gt;performance issues&lt;/a&gt; we’ve been experiencing for the past week.  We will continue to monitor the service and measure the results of this deployment.&lt;/p&gt;

&lt;h2 id="cdn-re-enabled"&gt;CDN Re-Enabled&lt;/h2&gt;

&lt;p&gt;As a bonus, this deployment has re-enabled &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/ee795176.aspx"&gt;Windows Azure CDN&lt;/a&gt; for NuGet packages.  We had initially enabled the CDN last week but some users around the globe &lt;a href="http://nuget.codeplex.com/workitem/2503"&gt;reported&lt;/a&gt; the DNS name of the CDN host could not be resolved.  After a week, we trust that the DNS name has propagated and we can now all benefit from faster package downloads.&lt;/p&gt;

&lt;p&gt;Thank you once again for your patience.  If you encounter any issues with NuGet, feel free to report issues on &lt;a href="http://nuget.codeplex.com/WorkItem/Create"&gt;CodePlex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To stay in touch with us, follow &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt;, or the &lt;a href="https://twitter.com/#!/search/%23nuget"&gt;#nuget tag&lt;/a&gt; on twitter for live updates.  You can also check in on JabbR’s &lt;a href="http://jabbr.net/#/rooms/nuget"&gt;#nuget room&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120822/nuget-expected-downtime-completed.html" /><a10:updated>2012-08-22T23:30:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120822/nuget-expected-downtime</guid><title>Expected Downtime - August 22 11pm-12am PDT</title><description>&lt;p&gt;As mentioned in the &lt;a href="http://blog.nuget.org/20120822/nuget-performance-issues.html"&gt;previous post&lt;/a&gt;, we’ve been working to address some performance problems on the &lt;a href="http://nuget.org"&gt;NuGet Gallery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The fixes we have in place include some time-consuming database migrations.  During our dry run deployments, we found that virtually all requests to the database will time out while these migrations are running.  We have decided to take the precaution of shutting the gallery down during these migrations to ensure the best and fastest possible deployment.  We are sorry for the inconvenience this will cause.&lt;/p&gt;

&lt;h2 id="timing"&gt;Timing&lt;/h2&gt;

&lt;p&gt;The &lt;a href="http://nuget.org"&gt;nuget.org&lt;/a&gt; website is expected to be down from 11pm-12am PDT tonight.  During this time, all requests to browse, search, install, or update packages will fail.  You will see errors in Visual Studio when you use the Online tab in the Manage NuGet Packages dialog.&lt;/p&gt;

&lt;h2 id="live-updates"&gt;Live Updates&lt;/h2&gt;

&lt;p&gt;Please follow &lt;a href="http://twitter.com/nuget"&gt;@nuget&lt;/a&gt;, or the &lt;a href="https://twitter.com/#!/search/%23nuget"&gt;#nuget tag&lt;/a&gt; on twitter for live updates.  You can also check in on JabbR’s &lt;a href="http://jabbr.net/#/rooms/nuget"&gt;#nuget room&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog will be updated once the deployment is completed.&lt;/p&gt;

&lt;h2 id="workarounds"&gt;Workarounds&lt;/h2&gt;

&lt;p&gt;Many users have found Scott Hanselman’s tips on &lt;a href="http://www.hanselman.com/blog/HowToAccessNuGetWhenNuGetorgIsDownOrYoureOnAPlane.aspx"&gt;How to access NuGet when NuGet.org is down (or you’re on a plane)&lt;/a&gt; to be helpful.&lt;/p&gt;

&lt;h2 id="deployment-process"&gt;Deployment Process&lt;/h2&gt;

&lt;p&gt;During this downtime, we will be doing the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Creating a pre-migration database backup&lt;/li&gt;
  &lt;li&gt;Executing the database migrations against the database&lt;/li&gt;
  &lt;li&gt;Performing a post-migration database backup&lt;/li&gt;
  &lt;li&gt;Deploying changes to the gallery web application&lt;/li&gt;
  &lt;li&gt;Verifying the successful deployment within a Staging instance of our Web Role&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once we have verified the successful staging deployment, we will swap the instances over to production.  At that time service will resume.&lt;/p&gt;

&lt;p&gt;If you’re curious about what is getting deployed, feel free to check out the &lt;a href="https://github.com/NuGet/NuGetGallery/commits/master"&gt;commit history on the master branch&lt;/a&gt; in our GitHub repository at &lt;a href="https://github.com/NuGet/NuGetGallery"&gt;https://github.com/NuGet/NuGetGallery&lt;/a&gt;.  The changes being deployed are from August 21st and 22nd.&lt;/p&gt;

&lt;h2 id="feature-request"&gt;Feature Request&lt;/h2&gt;

&lt;p&gt;Out of this situation comes a new feature request for the gallery: read-only mode.  Ideally, deployments of this type could be handled by putting the gallery into a read-only mode and performing the deployment to a new web role with a copy of the database while the read-only gallery stays online.  We will invest in setting up that model to be used in the future.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120822/nuget-expected-downtime.html" /><a10:updated>2012-08-22T18:30:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120822/nuget-performance-issues</guid><title>NuGet Gallery Performance Issues</title><description>&lt;p&gt;Since August 16th, and especially since August 21st, the &lt;a href="http://nuget.org"&gt;NuGet Gallery&lt;/a&gt; has been exhbiting intermittent performance issues.  Some users are reporting errors when attempting to browse or search for NuGet packages from Visual Studio or other clients.  Many users are reporting that browsing and searching are slow.  There have also been timeout errors when browsing &lt;a href="http://nuget.org/packages"&gt;the gallery’s packages page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this time, we have been communicating with many of you on twitter, under the &lt;a href="https://twitter.com/#!/search/%23nuget"&gt;#nuget tag&lt;/a&gt;, as well as in JabbR’s &lt;a href="http://jabbr.net/#/rooms/nuget"&gt;#nuget room&lt;/a&gt;.  We truly appreciate your patience and understanding with us.&lt;/p&gt;

&lt;h2 id="status"&gt;Status&lt;/h2&gt;

&lt;p&gt;We have been working to address these performance issues over the last several days, and we hope to have a deployment in place this evening (August 22nd, Pacific Time).  It looks like the deployment will cause a short outage though–we will post more information about that when the details are available.&lt;/p&gt;

&lt;h2 id="root-cause"&gt;Root Cause&lt;/h2&gt;

&lt;p&gt;The root cause of the performance issues boils down to some sub-optimal queries that are used when searching the gallery–especially when searching from Visual Studio.  There are a couple reasons these queries are slow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Some missing indexes that could significantly aide the search queries.&lt;/li&gt;
  &lt;li&gt;Table columns that have &lt;code&gt;nvarchar(max)&lt;/code&gt; as their data type when a size constraint can be applied.  We are seeing that when these &lt;code&gt;nvarchar(max)&lt;/code&gt; columns are used in &lt;code&gt;ORDER BY&lt;/code&gt; clauses, it becomes a bottleneck.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The deployment we’re preparing will address both of these issues by adding size constraints to many fields and then creating several new indexes.  Unfortunately, the process of altering the Packages and PackageRegistrations tables and then creating these new indexes is going to take some time to apply – during that time, the database will be rather unresponsive.  Again, when we know more about the timing of the outage, we’ll share the details.&lt;/p&gt;

</description><a10:link href="http://blog.nuget.org/20120822/nuget-performance-issues.html" /><a10:updated>2012-08-22T15:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120810/results-of-nuget-cdn-experiment</guid><title>Results of NuGet CDN Experiment</title><description>&lt;p&gt;A little over a week ago, &lt;a href="http://blog.nuget.org/20120802/help-us-test-nuget-cdn.html"&gt;we asked for your help with an experimentt&lt;/a&gt; that we were conducting to see whether there was value in enabling CDN support for our packages blob storage container.  Over 100 of you responded from all over the world, and the data that you provided made it pretty clear that there was sufficient justification for turning on CDN support for the production NuGet blob storage container.  So firstly, thank you to everyone who participated in the experiment!&lt;/p&gt;

&lt;p&gt;In addition to turning on CDN, we wanted to share the results of the data that you provided us.  First, the worldwide numbers look like the following:&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;No-CDN&lt;/td&gt;
&lt;td&gt;CDN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mean&lt;/td&gt;
&lt;td&gt;33.8252&lt;/td&gt;
&lt;td&gt;22.88007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Variance&lt;/td&gt;
&lt;td&gt;601.3293&lt;/td&gt;
&lt;td&gt;440.8645&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Observations&lt;/td&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pearson Correlation&lt;/td&gt;
&lt;td&gt;0.704394&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hypothesized Mean Difference&lt;/td&gt;
&lt;td&gt;6.8&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;df&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t Stat&lt;/td&gt;
&lt;td&gt;2.420113&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P(T&amp;lt;=t) one-tail&lt;/td&gt;
&lt;td&gt;0.0086&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t Critical one-tail&lt;/td&gt;
&lt;td&gt;1.659219&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P(T&amp;lt;=t) two-tail&lt;/td&gt;
&lt;td&gt;0.0172&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t Critical two-tail&lt;/td&gt;
&lt;td&gt;1.982383&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;As you can see, there are some additional tests that we included so that you statisticians out there can get a deeper sense of our methodology, but at a high level, you can see that the worldwide average time to download the top 25 NuGet packages &lt;em&gt;improved by over 10 seconds!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The improvements are even more pronounced depending on the specific region being considered.  In the chart below, each vertical bar represents the range of values for the percentage of improvement and the horizontal line dividing each bar represents the average improvement.  As you can see, the greatest improvements were seen in Australia with an average improvement of over 40%.  Additionally, notable improvements can also be seen in each of the other regions from which we collected data.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/cdn-improvement.png" alt="CDN improvements by region" /&gt;&lt;/p&gt;

&lt;p&gt;You can anecdotally draw further conclusions to explain the latency numbers by looking at the landscape of Azure CDN nodes as it exists today.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.microsoft.com/global/windowsazure/PublishingImages/cdn/950.gif" alt="Azure CDN " /&gt;&lt;/p&gt;

&lt;p&gt;All in all, the experiment was a great success, and we will be activating CDN in production very soon.  We couldn’t have collected this level of data without your help, so again, many thanks!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120810/results-of-nuget-cdn-experiment.html" /><a10:updated>2012-08-10T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120802/help-us-test-nuget-cdn</guid><title>Help Us Test CDN for NuGet.org</title><description>&lt;p&gt;Over the past few weeks, we’ve been investigating whether to turn on the &lt;a href="http://www.windowsazure.com/en-us/home/features/caching/"&gt;content delivery network (CDN)&lt;/a&gt; feature of the Azure blob storage container for NuGet packages.  In theory, this would make package downloads faster – especially if you’re located outside of the United States.&lt;/p&gt;

&lt;p&gt;We want your help to conduct an experiment to measure the difference in downloading packages with CDN enabled verses disabled.  Our initial experiment deployed nuget.exe into different regions and measured the time to download a set of NuGet packages.  Unfortunately, in all of the regions we deployed to, we were still sitting on  an Internet backbone connection, so even our baseline measurements (with CDN disabled) showed a statistically insignificant difference between a deployment in northern Europe and a deployment in the USA.  As such, it would seem that enabling CDN wouldn’t yield any measurable benefit.  &lt;/p&gt;

&lt;p&gt;We think that the reason for the inconclusive baseline is due to the fact that there’s no &lt;a href="http://en.wikipedia.org/wiki/Last_mile"&gt;“last mile”&lt;/a&gt; involved in the measurements, and this is where the majority of the slowdown happens.  While we could try and simulate last mile time, we would rather change the experiment a bit and ask for your help.  &lt;/p&gt;

&lt;p&gt;We’ve created a custom of NuGet.exe along with a batch file runner that you can download &lt;a href="/images/NuGet-CDN.zip"&gt;here&lt;/a&gt;.  Just unpack the zip file and run NuGet-CDN.bat. This will download the top 25 NuGet packages from both the standard package URL and a CDN URL and then log the time it takes to perform the download operations.  You will then be asked to optionally provide your location, which will help us get a better sense of the global impact of using the CDN.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/use-cdn-test.png" alt="Running the NuGet CDN batch file" /&gt;&lt;/p&gt;

&lt;p&gt;The batch process will wrap the log files along with your location information into a new NuGet package.  Please email that package to &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#110;&amp;#117;&amp;#103;&amp;#101;&amp;#116;&amp;#103;&amp;#097;&amp;#108;&amp;#108;&amp;#101;&amp;#114;&amp;#121;&amp;#064;&amp;#111;&amp;#117;&amp;#116;&amp;#101;&amp;#114;&amp;#099;&amp;#117;&amp;#114;&amp;#118;&amp;#101;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#110;&amp;#117;&amp;#103;&amp;#101;&amp;#116;&amp;#103;&amp;#097;&amp;#108;&amp;#108;&amp;#101;&amp;#114;&amp;#121;&amp;#064;&amp;#111;&amp;#117;&amp;#116;&amp;#101;&amp;#114;&amp;#099;&amp;#117;&amp;#114;&amp;#118;&amp;#101;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Thanks in advance for your help!&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120802/help-us-test-nuget-cdn.html" /><a10:updated>2012-08-02T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120619/nuget-2.0-released</guid><title>NuGet 2.0 Released</title><description>&lt;p&gt;We’re happy to announce that we released NuGet 2.0 on 6/19/2012. This release includes support for grouping dependencies, tools and content by the target framework of the project. Additionally, we’ve dramatically improved the performance of tab completion in the package management console.&lt;/p&gt;

&lt;h2 id="package-restore-consent-is-now-active"&gt;Package restore consent is now active&lt;/h2&gt;
&lt;p&gt;As described in an &lt;a href="http://blog.nuget.org/20120518/package-restore-and-consent.html"&gt;earlier post on package restore consent&lt;/a&gt;, NuGet 2.0 will now require that consent be given to enable package restore to go online to download packages. Please ensure that you have provided consent via either the package manager configuration dialog or the EnableNuGetPackageRestore environment variable.&lt;/p&gt;

&lt;p&gt;More details on NuGet 2.0 can be found on the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-2.0"&gt;release notes&lt;/a&gt;.  Finally, NuGet 2.0 fixed several bugs. For a full list of work items fixed in NuGet 2.0, please view the &lt;a href="http://nuget.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=NuGet%202.0&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Votes&amp;amp;sortDirection=Descending&amp;amp;page=0"&gt;NuGet Issue Tracker&lt;/a&gt; for this release.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120619/nuget-2.0-released.html" /><a10:updated>2012-06-19T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120529/nuget-1.8-hotfix-released</guid><title>NuGet 1.8 Hotfix Released</title><description>&lt;p&gt;With the &lt;a href="/20120525/nuget-1.8-released.html"&gt;NuGet 1.8 release&lt;/a&gt;, we found a breaking change that caused NuGet to fail on Windows XP machines.  Earlier today, we released a hotfix to NuGet 1.8 that addresses this.&lt;/p&gt;

&lt;p&gt;We apologize for any inconvenience this issue may have caused.  If you have further issues, please report them on &lt;a href="http://nuget.codeplex.com/workitem/list/basic"&gt;CodePlex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information, there is a &lt;a href="http://nuget.codeplex.com/discussions/356928"&gt;CodePlex discussion thread&lt;/a&gt; for this issue, which resulted in a &lt;a href="http://nuget.codeplex.com/workitem/2240"&gt;work item&lt;/a&gt; to fix the regression.&lt;/p&gt;

</description><a10:link href="http://blog.nuget.org/20120529/nuget-1.8-hotfix-released.html" /><a10:updated>2012-05-29T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120525/nuget-1.8-released</guid><title>NuGet 1.8 Released</title><description>&lt;p&gt;We’re happy to announce that we released NuGet 1.8 on 5/23/2012. This release includes support for localized satellite assemblies, nuget.exe performance improvements, and 34 bug fixes. Details are in the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-1.8"&gt;NuGet 1.8 Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="known-issue-on-windows-xp"&gt;Known issue on Windows XP&lt;/h2&gt;
&lt;p&gt;We would like to call out that shortly after NuGet 1.8 was released, we learned that a cryptography change in 1.8 broke users on Windows XP. Do not install NuGet 1.8 onto a Windows XP machine; if you have already installed NuGet 1.8, you can uninstall it and reinstall NuGet 1.7 using &lt;a href="http://nuget.codeplex.com/downloads/get/382255"&gt;this download link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are working on a NuGet 1.8.1 release to address the regression.  There is a &lt;a href="http://nuget.codeplex.com/discussions/356928"&gt;CodePlex discussion thread&lt;/a&gt; for this issue, which resulted in a &lt;a href="http://nuget.codeplex.com/workitem/2240"&gt;work item&lt;/a&gt; to fix the regression.&lt;/p&gt;

</description><a10:link href="http://blog.nuget.org/20120525/nuget-1.8-released.html" /><a10:updated>2012-05-25T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120518/package-restore-and-consent</guid><title>Package Restore and Consent</title><description>&lt;p&gt;A little while back, our team had the pleasure of talking about NuGet with some privacy experts. These are folks who are passionate about your privacy and laws that protect your privacy.  &lt;/p&gt;

&lt;p&gt;As we were describing NuGet’s package restore feature, the privacy experts became interested in the details surrounding the package restore workflow – particularly the part where NuGet goes online to the NuGet gallery to fetch missing packages.  Here’s the scenario that raised their interest:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Developer A creates a project, installs NuGet packages, and enables package restore&lt;/li&gt;
  &lt;li&gt;Developer A checks the project into version control. The NuGet packages aren’t included because of the package restore setting&lt;/li&gt;
  &lt;li&gt;Developer B checks the project out of source control and builds&lt;/li&gt;
  &lt;li&gt;Because package restore is enabled, NuGet goes online to the gallery, downloads and installs the required packages, and continues with the build.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That last point is where the concern was raised.  In this scenario, Developer B has never said to NuGet, “Sure, you can go online on my behalf.”  This can be a big deal because the simple act of making a request over the Internet can reveal information about the user (for example, from the user’s IP address, we can approximate her location).  In some regions and countries, revealing this kind of information &lt;a href="http://en.wikipedia.org/wiki/Data_Protection_Directive"&gt;is a big no-no&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Now, none of us are lawyers and certainly not the type that work in international privacy issues. We just want to build a great product that developers can feel confident using, regardless of where they are.  Hence the package restore consent feature.&lt;/p&gt;

&lt;h2 id="what-did-we-do-exactly"&gt;What did we do exactly?&lt;/h2&gt;
&lt;p&gt;Our goal is that when someone builds a project that uses NuGet package restore, the person overseeing the build provides explicit consent to enable package restore to go online to download NuGet packages.  &lt;/p&gt;

&lt;p&gt;You’ll note that I was specific about who needs to provide the consent. When we were initially brainstorming solutions, we had talked about simply writing the consent flag into the NuGet config file or into build targets.  However, these options would enable Developer A to effectively consent on behalf of Developer B, because these files are pulled down from version control, and that would defeat the purpose of requiring explicit consent.  Therefore, we’ve provided 2 ways to specify package restore consent. The first approach is to check the box in NuGet’s package manager configuration dialog box as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/pr-consent-configdlg.png" alt="Package restore consent in the package manager configuration dialog" /&gt;&lt;/p&gt;

&lt;p&gt;Checking this box will write the following XML into your NuGet.Config file (in your user profile directory tree)&lt;/p&gt;

&lt;pre&gt;
&amp;lt;packageRestore&amp;gt;
  &amp;lt;add key="enabled" value="true" /&amp;gt;
&amp;lt;/packageRestore&amp;gt;
&lt;/pre&gt;

&lt;p&gt;For scenarios where developers are building on their own machines, this will be the way to provide consent for package restore.  However, there are cases where it’s not actually a person who’s doing the building and who therefore can’t provide consent this way. (And where Visual Studio isn’t even installed.) The prototypical example is a build server. In that case, NuGet will also look for an environment variable called EnableNuGetPackageRestore. To enable package restore for scenarios where the Visual Studio option is not practical, set this variable to true.&lt;/p&gt;

&lt;h2 id="what-if-i-havent-given-consent"&gt;What if I haven’t given consent?&lt;/h2&gt;
&lt;p&gt;If you try to build a project that uses package restore and you haven’t given consent to NuGet to download packages, you will get a build error that looks like the following:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/pr-consent-builderror.png" alt="Build error when package restore consent is not given" /&gt;&lt;/p&gt;

&lt;p&gt;The build error describes the issue and provides instructions for providing consent. As the package restore consent feature rolls out, you will probably see this error, particularly on build servers, so we wanted to give you advance warning in this post.&lt;/p&gt;

&lt;h2 id="its-coming"&gt;It’s coming&lt;/h2&gt;
&lt;p&gt;In NuGet 1.8, we’ve added all of the logic for supporting the consent requirement. However, we won’t start actively enforcing the constraint (that is, causing build failures) until NuGet 2.0.  This delay gives you time to provide consent for both your developer machines and your build infrastructure, and will help avoid sudden and unexpected build breaks when we release NuGet 2.0.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120518/package-restore-and-consent.html" /><a10:updated>2012-05-18T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120419/nuget-sources-moving-to-git</guid><title>NuGet's Sources Are Moving to Git</title><description>&lt;p&gt;At the end of April, we’ll be moving the NuGet sources hosted on &lt;a href="http://codeplex.com"&gt;CodePlex&lt;/a&gt; from a Mercurial repository to a Git repository. This won’t impact or affect NuGet users, but NuGet contributors and those that follow NuGet’s development might need to act before this move.&lt;/p&gt;

&lt;h2 id="forks"&gt;Forks&lt;/h2&gt;

&lt;p&gt;All of the &lt;a href="http://nuget.codeplex.com/SourceControl/network"&gt;current NuGet forks on CodePlex&lt;/a&gt; will be deleted as part of this move. If you have forked NuGet, and you need to keep that fork, you can clone the fork and keep it locally or you can find somewhere else to push it. Aren’t DVCS great?&lt;/p&gt;

&lt;h2 id="pull-requests"&gt;Pull Requests&lt;/h2&gt;

&lt;p&gt;The NuGet team will review all the &lt;a href="http://nuget.codeplex.com/sourcecontrol/list/contributions"&gt;currently active pull requests&lt;/a&gt; before we move to Git. We will not be accepting any new pull requests until this move is complete. Please wait to initiate new pull requests until that time.&lt;/p&gt;

&lt;h2 id="commit-history"&gt;Commit History&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://nuget.codeplex.com/SourceControl/list/changesets"&gt;NuGet’s commit history&lt;/a&gt; will be preserved. If you’ve contributed to NuGet, your contributions will still be included in the commit history.&lt;/p&gt;

&lt;h2 id="codeplex-project"&gt;CodePlex Project&lt;/h2&gt;

&lt;p&gt;All other areas of the &lt;a href="http://nuget.codeplex.com"&gt;NuGet CodePlex project&lt;/a&gt; (the URL, issues, discussions, etc.) will remain as they are.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have questions or concerns, please present them in the comments or &lt;a href="http://nuget.codeplex.com/discussions/create?ProjectName=nuget"&gt;start a discussion on CodePlex&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120419/nuget-sources-moving-to-git.html" /><a10:updated>2012-04-19T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120404/nuget-1.7-released</guid><title>NuGet 1.7 Released</title><description>&lt;p&gt;We’re happy to announce that we released NuGet 1.7 today. This release includes several new features as well as over 75 bug fixes. Details are in the &lt;a href="http://docs.nuget.org/docs/release-notes/nuget-1.7"&gt;NuGet 1.7 Release Notes&lt;/a&gt;.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120404/nuget-1.7-released.html" /><a10:updated>2012-04-04T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120314/the-nuget-gallery-outage-on-march-9</guid><title>The NuGet Gallery Outage on March 9th</title><description>&lt;p&gt;The &lt;a href="http://nuget.org"&gt;NuGet Gallery&lt;/a&gt; was unavailable on March 9th from approximately midnight until 7:52 A.M., nearly eight hours. During this time all HTTP requests to the gallery website failed. In addition to affecting website users, the outage affected all NuGet client programs (such as the Visual Studio extension and nuget.exe) and other software that relies on the NuGet Gallery’s feed and API.&lt;/p&gt;

&lt;p&gt;To start, we apologize for the disruption and inconvenience that this incident caused.  We know that many of our customers were affected by the outage and we want to be transparent about what happened, what issues we found, how we plan to address these issues, and how we are learning from the incident to prevent a similar occurrence in the future. &lt;/p&gt;

&lt;p&gt;The outage was caused by a NuGet Gallery application error, compounded by some shortcomings in our monitoring system and incident-response process for the NuGet gallery. &lt;/p&gt;

&lt;h2 id="what-happened-exactly"&gt;What Happened Exactly&lt;/h2&gt;

&lt;p&gt;Windows Azure rebooted the NuGet Gallery servers at midnight after performing a scheduled OS upgrade. After this reboot, the gallery’s web roles failed to initialize due to a previously unknown bug in a script we wrote that we execute in order to enable HTTP compression for the gallery’s feed. Because the web roles could not initialize, the website became unresponsive. 
Our monitoring service didn’t send any alerts about this situation. However, the team became aware of the problem around 7:30 A.M. and we were able to restore service by deleting the Azure deployment and creating a new one (bypassing the scripts’s bug, although we didn’t know about the bug yet).&lt;/p&gt;

&lt;h2 id="how-we-failed"&gt;How We Failed&lt;/h2&gt;

&lt;p&gt;As with most system failures of this severity, there was more than just one failure.&lt;/p&gt;

&lt;h3 id="deployment-testing"&gt;Deployment Testing&lt;/h3&gt;

&lt;p&gt;We continually and automatically test the process of deploying new versions of the gallery to Windows Azure by using a preview site. However, we missed testing reboot scenarios, and this masked a bug in our compression script.&lt;/p&gt;

&lt;h3 id="monitoring-service"&gt;Monitoring Service&lt;/h3&gt;

&lt;p&gt;As a result of this outage, we learned that our monitoring service had configuration issues that we did not know about. We understand that it’s crucially important to continually test all of the systems that keep our website running, including things like monitoring, backup, and restore. We test our backup and restore continually using our preview site, but as we’ve learned, we were not testing monitoring sufficiently.&lt;/p&gt;

&lt;h3 id="inadequate-incident-response-process"&gt;Inadequate Incident-Response Process&lt;/h3&gt;

&lt;p&gt;When the outage occurred, we didn’t have a robust enough incident-response process, with the result that the response time for this outage that was simply not fast enough. There has been no dedicated operations team for the NuGet Gallery, and the development team has been assuming all responsibility for operational activities.  &lt;/p&gt;

&lt;h3 id="bad-assumptions"&gt;Bad Assumptions&lt;/h3&gt;

&lt;p&gt;One of the reasons we had not formalized our incident response process or had people on call was that the NuGet gallery has been very reliable. (As we’ve now been reminded, this is no excuse for lack of proper planning.) &lt;/p&gt;

&lt;p&gt;We have since also learned that two assumptions about how Windows Azure deployments work contributed to this issue.  First, we assumed that we would be notified that an OS upgrade requiring a reboot had been scheduled. We’ve learned that Windows Azure does not currently send notifications for scheduled OS upgrades, whether a reboot is required or not. We’ve recommended to the Azure team that they start sending notifications in these cases.&lt;/p&gt;

&lt;p&gt;Second, we assumed that OS upgrades (or other maintenance) would be performed on one instance at a time within a deployment, and that if an upgrade failed, Azure would not then try to upgrade the remaining instances, effectively causing the entire deployment to fail. This one-at-a-time approach is how Azure handles customer-initiated upgrades. We’ve recommended to the Azure team that they consider changing the Azure-initiated upgrade process accordingly, although we understand there are a lot challenges in doing this.&lt;/p&gt;

&lt;h2 id="what-were-changing"&gt;What We’re Changing&lt;/h2&gt;

&lt;p&gt;All applications can fail, which is why it’s crucial to have a proven, tested system in place to monitor the health of an application, and a proven, tested process in place to respond to incidents. To that end, we will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Regularly test our monitoring service (for example, by periodically making the preview site unavailable). &lt;/li&gt;
  &lt;li&gt;Create a better incident-response process. &lt;/li&gt;
  &lt;li&gt;Expand the team of people who understand Azure deployment and know how to troubleshoot failures. &lt;/li&gt;
  &lt;li&gt;Always have at least one person on call to respond to incidents. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will also regularly test server reboots after a deployment, using our preview site.&lt;/p&gt;

&lt;p&gt;While we can’t guarantee that future incidents won’t happen (in fact, we know they will), we &lt;em&gt;can&lt;/em&gt; guarantee that our response to any future incidents will be much more timely.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120314/the-nuget-gallery-outage-on-march-9.html" /><a10:updated>2012-03-14T00:00:00Z</a10:updated></item><item><guid isPermaLink="false">http://blog.nuget.org/20120313/introducing-the-nuget-team-blog</guid><title>Introducing the NuGet Team Blog</title><description>&lt;p&gt;For the last few months, the NuGet team has been considering starting a proper, official blog. &lt;strong&gt;This is that blog&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;How do we plan to use this blog? Here are a few ways we know we’ll use it (and I’m sure we’ll think of others as we go along):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Announcing new releases&lt;/li&gt;
  &lt;li&gt;Announcing upcoming breaking or very impactful changes&lt;/li&gt;
  &lt;li&gt;Pointing out particuarly important discussions on our CodePlex or GitHub sites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to leave us a comment, letting us know what else you’d like to see here.&lt;/p&gt;
</description><a10:link href="http://blog.nuget.org/20120313/introducing-the-nuget-team-blog.html" /><a10:updated>2012-03-13T00:00:00Z</a10:updated></item></channel></rss>